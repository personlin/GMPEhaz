C     Various Empirical Attenuation Models

C -------------------------------------------------------------------
C****** Abrahamson and Silva (1997), Horizontal *********************
C -------------------------------------------------------------------

       subroutine AS_97_H ( mag, dist, mech, soil, hw, specT, period1,
     1               lnY, sigma, iflag )
      parameter (MAXPER=27)

      integer hw, nper, count1, count2, iflag
      real mag, dist, mech, mech1, n, c4(MAXPER), rockPGA
      real mag1, c5, period(MAXPER), mu, b1(MAXPER), b2(MAXPER)
      real lnY, sigma, soil, specT
      real a1(MAXPER), a2, a3(MAXPER), a4, a5(MAXPER), a6(MAXPER),
     1     a9(MAXPER), a10(MAXPER), a11(MAXPER), a12(MAXPER), a13
      real a1pga, a3pga, a5pga, a6pga, a9pga, a10pga, a11pga, a12pga
      real c4pga, b1pga, b2pga
      real a1sa, a3sa, a5sa, a6sa, a9sa, a10sa, a11sa, a12sa
      real c4sa, b1sa, b2sa

      data b1 / 0.700, 0.700, 0.705, 0.713, 0.720, 0.728,
     1         0.735, 0.739, 0.746, 0.754, 0.759, 0.765, 0.772,
     2         0.780, 0.787, 0.791, 0.796, 0.799, 0.806, 0.814,
     3         0.819, 0.825, 0.840, 0.851, 0.866, 0.877, 0.885 /
      data b2 /  0.135, 0.135, 0.135, 0.135, 0.135, 0.135,
     1          0.135, 0.135, 0.135, 0.135, 0.135, 0.135, 0.135,
     2          0.135, 0.135, 0.135, 0.132, 0.130, 0.127, 0.123,
     3          0.121, 0.118, 0.110, 0.105, 0.097, 0.092, 0.087 /

      data period / 0.00, 0.03, 0.04, 0.05, 0.06, 0.075, 0.09, 0.10,
     1   0.12, 0.15, 0.17, 0.20, 0.24, 0.30, 0.36, 0.40, 0.46, 0.50,
     2         0.60 ,0.75, 0.85, 1.00, 1.50, 2.00, 3.00, 4.00, 5.00 /
      data c4 / 5.60, 5.60, 5.60, 5.60, 5.60, 5.58, 5.54, 5.50, 5.39,
     1          5.27, 5.20, 5.10, 4.97, 4.80, 4.62, 4.52, 4.38, 4.30,
     2          4.12, 3.90, 3.81, 3.70, 3.55, 3.50, 3.50, 3.50, 3.50 /
      data a1 / 1.640, 1.690, 1.780, 1.870, 1.940, 2.037, 2.100, 2.160,
     1          2.272, 2.407, 2.430, 2.406, 2.293, 2.114, 1.955, 1.860,
     2          1.717, 1.615, 1.428, 1.160, 1.020, 0.828, 0.260,-0.150,
     3         -0.690, -1.130, -1.460 /
      data a3 / -1.145, -1.145, -1.145, -1.145, -1.145, -1.145, -1.145,
     1          -1.145, -1.145, -1.145, -1.135, -1.115, -1.079, -1.035,
     2          -1.005, -0.988, -0.965, -0.952, -0.922, -0.885, -0.865,
     3          -0.838, -0.772, -0.725, -0.725, -0.725, -0.725 /
      data a5 / 0.610, 0.610, 0.610, 0.610, 0.610, 0.610, 0.610, 0.610,
     1          0.610, 0.610, 0.610, 0.610, 0.610, 0.610, 0.610, 0.610,
     2          0.592, 0.581, 0.557, 0.528, 0.512, 0.490, 0.438, 0.400,
     3          0.400, 0.400, 0.400 /
      data a6 / 0.260, 0.260, 0.260, 0.260, 0.260, 0.260, 0.260, 0.260,
     1          0.260, 0.260, 0.260, 0.260, 0.232, 0.198, 0.170, 0.154,
     2          0.132, 0.119, 0.091, 0.057, 0.038, 0.013,-0.049,-0.094,
     3         -0.156, -0.200, -0.200 /
      data a9 / 0.37, 0.37, 0.37, 0.37, 0.37, 0.37, 0.37, 0.37, 0.37,
     1          0.37, 0.37, 0.37, 0.37, 0.37, 0.37, 0.37, 0.37, 0.37,
     2    0.37, 0.331, 0.309, 0.281, 0.210, 0.160, 0.089, 0.039,0.0 /
      data a10 /-0.417, -0.470, -0.555, -0.620, -0.665, -0.628, -0.609,
     1          -0.598, -0.591, -0.577, -0.522, -0.445, -0.350, -0.219,
     2          -0.123, -0.065,  0.020,  0.085,  0.194,  0.320,  0.370,
     3            0.423, 0.600, 0.610, 0.630, 0.640, 0.664 /
      data a11 /-0.230, -0.230, -0.251, -0.267, -0.280, -0.280, -0.280,
     1          -0.280, -0.280, -0.280, -0.265, -0.245, -0.223, -0.195,
     2          -0.173, -0.160, -0.136, -0.121, -0.089, -0.050, -0.028,
     3           0.000,  0.040,  0.040,  0.040,  0.040,  0.040 /
      data a12 /0.0000, 0.0143, 0.0245, 0.0280, 0.0300, 0.0300, 0.0300,
     1   0.0280, 0.0180, 0.0050, -0.0040, -0.0138, -0.0238, -0.0360,
     2  -0.0460, -0.0518, -0.0594, -0.0635, -0.0740, -0.0862,
     3  -0.0927, -0.1020, -0.1200, -0.1400, -0.1726, -0.1956, -0.2150 /
      data mag1,n,a2,a4,a13,c5 / 6.4, 2.0, 0.512, -0.144, 0.17, 0.03 /

C Find the requested spectral period.
      nper = 27

C First Check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1=period(1)
         a1pga  = a1(1)
         a3pga  = a3(1)
         a5pga  = a5(1)
         a6pga  = a6(1)
         a9pga  = a9(1)
         a10pga = a10(1)
         a11pga = a11(1)
         a12pga = a12(1)
         c4pga  = c4(1)
         b1pga  = b1(1)
         b2pga  = b2(1)
         goto 1002
      elseif (specT .ne. 0.0) then
C Now interpolate the cofficients for different spectral periods.
C Interpolation is only done for the second spectral period and
C the last spectral period.

C Set PGA coefficients for non-pga spectral periods.
         a1pga  = a1(1)
         a3pga  = a3(1)
         a5pga  = a5(1)
         a6pga  = a6(1)
         a9pga  = a9(1)
         a10pga = a10(1)
         a11pga = a11(1)
         a12pga = a12(1)
         c4pga  = c4(1)

         do i=2, nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1001
            endif
         enddo

C Requested spectral period is not in the period range of the attenuation model.
C         write (*,*)
C         write (*,*) 'Abrahamson and Silva (1997) Horizontal atttenuation model'
C         write (*,*) 'is not defined for a spectral period of: '
C         write (*,*)') ' Period = ',specT
C         write (*,*) 'This spectral period is outside the defined'
C         write (*,*) 'period range in the code or beyond the range'
C         write (*,*) 'of spectral periods for interpolation.'
C         write (*,*) 'Please check the input file.'
C         write (*,*)
         return

C Interpolate the coefficients for the requested spectral period.
 1001       call interp (period(count1),period(count2),a1(count1),a1(count2),
     +                   specT,a1sa,iflag)
            call interp (period(count1),period(count2),a3(count1),a3(count2),
     +                   specT,a3sa,iflag)
            call interp (period(count1),period(count2),a5(count1),a5(count2),
     +                   specT,a5sa,iflag)
            call interp (period(count1),period(count2),a6(count1),a6(count2),
     +                   specT,a6sa,iflag)
            call interp (period(count1),period(count2),a9(count1),a9(count2),
     +                   specT,a9sa,iflag)
            call interp (period(count1),period(count2),a10(count1),a10(count2),
     +                   specT,a10sa,iflag)
            call interp (period(count1),period(count2),a11(count1),a11(count2),
     +                   specT,a11sa,iflag)
            call interp (period(count1),period(count2),a12(count1),a12(count2),
     +                   specT,a12sa,iflag)
            call interp (period(count1),period(count2),c4(count1),c4(count2),
     +                   specT,c4sa,iflag)
            call interp (period(count1),period(count2),b1(count1),b1(count2),
     +                   specT,b1sa,iflag)
            call interp (period(count1),period(count2),b2(count1),b2(count2),
     +                   specT,b2sa,iflag)
      endif

 1002 period1 = specT

c     Set normal faulting to Stike-slip
      mech1 = mech
      if ( mech .lt. 0. ) mech1 = 0.

c     Compute the rock PGA
      soil1 = 0.0
      rockPga1 = 0.
      call Calcarg_as97 (mag,dist,mech1,soil1, hw, 0.0, rockPGA, rockpga1,
     1  a1pga, a2, a3pga, a4, a5pga, a6pga, a9pga, a10pga, a11pga,
     2  a12pga, a13, c4pga, c5, mag1, n)

c     Compute the soil PGA if requested
      if (soil .eq. 1) then
         call Calcarg_as97 (mag,dist,mech1,soil, hw, 0.0, mu, rockpga,
     1        a1pga, a2, a3pga, a4, a5pga, a6pga, a9pga, a10pga, a11pga,
     2        a12pga, a13, c4pga, c5, mag1, n)
      else
         mu = rockPGA
      endif

c     Compute the Sa
      if (specT .ne. 0.0) then
         call Calcarg_as97 (mag,dist, mech1, soil, hw, specT, mu, rockpga,
     1        a1sa, a2, a3sa, a4, a5sa, a6sa, a9sa, a10sa, a11sa, a12sa,
     2        a13, c4sa, c5, mag1, n)
      endif

       lnY = mu + 6.89

C     Set Standard Error.
      if (specT .eq. 0.0) then
         if (mag .le. 5.0) then
            sigma = b1pga
         elseif (mag .gt. 5.0 .and. mag .lt. 7.0) then
            sigma = b1pga - b2pga*(mag-5.0)
         elseif (mag .ge. 7.0) then
            sigma = b1pga - 2.0*b2pga
         endif
      else
         if (mag .le. 5.0) then
            sigma = b1sa
         elseif (mag .gt. 5.0 .and. mag .lt. 7.0) then
            sigma = b1sa - b2sa*(mag-5.0)
         elseif (mag .ge. 7.0) then
            sigma = b1sa - 2.0*b2sa
         endif
      endif

      return
      end

c ----------------------------------------------------------------------
C****** Abrahamson and Silva (1997), Horizontal with Normal Faulting ***
c ----------------------------------------------------------------------

      subroutine AS_97_H_NF ( mag, dist, mech, soil, hw, specT, period1,
     1               lnY, sigma,iflag )
      parameter (MAXPER=27)

      integer hw, nper, count1, count2,iflag
      real mag, dist, mech, mech1, n, c4(MAXPER), rockPGA
      real mag1, c5, period(MAXPER), mu, b1(MAXPER), b2(MAXPER)
      real lnY, sigma, soil, specT
      real a1(MAXPER), a2, a3(MAXPER), a4, a5(MAXPER), a6(MAXPER),
     1     a9(MAXPER), a10(MAXPER), a11(MAXPER), a12(MAXPER), a13
      real a1pga, a3pga, a5pga, a6pga, a9pga, a10pga, a11pga, a12pga
      real c4pga, b1pga, b2pga
      real a1sa, a3sa, a5sa, a6sa, a9sa, a10sa, a11sa, a12sa
      real c4sa, b1sa, b2sa

      data b1 / 0.700, 0.700, 0.705, 0.713, 0.720, 0.728,
     1         0.735, 0.739, 0.746, 0.754, 0.759, 0.765, 0.772,
     2         0.780, 0.787, 0.791, 0.796, 0.799, 0.806, 0.814,
     3         0.819, 0.825, 0.840, 0.851, 0.866, 0.877, 0.885 /
      data b2 /  0.135, 0.135, 0.135, 0.135, 0.135, 0.135,
     1          0.135, 0.135, 0.135, 0.135, 0.135, 0.135, 0.135,
     2          0.135, 0.135, 0.135, 0.132, 0.130, 0.127, 0.123,
     3          0.121, 0.118, 0.110, 0.105, 0.097, 0.092, 0.087 /

      data period / 0.00, 0.03, 0.04, 0.05, 0.06, 0.075, 0.09, 0.10,
     1   0.12, 0.15, 0.17, 0.20, 0.24, 0.30, 0.36, 0.40, 0.46, 0.50,
     2        0.60 ,0.75, 0.85, 1.00, 1.50, 2.00, 3.00, 4.00,  5.00/
      data c4 / 5.60, 5.60, 5.60, 5.60, 5.60, 5.58, 5.54, 5.50, 5.39,
     1          5.27, 5.20, 5.10, 4.97, 4.80, 4.62, 4.52, 4.38, 4.30,
     2          4.12, 3.90, 3.81, 3.70, 3.55, 3.50, 3.50, 3.50, 3.50 /
      data a1 / 1.640, 1.690, 1.780, 1.870, 1.940, 2.037, 2.100, 2.160,
     1          2.272, 2.407, 2.430, 2.406, 2.293, 2.114, 1.955, 1.860,
     2          1.717, 1.615, 1.428, 1.160, 1.020, 0.828, 0.260,-0.150,
     3         -0.690, -1.130, -1.460 /
      data a3 / -1.145, -1.145, -1.145, -1.145, -1.145, -1.145, -1.145,
     1          -1.145, -1.145, -1.145, -1.135, -1.115, -1.079, -1.035,
     2          -1.005, -0.988, -0.965, -0.952, -0.922, -0.885, -0.865,
     3          -0.838, -0.772, -0.725, -0.725, -0.725, -0.725 /
      data a5 / 0.610, 0.610, 0.610, 0.610, 0.610, 0.610, 0.610, 0.610,
     1          0.610, 0.610, 0.610, 0.610, 0.610, 0.610, 0.610, 0.610,
     2          0.592, 0.581, 0.557, 0.528, 0.512, 0.490, 0.438, 0.400,
     3          0.400, 0.400, 0.400 /
      data a6 / 0.260, 0.260, 0.260, 0.260, 0.260, 0.260, 0.260, 0.260,
     1          0.260, 0.260, 0.260, 0.260, 0.232, 0.198, 0.170, 0.154,
     2          0.132, 0.119, 0.091, 0.057, 0.038, 0.013,-0.049,-0.094,
     3         -0.156, -0.200, -0.200 /
      data a9 / 0.37, 0.37, 0.37, 0.37, 0.37, 0.37, 0.37, 0.37, 0.37,
     1          0.37, 0.37, 0.37, 0.37, 0.37, 0.37, 0.37, 0.37, 0.37,
     2    0.37, 0.331, 0.309, 0.281, 0.210, 0.160, 0.089, 0.039,0.0 /
      data a10 /-0.417, -0.470, -0.555, -0.620, -0.665, -0.628, -0.609,
     1          -0.598, -0.591, -0.577, -0.522, -0.445, -0.350, -0.219,
     2          -0.123, -0.065,  0.020,  0.085,  0.194,  0.320,  0.370,
     3            0.423, 0.600, 0.610, 0.630, 0.640, 0.664 /
      data a11 /-0.230, -0.230, -0.251, -0.267, -0.280, -0.280, -0.280,
     1          -0.280, -0.280, -0.280, -0.265, -0.245, -0.223, -0.195,
     2          -0.173, -0.160, -0.136, -0.121, -0.089, -0.050, -0.028,
     3           0.000,  0.040,  0.040,  0.040,  0.040,  0.040 /
      data a12 /0.0000, 0.0143, 0.0245, 0.0280, 0.0300, 0.0300, 0.0300,
     1   0.0280, 0.0180, 0.0050, -0.0040, -0.0138, -0.0238, -0.0360,
     2  -0.0460, -0.0518, -0.0594, -0.0635, -0.0740, -0.0862,
     3  -0.0927, -0.1020, -0.1200, -0.1400, -0.1726, -0.1956, -0.2150 /
      data mag1,n,a2,a4,a13,c5 / 6.4, 2.0, 0.512, -0.144, 0.17, 0.03 /

C Find the requested spectral period.
      nper = 27

C First Check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1=period(1)
         a1pga  = a1(1)
         a3pga  = a3(1)
         a5pga  = a5(1)
         a6pga  = a6(1)
         a9pga  = a9(1)
         a10pga = a10(1)
         a11pga = a11(1)
         a12pga = a12(1)
         c4pga  = c4(1)
         b1pga  = b1(1)
         b2pga  = b2(1)
         goto 1004
      elseif (specT .ne. 0.0) then
C Now interpolate the cofficients for different spectral periods.
C Interpolation is only done for the second spectral period and
C the last spectral period.

C Set PGA coefficients for non-pga spectral periods.
         a1pga  = a1(1)
         a3pga  = a3(1)
         a5pga  = a5(1)
         a6pga  = a6(1)
         a9pga  = a9(1)
         a10pga = a10(1)
         a11pga = a11(1)
         a12pga = a12(1)
         c4pga  = c4(1)

         do i=2, nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1003
            endif
         enddo

C Requested spectral period is not in the period range of the attenuation model.
C         write (*,*)
C         write (*,*) 'Abrahamson and Silva (1997) Horizontal atttenuation model'
C         write (*,*) 'for normal faulting regimes'
C         write (*,*) 'is not defined for a spectral period of: '
C         write (*,*)') ' Period = ',specT
C         write (*,*) 'This spectral period is outside the defined'
C         write (*,*) 'period range in the code or beyond the range'
C         write (*,*) 'of spectral periods for interpolation.'
C         write (*,*) 'Please check the input file.'
C         write (*,*)
         return

C Interpolate the coefficients for the requested spectral period.
 1003       call interp (period(count1),period(count2),a1(count1),a1(count2),
     +                   specT,a1sa,iflag)
            call interp (period(count1),period(count2),a3(count1),a3(count2),
     +                   specT,a3sa,iflag)
            call interp (period(count1),period(count2),a5(count1),a5(count2),
     +                   specT,a5sa,iflag)
            call interp (period(count1),period(count2),a6(count1),a6(count2),
     +                   specT,a6sa,iflag)
            call interp (period(count1),period(count2),a9(count1),a9(count2),
     +                   specT,a9sa,iflag)
            call interp (period(count1),period(count2),a10(count1),a10(count2),
     +                   specT,a10sa,iflag)
            call interp (period(count1),period(count2),a11(count1),a11(count2),
     +                   specT,a11sa,iflag)
            call interp (period(count1),period(count2),a12(count1),a12(count2),
     +                   specT,a12sa,iflag)
            call interp (period(count1),period(count2),c4(count1),c4(count2),
     +                   specT,c4sa,iflag)
            call interp (period(count1),period(count2),b1(count1),b1(count2),
     +                   specT,b1sa,iflag)
            call interp (period(count1),period(count2),b2(count1),b2(count2),
     +                   specT,b2sa,iflag)
      endif

 1004 period1 = specT

c     Set normal faulting to Stike-slip ( for using the existing model)
      mech1 = mech
      if ( mech .lt. 0. ) mech1 = 0.

c     Compute the rock PGA
      soil1 = 0.0
      rockPga1 = 0.
      call Calcarg_as97 (mag,dist,mech,soil1, hw, 0.0, rockPGA, rockpga1,
     1  a1pga, a2, a3pga, a4, a5pga, a6pga, a9pga, a10pga, a11pga,
     2  a12pga, a13, c4pga, c5, mag1, n)

c     Compute the soil PGA if requested
      if (soil .eq. 1) then
         call Calcarg_as97 (mag,dist,mech,soil, hw, 0.0, mu, rockpga,
     1        a1pga, a2, a3pga, a4, a5pga, a6pga, a9pga, a10pga, a11pga,
     2        a12pga, a13, c4pga, c5, mag1, n)
      else
         mu = rockPGA
      endif

c     Compute the Sa
      if (specT .ne. 0.0) then
         call Calcarg_as97 (mag,dist, mech, soil, hw, specT, mu, rockpga,
     1        a1sa, a2, a3sa, a4, a5sa, a6sa, a9sa, a10sa, a11sa, a12sa,
     2        a13, c4sa, c5, mag1, n)
       endif

C Now apply the 20% reduction in ground motion due to the normal faulting regime.
c    This applies at all freq
       if ( mech .lt. 0. ) then
         lnY = lnY + 0.2231 * mech
       endif

       lnY = mu + 6.89

C     Set Standard Error.
      if (specT .eq. 0.0) then
         if (mag .le. 5.0) then
            sigma = b1pga
         elseif (mag .gt. 5.0 .and. mag .lt. 7.0) then
            sigma = b1pga - b2pga*(mag-5.0)
         elseif (mag .ge. 7.0) then
            sigma = b1pga - 2.0*b2pga
         endif
      else
         if (mag .le. 5.0) then
            sigma = b1sa
         elseif (mag .gt. 5.0 .and. mag .lt. 7.0) then
            sigma = b1sa - b2sa*(mag-5.0)
         elseif (mag .ge. 7.0) then
            sigma = b1sa - 2.0*b2sa
         endif
      endif

      return
      end

c -------------------------------------------------------------------
C****** Abrahamson and Silva (1997), Vertical ***********************
c -------------------------------------------------------------------

      subroutine AS_97_V ( mag, dist, mech, soil, hw, specT, period1,
     1                      lnY, sigma,iflag )
      parameter (MAXPER=27)

      integer hw,iflag, count1, count2
      real mag, dist, mech, n, c4(MAXPER), rockPGA
      real mag1, c5, period(MAXPER), mu, b5(MAXPER), b6(MAXPER)
      real lnY, sigma, soil, specT
      real a1(MAXPER), a2, a3(MAXPER), a4, a5(MAXPER), a6(MAXPER),
     1     a9(MAXPER), a10(MAXPER), a11(MAXPER), a12(MAXPER), a13

      real a1pga, a3pga, a5pga, a6pga, a9pga, a10pga, a11pga, a12pga
      real c4pga, b5pga, b6pga
      real a1sa, a3sa, a5sa, a6sa, a9sa, a10sa, a11sa, a12sa
      real c4sa, b5sa, b6sa

      data b5 / 0.760, 0.760, 0.760, 0.760, 0.760, 0.760,
     1         0.760, 0.760, 0.740, 0.720, 0.700, 0.690, 0.690,
     2         0.690, 0.690, 0.690, 0.690, 0.690, 0.690, 0.690,
     3         0.690, 0.690, 0.690, 0.690, 0.720, 0.750, 0.780 /
      data b6 /  0.085, 0.085, 0.085, 0.085, 0.085, 0.085,
     1          0.085, 0.085, 0.075, 0.063, 0.056, 0.050, 0.050,
     2          0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050,
     3          0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050 /
      data period /0.00, 0.03, 0.04, 0.05, 0.06, 0.075, 0.09, 0.10,
     1     0.12, 0.15, 0.17, 0.20, 0.24, 0.30, 0.36, 0.40,  0.46, 0.50,
     2           0.60 ,0.75, 0.85, 1.00, 1.50, 2.00, 3.00, 4.00,  5.00/
      data c4 / 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
     1          6.00, 5.72, 5.35, 4.93, 4.42, 4.01, 3.77, 3.45, 3.26,
     2          2.85, 2.50, 2.50, 2.50, 2.50, 2.50, 2.50, 2.50, 2.50 /
      data a1 / 1.642, 2.100, 2.420, 2.620, 2.710, 2.750, 2.730, 2.700,
     1          2.480, 2.170, 1.960, 1.648, 1.312, 0.878, 0.617, 0.478,
     2    0.271, 0.145, -0.087, -0.344, -0.469, -0.602, -0.966, -1.224,
     3         -1.581, -1.857, -2.053 /
      data a3 /-1.2520,-1.3168,-1.3700,-1.3700,-1.3700,-1.3700, -1.3700,
     1    -1.3700, -1.2986, -1.2113, -1.1623, -1.0987, -1.0274, -0.9400,
     2    -0.9004, -0.8776, -0.8472, -0.8291, -0.7896, -0.7488, -0.7451,
     3    -0.7404, -0.7285, -0.7200, -0.7200, -0.7200, -0.7200 /
      data a5 / 0.390, 0.432, 0.469, 0.496, 0.518, 0.545, 0.567, 0.580,
     1          0.580, 0.580, 0.580, 0.580, 0.580, 0.580, 0.571, 0.539,
     2          0.497, 0.471, 0.416, 0.348, 0.309, 0.260, 0.260, 0.260,
     3          0.260, 0.260, 0.260 /
      data a6 / -0.050, -0.050, -0.050, -0.050, -0.050, -0.050, -0.050,
     1  -0.050,-0.017, 0.024, 0.047, 0.076, 0.109, 0.150, 0.150, 0.150,
     2          0.150, 0.150, 0.150, 0.150, 0.150, 0.150, 0.058,-0.008,
     3         -0.100, -0.100, -0.100 /
      data a9 /0.630,0.630,0.630,0.630,0.630,0.630,0.630,0.630,0.630,
     1   0.630, 0.604, 0.571, 0.533, 0.488, 0.450, 0.428, 0.400, 0.383,
     2   0.345, 0.299, 0.273, 0.240, 0.240, 0.240, 0.240, 0.240 ,0.240/
      data a10 / -0.140, -0.140, -0.140, -0.140, -0.140, -0.129, -0.119,
     1           -0.114, -0.104, -0.093, -0.087, -0.078, -0.069, -0.057,
     2           -0.048, -0.043, -0.035, -0.031, -0.022, -0.010, -0.004,
     3            0.004,  0.025,  0.040,  0.040,  0.040,  0.040 /
      data a11 / -0.220, -0.220, -0.220, -0.220, -0.220, -0.220, -0.220,
     1           -0.220, -0.220, -0.220, -0.220, -0.220, -0.220, -0.220,
     2           -0.220, -0.220, -0.220, -0.220, -0.220, -0.220, -0.220,
     3           -0.220, -0.220, -0.220, -0.220, -0.220, -0.220 /
      data a12 /0.0000,0.0000,0.0000,-0.0002,-0.0004,-0.0007,-0.0009,
     1   -0.0010, -0.0015, -0.0022, -0.0025, -0.0030, -0.0035, -0.0042,
     2            -0.0047, -0.0050, -0.0056, -0.0060, -0.0068, -0.0083,
     3   -0.0097, -0.0115, -0.0180, -0.0240, -0.0431, -0.0565, -0.0670/
      data mag1,n,a2,a4,a13,c5 / 6.4, 3.0, 0.909, 0.275, 0.06, 0.3/

C Find the requested spectral period.
      nper = 27

C First Check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1=period(1)
         a1pga  = a1(1)
         a3pga  = a3(1)
         a5pga  = a5(1)
         a6pga  = a6(1)
         a9pga  = a9(1)
         a10pga = a10(1)
         a11pga = a11(1)
         a12pga = a12(1)
         c4pga  = c4(1)
         b5pga  = b5(1)
         b6pga  = b6(1)
         goto 1005
      elseif (specT .ne. 0.0) then
C Now interpolate the cofficients for different spectral periods.
C Interpolation is only done for the second spectral period and
C the last spectral period.

C Set PGA coefficients for non-pga spectral periods.
         a1pga  = a1(1)
         a3pga  = a3(1)
         a5pga  = a5(1)
         a6pga  = a6(1)
         a9pga  = a9(1)
         a10pga = a10(1)
         a11pga = a11(1)
         a12pga = a12(1)
         c4pga  = c4(1)

         do i=2, nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1006
            endif
         enddo

C Requested spectral period is not in the period range of the attenuation model.
C         write (*,*)
C         write (*,*) 'Abrahamson and Silva (1997) Vertical atttenuation model'
C         write (*,*) 'is not defined for a spectral period of: '
C         write (*,*)') ' Period = ',specT
C         write (*,*) 'This spectral period is outside the defined'
C         write (*,*) 'period range in the code or beyond the range'
C         write (*,*) 'of spectral periods for interpolation.'
C         write (*,*) 'Please check the input file.'
C         write (*,*)
         return

C Interpolate the coefficients for the requested spectral period.
 1006       call interp (period(count1),period(count2),a1(count1),a1(count2),
     +                   specT,a1sa,iflag)
            call interp (period(count1),period(count2),a3(count1),a3(count2),
     +                   specT,a3sa,iflag)
            call interp (period(count1),period(count2),a5(count1),a5(count2),
     +                   specT,a5sa,iflag)
            call interp (period(count1),period(count2),a6(count1),a6(count2),
     +                   specT,a6sa,iflag)
            call interp (period(count1),period(count2),a9(count1),a9(count2),
     +                   specT,a9sa,iflag)
            call interp (period(count1),period(count2),a10(count1),a10(count2),
     +                   specT,a10sa,iflag)
            call interp (period(count1),period(count2),a11(count1),a11(count2),
     +                   specT,a11sa,iflag)
            call interp (period(count1),period(count2),a12(count1),a12(count2),
     +                   specT,a12sa,iflag)
            call interp (period(count1),period(count2),c4(count1),c4(count2),
     +                   specT,c4sa,iflag)
            call interp (period(count1),period(count2),b5(count1),b5(count2),
     +                   specT,b5sa,iflag)
            call interp (period(count1),period(count2),b6(count1),b6(count2),
     +                   specT,b6sa,iflag)
      endif

 1005 period1 = specT

c     Compute the rock PGA
      soil1 = 0.0
      rockPga1 = 0.
      call Calcarg_as97 (mag,dist,mech,soil1, hw, 0., rockPGA, rockpga1,
     1  a1pga, a2, a3pga, a4, a5pga, a6pga, a9pga, a10pga, a11pga,
     2  a12pga, a13, c4pga, c5, mag1, n)

c     Compute the soil PGA if requested
      if (soil .eq. 1) then
         call Calcarg_as97 (mag,dist,mech,soil, hw, 0., mu, rockpga,
     1        a1pga, a2, a3pga, a4, a5pga, a6pga, a9pga, a10pga, a11pga,
     2        a12pga, a13, c4pga, c5, mag1, n)
      else
         mu = rockPGA
      endif

c     Compute the Sa
      if (specT .ne. 0.0) then
         call Calcarg_as97 (mag,dist, mech, soil, hw, specT, mu, rockpga,
     1        a1sa, a2, a3sa, a4, a5sa, a6sa, a9sa, a10sa, a11sa, a12sa,
     2        a13, c4sa, c5, mag1, n)
       endif

       lnY = mu + 6.89

C     Set Standard Error.
      if (specT .eq. 0.0) then
         if (mag .le. 5.0) then
            sigma = b5pga
         elseif (mag .gt. 5.0 .and. mag .lt. 7.0) then
            sigma = b5pga - b6pga*(mag-5.0)
         elseif (mag .ge. 7.0) then
            sigma = b5pga - 2.0*b6pga
         endif
      else
         if (mag .le. 5.0) then
            sigma = b5sa
         elseif (mag .gt. 5.0 .and. mag .lt. 7.0) then
            sigma = b5sa - b6sa*(mag-5.0)
         elseif (mag .ge. 7.0) then
            sigma = b5sa - 2.0*b6sa
         endif
      endif

      return
      end

c --------------------------------------------------------------------
C****** Abrahamson and Silva (1997), Vertical with Normal Faulting ***
c --------------------------------------------------------------------

      subroutine AS_97_V_NF ( mag, dist, mech, soil, hw, specT, period1,
     1                      lnY, sigma,iflag )
      parameter (MAXPER=27)

      integer hw, nper, count1, count2,iflag
      real mag, dist, mech, mech1, n, c4(MAXPER), rockPGA
      real mag1, c5, period(MAXPER), mu, b5(MAXPER), b6(MAXPER)
      real lnY, sigma, soil, specT
      real a1(MAXPER), a2, a3(MAXPER), a4, a5(MAXPER), a6(MAXPER),
     1     a9(MAXPER), a10(MAXPER), a11(MAXPER), a12(MAXPER), a13
      real a1pga, a3pga, a5pga, a6pga, a9pga, a10pga, a11pga, a12pga
      real c4pga, b5pga, b6pga
      real a1sa, a3sa, a5sa, a6sa, a9sa, a10sa, a11sa, a12sa
      real c4sa, b5sa, b6sa

      data b5 / 0.760, 0.760, 0.760, 0.760, 0.760, 0.760,
     1         0.760, 0.760, 0.740, 0.720, 0.700, 0.690, 0.690,
     2         0.690, 0.690, 0.690, 0.690, 0.690, 0.690, 0.690,
     3         0.690, 0.690, 0.690, 0.690, 0.720, 0.750, 0.780 /
      data b6 /  0.085, 0.085, 0.085, 0.085, 0.085, 0.085,
     1          0.085, 0.085, 0.075, 0.063, 0.056, 0.050, 0.050,
     2          0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050,
     3          0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050 /
      data period /0.00, 0.03, 0.04, 0.05, 0.06, 0.075, 0.09, 0.10,
     1     0.12, 0.15, 0.17, 0.20, 0.24, 0.30, 0.36, 0.40,  0.46, 0.50,
     2           0.60 ,0.75, 0.85, 1.00, 1.50, 2.00, 3.00, 4.00,  5.00/
      data c4 / 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00, 6.00,
     1          6.00, 5.72, 5.35, 4.93, 4.42, 4.01, 3.77, 3.45, 3.26,
     2          2.85, 2.50, 2.50, 2.50, 2.50, 2.50, 2.50, 2.50, 2.50 /
      data a1 / 1.642, 2.100, 2.420, 2.620, 2.710, 2.750, 2.730, 2.700,
     1          2.480, 2.170, 1.960, 1.648, 1.312, 0.878, 0.617, 0.478,
     2    0.271, 0.145, -0.087, -0.344, -0.469, -0.602, -0.966, -1.224,
     3         -1.581, -1.857, -2.053 /
      data a3 /-1.2520,-1.3168,-1.3700,-1.3700,-1.3700,-1.3700, -1.3700,
     1    -1.3700, -1.2986, -1.2113, -1.1623, -1.0987, -1.0274, -0.9400,
     2    -0.9004, -0.8776, -0.8472, -0.8291, -0.7896, -0.7488, -0.7451,
     3    -0.7404, -0.7285, -0.7200, -0.7200, -0.7200, -0.7200 /
      data a5 / 0.390, 0.432, 0.469, 0.496, 0.518, 0.545, 0.567, 0.580,
     1          0.580, 0.580, 0.580, 0.580, 0.580, 0.580, 0.571, 0.539,
     2          0.497, 0.471, 0.416, 0.348, 0.309, 0.260, 0.260, 0.260,
     3          0.260, 0.260, 0.260 /
      data a6 / -0.050, -0.050, -0.050, -0.050, -0.050, -0.050, -0.050,
     1  -0.050,-0.017, 0.024, 0.047, 0.076, 0.109, 0.150, 0.150, 0.150,
     2          0.150, 0.150, 0.150, 0.150, 0.150, 0.150, 0.058,-0.008,
     3         -0.100, -0.100, -0.100 /
      data a9 /0.630,0.630,0.630,0.630,0.630,0.630,0.630,0.630,0.630,
     1   0.630, 0.604, 0.571, 0.533, 0.488, 0.450, 0.428, 0.400, 0.383,
     2   0.345, 0.299, 0.273, 0.240, 0.240, 0.240, 0.240, 0.240 ,0.240/
      data a10 / -0.140, -0.140, -0.140, -0.140, -0.140, -0.129, -0.119,
     1           -0.114, -0.104, -0.093, -0.087, -0.078, -0.069, -0.057,
     2           -0.048, -0.043, -0.035, -0.031, -0.022, -0.010, -0.004,
     3            0.004,  0.025,  0.040,  0.040,  0.040,  0.040 /
      data a11 / -0.220, -0.220, -0.220, -0.220, -0.220, -0.220, -0.220,
     1           -0.220, -0.220, -0.220, -0.220, -0.220, -0.220, -0.220,
     2           -0.220, -0.220, -0.220, -0.220, -0.220, -0.220, -0.220,
     3           -0.220, -0.220, -0.220, -0.220, -0.220, -0.220 /
      data a12 /0.0000,0.0000,0.0000,-0.0002,-0.0004,-0.0007,-0.0009,
     1   -0.0010, -0.0015, -0.0022, -0.0025, -0.0030, -0.0035, -0.0042,
     2            -0.0047, -0.0050, -0.0056, -0.0060, -0.0068, -0.0083,
     3   -0.0097, -0.0115, -0.0180, -0.0240, -0.0431, -0.0565, -0.0670/
      data mag1,n,a2,a4,a13,c5 / 6.4, 3.0, 0.909, 0.275, 0.06, 0.3/

C Find the requested spectral period.
      nper = 27

C First Check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1=period(1)
         a1pga  = a1(1)
         a3pga  = a3(1)
         a5pga  = a5(1)
         a6pga  = a6(1)
         a9pga  = a9(1)
         a10pga = a10(1)
         a11pga = a11(1)
         a12pga = a12(1)
         c4pga  = c4(1)
         b5pga  = b5(1)
         b6pga  = b6(1)
         goto 1004
      elseif (specT .ne. 0.0) then
C Now interpolate the cofficients for different spectral periods.
C Interpolation is only done for the second spectral period and
C the last spectral period.

C Set PGA coefficients for non-pga spectral periods.
         a1pga  = a1(1)
         a3pga  = a3(1)
         a5pga  = a5(1)
         a6pga  = a6(1)
         a9pga  = a9(1)
         a10pga = a10(1)
         a11pga = a11(1)
         a12pga = a12(1)
         c4pga  = c4(1)

         do i=2, nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1003
            endif
         enddo

C Requested spectral period is not in the period range of the attenuation model.
C         write (*,*)
C         write (*,*) 'Abrahamson and Silva (1997) Vertical atttenuation model'
C         write (*,*) 'for normal faulting regimes'
C         write (*,*) 'is not defined for a spectral period of: '
C         write (*,*)') ' Period = ',specT
C         write (*,*) 'This spectral period is outside the defined'
C         write (*,*) 'period range in the code or beyond the range'
C         write (*,*) 'of spectral periods for interpolation.'
C         write (*,*) 'Please check the input file.'
C         write (*,*)
         return

C Interpolate the coefficients for the requested spectral period.
 1003       call interp (period(count1),period(count2),a1(count1),a1(count2),
     +                   specT,a1sa,iflag)
            call interp (period(count1),period(count2),a3(count1),a3(count2),
     +                   specT,a3sa,iflag)
            call interp (period(count1),period(count2),a5(count1),a5(count2),
     +                   specT,a5sa,iflag)
            call interp (period(count1),period(count2),a6(count1),a6(count2),
     +                   specT,a6sa,iflag)
            call interp (period(count1),period(count2),a9(count1),a9(count2),
     +                   specT,a9sa,iflag)
            call interp (period(count1),period(count2),a10(count1),a10(count2),
     +                   specT,a10sa,iflag)
            call interp (period(count1),period(count2),a11(count1),a11(count2),
     +                   specT,a11sa,iflag)
            call interp (period(count1),period(count2),a12(count1),a12(count2),
     +                   specT,a12sa,iflag)
            call interp (period(count1),period(count2),c4(count1),c4(count2),
     +                   specT,c4sa,iflag)
            call interp (period(count1),period(count2),b5(count1),b5(count2),
     +                   specT,b5sa,iflag)
            call interp (period(count1),period(count2),b6(count1),b6(count2),
     +                   specT,b6sa,iflag)
      endif

 1004 period1 = specT

c     Set normal faulting to Stike-slip
      mech1 = mech
      if ( mech .lt. 0. ) mech1 = 0.

c     Compute the rock PGA
      soil1 = 0.0
      rockPga1 = 0.
      call Calcarg_as97 (mag,dist,mech1,soil1, hw, 0., rockPGA, rockpga1,
     1  a1pga, a2, a3pga, a4, a5pga, a6pga, a9pga, a10pga, a11pga,
     2  a12pga, a13, c4pga, c5, mag1, n)

c     Compute the soil PGA if requested
      if (soil .eq. 1) then
         call Calcarg_as97 (mag,dist,mech1,soil, hw, 0., mu, rockpga,
     1        a1pga, a2, a3pga, a4, a5pga, a6pga, a9pga, a10pga, a11pga,
     2        a12pga, a13, c4pga, c5, mag1, n)
      else
         mu = rockPGA
      endif

c     Compute the Sa
      if (specT .ne. 0.0) then
         call Calcarg_as97 (mag,dist, mech1, soil, hw, specT, mu, rockpga,
     1        a1sa, a2, a3sa, a4, a5sa, a6sa, a9sa, a10sa, a11sa, a12sa,
     2        a13, c4sa, c5, mag1, n)
       endif

C Now apply the 20% reduction in ground motion due to the normal faulting regime.
       if ( mech .lt. 0. ) then
         lnY = lnY + 0.2231 * mech
       endif

       lnY = mu + 6.89

C     Set Standard Error.
      if (specT .eq. 0.0) then
         if (mag .le. 5.0) then
            sigma = b5pga
         elseif (mag .gt. 5.0 .and. mag .lt. 7.0) then
            sigma = b5pga - b6pga*(mag-5.0)
         elseif (mag .ge. 7.0) then
            sigma = b5pga - 2.0*b6pga
         endif
      else
         if (mag .le. 5.0) then
            sigma = b5sa
         elseif (mag .gt. 5.0 .and. mag .lt. 7.0) then
            sigma = b5sa - b6sa*(mag-5.0)
         elseif (mag .ge. 7.0) then
            sigma = b5sa - 2.0*b6sa
         endif
      endif

      return
      end

c ---------------------------------------------------------------------

      subroutine Calcarg_as97 (mag,dist,mech,soil,hw,specT,mu,rockPGA,
     1 a1, a2, a3, a4, a5, a6, a9, a10, a11, a12, a13, c4, c5, mag1, n)
      implicit none
      integer hw
      real a1, a3, a5, a6, a9, a10, a11, a12, specT,
     1     mag, dist, mech, mu, n, c4, rockPGA, a2, a4, a13
      real x1, x2, x3, x4, t1, mag1, c5
      real soilFactor, r, soil

c     Rock model
      r = sqrt(dist**2+c4**2)

c Set the maximum magnitude value at M=8.5. Magnitude larger than this value
c would result in lower ground motions for larger magnitude events.
      if (mag .gt. 8.5) then
         mag = 8.5
      endif

      mu = a1 + a12*(8.5-mag)**(n) + a3 * alog(r)
     1     + a13*(mag - mag1)*alog(r)
      if ( mag .lt. mag1 ) then
         mu = mu + a2*(mag-mag1)
      else
         mu = mu + a4*(mag-mag1)
      endif

c     mech model
      x1 = 5.8
      x2 = mag1
      if (mag .lt. x1 ) then
        mu = mu + a5*mech
      elseif ( mag .lt. x2 ) then
        mu = mu + a5*mech* (1. - (mag-x1)/(x2-x1) ) +
     1         a6*mech*(mag-x1)/(x2-x1)
      else
        mu = mu + a6*mech
      endif

c     HW model
      t1 = 0.
      if ( mag .gt. 5.5 .and. hw .eq. 1 ) then
        x1 = 4.
        x2 = 8.
        x3 = 18.
        x4 = 25.
        if ( dist .lt. x1 ) then
        t1 = 0.
        elseif ( dist .lt. x2 ) then
          t1 =  (dist-x1)/(x2-x1)
        elseif ( dist .lt. x3 ) then
          t1 = 1.
        elseif ( dist .lt. x4 ) then
        t1 = 1. - (dist-x3)/(x4-x3)
        else
        t1 = 0.
        endif
        if ( mag .lt. 6.5 ) then
        t1 = t1 * (mag-5.5)
        endif
      endif
      mu = mu + t1*a9

c     Soil Model
      if ( soil .eq. 1. ) then
         soilFactor = a10 + a11*alog((exp(rockPGA) + c5))
         mu = mu + soilFactor
      endif

      return
      end

c -------------------------------------------------------------------
C **** Boore, Joyner, and Fumal (1994) Horizontal *******************
c -------------------------------------------------------------------

      subroutine bjf94 ( m, dist, ftype, lnY, sigma, GB, GC, specT,
     1                   attenName, period1,iflag )
c     This  subroutine calculates the LOG SA for the ave horizontal
c     component using the Boore, Joyner and Fumal (1994) attenuation
c     relation
c     it takes into account the ftype of the fault unlike BJF 1993.

      parameter (MAXPER=11)
      real ftype, ftype1, dist, m, lnY, sigma, log10Y, specT
      real period(MAXPER), b2(MAXPER), b3(MAXPER),
     1     b5(MAXPER), b1ss(MAXPER), b1rv(MAXPER),
     1     b6(MAXPER), b7(MAXPER), h(MAXPER), sigma1(MAXPER)
      character*80 attenName
      integer nper, count1, count2,iflag
      real b1ssT, b1rvT, b2T, b3T, b5T, b6T, b7T, hT, sigma1T

      data period / 0.00, 0.1, 0.15, 0.20,
     1              0.30, 0.40, 0.50, 0.75, 1.00, 1.5, 2. /

      data b1ss / -0.136, 1.630, 1.859, 1.928, 1.930, 1.887, 1.839,
     1          1.748, 1.701, 1.695, 1.756 /
      data b1rv /  -.051, 1.665, 1.918, 2.002, 2.019, 1.979, 1.930,
     1          1.824, 1.755, 1.701, 1.712 /
      data b2 / 0.229, 0.327, 0.305, 0.309, 0.334, 0.361, 0.384,
     1          0.425, 0.450, 0.471, 0.471 /
      data b3 / 0.0,  -0.098, -0.099, -0.090, -0.070, -0.052, -0.039,
     1         -0.020, -0.014, -0.019, -0.037/
      data b5 / -0.778, -0.934, -0.937, -0.924, -0.893, -0.867, -0.846,
     1          -0.813, -0.798, -0.796, -0.812/
      data b6 / 0.162, 0.046, 0.140, 0.190, 0.239, 0.264, 0.279, 0.300,
     1          0.314, 0.338, 0.360 /
      data b7 / 0.251, 0.136, 0.221, 0.279, 0.356, 0.405, 0.439, 0.490,
     1          0.517, 0.537, 0.537 /
      data h  / 5.57, 6.27, 7.23, 7.02, 5.94, 4.91, 4.13, 3.07, 2.90,
     1          3.92, 5.85 /
      data sigma1 / 0.230, 0.208, 0.211, 0.215, 0.226, 0.236, 0.244,
     1          0.256, 0.270, 0.285, 0.293 /
      twoPi = 2. * 3.1415926

c     Set normal faulting to Stike-slip
      ftype1 = ftype
      if ( ftype .lt. 0. ) ftype1 = 0.

c Set attenuation name
      if ( GC .eq. 1 ) then
        attenName = 'Boore, Joyner, Fumal (1994), Class C'
      elseif ( GB .eq. 1 ) then
        attenName = 'Boore, Joyner, Fumal (1994), Class B'
      else
        attenName = 'Boore, Joyner, Fumal (1994), Class A'
      endif

C Find the requested spectral period and corresponding coefficients
      nper = 11

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         b1ssT   = b1ss(1)
         b1rvT   = b1rv(1)
         b2T     = b2(1)
         b3T     = b3(1)
         b5T     = b5(1)
         b6T     = b6(1)
         b7T     = b7(1)
         sigma1T = sigma1(1)
         hT      = h(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1010
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Boore et al. (1994) Horizontal atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1010       call interp (period(count1),period(count2),b1ss(count1),b1ss(count2),
     +                   specT,b1ssT,iflag)
            call interp (period(count1),period(count2),b1rv(count1),b1rv(count2),
     +                   specT,b1rvT,iflag)
            call interp (period(count1),period(count2),b2(count1),b2(count2),
     +                   specT,b2T,iflag)
            call interp (period(count1),period(count2),b3(count1),b3(count2),
     +                   specT,b3T,iflag)
            call interp (period(count1),period(count2),b5(count1),b5(count2),
     +                   specT,b5T,iflag)
            call interp (period(count1),period(count2),b6(count1),b6(count2),
     +                   specT,b6T,iflag)
            call interp (period(count1),period(count2),b7(count1),b7(count2),
     +                   specT,b7T,iflag)
            call interp (period(count1),period(count2),h(count1),h(count2),
     +                   specT,hT,iflag)
            call interp (period(count1),period(count2),sigma1(count1),sigma1(count2),
     +                   specT,sigma1T,iflag)

 1011 period1 = specT

      r = sqrt( dist**2 + hT**2 )
      log10Y = b1ssT + (b1rvT-b1ssT)*ftype1
     1         + b2T*(m-6) + b3T*(m-6)**2
     1         + b5T*alog10(r)
     1         + b6T*GB + b7T*GC

c     Convert units spectral acceleration in gal
      if ( specT .eq. 0.0 ) then
        lnY = log10Y * alog(10.) + 6.89
      else
        lnY = log10Y * alog(10.) + alog( twoPi / specT )
      endif

c     Set standard error
      sigma = sigma1T * alog(10.)

      return
      end

c -------------------------------------------------------------------
C **** Boore, Joyner, and Fumal (1997) Horizontal *******************
c -------------------------------------------------------------------

      subroutine bjf97 ( m, dist, ftype, lnY, sigma, specT,
     1                   attenName, period1, vs,iflag )
c     This  subroutine calculates the LOG SA for the ave horizontal
c     component using the Boore, Joyner and Fumal (1994) attenuation
c     relation
c     it takes into account the ftype of the fault unlike BJF 1993.

      parameter (MAXPER=12)
      real ftype, dist, m, lnY, sigma
      real period(MAXPER), b2(MAXPER), b3(MAXPER),
     1     b5(MAXPER), b1ss(MAXPER), b1rv(MAXPER),
     1     bv(MAXPER), va(MAXPER), h(MAXPER), sigma1(MAXPER)
      character*80 attenName
      real specT, b1ssT, b1rvT, b2T, b3T, b5T, bvT, vaT, hT, sigma1T
      integer count1, count2, nper,iflag

      data period / 0.00, 0.1, 0.15, 0.20, 0.24,
     1              0.30, 0.40, 0.50, 0.75, 1.00, 1.5, 2. /

      data b1ss /-0.313, 1.006, 1.128, 0.999, 0.847, 0.598, 0.212,
     1          -0.122, -0.737, -1.133, -1.552, -1.699 /
      data b1rv /  -0.117, 1.087, 1.264, 1.170, 1.033, 0.803, 0.423,
     1           0.087, -0.562, -1.009, -1.538, -1.801 /
      data b2 / 0.527, 0.753, 0.702, 0.711, 0.732, 0.769, 0.831,
     1         0.884, 0.979, 1.036, 1.085, 1.085 /
      data b3 / 0.0, -0.226, -0.228, -0.207, -0.189, -0.161, -0.120,
     1         -0.090, -0.046, -0.032, -0.044, -0.085 /
      data b5 / -0.778, -0.934, -0.937, -0.924, -0.912, -0.893, -0.867,
     1          -0.846, -0.813, -0.798, -0.796, -0.812/
      data bv / -0.371, -0.212, -0.238, -0.292, -0.338, -0.401, -0.487,
     1           -0.553, -0.653, -0.698, -0.704, -0.655/
      data va / 1396., 1112., 1820., 2118., 2178., 2133., 1954., 1782.,
     1          1507., 1406., 1479., 1795. /
      data h  / 5.57, 6.27, 7.23, 7.02, 6.62, 5.94, 4.91, 4.13, 3.07,
     1          2.90, 3.92, 5.85 /
      data sigma1 / 0.52, 0.479, 0.492, 0.502, 0.511, 0.522, 0.538,
     1          0.556, 0.587, 0.613, 0.649, 0.672 /

C Find the requested spectral period and corresponding coefficients
      nper = 12

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         b1ssT   = b1ss(1)
         b1rvT   = b1rv(1)
         b2T     = b2(1)
         b3T     = b3(1)
         b5T     = b5(1)
         bvT     = bv(1)
         vaT     = va(1)
         sigma1T = sigma1(1)
         hT      = h(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Boore et al. (1997) Horizontal atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),b1ss(count1),b1ss(count2),
     +                   specT,b1ssT,iflag)
            call interp (period(count1),period(count2),b1rv(count1),b1rv(count2),
     +                   specT,b1rvT,iflag)
            call interp (period(count1),period(count2),b2(count1),b2(count2),
     +                   specT,b2T,iflag)
            call interp (period(count1),period(count2),b3(count1),b3(count2),
     +                   specT,b3T,iflag)
            call interp (period(count1),period(count2),b5(count1),b5(count2),
     +                   specT,b5T,iflag)
            call interp (period(count1),period(count2),bv(count1),bv(count2),
     +                   specT,bvT,iflag)
            call interp (period(count1),period(count2),va(count1),va(count2),
     +                   specT,vaT,iflag)
            call interp (period(count1),period(count2),h(count1),h(count2),
     +                   specT,hT,iflag)
            call interp (period(count1),period(count2),sigma1(count1),sigma1(count2),
     +                   specT,sigma1T,iflag)

 1011 period1 = specT

c     Set normal faulting to Stike-slip
      ftype1 = ftype
      if ( ftype .lt. 0. ) ftype1 = 0.

c     Set atten name
      attenName = 'Boore, Joyner, Fumal (1997), inc sigmaComp'

      r = sqrt( dist**2 + hT**2 )

      lnY = b1ssT + (b1rvT-b1ssT)*ftype1
     1         + b2T*(m-6) + b3T*(m-6)**2
     1         + b5T*alog(r)
     1         + bvT*alog(vs/vaT)

c     Convert units spectral acceleration in gal

      lnY = lnY + 6.89

c     Set standard error
      sigma = sigma1T

      return
      end

c -------------------------------------------------------------
C **** Campbell (1990) Horizontal Rock*************************
c -------------------------------------------------------------

      subroutine Camp90 ( m, dist, ftype, lnY, sigma, baseDepth, specT,
     1                    attenName, period1,iflag )

c     This  subroutine calculates the LOG SA for the ave horizontal
c     component using the Campbell (1990) attenuation relation.
c     Sigma1 and Sigma2 are directly from Campbell's paper
c      for M < 6.2 and M>= 6.2, respectively.

      parameter (MAXPER=16)
      real ftype, ftype1, dist, m, lnY, sigma, baseDepth, period1
      character*80 attenName
      real period(MAXPER)
      real a(MAXPER), f1(MAXPER), g1(MAXPER), sigma1(MAXPER),
     1     sigma2(MAXPER), b, c1, c2, d, e, f2, f3, g2
      real aT, f1T, g1T, sigma1T, sigma2T
      integer nper, count1, count2,iflag

      data period / 0.00, 0.04, 0.05, 0.075, 0.10, 0.15, 0.20,
     1              0.30, 0.40, 0.50, 0.75, 1.00, 1.5, 2., 3., 4. /
      data a  / -2.245, -0.402, -0.141, 0.489, 0.987, 1.625, 1.988,
     1           2.370,  2.153,  2.086, 1.802, 1.398, 0.795, 0.411,
     2          -0.141, -0.188 /
      data f1 / 0., 0., 0., 0., 0.,  0., 0., 0., 0.514, 0.738, 1.23,
     1          1.59, 1.93, 2.23, 2.39, 2.03 /
      data g1 /  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
     1          0.183, 0.488, 0.634, 0.836, 1.17 /
      data sigma1 / 0.517, 0.716, 0.631, 0.703, 0.703, 0.754, 0.722,
     1              0.597, 0.671, 0.722, 0.776, 0.751, 0.687, 0.591,
     2              0.628, 0.647 /
      data sigma2 / 0.387, 0.387, 0.492, 0.430, 0.427, 0.440, 0.421,
     1              0.382, 0.342, 0.330, 0.420, 0.426, 0.478, 0.496,
     2              0.520, 0.532 /

      twoPi = 2. * 3.1415926
      attenName = 'Campbell (1990), horizontal'

C Find the requested spectral period and corresponding coefficients
      nPer = 16

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         aT      = a(1)
         f1T     = f1(1)
         g1T     = g1(1)
         sigma1T  = sigma1(1)
         sigma2T  = sigma2(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Campbell (1990) Horizontal atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),a(count1),a(count2),
     +                   specT,aT,iflag)
            call interp (period(count1),period(count2),f1(count1),f1(count2),
     +                   specT,f1T,iflag)
            call interp (period(count1),period(count2),g1(count1),g1(count2),
     +                   specT,g1T,iflag)
            call interp (period(count1),period(count2),sigma1(count1),sigma1(count2),
     +                   specT,sigma1T,iflag)
            call interp (period(count1),period(count2),sigma2(count1),sigma2(count2),
     +                   specT,sigma2T,iflag)

 1011 period1 = specT

      b = 1.09
      c1 = 0.361
      c2 = 0.576
      d = -1.89
      e = 0.213
      f2 = 0.659
      f3 = -4.7
      g2 = 0.574


c     Convert oblique to reverse for Campbell
      ftype1 = ftype
      if ( ftype1 .eq. 0.5 ) then
        ftype1=1.0
      endif
c     Set normal faulting to Stike-slip
      if ( ftype .lt. 0. ) ftype1 = 0.

      lnY = aT + b*m + d*alog(dist+c1*exp(c2*m)) + e*ftype1
     1      + f1T * tanh( f2*(m+f3) )
     2      + g1T*tanh(g2*baseDepth)

c     Convert units spectral acceleration in gal
      if ( specT .eq. 0.0 ) then
        lnY = lnY + 6.89
      else
        lnY = lnY + alog( twoPi/specT )
      endif

c     Set standard error
      if ( m .ge. 6.2 ) then
        sigma = sigma2T
      else
        sigma = sigma1T
      endif

      return
      end

c ----------------------------------------------------------
C **** Campbell (1990) Vertical Rock*************************
c ----------------------------------------------------------

      subroutine Camp90v ( m, dist, ftype, lnY, sigma, baseDepth, specT,
     1                    attenName, period1,iflag )

c     This  subroutine calculates the LOG SA for the ave horizontal
c     component using the Campbell (1990) attenuation relation.
c     Sigma1 and Sigma2 are directly from Campbell's paper
c      for M < 6.2 and M>= 6.2, respectively.

      parameter (MAXPER=16)
      real ftype, ftype1, dist, m, lnY, sigma, baseDepth, period1
      integer iflag
      character*80 attenName
      real period(MAXPER)
      real a(MAXPER), f1(MAXPER), g1(MAXPER), sigma1(MAXPER),
     1     sigma2(MAXPER), b, c1, c2, d, e, f2, f3, g2
      real aT,f1T,g1T,sigma1T,sigma2T, specT
      integer nper, count1, count2

      data period / 0.00, 0.04, 0.05, 0.075, 0.10, 0.15, 0.20,
     1              0.30, 0.40, 0.50, 0.75, 1.00, 1.5, 2., 3., 4. /
      data a  / -3.829, -1.901, -1.465, -0.722, -0.304, 0.054, 0.263,
     1           0.388,  0.290,  0.055,  0.014, -0.420, -1.012, -1.214,
     2           -1.451, -1.536 /
      data f1 / 0., 0., 0., 0., 0.,  0., 0., 0., 0.181, 0.463, 0.669,
     1          1.13, 1.52, 1.65, 1.28, 1.15 /
      data g1 /  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
     1          0.177, 0.568, 0.613, 1.07, 1.26 /
      data sigma1 / 0.668, 0.957, 0.991, 0.909, 0.905, 0.870, 0.761,
     1              0.743, 0.789, 0.827, 0.808, 0.832, 0.939, 0.764,
     2              1.050, 0.845 /
      data sigma2 / 0.575, 0.745, 0.715, 0.661, 0.631, 0.641, 0.590,
     1              0.573, 0.602, 0.589, 0.603, 0.630, 0.615, 0.665,
     2              0.713, 0.716 /
      twoPi = 2. * 3.1415926
      attenName = 'Campbell (1990), vertical'

C Find the requested spectral period and corresponding coefficients
      nPer = 16

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         aT      = a(1)
         f1T     = f1(1)
         g1T     = g1(1)
         sigma1T  = sigma1(1)
         sigma2T  = sigma2(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Campbell (1990) Vertical atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),a(count1),a(count2),
     +                   specT,aT,iflag)
            call interp (period(count1),period(count2),f1(count1),f1(count2),
     +                   specT,f1T,iflag)
            call interp (period(count1),period(count2),g1(count1),g1(count2),
     +                   specT,g1T,iflag)
            call interp (period(count1),period(count2),sigma1(count1),sigma1(count2),
     +                   specT,sigma1T,iflag)
            call interp (period(count1),period(count2),sigma2(count1),sigma2(count2),
     +                   specT,sigma2T,iflag)

 1011 period1 = specT

      b = 0.991
      c1 = 0.079
      c2 = 0.661
      d = -1.50
      e = 0.111
      f2 = 0.711
      f3 = -4.7
      g2 = 0.513

c     Convert oblique to reverse for Campbell
      ftype1 = ftype
      if ( ftype1 .eq. 0.5 ) then
        ftype1=1.0
      endif
c     Set normal faulting to Stike-slip
      if ( ftype .lt. 0. ) ftype1 = 0.

      lnY = aT + b*m + d*alog(dist+c1*exp(c2*m)) + e*ftype1
     1      + f1T * tanh( f2*(m+f3) )
     2      + g1T*tanh(g2*baseDepth)

c     Convert units spectral acceleration in gal
      if ( specT .eq. 0.0 ) then
        lnY = lnY + 6.89
      else
        lnY = lnY + alog( twoPi/specT )
      endif

c     Set standard error
      if ( m .ge. 6.2 ) then
        sigma = sigma2T
      else
        sigma = sigma1T
      endif

      return
      end

c -------------------------------------------------------------
C *** Cambell (1990;1994) Horizontal, Rock ********************
c -------------------------------------------------------------

      subroutine Camp90_94 ( m, dist, ftype, lnY, sigma, baseDepth,
     1                    specT,attenName, period1,iflag )
c     This  subroutine calculates the LOG SA/PGA for the ave horizontal
c     component using the Campbell (1990) attenuation relation.
c     The LOG SA curve is calculated from the LOG PGA of Campbell 1994
c     Sigma1 and Sigma2 are directly from Campbell's paper
c      for M < 6.2 and M>= 6.2, respectively.

      parameter (MAXPER=16)
      real ftype, ftype1, dist, m, lnY, sigma, baseDepth, period1
      real lnPGA94, lnPGA90
      character*80 attenName
      real period(MAXPER)
      real a(MAXPER), f1(MAXPER), g1(MAXPER), sigma1(MAXPER),
     1     sigma2(MAXPER), b, c(12), c1, c2, e, f2, f3, g2
      real specT, aT, f1T, g1T, sigma1T, sigma2T
      integer nper, count1, count2,iflag

      data period / 0.00, 0.04, 0.05, 0.075, 0.10, 0.15, 0.20,
     1              0.30, 0.40, 0.50, 0.75, 1.00, 1.5, 2., 3., 4. /
      data a  / -2.245, -0.402, -0.141, 0.489, 0.987, 1.625, 1.988,
     1           2.370,  2.153,  2.086, 1.802, 1.398, 0.795, 0.411,
     2          -0.141, -0.188 /
      data f1 / 0., 0., 0., 0., 0.,  0., 0., 0., 0.514, 0.738, 1.23,
     1          1.59, 1.93, 2.23, 2.39, 2.03 /
      data g1 /  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
     1          0.183, 0.488, 0.634, 0.836, 1.17 /
      data c /  -3.512, 0.904, -1.328, 0.149, 0.647, 1.125, -0.112,
     1          -0.0957, 0.440, -0.171, 0.405, -0.222 /
      data sigma1 / 0.517, 0.716, 0.631, 0.703, 0.703, 0.754, 0.722,
     1              0.597, 0.671, 0.722, 0.776, 0.751, 0.687, 0.591,
     2              0.628, 0.647 /
      data sigma2 / 0.387, 0.387, 0.492, 0.430, 0.427, 0.440, 0.421,
     1              0.382, 0.342, 0.330, 0.420, 0.426, 0.478, 0.496,
     2              0.520, 0.532 /
      twoPi = 2. * 3.1415926
      attenName = 'Campbell (1990;1994), horizontal'

C Find the requested spectral period and corresponding coefficients
      nPer = 16

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         aT      = a(1)
         f1T     = f1(1)
         g1T     = g1(1)
         sigma1T  = sigma1(1)
         sigma2T  = sigma2(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Campbell (1990;94) Horizontal atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),a(count1),a(count2),
     +                   specT,aT,iflag)
            call interp (period(count1),period(count2),f1(count1),f1(count2),
     +                   specT,f1T,iflag)
            call interp (period(count1),period(count2),g1(count1),g1(count2),
     +                   specT,g1T,iflag)
            call interp (period(count1),period(count2),sigma1(count1),sigma1(count2),
     +                   specT,sigma1T,iflag)
            call interp (period(count1),period(count2),sigma2(count1),sigma2(count2),
     +                   specT,sigma2T,iflag)

 1011 period1 = specT

      b = 1.09
      c1 = 0.361
      c2 = 0.576
      d = -1.89
      e = 0.213
      f2 = 0.659
      f3 = -4.7
      g2 = 0.574

c     Convert oblique to reverse for Campbell
      ftype1 = ftype
      if ( ftype1 .eq. 0.5 ) then
        ftype1=1.0
      endif
c     Set normal faulting to Stike-slip
      if ( ftype .lt. 0. ) ftype1 = 0.

C Compute PGA for 1994 relation.

      softrock = 0
      hardrock = 0

      r = sqrt( dist**2 + (c(4)*exp(c(5)*m))**2)
      lnPGA94 = c(1) + c(2)*m + c(3)*alog(r)
     1          + (c(6)+c(7)*alog(dist)+c(8)*m) * ftype1
     2          + (c(9)+c(10)*alog(dist)) * softRock
     3          + (c(11)+c(12)*alog(dist)) * hardRock
      if ( m .lt. 7.4 ) then
        sigma = 0.889 - 0.0691*m
      else
        sigma = 0.38
      endif

      if ( specT .eq. 0.0 ) then
        lnY = lnPGA94 + 6.89
        return
      endif

c     For Sa, compute the ratio of the PGA94/PGA90 for scaling
      lnPGA90 = a(1) + b*m + d*alog(dist+c1*exp(c2*m)) + e*ftype1
     1      + f1(1) * tanh( f2*(m+f3) )
     2      + g1(1)*tanh(g2*baseDepth)
      scale = lnPGA94 - lnPGA90

C Compute SA using the Campbell 1990 relation.
      lnY = aT + b*m + d*alog(dist+c1*exp(c2*m)) + e*ftype1
     1      + f1T * tanh( f2*(m+f3) )
     2      + g1T*tanh(g2*baseDepth)

       lnY = lnY + scale

c     Convert units spectral acceleration in gal
      lnY = lnY + alog( twoPi/specT )

c     Set standard error
      if ( m .ge. 6.2 ) then
        sigma = sigma2T
      else
        sigma = sigma1T
      endif

      return
      end

c -----------------------------------------------------------
C *** Campbell (1994) Horizontal ****************************
c -----------------------------------------------------------

      subroutine Campbell_94 ( m, d, ftype, lnY, sigma, specT,
     1                         soilFlag, softRock, hardRock, baseDepth,
     2                         attenName, period1,iflag )
c     This subroutine uses the Campbell 1994 PGA with the 1993 Sa/a

      parameter (MAXPER=16)
      real m, d, ftype, lnY, sigma, baseDepth
      integer soilFlag, softRock, hardRock,iflag
      real lnPGA93, lnPGA94
      real b0(MAXPER), b1(MAXPER), b2(MAXPER), b3(MAXPER), b4(MAXPER),
     1     b5(MAXPER), sig0(MAXPER), c(12), period(MAXPER)
      character*80 attenName
      real specT, b0T, b1T, b2T, b3T, b4T, b5T, sig0T
      integer nper, count1, count2

      data period / 0.0, 0.04, 0.05, 0.075, 0.10, 0.15, 0.2, 0.3, 0.4,
     1               0.5, 0.75, 1.0, 1.5, 2.0, 3.0, 4.0 /
      data b0 / -3.15, -3.14, -3.09, -2.83, -2.61, -2.37, -2.32, -2.36,
     1          -3.02, -3.36, -4.03, -4.73, -5.61, -6.24, -7.12, -7.47/
      data b1 / 0., 0., 0., 0., 0., 0., 0., 0., 0.60, 0.75, 1.06, 1.37,
     1          1.73, 1.96, 2.19, 2.00 /
      data b2 / 0.00, 0.22, 0.18, 0.18, 0.08, -0.09, -0.21, -0.42,
     1         -0.46, -0.50, -0.49, -0.41, -0.29, -0.32, -0.13, -0.20 /
      data b3 / 0., 0., 0., 0., 0., 0., 0., 0., 0.12, 0.25, 0.37, 0.57,
     1          0.72, 0.83, 0.86, 1.05 /
      data b4 / 0.0150, 0.0158, 0.0161, 0.0174, 0.0174, 0.0160, 0.0139,
     1          0.0115, 0.0103, 0.00825, 0.00734, 0.00655, 0.00557,
     2          0.00496, 0.00422, 0.00376 /
      data b5 / -0.000995, -0.00105, -0.00105, -0.00109, -0.000988,
     1          -0.000730, -0.000470, -0.000273, -0.000212,
     2          0., 0., 0., 0., 0., 0., 0. /
      data sig0 / 0.50, 0.53, 0.57, 0.56, 0.58, 0.60, 0.64, 0.61,
     1            0.65, 0.67, 0.69, 0.72, 0.55, 0.52, 0.51, 0.56 /
      data c /  -3.512, 0.904, -1.328, 0.149, 0.647, 1.125, -0.112,
     1          -0.0957, 0.440, -0.171, 0.405, -0.222 /

C Find the requested spectral period and corresponding coefficients
      nPer = 16

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         b0T     = b0(1)
         b1T     = b1(1)
         b2T     = b2(1)
         b3T     = b3(1)
         b4T     = b4(1)
         b5T     = b5(1)
         sig0T   = sig0(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Campbell (1994) Horizontal atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),b0(count1),b0(count2),
     +                   specT,b0T,iflag)
            call interp (period(count1),period(count2),b1(count1),b1(count2),
     +                   specT,b1T,iflag)
            call interp (period(count1),period(count2),b2(count1),b2(count2),
     +                   specT,b2T,iflag)
            call interp (period(count1),period(count2),b3(count1),b3(count2),
     +                   specT,b3T,iflag)
            call interp (period(count1),period(count2),b4(count1),b4(count2),
     +                   specT,b4T,iflag)
            call interp (period(count1),period(count2),b5(count1),b5(count2),
     +                   specT,b5T,iflag)
            call interp (period(count1),period(count2),sig0(count1),sig0(count2),
     +                   specT,sig0T,iflag)

 1011 period1 = specT

c     Set name
      if ( soilFlag .eq. 0 ) then
        attenName = 'Campbell (1993;1994), soil'
      elseif ( softRock .eq. 1 ) then
        attenName = 'Campbell (1993;1994), soft-rock'
      elseif ( hardRock .eq. 1 ) then
        attenName = 'Campbell (1993;1994), hard-rock'
      else
C        write (*,*)')
        return
      endif

c     Convert oblique to reverse for Campbell
      ftype1 = ftype
      if ( ftype1 .eq. 0.5 ) then
        ftype1=1.0
      endif
c     Set normal faulting to Stike-slip
      if ( ftype .lt. 0. ) ftype1 = 0.

c     Compute pga for 1994 relation
      r = sqrt( d**2 + (c(4)*exp(c(5)*m))**2)
      lnPGA94 = c(1) + c(2)*m + c(3)*alog(r)
     1          + (c(6)+c(7)*alog(d)+c(8)*m) * ftype1
     2          + (c(9)+c(10)*alog(d)) * softRock
     3          + (c(11)+c(12)*alog(d)) * hardRock
      if ( m .lt. 7.4 ) then
        sigma = 0.889 - 0.0691*m
      else
        sigma = 0.38
      endif

      if ( specT .eq. 0.0 ) then
        lnY = lnPGA94 + 6.89
        return
      endif

c     For Sa, compute the ratio of the PGA94/PGA93 for scaling
      r = sqrt( d**2 + (0.0586*exp(0.683*m))**2 )
      alpha = b4(1) + b5(1)*m
      lnPGA93 = b0(1) + 0.683*m + b1(1)*tanh(0.647*(m-4.7))
     1          - alog(r) - alpha*d + 0.27*ftype1
     2          + ( b2(1) - 0.105*alog(d) ) * SoilFlag
     3          + b3(1)*tanh(0.620*baseDepth)
      scale = lnPGA94 - lnPGA93

c     Compute Sa using 93 relation
      r = sqrt( d**2 + (0.0586*exp(0.683*m))**2 )
      alpha = b4T + b5T*m
      lnY = b0T + 0.683*m + b1T*tanh(0.647*(m-4.7))
     1          - alog(r) - alpha*d + 0.27*ftype1
     2          + ( b2T - 0.105*alog(d))*SoilFlag
     3          + b3T*tanh(0.620*baseDepth)
      lnY = LNY + scale
      sigma = sig0T

c     Convert to gal
      lnY = lnY + 6.89

      return
      end

c ------------------------------------------------------------------
C *** Campbell (1997) Horizontal ***********************************
c ------------------------------------------------------------------

      subroutine Camp97_H ( m, dist, ftype, lnY, sigma, baseDepth,
     1                    specT,attenName, period1, Ssr, Shr,iflag )

c     Campbell (1997) - Horizontal

      parameter (MAXPER=14)
      real ftype, dist, m, lnY, sigma, baseDepth, period1
      integer Ssr, Shr,iflag
      character*80 attenName
      real period(MAXPER), lndist
          real c1(MAXPER), c2(MAXPER), c3(MAXPER), c4(MAXPER),
     1     c5(MAXPER), c6(MAXPER), c7(MAXPER), c8(MAXPER)
      real specT, c1T, c2T, c3T, c4T, c5T, c6T, c7T, c8T
      integer nper, count1, count2

      data period / 0.00, 0.05, 0.075, 0.10, 0.15, 0.20,
     1              0.30, 0.50, 0.75, 1.00, 1.5, 2., 3., 4. /
      data c1 / 0.0, 0.05, 0.27, 0.48, 0.72, 0.79, 0.77, -0.28,
     1         -1.08, -1.79, -2.65, -3.28, -4.07, -4.26 /
      data c2 / 0., 0., 0., 0., 0., 0., 0., 0.74, 1.23, 1.59, 1.98,
     1          2.23, 2.39, 2.03 /
      data c3 / 0., 0., 0., 0., 0., 0., 0., 0.66,  0.66, 0.66,
     1          0.66, 0.66, 0.66, 0.66/
      data c4 / 0.0, -.0011, -.0024, -.0024, -.0010, 0.0011, 0.0035,
     1    0.0068, 0.0077, 0.0085, 0.0094, 0.0100, 0.0108, 0.0112 /
      data c5 / 0., .000055, .000095, .000007, -.00027, -.00053,
     1      -.00072, -.00100, -.00100, -.00100, -.00100, -.00100,
     2      -.00100, -.00100 /
      data c6 / 0.0, 0.20, 0.22, 0.14, -0.02, -0.18, -0.40, -0.42,
     1       -0.44, -0.38, -0.32, -0.36, -0.22, -0.30 /
      data c7 / 0., 0., 0., 0., 0., 0., 0., 0.25, 0.37, 0.57, 0.72,
     1        0.83, 0.86, 1.05 /
      data c8 / 0., 0., 0., 0., 0., 0., 0., 0.62,  0.62, 0.62,
     1        0.62, 0.62, 0.62, 0.62/
      twoPi = 2. * 3.1415926

C Find the requested spectral period and corresponding coefficients
      nPer = 14

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c3T     = c3(1)
         c4T     = c4(1)
         c5T     = c5(1)
         c6T     = c6(1)
         c7T     = c7(1)
         c8T     = c8(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Campbell (1997) Horizontal atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),c1(count1),c1(count2),
     +                   specT,c1T,iflag)
            call interp (period(count1),period(count2),c2(count1),c2(count2),
     +                   specT,c2T,iflag)
            call interp (period(count1),period(count2),c3(count1),c3(count2),
     +                   specT,c3T,iflag)
            call interp (period(count1),period(count2),c4(count1),c4(count2),
     +                   specT,c4T,iflag)
            call interp (period(count1),period(count2),c5(count1),c5(count2),
     +                   specT,c5T,iflag)
            call interp (period(count1),period(count2),c6(count1),c6(count2),
     +                   specT,c6T,iflag)
            call interp (period(count1),period(count2),c7(count1),c7(count2),
     +                   specT,c7T,iflag)
            call interp (period(count1),period(count2),c8(count1),c8(count2),
     +                   specT,c8T,iflag)

 1011 period1 = specT

c     Set atten name
      if ( Shr .eq. 1 ) then
        attenName = 'Campbell (1997), horizontal, hard-rock'
      elseif ( Ssr .eq. 1 ) then
        attenName = 'Campbell (1997), horizontal, soft-rock'
      else
        attenName = 'Campbell (1997), horizontal, soil'
      endif

c     Convert oblique to reverse for Campbell
      ftype1 = ftype
      if ( ftype1 .eq. 0.5 ) then
        ftype1=1.0
      endif
c     Set normal faulting to Stike-slip
      if ( ftype .lt. 0. ) ftype1 = 0.

c     Compute peak horizontal acc
      lndist = alog(dist)
      accH = -3.512 + 0.904*m -
     1       1.328*alog(sqrt(dist**2+(0.149*exp(0.647*m))**2))
     2       + (1.125-0.112*lndist-0.0957*m)*ftype1
     3       + (0.440-0.171*lndist)*Ssr
     4       + (0.405-0.222*lndist)*Shr
      lnY = accH
      if ( specT .ne. 0.0 ) then
          if ( baseDepth .ge. 1. ) then
               fSA = 0.
             else
               fSA = c6T*(1-baseDepth)*((1.-Shr)+0.5*Ssr)
             endif
          lnY = accH + c1T + c2T*tanh(c3T*(m-4.7))
     1  + (c4T+c5T*m)*dist + 0.5*Ssr*c6T + c6T*Shr
     2  + c7T*tanh(c8T*baseDepth)*(1.-Shr)+fSA
      endif
c
c     Set sigma for pga
      if ( m .lt. 7.4 ) then
            sigma = 0.889-0.0691*m
          else
            sigma = 0.38
          endif
          if (specT .ne. 0.0 ) then
            sigma = sqrt( sigma**2 + 0.27**2)
          endif

c     Convert units spectral acceleration in gal
      lnY = lnY + 6.89

      return
      end

c ------------------------------------------------------------------
C *** Campbell (1997) Vertical *************************************
c ------------------------------------------------------------------

      subroutine Camp97_Z ( m, dist, ftype, lnY, sigma, baseDepth,
     1                    specT,attenName, period1, Ssr, Shr,iflag )

c     Campbell (1997) - Vertical

      parameter (MAXPER=14)
      real ftype, dist, m, lnY, sigma, baseDepth, period1
      real lnY_H
      integer Ssr, Shr,iflag
      character*80 attenName
      real period(MAXPER)
      real c1(MAXPER), c2(MAXPER), c3(MAXPER), c4(MAXPER), c5(MAXPER)
      real specT, c1T, c2T, c3T, c4T, c5T
      integer nper, count1, count2

      data period / 0.00, 0.05, 0.075, 0.10, 0.15, 0.20,
     1              0.30, 0.50, 0.75, 1.00, 1.5, 2., 3., 4. /
      data c1 / 0., -1.32, -1.21, -1.29, -1.57, -1.73, -1.98, -2.03,
     1          -1.79, -1.82, -1.81, -1.65, -1.31, -1.35 /
      data c2 / 0., 0., 0., 0., 0., 0., 0., 0.46, 0.67, 1.13,
     1          1.52, 1.65, 1.28, 1.15 /
      data c3 / 0., 0., 0., 0., 0., 0., 0., -0.74, -1.23, -1.59,
     1         -1.98, -2.23, -2.39, -2.03 /
      data c4 / 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.18, 0.57,
     1          0.61, 1.07, 1.26 /
      data c5 / 0., 0., 0., 0., 0., 0., 0., 0., 0., -0.18, -0.49,
     1          -0.63, -0.84, -1.17 /

C Find the requested spectral period and corresponding coefficients
      nPer = 14

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c3T     = c3(1)
         c4T     = c4(1)
         c5T     = c5(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Campbell (1997) Vertical atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),c1(count1),c1(count2),
     +                   specT,c1T,iflag)
            call interp (period(count1),period(count2),c2(count1),c2(count2),
     +                   specT,c2T,iflag)
            call interp (period(count1),period(count2),c3(count1),c3(count2),
     +                   specT,c3T,iflag)
            call interp (period(count1),period(count2),c4(count1),c4(count2),
     +                   specT,c4T,iflag)
            call interp (period(count1),period(count2),c5(count1),c5(count2),
     +                   specT,c5T,iflag)

 1011 period1 = specT

c     Convert oblique to reverse for Campbell
      ftype1 = ftype
      if ( ftype1 .eq. 0.5 ) then
        ftype1=1.0
      endif
c     Set normal faulting to Stike-slip
      if ( ftype .lt. 0. ) ftype1 = 0.

c     Compute horizontal Sa
      call Camp97_H ( m, dist, ftype1, lnY_H, sigma, baseDepth,
     1                    specT,attenName, period1, Ssr, Shr,iflag )

c     Set atten name
      if ( Shr .eq. 1 ) then
        attenName = 'Campbell (1997), vertical, hard-rock'
      elseif ( Ssr .eq. 1 ) then
        attenName = 'Campbell (1997), vertical, soft-rock'
      else
        attenName = 'Campbell (1997), vertical, soil'
      endif

c     Scale to get vertical
      if ( specT .eq. 0.0 ) then
         lnY = lnY_H - 1.58-0.10*m
     1       - 1.5*alog(dist+0.079*exp(0.661*m))
     2       + 1.89*alog(dist +0.361*exp(0.576*m))-0.11*ftype1
      else
        lnY = lnY_H + c1T - 0.10*m
     1      + c2T*tanh(0.71*(m-4.7))
     2      +c3T*tanh(0.66*(m-4.7))
     3      -1.50*alog(dist+0.071*exp(0.661*m))
     4      +1.89*alog(dist+0.361*exp(0.576*m)) - 0.11*ftype1
     5      +c4T*tanh(0.51*baseDepth)
     6      + c5T*tanh(0.57*baseDepth)
      endif

c     Set sigma for pga
      if (specT .eq. 0.0 ) then
         sigma = sqrt( sigma**2 + 0.36**2)
      else
         sigma = sqrt( sigma**2 + 0.39**2)
      endif

      return
      end

c ------------------------------------------------------------
C *** Idriss (1991) Horizontal, Rock *************************
c ------------------------------------------------------------

      subroutine Idriss91_rock ( m, d, ftype, lnY, sigma, specT,
     1                           attenName, period1,iflag )
c     This  subroutine calculates the LOG SA using the
c     Idriss (1991) attenuation relation for horizontal Sa.
c     (Ave of horizontal comp)

      real ftype
      real d,m,lnY,sigma, specT
      integer iflag
      character*80 attenName
      attenName = 'Idriss (1991), rock'

c     Set normal faulting to Stike-slip
      ftype1 = ftype
      if ( ftype .lt. 0. ) ftype1 = 0.

      if ( m .lt. 6.0 ) then
         call Idriss91_rock_m6 ( m, d, ftype1, lnY, sigma,specT,period1,
     1          iflag)
      else
         call Idriss91_rock_m61 ( m, d, ftype1, lnY, sigma,specT,period1,
     1          iflag)
      endif

      return
      end

c ------------------------------------------------------------

      subroutine Idriss91_rock_m6 ( m, d, ftype, lnY, sigma,
     1           specT, period1,iflag )
      parameter (MAXPER=24)
      real ftype, d, m, lnY, sigma, period1
      real a0(MAXPER), a1(MAXPER), a2(MAXPER), b0(MAXPER), sig0(MAXPER),
     1     period(MAXPER)
      real specT, a0T, a1T, a2T, b0T, sig0T
      integer nper, count1, count2,iflag

      data period / 0.0, 0.03, 0.05, 0.075, 0.1, 0.11, 0.13, 0.15, 0.2,
     1              0.25, 0.30, 0.35, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0,
     2              1.5, 2.0, 3.0, 4.0, 5.0 /
      data a0 / -0.150, -0.150, -0.278, -0.308, -0.318, -0.328, -0.338,
     1          -0.348, -0.358, -0.429, -0.486, -0.535, -0.577, -0.648,
     2          -0.705, -0.754, -0.796, -0.834, -0.867, -0.970, -1.046,
     3          -1.143, -1.177, -1.214 /
      data a1 / 2.261, 2.261, 2.365, 2.334, 2.319, 2.294, 2.255, 2.219,
     1          2.146, 2.073, 2.010, 1.977, 1.921, 1.818, 1.704, 1.644,
     2          1.593, 1.482, 1.432, 1.072, 0.762, 0.194, -0.466,
     3         -1.361 /
      data a2 / -0.083, -0.083, -0.092, -0.081, -0.075, -0.070, -0.062,
     1          -0.055, -0.042, -0.030, -0.020, -0.016, -0.009,  0.003,
     2           0.017,  0.022,  0.025,  0.039,  0.043,  0.084,  0.121,
     3           0.191,  0.280, 0.410 /
      data b0 / 0.000, 0.000, 0.066, 0.070, 0.072, 0.073, 0.075, 0.076,
     1          0.078, 0.080, 0.082, 0.087, 0.092, 0.099, 0.105, 0.111,
     2          0.115, 0.119, 0.123, 0.136, 0.146, 0.160, 0.169, 0.177/
      data sig0 / 1.39, 1.39, 1.39, 1.39, 1.42, 1.42, 1.42, 1.42, 1.42,
     1            1.42, 1.44, 1.44, 1.44, 1.46, 1.46, 1.48, 1.48, 1.48,
     2            1.48, 1.48, 1.52, 1.52, 1.52, 1.52 /

C Find the requested spectral period and corresponding coefficients
      nPer = 24

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         a0T     = a0(1)
         a1T     = a1(1)
         a2T     = a2(1)
         b0T     = b0(1)
         sig0T   = sig0(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Idriss (1991) Horizontal atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),a0(count1),a0(count2),
     +                   specT,a0T,iflag)
            call interp (period(count1),period(count2),a1(count1),a1(count2),
     +                   specT,a1T,iflag)
            call interp (period(count1),period(count2),a2(count1),a2(count2),
     +                   specT,a2T,iflag)
            call interp (period(count1),period(count2),b0(count1),b0(count2),
     +                   specT,b0T,iflag)
            call interp (period(count1),period(count2),sig0(count1),sig0(count2),
     +                   specT,sig0T,iflag)

 1011 period1 = specT

      b1 = 1.602
      b2 = -0.142
      lnY = a0T + exp(a1T+a2T*m) +
     1      (b0T - exp(b1+b2*m)) * alog(d+20) + 0.2*ftype
      sigma = sig0T - 0.14*m

c     Convert units to spectral acceleration in gal
      lnY = lnY + 6.89

      return
      end

c ------------------------------------------------------------

      subroutine Idriss91_rock_m61 ( m, d, ftype, lnY, sigma,
     1           specT, period1,iflag )
      parameter (MAXPER=24)
      real ftype, d, m, lnY, sigma, period1
      real a0(MAXPER), a1(MAXPER), a2(MAXPER), b0(MAXPER), sig0(MAXPER),
     1     period(MAXPER), sig1(MAXPER)
      real specT, a0T, a1T, a2T, b0T, sig0T, sig1T
      integer nper, count1, count2,iflag

      data period / 0.0, 0.03, 0.05, 0.075, 0.1, 0.11, 0.13, 0.15, 0.2,
     1              0.25, 0.30, 0.35, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9,
     2              1.0, 1.5, 2.0, 3.0, 4.0, 5.0 /
      data a0 / -0.050, -0.050, -0.278, -0.308, -0.318, -0.328, -0.338,
     1          -0.348, -0.358, -0.429, -0.486, -0.535, -0.577, -0.648,
     2          -0.705, -0.754, -0.796, -0.834, -0.867, -0.970, -1.046,
     3          -1.143, -1.177, -1.214 /
      data a1 / 3.477, 3.477, 3.426, 3.359, 3.327, 3.289, 3.233, 3.185,
     1          3.100, 3.034, 2.982, 2.943, 2.906, 2.850, 2.803, 2.765,
     2          2.728, 2.694, 2.662, 2.536, 2.447, 2.295, 2.169, 2.042/

      data a2 / -0.284, -0.284, -0.269, -0.252, -0.243, -0.236, -0.225,
     1          -0.216, -0.201, -0.190, -0.182, -0.177, -0.173, -0.169,
     2          -0.166, -0.165, -0.164, -0.163, -0.162, -0.160, -0.160,
     3          -0.159, -0.159, -0.157 /

      data b0 / 0.000, 0.000, 0.066, 0.070, 0.072, 0.073, 0.075, 0.076,
     1          0.078, 0.080, 0.082, 0.087, 0.092, 0.099, 0.105, 0.111,
     2          0.115, 0.119, 0.123, 0.136, 0.146, 0.160, 0.169, 0.177/
      data sig0 / 1.39, 1.39, 1.39, 1.39, 1.42, 1.42, 1.42, 1.42, 1.42,
     1            1.42, 1.44, 1.44, 1.44, 1.46, 1.46, 1.48, 1.48, 1.48,
     2            1.48, 1.48, 1.52, 1.52, 1.52, 1.52 /
      data sig1 / 0.38, 0.38, 0.38, 0.38, 0.41, 0.41, 0.41, 0.41, 0.41,
     1            0.41, 0.43, 0.43, 0.43, 0.45, 0.45, 0.47, 0.47, 0.47,
     2            0.47, 0.47, 0.51, 0.51, 0.51, 0.51 /

C Find the requested spectral period and corresponding coefficients
      nPer = 24

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         a0T     = a0(1)
         a1T     = a1(1)
         a2T     = a2(1)
         b0T     = b0(1)
         sig0T   = sig0(1)
         sig1T   = sig1(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Idriss (1991) Horizontal atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),a0(count1),a0(count2),
     +                   specT,a0T,iflag)
            call interp (period(count1),period(count2),a1(count1),a1(count2),
     +                   specT,a1T,iflag)
            call interp (period(count1),period(count2),a2(count1),a2(count2),
     +                   specT,a2T,iflag)
            call interp (period(count1),period(count2),b0(count1),b0(count2),
     +                   specT,b0T,iflag)
            call interp (period(count1),period(count2),sig0(count1),sig0(count2),
     +                   specT,sig0T,iflag)
            call interp (period(count1),period(count2),sig1(count1),sig1(count2),
     +                   specT,sig1T,iflag)

 1011 period1 = specT

      b1 = 2.475
      b2 = -0.286
      lnY = a0T + exp(a1T+a2T*m)
     1      + (b0T - exp(b1+b2*m)) * alog(d+20) + 0.2*ftype
      if ( m .lt. 7.25 ) then
        sigma = sig0T - 0.14*m
      else
        sigma = sig1T
      endif

c     Convert units to spectral acceleration in gal
      lnY = lnY + 6.89

      return
      end

c -------------------------------------------------------------------
C *** Idriss (1991) Horizontal Soft Soil (PGA only) *****************
c -------------------------------------------------------------------

      subroutine Idriss91_soft ( m, d, ftype, lnY, sigma,
     1                           attenName, period1 )
c     This  subroutine calculates the LOG SA using the
c     Idriss (1991) attenuation relation for horizontal Sa.
c     (Ave of horizontal comp)

      real ftype
      real d,m,lnY,sigma
      character*80 attenName
      attenName = 'Idriss (1991), soft-soil'

c     Set normal faulting to Stike-slip
      ftype1 = ftype
      if ( ftype .lt. 0. ) ftype1 = 0.

      if ( m .lt. 6.0 ) then
        b1 = 1.285
        b2 = -0.206
            a1 = 1.673
            a2 = -0.137
      else
        b1 = 2.015
        b2 = -0.328
            a1 = 2.952
            a2 = -0.35
      endif
      period1 = 0.
      lnY = exp(a1+a2*m) - exp(b1+b2*m) * alog(d+20) + 0.2*ftype1
      if ( m .le. 7. ) then
            sigma = 1.39 - 0.14*m
      else
            sigma = 0.38
          endif

c     Convert units to spectral acceleration in gal
      lnY = lnY + 6.89
      return
      end

c -------------------------------------------------------------------
C *** Idriss (1997) Horizontal Soft Soil (PGA only) *****************
c -------------------------------------------------------------------

      subroutine Idriss97_soft ( m, d, ftype, lnY, sigma,
     1                           attenName, period1 )
c     This  subroutine calculates the LOG SA using the
c     Idriss (1991) attenuation relation for horizontal Sa.
c     (Ave of horizontal comp)

      real ftype
      real d,m,lnY,sigma
      character*80 attenName
      attenName = 'Idriss (1997), soft-soil'

c     Set normal faulting to Stike-slip
      ftype1 = ftype
      if ( ftype .lt. 0. ) ftype1 = 0.

      if ( m .lt. 6.0 ) then
        b1 = 0.563
        b2 = -0.133
        a0 = -0.03
        a1 = -0.472
        a2 = 0.106
        f = 0.
      else
        b1 = 1.957
        b2 = -0.368
        a0 = 0.
        a1 = 2.638
        a2 = -0.425
        f = 0.05*(1-tanh(d/20.))
      endif
      period1 = 0.
      lnY = a0 + exp(a1+a2*m) - exp(b1+b2*m) * alog(d+10) + 0.28*ftype1
     1      + f
        sigma = 1.29 - 0.12*m
      if ( sigma .lt. 0.42 ) sigma = 0.42

c     Convert units to spectral acceleration in gal
      lnY = lnY + 6.89
      return
      end

c ------------------------------------------------------------
C *** Idriss (1991:1995) Horizontal, Rock ********************
c ------------------------------------------------------------

      subroutine Idriss91_95_rock ( m, d, ftype, lnY, sigma, specT,
     1                           attenName, period1,iflag )

c     This  subroutine calculates the LOG SA using the
c     Idriss (1991) attenuation relation for horizontal Sa.
c     and the PGA from the 1995 relationship (Ave of horizontal comp)

      real ftype
      real d,m,lnY,sigma,specT
      integer iflag
      character*80 attenName
      attenName = 'Idriss (1991;1995), Rock'

c     Set normal faulting to Stike-slip
      ftype1 = ftype
      if ( ftype .lt. 0. ) ftype1 = 0.

      if ( m .lt. 6.0 ) then
         call Idriss91_95_rock_m6 ( m, d, ftype1, lnY, sigma,specT,
     1          period1,iflag)
      else
         call Idriss91_95_rock_m61 ( m, d, ftype1, lnY, sigma,specT,
     1          period1,iflag)
      endif

      return
      end

c ------------------------------------------------------------

      subroutine Idriss91_95_rock_m6 ( m, d, ftype, lnY, sigma,
     1           specT, period1,iflag )
      parameter (MAXPER=24)
      real ftype, d, m, lnY, sigma, period1
      real a0(MAXPER), a1(MAXPER), a2(MAXPER), b0(MAXPER), sig0(MAXPER),
     1     period(MAXPER)
      real specT, a0T, a1T, a2T, b0T, sig0T, pga91, pga95
      integer nper, count1, count2,iflag

      data period / 0.0, 0.03, 0.05, 0.075, 0.1, 0.11, 0.13, 0.15, 0.2,
     1              0.25, 0.30, 0.35, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0,
     2              1.5, 2.0, 3.0, 4.0, 5.0 /
      data a0 / -0.150, -0.150, -0.278, -0.308, -0.318, -0.328, -0.338,
     1          -0.348, -0.358, -0.429, -0.486, -0.535, -0.577, -0.648,
     2          -0.705, -0.754, -0.796, -0.834, -0.867, -0.970, -1.046,
     3          -1.143, -1.177, -1.214 /
      data a1 / 2.261, 2.261, 2.365, 2.334, 2.319, 2.294, 2.255, 2.219,
     1          2.146, 2.073, 2.010, 1.977, 1.921, 1.818, 1.704, 1.644,
     2          1.593, 1.482, 1.432, 1.072, 0.762, 0.194, -0.466,
     3         -1.361 /
      data a2 / -0.083, -0.083, -0.092, -0.081, -0.075, -0.070, -0.062,
     1          -0.055, -0.042, -0.030, -0.020, -0.016, -0.009,  0.003,
     2           0.017,  0.022,  0.025,  0.039,  0.043,  0.084,  0.121,
     3           0.191,  0.280, 0.410 /
      data b0 / 0.000, 0.000, 0.066, 0.070, 0.072, 0.073, 0.075, 0.076,
     1          0.078, 0.080, 0.082, 0.087, 0.092, 0.099, 0.105, 0.111,
     2          0.115, 0.119, 0.123, 0.136, 0.146, 0.160, 0.169, 0.177/
      data sig0 / 1.29, 1.29, 1.29, 1.29, 1.32, 1.33, 1.34, 1.35, 1.37,
     1            1.38, 1.39, 1.40, 1.41, 1.42, 1.43, 1.44, 1.45, 1.46,
     2            1.47, 1.47, 1.47, 1.47, 1.47, 1.47 /

C Find the requested spectral period and corresponding coefficients
      nPer = 24

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         a0T     = a0(1)
         a1T     = a1(1)
         a2T     = a2(1)
         b0T     = b0(1)
         sig0T   = sig0(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Idriss (1991:1995) Horizontal atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),a0(count1),a0(count2),
     +                   specT,a0T,iflag)
            call interp (period(count1),period(count2),a1(count1),a1(count2),
     +                   specT,a1T,iflag)
            call interp (period(count1),period(count2),a2(count1),a2(count2),
     +                   specT,a2T,iflag)
            call interp (period(count1),period(count2),b0(count1),b0(count2),
     +                   specT,b0T,iflag)
            call interp (period(count1),period(count2),sig0(count1),sig0(count2),
     +                   specT,sig0T,iflag)

 1011 period1 = specT

c Compute the Idriss (1991) PGA value.
      pga91 = a0(1) + exp(a1(1)+a2(1)*m) +
     1      (b0(1) - exp(1.602-0.142*m)) * alog(d+20) + 0.2*ftype

c Compute the Idriss (1995) PGA value.
      pga95 = exp(1.127+0.011*m) +
     1      (-exp(1.126-0.106*m)) * alog(d+10) + 0.28*ftype

c Compute the Idriss (1991) spectral value.
      b1 = 1.602
      b2 = -0.142
      lnY = a0T + exp(a1T+a2T*m) +
     1      (b0T - exp(b1+b2*m)) * alog(d+20) + 0.2*ftype

c Now apply the scaling factor for spectral values.
      if (specT .ne. 0.0) then
         lnY = alog((exp(lnY)/exp(pga91))*exp(pga95))
      else
         lnY = pga95
      endif

      sigma = sig0T - 0.12*m

c     Convert units to spectral acceleration in gal
      lnY = lnY + 6.89

      return
      end

c ------------------------------------------------------------

      subroutine Idriss91_95_rock_m61 ( m, d, ftype, lnY, sigma,
     1           specT, period1,iflag )
      parameter (MAXPER=24)
      real ftype, d, m, lnY, sigma, period1
      real a0(MAXPER), a1(MAXPER), a2(MAXPER), b0(MAXPER), sig0(MAXPER),
     1     period(MAXPER), sig1(MAXPER)
      real specT, a0T, a1T, a2T, b0T, sig0T, sig1T, pga91, pga95
      integer nper, count1, count2,iflag

      data period / 0.0, 0.03, 0.05, 0.075, 0.1, 0.11, 0.13, 0.15, 0.2,
     1              0.25, 0.30, 0.35, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9,
     2              1.0, 1.5, 2.0, 3.0, 4.0, 5.0 /
      data a0 / -0.050, -0.050, -0.278, -0.308, -0.318, -0.328, -0.338,
     1          -0.348, -0.358, -0.429, -0.486, -0.535, -0.577, -0.648,
     2          -0.705, -0.754, -0.796, -0.834, -0.867, -0.970, -1.046,
     3          -1.143, -1.177, -1.214 /
      data a1 / 3.477, 3.477, 3.426, 3.359, 3.327, 3.289, 3.233, 3.185,
     1          3.100, 3.034, 2.982, 2.943, 2.906, 2.850, 2.803, 2.765,
     2          2.728, 2.694, 2.662, 2.536, 2.447, 2.295, 2.169, 2.042/
      data a2 / -0.284, -0.284, -0.269, -0.252, -0.243, -0.236, -0.225,
     1          -0.216, -0.201, -0.190, -0.182, -0.177, -0.173, -0.169,
     2          -0.166, -0.165, -0.164, -0.163, -0.162, -0.160, -0.160,
     3          -0.159, -0.159, -0.157 /
      data b0 / 0.000, 0.000, 0.066, 0.070, 0.072, 0.073, 0.075, 0.076,
     1          0.078, 0.080, 0.082, 0.087, 0.092, 0.099, 0.105, 0.111,
     2          0.115, 0.119, 0.123, 0.136, 0.146, 0.160, 0.169, 0.177/
      data sig0 / 1.29, 1.29, 1.29, 1.29, 1.32, 1.33, 1.34, 1.35, 1.37,
     1            1.38, 1.39, 1.40, 1.41, 1.42, 1.43, 1.44, 1.45, 1.46,
     2            1.47, 1.47, 1.47, 1.47, 1.47, 1.47 /
      data sig1 / 0.42, 0.42, 0.42, 0.42, 0.45, 0.46, 0.47, 0.48, 0.50,
     1            0.51, 0.52, 0.53, 0.54, 0.55, 0.56, 0.57, 0.58, 0.59,
     2            0.60, 0.60, 0.60, 0.60, 0.60, 0.60 /

C Find the requested spectral period and corresponding coefficients
      nPer = 24

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         a0T     = a0(1)
         a1T     = a1(1)
         a2T     = a2(1)
         b0T     = b0(1)
         sig0T   = sig0(1)
         sig1T   = sig1(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Idriss (1991:1995) Horizontal atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),a0(count1),a0(count2),
     +                   specT,a0T,iflag)
            call interp (period(count1),period(count2),a1(count1),a1(count2),
     +                   specT,a1T,iflag)
            call interp (period(count1),period(count2),a2(count1),a2(count2),
     +                   specT,a2T,iflag)
            call interp (period(count1),period(count2),b0(count1),b0(count2),
     +                   specT,b0T,iflag)
            call interp (period(count1),period(count2),sig0(count1),sig0(count2),
     +                   specT,sig0T,iflag)
            call interp (period(count1),period(count2),sig1(count1),sig1(count2),
     +                   specT,sig1T,iflag)

 1011 period1 = specT

c Compute the Idriss (1991) PGA value.
      pga91 = a0(1) + exp(a1(1)+a2(1)*m) +
     1      (b0(1) - exp(2.475-0.286*m)) * alog(d+20) + 0.2*ftype

c Compute the Idriss (1995) PGA value.
      pga95 = exp(2.763-0.262*m) +
     1      (-exp(2.215-0.288*m)) * alog(d+10) + 0.28*ftype

c Compute the Idriss (1991) spectral value.
      b1 = 2.475
      b2 = -0.286
      lnY = a0T + exp(a1T+a2T*m)
     1      + (b0T - exp(b1+b2*m)) * alog(d+20) + 0.2*ftype

c Now apply the scaling factor for spectral values.
      if (specT .ne. 0.0) then
         lnY = alog((exp(lnY)/exp(pga91))*exp(pga95))
      else
         lnY = pga95
      endif

c     Set the Sigma value.
      if ( m .lt. 7.25 ) then
        sigma = sig0T - 0.12*m
      else
        sigma = sig1T
      endif

c     Convert units to spectral acceleration in gal
      lnY = lnY + 6.89

      return
      end

c ----------------------------------------------------------------
C *** Geomatrix (1993) Vertical Rock *****************************
c ----------------------------------------------------------------

      subroutine Geomatrix93_V_rock ( m, d, ftype, lnY, sigma, specT,
     1                                attenName, period1,iflag )

c     This  subroutine calculates the LOG SA using the
c     Sadigh et al (1993) attenuation relation for vertical Sa.

      real ftype
      real d,m,lnY,sigma, period1
      integer iflag
      character*80 attenName
      attenName = 'Geomatrix (1993) vertical Rock'

c     Set normal faulting to Stike-slip
      ftype1 = ftype
      if ( ftype .lt. 0. ) ftype1 = 0.

      if ( m .lt. 6.5 ) then
         call Geomatrix93_V_rock_mLT65 ( m, d, ftype1, lnY, sigma, specT,
     1       period1,iflag )
      else
         call Geomatrix93_V_rock_mGE65 ( m, d, ftype1, lnY, sigma, specT,
     1       period1,iflag )
      endif
      return
      end

c ------------------------------------------------------------

      subroutine Geomatrix93_V_rock_mLT65 ( m, d, ftype, lnY, sigma,
     1            specT, period1,iflag )
      real ftype, d, m, lnY, sigma, period1
      real specT, c1T, c3T, c4T
      integer nper, count1, count2,iflag

      parameter (MAXPER=22)
      real c1(MAXPER), c3(MAXPER), c4(MAXPER), period(MAXPER)

      data period / 0.00, 0.04, 0.05, 0.06, 0.07, 0.09, 0.10, 0.12,
     1              0.14, 0.15, 0.17, 0.20, 0.24, 0.30, 0.40, 0.50,
     2              0.75, 1.00, 1.50, 2.00, 2.50, 3.00 /
      data c1 / -0.4300, 0.3379, 0.5041, 0.6095, 0.6896, 0.6718,
     1            0.6252, 0.5535, 0.3813, 0.2524, 0.0122, -0.3005,
     2           -0.6678, -1.1392, -1.7656, -2.2748, -3.2062, -3.8818,
     3           -4.2618, -4.5719, -4.8167, -5.0364 /
      data c3 / 0.0, 0.0, 0.0, 0.0, 0.0, -0.0033, -0.00468, -0.00707,
     1          -0.00909, -0.01000, -0.01462, -0.02061, -0.02734,
     2           -0.03558, -0.04619, -0.05442, -0.06939, -0.08000,
     3           -0.08554, -0.08946, -0.09251, -0.09500 /
      data c4 / -2.300, -2.450, -2.450, -2.450, -2.450, -2.420, -2.400,
     1          -2.380, -2.333, -2.300, -2.241, -2.164, -2.077, -1.971,
     2        -1.835, -1.729, -1.536, -1.400, -1.400, -1.4, -1.4, -1.4/

C Find the requested spectral period and corresponding coefficients
      nPer = 22

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c3T     = c3(1)
         c4T     = c4(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Geomatrix (1993) Vertical atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)

 1011 period1 = specT

      c2 = 1.0
      c5 = 1.2726
      c6 = 0.228
      c8 = 0.0953

c Set the maximum magnitude value at M=8.5. Magnitude larger than this value
c would result in lower ground motions for larger magnitude events.
      if (m .gt. 8.5) then
         m = 8.5
      endif

      lnY = c1T + c2*m + c3T*(8.5-m)**(2.5)
     1      + c4T*alog(d+exp(c5+c6*m)) + c8*ftype
      if ( specT .eq. 0.0) then
        if ( m .lt. 6.0 ) then
          sigma = 0.68
        else
          sigma = 3.08 - 0.4*m
        endif
      else
         if ( m .lt. 6.0 ) then
          sigma = 0.75
        else
          sigma = 2.91 - 0.36*m
        endif
      endif

c     Convert units to spectral acceleration in gal
      lnY = lnY + 6.89
      return
      end

c ------------------------------------------------------------

      subroutine Geomatrix93_V_rock_mGE65 ( m, d, ftype, lnY, sigma,
     1           specT, period1,iflag )
      real ftype, d, m, lnY, sigma, period1, specT
      real c1T, c3T, c4T
      integer nper, count1, count2,iflag

      parameter (MAXPER=22)
      real c1(MAXPER), c3(MAXPER), c4(MAXPER), period(MAXPER)

      data period / 0.00, 0.04, 0.05, 0.06, 0.07, 0.09, 0.10, 0.12,
     1              0.14, 0.15, 0.17, 0.20, 0.24, 0.30, 0.40, 0.50,
     2              0.75, 1.00, 1.50, 2.00, 2.50, 3.00 /
      data c1 / -1.080, -0.3121, -0.1459, -0.0405, 0.03956, 0.0218,
     1          -0.0248, -0.0965, -0.2687, -0.3976, -0.6378, -0.9505,
     2          -1.3178, -1.7893, -2.4157, -2.9248, -3.8562, -4.5318,
     3          -4.9118, -5.2219, -5.4667, -5.6864 /
      data c3 / 0.0, 0.0, 0.0, 0.0, 0.0, -0.0033, -0.00468, -0.00707,
     1          -0.00909, -0.01000, -0.01462, -0.02061, -0.02734,
     2           -0.03558, -0.04619, -0.05442, -0.06939, -0.08000,
     3           -0.08554, -0.08946, -0.09251, -0.09500 /
      data c4 / -2.300, -2.450, -2.450, -2.450, -2.450, -2.420, -2.400,
     1          -2.380, -2.333, -2.300, -2.241, -2.164, -2.077, -1.971,
     2          -1.835, -1.729, -1.536, -1.400, -1.4, -1.4, -1.4, -1.4/

C Find the requested spectral period and corresponding coefficients
      nPer = 22

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c3T     = c3(1)
         c4T     = c4(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Geomatrix (1993) Vertical atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)

 1011 period1 = specT

      c2 = 1.1
      c5 = -0.3524
      c6 = 0.478
      c8 = 0.0953

c Set the maximum magnitude value at M=8.5. Magnitude larger than this value
c would result in lower ground motions for larger magnitude events.
      if (m .gt. 8.5) then
         m = 8.5
      endif

      lnY = c1T + c2*m + c3T*(8.5-m)**(2.5)
     1      + c4T*alog(d+exp(c5+c6*m)) + c8*ftype
      if ( specT .eq. 0.0) then
        sigma = 0.48
      else
        sigma = 0.57
      endif

c     Convert units to spectral acceleration in gal
      lnY = lnY + 6.89
      return
      end

c ------------------------------------------------------------
C *** Sadigh et al. (1997) Horizontal Rock *******************
c ------------------------------------------------------------

      subroutine Geomatrix93_H_rock ( m, d, ftype, lnY, sigma, specT,
     1                                attenName, period1,iflag )
c     This  subroutine calculates the LOG SA using the
c     Sadigh et al (1993) attenuation relation for horizontal Sa.
c     (Ave of horizontal comp)

      real ftype, period1
      real d,m,lnY,sigma, specT
      integer iflag
      character*80 attenName
      attenName = 'Sadigh et al. (1997), Horizontal, rock'

c     Set normal faulting to Stike-slip
      ftype1 = ftype
      if ( ftype .lt. 0. ) ftype1 = 0.

      if ( m .lt. 6.5 ) then
         call Geomatrix93_H_rock_mLT65 ( m, d, ftype1, lnY, sigma, specT,
     1       period1,iflag )
      else
         call Geomatrix93_H_rock_mGE65 ( m, d, ftype1, lnY, sigma, specT,
     1       period1,iflag )
      endif
      return
      end

c ------------------------------------------------------------

      subroutine Geomatrix93_H_rock_mLT65 ( m, d, ftype, lnY, sigma,
     1           specT, period1,iflag )
      real ftype, d, m, lnY, sigma, period1, specT
      integer nPer, count1, count2,iflag
      real c1T, c3T, c4T, c7T, sig0T

      parameter (MAXPER=22)
      real c1(MAXPER), c3(MAXPER), c4(MAXPER), c7(MAXPER),
     1     sig0(MAXPER), period(MAXPER)

      data period / 0.00, 0.05, 0.07, 0.09, 0.10, 0.12, 0.14, 0.15,
     1              0.17, 0.20, 0.24, 0.30, 0.40, 0.50, 0.75, 1.00,
     2              1.50, 2.00, 3.00, 4.00, 5.00, 7.50 /
      data c1 / -0.624, -0.090,  0.110,  0.212,  0.275,  0.348,  0.307,
     1           0.285,  0.239,  0.153,  0.060, -0.075, -0.298, -0.588,
     2          -1.208, -1.705, -2.407, -2.945, -3.700, -4.230, -4.714,
     3          -5.530 /
      data c3 / 0.000, 0.006, 0.006, 0.006, 0.006, 0.005, 0.004, 0.002,
     1          0.000, -0.004, -0.011, -0.017, -0.028, -0.040, -0.050,
     2         -0.055, -0.065, -0.070, -0.080, -0.100, -0.100, -0.110 /
      data c4 / -2.100, -2.128, -2.128, -2.140, -2.148, -2.162, -2.144,
     1          -2.130, -2.110, -2.080, -2.053, -2.028, -1.990, -1.945,
     2          -1.865, -1.800, -1.725, -1.670, -1.615, -1.570, -1.540,
     3          -1.510 /
      data c7 / 0.0, -0.082, -0.082, -0.052, -0.041, -0.014, 0., 0.,0.,
     1           0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0./
      data sig0 / 1.39, 1.39, 1.40, 1.40, 1.41, 1.41, 1.42, 1.42, 1.42,
     1            1.43, 1.44, 1.45, 1.48, 1.50, 1.52, 1.53, 1.53, 1.53,
     2            1.53, 1.53, 1.53, 1.53/

C Find the requested spectral period and corresponding coefficients
      nPer = 22

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c3T     = c3(1)
         c4T     = c4(1)
         c7T     = c7(1)
         sig0T   = sig0(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Geomatrix (1997) Horizontal Rock atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),sig0(count1),sig0(count2),
     +             specT,sig0T,iflag)

 1011 period1 = specT

      c2 = 1.0
      c5 = 1.29649
      c6 = 0.250

c Set the maximum magnitude value at M=8.5. Magnitude larger than this value
c would result in lower ground motions for larger magnitude events.
      if (m .gt. 8.5) then
         m = 8.5
      endif

      lnY = c1T + c2*m + c3T*(8.5-m)**(2.5)
     1      + c4T*alog(d+exp(c5+c6*m)) + c7T*alog(d+2)
     2      + 0.1823*ftype
      sigma = sig0T - 0.14*m

c     Convert units to spectral acceleration in gal
      lnY = lnY + 6.89
      return
      end

c ------------------------------------------------------------

      subroutine Geomatrix93_H_rock_mGE65 ( m, d, ftype, lnY, sigma,
     1           specT, period1,iflag )
      real ftype, d, m, lnY, sigma, period1, specT
      real c1T, c3T, c4T, c7T, sig0T, sig1T
      integer nper, count1, count2,iflag

      parameter (MAXPER=22)
      real c1(MAXPER), c3(MAXPER), c4(MAXPER), c7(MAXPER),
     1     sig0(MAXPER), sig1(MAXPER), period(MAXPER)

      data period / 0.00, 0.05, 0.07, 0.09, 0.10, 0.12, 0.14, 0.15,
     1              0.17, 0.20, 0.24, 0.30, 0.40, 0.50, 0.75, 1.00,
     2              1.50, 2.00, 3.00, 4.00, 5.00, 7.50 /
      data c1 / -1.274, -0.740, -0.540, -0.438, -0.375, -0.302, -0.343,
     1          -0.365, -0.411, -0.497, -0.590, -0.707, -0.948, -1.238,
     2          -1.858, -2.355, -3.057, -3.595, -4.350, -4.880, -5.364,
     3          -6.180 /
      data c3 / 0.000, 0.006, 0.006, 0.006, 0.006, 0.005, 0.004, 0.002,
     1          0.000, -0.004, -0.011, -0.017, -0.028, -0.040, -0.050,
     2         -0.055, -0.065, -0.070, -0.080, -0.100, -0.100, -0.110 /
      data c4 / -2.100, -2.128, -2.128, -2.140, -2.148, -2.162, -2.144,
     1          -2.130, -2.110, -2.080, -2.053, -2.028, -1.990, -1.945,
     2          -1.865, -1.800, -1.725, -1.670, -1.615, -1.570, -1.540,
     3          -1.510 /
      data c7 / 0.0, -0.082, -0.082, -0.052, -0.041, -0.014, 0., 0., 0.,
     1           0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0./
      data sig0 / 1.39, 1.39, 1.40, 1.40, 1.41, 1.41, 1.42, 1.42, 1.42,
     1            1.43, 1.44, 1.45, 1.48, 1.50, 1.52, 1.53, 1.53, 1.53,
     2            1.53, 1.53, 1.53, 1.53/
      data sig1 / 0.38, 0.38, 0.39, 0.39, 0.40, 0.40, 0.41, 0.41, 0.41,
     1            0.42, 0.43, 0.44, 0.47, 0.49, 0.51, 0.52, 0.52, 0.52,
     2            0.52, 0.52, 0.52, 0.52/

C Find the requested spectral period and corresponding coefficients
      nPer = 22

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c3T     = c3(1)
         c4T     = c4(1)
         c7T     = c7(1)
         sig0T   = sig0(1)
         sig1T   = sig1(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Geomatrix (1997) Horizontal Rock atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)

      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),sig0(count1),sig0(count2),
     +             specT,sig0T,iflag)
      call interp (period(count1),period(count2),sig1(count1),sig1(count2),
     +             specT,sig1T,iflag)

 1011 period1 = specT

      c2 = 1.1
      c5 = -0.48451
      c6 = 0.524

c Set the maximum magnitude value at M=8.5. Magnitude larger than this value
c would result in lower ground motions for larger magnitude events.
      if (m .gt. 8.5) then
         m = 8.5
      endif

      lnY = c1T + c2*m + c3T*(8.5-m)**(2.5)
     1      + c4T*alog(d+exp(c5+c6*m)) + c7T*alog(d+2)
     2      + 0.1823*ftype
      if ( m .lt. 7.25 ) then
        sigma = sig0T - 0.14*m
      else
        sigma = sig1T
      endif

c     Convert units to spectral acceleration in gal
      lnY = lnY + 6.89
      return
      end

c ------------------------------------------------------------
C *** Sadigh et al. (1997) Horizontal Soil *******************
c ------------------------------------------------------------

      subroutine Sadigh97_H_soil ( m, dist, ftype, lnY, sigma, specT,
     1           attenName, period1,iflag )
      real ftype, dist, m, lnY, sigma
      real specT, c6ssT, c6rvT, c7T, sig0T
      integer iflag, count1, count2
      character*80 attenName

      parameter (MAXPER=13)
      real c7(MAXPER),
     1     sig0(MAXPER), period(MAXPER), period1 ,
     2     c6ss(MAXPER), c6rv(MAXPER)

      data period / 0.00, 0.075, 0.1, 0.2, 0.3, 0.4, 0.5, 0.75,
     1        1.0, 1.5, 2.0, 3.0, 4.0 /
      data c6ss / 0., 0.4572, 0.6395, 0.9187, 0.9547, 0.9251,
     1     0.8494, 0.7010, 0.5665, 0.3235, 0.1001, -0.2801, -0.6274 /
      data c6rv / 0.0, 0.4572, 0.6395, 0.9187, 0.9547, 0.9005,
     1     0.8285, 0.6802, 0.5075, 0.2215, -0.0526, -0.4905, -0.8907 /
      data c7 / 0., 0.005, 0.005, -0.004, -0.014, -0.024, -0.033,
     1     -0.051, -0.065, -0.090, -0.108, -0.139, -0.160 /

      data sig0 / 1.52, 1.54, 1.54, 1.565, 1.58, 1.595, 1.61, 1.635,
     1      1.66, 1.69, 1.70, 1.71, 1.71/

      attenName = 'Sadigh et al. (1997), soil'

C Find the requested spectral period and corresponding coefficients
      nPer = 13

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c6ssT   = c6ss(1)
         c6rvT   = c6rv(1)
         c7T     = c7(1)
         sig0T   = sig0(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Geomatrix (1997) Horizontal Soil atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c6ss(count1),c6ss(count2),
     +             specT,c6ssT,iflag)
      call interp (period(count1),period(count2),c6rv(count1),c6rv(count2),
     +             specT,c6rvT,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),sig0(count1),sig0(count2),
     +             specT,sig0T,iflag)

 1011 period1 = specT

c     Set normal faulting to Stike-slip
      ftype1 = ftype
      if ( ftype .lt. 0. ) ftype1 = 0.

      c1ss = -2.17
      c1rv = -1.92
      c2 = 1.0
      c3 = 1.70
      if ( m .le. 6.5 ) then
         c4 = 2.1863
         c5 = 0.32
      else
         c4 = 0.3825
         c5 = 0.5882
      endif

c Set the maximum magnitude value at M=8.5. Magnitude larger than this value
c would result in lower ground motions for larger magnitude events.
      if (m .gt. 8.5) then
         m = 8.5
      endif

      lnY = c1ss + c2*m + c7T*(8.5-m)**(2.5)
     1      - c3*alog(dist+c4*exp(c5*m)) + c6ssT
     2      + (c1rv-c1ss)*ftype1 + (c6rvT-c6ssT)*ftype1

c     Set sigma
      if ( m .le. 7.0 ) then
         sigma = sig0T - 0.16*m
      else
         sigma = sig0T - 0.16*7.0
      endif

c   write(*,'( 10f10.4)')m,dist,lnY,c1ss,c2,c3,c4,c5,
C    +                          alog(dist+c4*exp(c5*m))

c     Convert units to spectral acceleration in gal
      lnY = lnY + 6.89
      return
      end

c -------------------------------------------------------------------
C *** Spudich et al. (1997) Horizontal for Extensional Regimes ******
c -------------------------------------------------------------------
      subroutine Spudich96 ( m, dist, lnY, sigma, iSite, specT,
     1                   attenName, period1,iflag )
c     This  subroutine calculates the LOG SA for the ave horizontal
c     component using the Spudich (1996) attenuation relation
c     Sigma is sqrt( sigma1**2+sigma2**2) log10 units
c     iSite = 0 for rock, 1 for soil

      parameter (MAXPER=11)
      real dist, m, lnY, sigma, log10Y
      real period(MAXPER), b2(MAXPER), b3(MAXPER),
     1     b5(MAXPER), b1(MAXPER),
     1     b6(MAXPER), h(MAXPER), sigma0(MAXPER)
      real specT, b1T, b2T, b3T, b5T, b6T, hT, sigma0T
      integer nper, count1, count2,iflag
      character*80 attenName

      data period / 0.00, 0.1, 0.15, 0.20,
     1              0.30, 0.40, 0.50, 0.75, 1.00, 1.5, 2. /

      data b1 / 0.156, 1.772, 1.964, 2.023, 2.030, 2.001, 1.971,
     1          1.922, 1.912, 1.964, 2.068 /
      data b2 / 0.229, 0.327, 0.305, 0.309, 0.334, 0.361, 0.384,
     1          0.425, 0.450, 0.471, 0.471 /
      data b3 / 0.0,  -0.098, -0.099, -0.090, -0.070, -0.052, -0.039,
     1         -0.020, -0.014, -0.019, -0.037/
      data b5 / -0.946, -1.051, -1.009, -0.972, -0.915, -0.879, -0.857,
     1          -0.833, -0.837, -0.879, -0.940/
      data b6 / 0.077, 0.079, 0.127, 0.154, 0.183, 0.198, 0.206, 0.214,
     1          0.214, 0.209, 0.200 /
      data h  / 5.57, 6.27, 7.23, 7.02, 5.94, 4.91, 4.13, 3.07, 2.90,
     1          3.92, 5.85 /
      data sigma0 / 0.216, 0.268, 0.277, 0.286, 0.301, 0.313, 0.323,
     1          0.345, 0.361, 0.387,0.407 /
      twoPi = 2. * 3.1415926

C Find the requested spectral period and corresponding coefficients
      nPer = 11

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         b1T     = b1(1)
         b2T     = b2(1)
         b3T     = b3(1)
         b5T     = b5(1)
         b6T     = b6(1)
         hT      = h(1)
         sigma0T = sigma0(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Spudich et al. (1997) Horizontal atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),b1(count1),b1(count2),
     +             specT,b1T,iflag)
      call interp (period(count1),period(count2),b2(count1),b2(count2),
     +             specT,b2T,iflag)
      call interp (period(count1),period(count2),b3(count1),b3(count2),
     +             specT,b3T,iflag)
      call interp (period(count1),period(count2),b5(count1),b5(count2),
     +             specT,b5T,iflag)
      call interp (period(count1),period(count2),b6(count1),b6(count2),
     +             specT,b6T,iflag)
      call interp (period(count1),period(count2),h(count1),h(count2),
     +             specT,hT,iflag)
      call interp (period(count1),period(count2),sigma0(count1),sigma0(count2),
     +             specT,sigma0T,iflag)

 1011 period1 = specT

c     Set atten name
      if ( iSite .eq. 0 ) then
        attenName = 'Spudich et al. (1996), Rock'
      elseif ( iSite .eq. 1 ) then
        attenName = 'Spudich et al. (1996), Soil'
      else
C        write (*,*)')
C        write (*,*)') iSite
        return
      endif

      r = sqrt( dist**2 + hT**2 )
      log10Y = b1T
     1         + b2T*(m-6) + b3T*(m-6)**2
     1         + b5T*alog10(r)
     1         + b6T*iSite

c     Convert units spectral acceleration in gal
      if ( specT .eq. 0.0 ) then
        lnY = log10Y * alog(10.) + 6.89
      else
        lnY = log10Y * alog(10.) + alog( twoPi / specT )
      endif

c     Set standard error
      sigma = sigma0T * alog(10.)

      return
      end

c -------------------------------------------------------------------
C *** Youngs et al. (1993) Horizontal Rock for Subduction Zones *****
c -------------------------------------------------------------------

      subroutine youngs93 ( mag, rupDist, lnY, sigma, attenName, period,
     1           specT, flag, iflag )

      real mag, rupDist, lnY, sigma, period
      character*80 attenName
      real flag
      real c3(10), c6(10), c7(10), period1(10)
      real specT, c3T, c6T, c7T
      integer nper, count1, count2,iflag
      data period1 / 0.0, 0.067, 0.1, 0.2, 0.3, 0.4, 0.5, 1.0, 2.0,
     1               3.0 /
      data c3 /2.5526, 2.72782, 2.654613, 2.527905, 2.453786, 2.4011998,
     1         2.360407, 2.2337, 2.10699, 2.031874 /
      data c6 / 0, 1.300967, 1.18809, 0.722043, 0.245977, -0.1147,
     1         -0.39985, -1.7364, -3.32764, -4.51081 /
      data c7 / 0, -0.00018, -0.0011, -0.0027, -0.00363, -0.00429,
     1           -0.00481, -0.0064, -0.00799, -0.00893 /

      attenName ='Youngs (1993) subduction - rock'

C Find the requested spectral period and corresponding coefficients
      nPer = 10

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period  = period1(1)
         c3T     = c3(1)
         c6T     = c6(1)
         c7T     = c7(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period1(i) .and. specT .le. period1(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Youngs et al. (1993) Subduction atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period1(count1),period1(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period1(count1),period1(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period1(count1),period1(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)

 1011 period = specT

c     Set c1 (flag=0 for mega thrust at 20 km)
c            (flag=1 for intraslab at 55 km)
      if ( flag .eq. 0. ) then
        c1 = 0.3633
      elseif ( flag .eq. 1. ) then
        c1 = 0.9908
      else
C        write (*,*)') flag
        return
      endif
      c2 = 1.4142
      c4 = 1.7818
      c5 = 0.554
      c8 = 3
      c9 = 10.
      c10 = 1.45
      c11 = -0.1

      lnY = c1 + c2*mag - c3T*alog(rupDist+c4*exp(c5*mag))
     1       + c6T + c7T*(c9-mag)**(c8)

      if ( mag .lt. 8.0 ) then
        sigma = c10 + c11*mag
      else
        sigma = c10 + c11*8.0
      endif

c     Convert from g to gal
      lnY = lnY + 6.89

      return
      end

c -------------------------------------------------------------------
C *** Youngs et al. (1997) Horizontal Rock for Subduction Zones *****
c -------------------------------------------------------------------

      subroutine youngs97_rock ( mag, rupDist, lnY, sigma,
     1   attenName, period, specT, ftype, depth,iflag )

c     Youngs et al (1997) -- subduction (Rock)

      real mag, rupDist, lnY, sigma, period
      character*80 attenName
      real ftype
      real c1(12), c2(12), c3(12), c4(12), period1(12)
      real specT, c1T, c2T, c3T, c4T
      integer nper, count1, count2,iflag

      data period1 / 0.0, 0.075, 0.1, 0.2, 0.3, 0.4, 0.5, 0.75,
     1               1.0, 1.5, 2.0, 3.0 /
      data c1 / 0.0, 1.275, 1.188, 0.722, 0.246, -0.115, -0.400,
     1          -1.149, -1.736, -2.634, -3.328, -4.511 /
      data c2 / 0.0, 0.0, -.0011, -.0027, -.0036, -.0043, -.0048,
     1          -.0057, -.0064, -.0073, -.0080, -.0089 /
      data c3 / -2.552, -2.707, -2.655, -2.528, -2.454, -2.401,
     1          -2.360, -2.286, -2.234, -2.160, -2.107, -2.033 /
      data c4 / 1.45, 1.45, 1.45, 1.45, 1.45, 1.45, 1.45, 1.45,
     1          1.45, 1.50, 1.55, 1.65 /

C Find the requested spectral period and corresponding coefficients
      nPer = 12

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period  = period1(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c3T     = c3(1)
         c4T     = c4(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period1(i) .and. specT .le. period1(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Youngs et al. (1997) Rock Subduction atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period1(count1),period1(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period1(count1),period1(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period1(count1),period1(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period1(count1),period1(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)

 1011 period = specT

      c5 = -0.1
      attenName ='Youngs (1997) Rock, Subduction'
      period = specT

      lnY = 0.2418 + 1.414*mag + c1T + c2T*(10.-mag)**3 +
     1      c3T*alog(rupDist+1.7818*exp(0.554*mag))
     2      + 0.00607*depth + 0.3846*ftype

      if ( mag .lt. 8.0 ) then
        sigma = c4T + c5*mag
      else
        sigma = c4T + c5*8.0
      endif

c     Convert from g to gal
      lnY = lnY + 6.89

      return
      end

c -------------------------------------------------------------------
C *** Youngs et al. (1997) Horizontal Soil for Subduction Zones *****
c -------------------------------------------------------------------

      subroutine youngs97_soil ( mag, rupDist, lnY, sigma,
     1           attenName, period, specT, ftype, depth,iflag )

c     Youngs et al (1997) -- subduction (Soil)

      real mag, rupDist, lnY, sigma, period
      character*80 attenName
      real ftype,specT, c1T, c2T,c3T, c4T
      integer iflag, count1, count2, nper
      real c1(13), c2(13), c3(13), c4(13), period1(13)

      data period1 / 0.0, 0.075, 0.1, 0.2, 0.3, 0.4, 0.5, 0.75,
     1               1.0, 1.5, 2.0, 3.0, 4.0 /
      data c1 / 0.0, 2.400, 2.516, 1.549, 0.793, 0.144, -0.438,
     1         -1.704, -2.870, -5.101, -6.433, -6.672, -7.618 /
      data c2 / 0.0, -0.0019, -0.0019, -0.0019, -.0020, -.0020,
     1   -.0035, -.0048, -.0066, -.0114, -.0164, -.0221, -.0235 /
      data c3 / -2.329, -2.697, -2.697, -2.464, -2.327, -2.230,
     1   -2.140, -1.952, -1.785, -1.470, -1.290, -1.347, -1.272 /
      data c4 / 1.45, 1.45, 1.45, 1.45, 1.45, 1.45, 1.45, 1.45,
     1          1.45, 1.50, 1.55, 1.65, 1.65 /

C Find the requested spectral period and corresponding coefficients
      nPer = 13

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period  = period1(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c3T     = c3(1)
         c4T     = c4(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period1(i) .and. specT .le. period1(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Youngs et al. (1997) Soil Subduction atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period1(count1),period1(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period1(count1),period1(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period1(count1),period1(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period1(count1),period1(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)

 1011 period = specT

      c5 = -0.1
      attenName ='Youngs (1997) Soil, Subduction'

      lnY = -0.6687 + 1.438*mag + c1T + c2T*(10.-mag)**3 +
     1      c3T*alog(rupDist+1.097*exp(0.617*mag))
     2      + 0.00648*depth + 0.3643*ftype

      if ( mag .lt. 8.0 ) then
        sigma = c4T + c5*mag
      else
        sigma = c4T + c5*8.0
      endif

c     Convert from g to gal
      lnY = lnY + 6.89

      return
      end

c ------------------------------------------------------------------
C *** Atkinson and Boore (2003) Horizontal for Subduction Zones ****
c ------------------------------------------------------------------

      subroutine AB03 ( mag, rupdist, lnY, sigma, specT,
     1  attenName, period,iflag, ftype, depth, Sc, Sd, Se)

c     Atkinson and Boore (2003) Horizontal Subduction
C     This relationship has the following constraints:
c          Interface Events -->  M=8.5 for M>8.5
c          Interslab Events -->  M=8.0 for M>8.0
c          Hypocentral depth --> h=100 or h>100
C     Site Classses are as follows:
c          NEHRP B --> Sc=0, Sd=0, Se=0   Vs>760m/s
c          NEHRP C --> Sc=1, Sd=0, Se=0   360<Vs<760
c          NEHRP D --> Sc=0, Sd=1, Se=0   180<Vs<360
c          NEHRP E --> Sc=0, Sd=0, Se=1   Vs<180

      real mag, rupDist, lnY, sigma, period, mag1, depth1
      character*80 attenName
      real ftype, depth, Sc, Sd, Se
      real c1(8), c2(8), c3(8), c4(8), c5(8), c6(8), c7(8)
      real c1s(8), c2s(8), c3s(8), c4s(8), c5s(8), c6s(8), c7s(8)
      real period1(8), sig(8), sigs(8), r, delta, PGArx, sl
      real specT, c1T, c2T, c3T, c4T, c5T, c6T, c7T
      real c1sT, c2sT, c3sT, c4sT, c5sT, c6sT, c7sT
      integer nper, count1, count2,iflag

      data period1 / 0.0, 0.04, 0.1, 0.2, 0.4, 1.0, 2.0, 3.0 /
      data c1 /  2.991, 2.8753, 2.7789, 2.6638, 2.5249, 2.1442,
     1          2.1907, 2.301 /
      data c2 / 0.03525, 0.07052, 0.09841, 0.12386, 0.1477,  0.1345,
     1          0.07148, 0.02237 /
      data c3 / 0.00759, 0.01004, 0.00974, 0.00884, 0.00728, 0.00521,
     1          0.00224, 0.00012 /
      data c4 / -0.00206, -0.00278, -0.00287, -0.00280, -0.00235,
     1          -0.00110,  0.00000,  0.00000 /
      data c5 / 0.19, 0.15, 0.15, 0.15, 0.13, 0.10, 0.10, 0.10 /
      data c6 / 0.24, 0.20, 0.23, 0.27, 0.37, 0.30, 0.25, 0.25 /
      data c7 / 0.29, 0.20, 0.20, 0.25, 0.38, 0.55, 0.40, 0.36 /
      data sig / 0.23, 0.26, 0.27, 0.28, 0.29, 0.34, 0.34, 0.36 /
      data c1s / -0.04713,  0.50697,  0.43928, 0.51589, 0.005445,
     1           -1.02133, -2.39234, -3.70012 /
      data c2s / 0.6909, 0.63273, 0.66675, 0.69186, 0.7727, 0.8789,
     1           0.9964, 1.1169 /
      data c3s / 0.01130, 0.01275, 0.01080, 0.00572, 0.00173, 0.00130,
     1          0.00364, 0.00615 /
      data c4s / -0.00202, -0.00234, -0.00219, -0.00192, -0.00178,
     1          -0.00173,  -0.00118, -0.00045 /
      data c5s / 0.19, 0.15, 0.15, 0.15, 0.13, 0.10, 0.10, 0.10 /
      data c6s / 0.24, 0.20, 0.23, 0.27, 0.37, 0.30, 0.25, 0.25 /
      data c7s / 0.29, 0.20, 0.20, 0.25, 0.38, 0.55, 0.40, 0.36 /
      data sigs / 0.27, 0.25, 0.28, 0.28, 0.28, 0.29, 0.30, 0.30 /

C Find the requested spectral period and corresponding coefficients
      nPer = 8

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period  = period1(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c3T     = c3(1)
         c4T     = c4(1)
         c5T     = c5(1)
         c6T     = c6(1)
         c7T     = c7(1)
         sigT    = sig(1)
         c1sT     = c1s(1)
         c2sT     = c2s(1)
         c3sT     = c3s(1)
         c4sT     = c4s(1)
         c5sT     = c5s(1)
         c6sT     = c6s(1)
         c7sT     = c7s(1)
         sigsT    = sigs(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period1(i) .and. specT .le. period1(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Atkinson and Boore (2003) Subduction atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period1(count1),period1(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period1(count1),period1(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period1(count1),period1(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period1(count1),period1(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period1(count1),period1(count2),c5(count1),c5(count2),
     +             specT,c5T,iflag)
      call interp (period1(count1),period1(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period1(count1),period1(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period1(count1),period1(count2),sig(count1),sig(count2),
     +             specT,sigT,iflag)

      call interp (period1(count1),period1(count2),c1s(count1),c1s(count2),
     +             specT,c1sT,iflag)
      call interp (period1(count1),period1(count2),c2s(count1),c2s(count2),
     +             specT,c2sT,iflag)
      call interp (period1(count1),period1(count2),c3s(count1),c3s(count2),
     +             specT,c3sT,iflag)
      call interp (period1(count1),period1(count2),c4s(count1),c4s(count2),
     +             specT,c4sT,iflag)
      call interp (period1(count1),period1(count2),c5s(count1),c5s(count2),
     +             specT,c5sT,iflag)
      call interp (period1(count1),period1(count2),c6s(count1),c6s(count2),
     +             specT,c6sT,iflag)
      call interp (period1(count1),period1(count2),c7s(count1),c7s(count2),
     +             specT,c7sT,iflag)
      call interp (period1(count1),period1(count2),sigs(count1),sigs(count2),
     +             specT,sigsT,iflag)

 1011 period = specT

c     First check the upper magnitude limit
      if (ftype .eq. 0) then
         if (mag .gt. 8.5) then
             mag1 = 8.5
         else
             mag1 = mag
         endif
      elseif (ftype .eq. 1) then
         if (mag .gt. 8.0) then
             mag1 = 8.0
         else
             mag1 = mag
         endif
      endif

C     Now check for the maximum depth
      if (depth .gt. 100.0) then
          depth1 = 100.0
      else
          depth1 = depth
      endif

C    Set the attenuation model name based on site class
      if (Se .eq. 1.0) then
         attenName ='Atkinson and Boore (2003) Subduction, NEHRP-E'
      elseif (Sd .eq. 1.0) then
         attenName ='Atkinson and Boore (2003) Subduction, NEHRP-D'
      elseif (Sc .eq. 1.0) then
         attenName ='Atkinson and Boore (2003) Subduction, NEHRP-C'
      elseif (Sc .eq. 0.0 .and. Sd .eq. 0.0 .and. Se .eq. 0.0) then
         attenName ='Atkinson and Boore (2003) Subduction, NEHRP-B'
      endif

      period = specT
      delta = 0.00724*10.0**(0.507*mag1)
      r = sqrt(rupdist*rupdist + delta*delta)

C     Compute the ground motion for Subduction Interface Events (ftype=0)
      if (ftype .eq. 0.0) then
         g = 10.0**(1.2-0.18*mag1)
         pgarx = c1(1) + c2(1)*mag1 + c3(1)*depth1 + c4(1)*r -g*alog10(r)
         pgarx = 10.0**(pgarx)
c     Now set Sl function based on PGArx and period
         if (specT .ge. 1.0) then
            sl = 1.0
         elseif (specT .lt. 1.0 .and. specT .gt. 0.5) then
            if (pgarx .le. 100.0) then
               sl = 1.0
            elseif (pgarx .gt. 100.0 .and. pgarx .lt. 500.0) then
               sl = 1.0 - ((1./specT) - 1.)*(pgarx-100.)/400.
            elseif (pgarx .ge. 500.0) then
               sl = 1.0 - ((1./specT) - 1.)
            endif
         elseif (specT .le. 0.5) then
            if (pgarx .le. 100.0) then
               sl = 1.0
            elseif (pgarx .gt. 100.0 .and. pgarx .lt. 500.0) then
               sl = 1.0 - (pgarx-100.)/400.
            elseif (pgarx .ge. 500.0) then
                sl = 0.0
            endif
         endif

         lnY = c1T + c2T*mag1 + c3T*depth1 + c4T*r - g*alog10(r) +
     1         c5T*sl*Sc + c6T*sl*Sd + c7T*sl*Se
         sigma = sigT

C     Compute the ground motion for Subduction Intraslab Events (ftype=1)
      elseif (ftype .eq. 1.0) then
         g = 10.0**(0.301-0.01*mag1)
         pgarx = c1s(1) + c2s(1)*mag1 + c3s(1)*depth1 + c4s(1)*r -g*alog10(r)
         pgarx = 10.0**(pgarx)
c     Now set Sl function based on PGArx and period
         if (specT .ge. 1.0) then
            sl = 1.0
         elseif (specT .lt. 1.0 .and. specT .gt. 0.5) then
            if (pgarx .le. 100.0) then
               sl = 1.0
            elseif (pgarx .gt. 100.0 .and. pgarx .lt. 500.0) then
               sl = 1.0 - ((1./specT) - 1.)*(pgarx-100.)/400.
            elseif (pgarx .ge. 500.0) then
               sl = 1.0 - ((1./specT) - 1.)
            endif
         elseif (specT .le. 0.5) then
            if (pgarx .le. 100.0) then
               sl = 1.0
            elseif (pgarx .gt. 100.0 .and. pgarx .lt. 500.0) then
               sl = 1.0 - (pgarx-100.)/400.
            elseif (pgarx .ge. 500.0) then
                sl = 0.0
            endif
         endif

         lnY = c1sT + c2sT*mag1 + c3sT*depth1 + c4sT*r - g*alog10(r) +
     1         c5sT*sl*Sc + c6sT*sl*Sd + c7sT*sl*Se
         sigma = sigsT

      else
C         write (*,*) 'Wrong Ftype for Atkinson and Boore (2003)'
C         write (*,*) 'attenuation relationship. Check fault file.'
         return
      endif

C     Now convert to Ln Units in gals.
      lnY = alog(10.0)*lnY
      sigma = alog(10.0)*sigma
      return
      end

c --------------------------------------------------------------------------
C *** Atkinson and Boore (2003) Horizontal for Cascadia Subduction Zone ****
c --------------------------------------------------------------------------

      subroutine AB03Cas ( mag, rupdist, lnY, sigma, specT,
     1  attenName, period,iflag, ftype, depth, Sc, Sd, Se)

c     Atkinson and Boore (2003) Horizontal Subduction
C     This relationship has the following constraints:
c          Interface Events -->  M=8.5 for M>8.5
c          Interslab Events -->  M=8.0 for M>8.0
c          Hypocentral depth --> h=100 or h>100
C     Site Classses are as follows:
c          NEHRP B --> Sc=0, Sd=0, Se=0   Vs>760m/s
c          NEHRP C --> Sc=1, Sd=0, Se=0   360<Vs<760
c          NEHRP D --> Sc=0, Sd=1, Se=0   180<Vs<360
c          NEHRP E --> Sc=0, Sd=0, Se=1   Vs<180
C     This version is specifically for the Cascadia Subduction Source Zone

      real mag, rupDist, lnY, sigma, period, mag1, depth1
      character*80 attenName
      real ftype, depth, Sc, Sd, Se
      real c1(8), c2(8), c3(8), c4(8), c5(8), c6(8), c7(8)
      real c1s(8), c2s(8), c3s(8), c4s(8), c5s(8), c6s(8), c7s(8)
      real period1(8), sig(8), sigs(8), r, delta, PGArx, sl
      real specT, c1T, c2T, c3T, c4T, c5T, c6T, c7T
      real c1sT, c2sT, c3sT, c4sT, c5sT, c6sT, c7sT
      integer nper, count1, count2,iflag

      data period1 / 0.0, 0.04, 0.1, 0.2, 0.4, 1.0, 2.0, 3.0 /
      data c1 /  2.79, 2.60, 2.50, 2.54, 2.50, 2.18,
     1           2.33, 2.36 /
      data c2 / 0.03525, 0.07052, 0.09841, 0.12386, 0.1477,  0.1345,
     1          0.07148, 0.02237 /
      data c3 / 0.00759, 0.01004, 0.00974, 0.00884, 0.00728, 0.00521,
     1          0.00224, 0.00012 /
      data c4 / -0.00206, -0.00278, -0.00287, -0.00280, -0.00235,
     1          -0.00110,  0.00000,  0.00000 /
      data c5 / 0.19, 0.15, 0.15, 0.15, 0.13, 0.10, 0.10, 0.10 /
      data c6 / 0.24, 0.20, 0.23, 0.27, 0.37, 0.30, 0.25, 0.25 /
      data c7 / 0.29, 0.20, 0.20, 0.25, 0.38, 0.55, 0.40, 0.36 /
      data sig / 0.23, 0.26, 0.27, 0.28, 0.29, 0.34, 0.34, 0.36 /

      data c1s / -0.25,  0.23,  0.16, 0.40, -0.01,
     1           -0.98, -2.25, -3.64 /
      data c2s / 0.6909, 0.63273, 0.66675, 0.69186, 0.7727, 0.8789,
     1           0.9964, 1.1169 /
      data c3s / 0.01130, 0.01275, 0.01080, 0.00572, 0.00173, 0.00130,
     1          0.00364, 0.00615 /
      data c4s / -0.00202, -0.00234, -0.00219, -0.00192, -0.00178,
     1          -0.00173,  -0.00118, -0.00045 /
      data c5s / 0.19, 0.15, 0.15, 0.15, 0.13, 0.10, 0.10, 0.10 /
      data c6s / 0.24, 0.20, 0.23, 0.27, 0.37, 0.30, 0.25, 0.25 /
      data c7s / 0.29, 0.20, 0.20, 0.25, 0.38, 0.55, 0.40, 0.36 /
      data sigs / 0.27, 0.25, 0.28, 0.28, 0.28, 0.29, 0.30, 0.30 /

C Find the requested spectral period and corresponding coefficients
      nPer = 8

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period  = period1(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c3T     = c3(1)
         c4T     = c4(1)
         c5T     = c5(1)
         c6T     = c6(1)
         c7T     = c7(1)
         sigT    = sig(1)
         c1sT     = c1s(1)
         c2sT     = c2s(1)
         c3sT     = c3s(1)
         c4sT     = c4s(1)
         c5sT     = c5s(1)
         c6sT     = c6s(1)
         c7sT     = c7s(1)
         sigsT    = sigs(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period1(i) .and. specT .le. period1(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Atkinson and Boore (2003) Cascadia'
C      write (*,*) 'Subduction attenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period1(count1),period1(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period1(count1),period1(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period1(count1),period1(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period1(count1),period1(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period1(count1),period1(count2),c5(count1),c5(count2),
     +             specT,c5T,iflag)
      call interp (period1(count1),period1(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period1(count1),period1(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period1(count1),period1(count2),sig(count1),sig(count2),
     +             specT,sigT,iflag)

      call interp (period1(count1),period1(count2),c1s(count1),c1s(count2),
     +             specT,c1sT,iflag)
      call interp (period1(count1),period1(count2),c2s(count1),c2s(count2),
     +             specT,c2sT,iflag)
      call interp (period1(count1),period1(count2),c3s(count1),c3s(count2),
     +             specT,c3sT,iflag)
      call interp (period1(count1),period1(count2),c4s(count1),c4s(count2),
     +             specT,c4sT,iflag)
      call interp (period1(count1),period1(count2),c5s(count1),c5s(count2),
     +             specT,c5sT,iflag)
      call interp (period1(count1),period1(count2),c6s(count1),c6s(count2),
     +             specT,c6sT,iflag)
      call interp (period1(count1),period1(count2),c7s(count1),c7s(count2),
     +             specT,c7sT,iflag)
      call interp (period1(count1),period1(count2),sigs(count1),sigs(count2),
     +             specT,sigsT,iflag)

 1011 period = specT

c     First check the upper magnitude limit
      if (ftype .eq. 0) then
         if (mag .gt. 8.5) then
             mag1 = 8.5
         else
             mag1 = mag
         endif
      elseif (ftype .eq. 1) then
         if (mag .gt. 8.0) then
             mag1 = 8.0
         else
             mag1 = mag
         endif
      endif

C     Now check for the maximum depth
      if (depth .gt. 100.0) then
          depth1 = 100.0
      else
          depth1 = depth
      endif

C    Set the attenuation model name based on site class
      if (Se .eq. 1.0) then
         attenName ='Atkinson and Boore (2003) Cascadia-Sub, NEHRP-E'
      elseif (Sd .eq. 1.0) then
         attenName ='Atkinson and Boore (2003) Cascadia-Sub, NEHRP-D'
      elseif (Sc .eq. 1.0) then
         attenName ='Atkinson and Boore (2003) Cascadia-Sub, NEHRP-C'
      elseif (Sc .eq. 0.0 .and. Sd .eq. 0.0 .and. Se .eq. 0.0) then
         attenName ='Atkinson and Boore (2003) Cascadia-Sub, NEHRP-B'
      endif

      period = specT
      delta = 0.00724*10.0**(0.507*mag1)
      r = sqrt(rupdist*rupdist + delta*delta)

C     Compute the ground motion for Subduction Interface Events (ftype=0)
      if (ftype .eq. 0.0) then
         g = 10.0**(1.2-0.18*mag1)
         pgarx = c1(1) + c2(1)*mag1 + c3(1)*depth1 + c4(1)*r -g*alog10(r)
         pgarx = 10.0**(pgarx)
c     Now set Sl function based on PGArx and period
         if (specT .ge. 1.0) then
            sl = 1.0
         elseif (specT .lt. 1.0 .and. specT .gt. 0.5) then
            if (pgarx .le. 100.0) then
               sl = 1.0
            elseif (pgarx .gt. 100.0 .and. pgarx .lt. 500.0) then
               sl = 1.0 - ((1./specT) - 1.)*(pgarx-100.)/400.
            elseif (pgarx .ge. 500.0) then
               sl = 1.0 - ((1./specT) - 1.)
            endif
         elseif (specT .le. 0.5) then
            if (pgarx .le. 100.0) then
               sl = 1.0
            elseif (pgarx .gt. 100.0 .and. pgarx .lt. 500.0) then
               sl = 1.0 - (pgarx-100.)/400.
            elseif (pgarx .ge. 500.0) then
                sl = 0.0
            endif
         endif

         lnY = c1T + c2T*mag1 + c3T*depth1 + c4T*r - g*alog10(r) +
     1         c5T*sl*Sc + c6T*sl*Sd + c7T*sl*Se
         sigma = sigT

C     Compute the ground motion for Subduction Intraslab Events (ftype=1)
      elseif (ftype .eq. 1.0) then
         g = 10.0**(0.301-0.01*mag1)
         pgarx = c1s(1) + c2s(1)*mag1 + c3s(1)*depth1 + c4s(1)*r -g*alog10(r)
         pgarx = 10.0**(pgarx)
c     Now set Sl function based on PGArx and period
         if (specT .ge. 1.0) then
            sl = 1.0
         elseif (specT .lt. 1.0 .and. specT .gt. 0.5) then
            if (pgarx .le. 100.0) then
               sl = 1.0
            elseif (pgarx .gt. 100.0 .and. pgarx .lt. 500.0) then
               sl = 1.0 - ((1./specT) - 1.)*(pgarx-100.)/400.
            elseif (pgarx .ge. 500.0) then
               sl = 1.0 - ((1./specT) - 1.)
            endif
         elseif (specT .le. 0.5) then
            if (pgarx .le. 100.0) then
               sl = 1.0
            elseif (pgarx .gt. 100.0 .and. pgarx .lt. 500.0) then
               sl = 1.0 - (pgarx-100.)/400.
            elseif (pgarx .ge. 500.0) then
                sl = 0.0
            endif
         endif

         lnY = c1sT + c2sT*mag1 + c3sT*depth1 + c4sT*r - g*alog10(r) +
     1         c5sT*sl*Sc + c6sT*sl*Sd + c7sT*sl*Se
         sigma = sigsT

      else
C         write (*,*) 'Wrong Ftype for Atkinson and Boore (2003)'
C         write (*,*) 'attenuation relationship. Check fault file.'
         return
      endif

C     Now convert to Ln Units in gals.
      lnY = alog(10.0)*lnY
      sigma = alog(10.0)*sigma

      return
      end

c --------------------------------------------------------------------------
C *** Atkinson and Boore (2003) Horizontal for Japanese Subduction Zone ****
c --------------------------------------------------------------------------

      subroutine AB03Jap ( mag, rupdist, lnY, sigma, specT,
     1  attenName, period,iflag, ftype, depth, Sc, Sd, Se)

c     Atkinson and Boore (2003) Horizontal Subduction
C     This relationship has the following constraints:
c          Interface Events -->  M=8.5 for M>8.5
c          Interslab Events -->  M=8.0 for M>8.0
c          Hypocentral depth --> h=100 or h>100
C     Site Classses are as follows:
c          NEHRP B --> Sc=0, Sd=0, Se=0   Vs>760m/s
c          NEHRP C --> Sc=1, Sd=0, Se=0   360<Vs<760
c          NEHRP D --> Sc=0, Sd=1, Se=0   180<Vs<360
c          NEHRP E --> Sc=0, Sd=0, Se=1   Vs<180
C     This version is specifically for the Japanese Subduction Source Zone

      real mag, rupDist, lnY, sigma, period, mag1, depth1
      character*80 attenName
      real ftype, depth, Sc, Sd, Se
      real c1(8), c2(8), c3(8), c4(8), c5(8), c6(8), c7(8)
      real c1s(8), c2s(8), c3s(8), c4s(8), c5s(8), c6s(8), c7s(8)
      real period1(8), sig(8), sigs(8), r, delta, PGArx, sl
      real specT, c1T, c2T, c3T, c4T, c5T, c6T, c7T
      real c1sT, c2sT, c3sT, c4sT, c5sT, c6sT, c7sT
      integer nper, count1, count2,iflag

      data period1 / 0.0, 0.04, 0.1, 0.2, 0.4, 1.0, 2.0, 3.0 /
      data c1 /  3.14, 3.05, 2.95, 2.84, 2.58, 2.18,
     1           2.14, 2.27 /
      data c2 / 0.03525, 0.07052, 0.09841, 0.12386, 0.1477,  0.1345,
     1          0.07148, 0.02237 /
      data c3 / 0.00759, 0.01004, 0.00974, 0.00884, 0.00728, 0.00521,
     1          0.00224, 0.00012 /
      data c4 / -0.00206, -0.00278, -0.00287, -0.00280, -0.00235,
     1          -0.00110,  0.00000,  0.00000 /
      data c5 / 0.19, 0.15, 0.15, 0.15, 0.13, 0.10, 0.10, 0.10 /
      data c6 / 0.24, 0.20, 0.23, 0.27, 0.37, 0.30, 0.25, 0.25 /
      data c7 / 0.29, 0.20, 0.20, 0.25, 0.38, 0.55, 0.40, 0.36 /
      data sig / 0.23, 0.26, 0.27, 0.28, 0.29, 0.34, 0.34, 0.36 /

      data c1s /  0.10,  0.68,  0.61, 0.70, 0.07,
     1           -0.98, -2.44, -3.73 /
      data c2s / 0.6909, 0.63273, 0.66675, 0.69186, 0.7727, 0.8789,
     1           0.9964, 1.1169 /
      data c3s / 0.01130, 0.01275, 0.01080, 0.00572, 0.00173, 0.00130,
     1          0.00364, 0.00615 /
      data c4s / -0.00202, -0.00234, -0.00219, -0.00192, -0.00178,
     1          -0.00173,  -0.00118, -0.00045 /
      data c5s / 0.19, 0.15, 0.15, 0.15, 0.13, 0.10, 0.10, 0.10 /
      data c6s / 0.24, 0.20, 0.23, 0.27, 0.37, 0.30, 0.25, 0.25 /
      data c7s / 0.29, 0.20, 0.20, 0.25, 0.38, 0.55, 0.40, 0.36 /
      data sigs / 0.27, 0.25, 0.28, 0.28, 0.28, 0.29, 0.30, 0.30 /

C Find the requested spectral period and corresponding coefficients
      nPer = 8

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period  = period1(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c3T     = c3(1)
         c4T     = c4(1)
         c5T     = c5(1)
         c6T     = c6(1)
         c7T     = c7(1)
         sigT    = sig(1)
         c1sT     = c1s(1)
         c2sT     = c2s(1)
         c3sT     = c3s(1)
         c4sT     = c4s(1)
         c5sT     = c5s(1)
         c6sT     = c6s(1)
         c7sT     = c7s(1)
         sigsT    = sigs(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period1(i) .and. specT .le. period1(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Atkinson and Boore (2003) Cascadia'
C      write (*,*) 'Subduction attenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period1(count1),period1(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period1(count1),period1(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period1(count1),period1(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period1(count1),period1(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period1(count1),period1(count2),c5(count1),c5(count2),
     +             specT,c5T,iflag)
      call interp (period1(count1),period1(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period1(count1),period1(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period1(count1),period1(count2),sig(count1),sig(count2),
     +             specT,sigT,iflag)

      call interp (period1(count1),period1(count2),c1s(count1),c1s(count2),
     +             specT,c1sT,iflag)
      call interp (period1(count1),period1(count2),c2s(count1),c2s(count2),
     +             specT,c2sT,iflag)
      call interp (period1(count1),period1(count2),c3s(count1),c3s(count2),
     +             specT,c3sT,iflag)
      call interp (period1(count1),period1(count2),c4s(count1),c4s(count2),
     +             specT,c4sT,iflag)
      call interp (period1(count1),period1(count2),c5s(count1),c5s(count2),
     +             specT,c5sT,iflag)
      call interp (period1(count1),period1(count2),c6s(count1),c6s(count2),
     +             specT,c6sT,iflag)
      call interp (period1(count1),period1(count2),c7s(count1),c7s(count2),
     +             specT,c7sT,iflag)
      call interp (period1(count1),period1(count2),sigs(count1),sigs(count2),
     +             specT,sigsT,iflag)

 1011 period = specT

c     First check the upper magnitude limit
      if (ftype .eq. 0) then
         if (mag .gt. 8.5) then
             mag1 = 8.5
         else
             mag1 = mag
         endif
      elseif (ftype .eq. 1) then
         if (mag .gt. 8.0) then
             mag1 = 8.0
         else
             mag1 = mag
         endif
      endif

C     Now check for the maximum depth
      if (depth .gt. 100.0) then
          depth1 = 100.0
      else
          depth1 = depth
      endif

C    Set the attenuation model name based on site class
      if (Se .eq. 1.0) then
         attenName ='Atkinson and Boore (2003) Japan-Sub, NEHRP-E'
      elseif (Sd .eq. 1.0) then
         attenName ='Atkinson and Boore (2003) Japan-Sub, NEHRP-D'
      elseif (Sc .eq. 1.0) then
         attenName ='Atkinson and Boore (2003) Japan-Sub, NEHRP-C'
      elseif (Sc .eq. 0.0 .and. Sd .eq. 0.0 .and. Se .eq. 0.0) then
         attenName ='Atkinson and Boore (2003) Japan-Sub, NEHRP-B'
      endif

      period = specT
      delta = 0.00724*10.0**(0.507*mag1)
      r = sqrt(rupdist*rupdist + delta*delta)

C     Compute the ground motion for Subduction Interface Events (ftype=0)
      if (ftype .eq. 0.0) then
         g = 10.0**(1.2-0.18*mag1)
         pgarx = c1(1) + c2(1)*mag1 + c3(1)*depth1 + c4(1)*r -g*alog10(r)
         pgarx = 10.0**(pgarx)
c     Now set Sl function based on PGArx and period
         if (specT .ge. 1.0) then
            sl = 1.0
         elseif (specT .lt. 1.0 .and. specT .gt. 0.5) then
            if (pgarx .le. 100.0) then
               sl = 1.0
            elseif (pgarx .gt. 100.0 .and. pgarx .lt. 500.0) then
               sl = 1.0 - ((1./specT) - 1.)*(pgarx-100.)/400.
            elseif (pgarx .ge. 500.0) then
               sl = 1.0 - ((1./specT) - 1.)
            endif
         elseif (specT .le. 0.5) then
            if (pgarx .le. 100.0) then
               sl = 1.0
            elseif (pgarx .gt. 100.0 .and. pgarx .lt. 500.0) then
               sl = 1.0 - (pgarx-100.)/400.
            elseif (pgarx .ge. 500.0) then
                sl = 0.0
            endif
         endif

         lnY = c1T + c2T*mag1 + c3T*depth1 + c4T*r - g*alog10(r) +
     1         c5T*sl*Sc + c6T*sl*Sd + c7T*sl*Se
         sigma = sigT

C     Compute the ground motion for Subduction Intraslab Events (ftype=1)
      elseif (ftype .eq. 1.0) then
         g = 10.0**(0.301-0.01*mag1)
         pgarx = c1s(1) + c2s(1)*mag1 + c3s(1)*depth1 + c4s(1)*r -g*alog10(r)
         pgarx = 10.0**(pgarx)
c     Now set Sl function based on PGArx and period
         if (specT .ge. 1.0) then
            sl = 1.0
         elseif (specT .lt. 1.0 .and. specT .gt. 0.5) then
            if (pgarx .le. 100.0) then
               sl = 1.0
            elseif (pgarx .gt. 100.0 .and. pgarx .lt. 500.0) then
               sl = 1.0 - ((1./specT) - 1.)*(pgarx-100.)/400.
            elseif (pgarx .ge. 500.0) then
               sl = 1.0 - ((1./specT) - 1.)
            endif
         elseif (specT .le. 0.5) then
            if (pgarx .le. 100.0) then
               sl = 1.0
            elseif (pgarx .gt. 100.0 .and. pgarx .lt. 500.0) then
               sl = 1.0 - (pgarx-100.)/400.
            elseif (pgarx .ge. 500.0) then
                sl = 0.0
            endif
         endif

         lnY = c1sT + c2sT*mag1 + c3sT*depth1 + c4sT*r - g*alog10(r) +
     1         c5sT*sl*Sc + c6sT*sl*Sd + c7sT*sl*Se
         sigma = sigsT

      else
C         write (*,*) 'Wrong Ftype for Atkinson and Boore (2003)'
C         write (*,*) 'attenuation relationship. Check fault file.'
         return
      endif

C     Now convert to Ln Units in gals.
      lnY = alog(10.0)*lnY
      sigma = alog(10.0)*sigma

      return
      end

c -------------------------------------------------------------------
C *** Gregor et al. (2002) Horizontal Cascadia Interface, Rock ******
c -------------------------------------------------------------------

      subroutine Gregor02CasR ( mag, rupdist, lnY, sigma, specT,
     1                  attenName, period,iflag )

C     This relationship is constrained to a limited magnitude range of:
c             8.0 < M < 9.0
c     This magnitude range is checked before calling this subroutine.

      real mag, rupDist, lnY, sigma, period
      character*80 attenName
      real c1(25), c2(25), c3(25), c4(25), c5(25), c6(25)
      real period1(25), sig(25)
      real specT, c1T, c2T, c3T, c4T, c5T, c6T
      integer nper, count1, count2,iflag

      data period1 / 0.000, 0.020, 0.025, 0.032, 0.040, 0.050, 0.056,
     1               0.063, 0.071, 0.083, 0.100, 0.125, 0.143, 0.167,
     2               0.200, 0.250, 0.333, 0.400, 0.500, 0.769, 1.000,
     3               1.667, 2.000, 2.500, 5.000 /
      data c1 / 21.0686, 21.072, 21.152, 21.366, 17.525, 19.347,
     1          20.774,  21.331, 24.221, 24.95,  30.005, 39.719,
     2          43.414,  39.579, 39.345, 37.69,  34.787, 33.393,
     3          29.159,  15.279,  6.528,  7.467,  8.657,  6.637,
     4           8.013 /
      data c2 / -1.7712, -1.772, -1.779, -1.797, -1.339, -1.519,
     1          -1.625,  -1.672, -1.924, -1.979, -2.349, -3.09,
     2          -3.385,  -2.957, -3.087, -2.96,  -2.899, -2.776,
     3          -2.424,  -1.22,  -0.406, -0.676, -0.851, -0.651,
     4          -0.943 /
      data c3 / -5.0631, -5.0529, -5.0663, -5.1036, -4.8602,
     1          -4.9731, -5.1875, -5.2561, -5.625,  -5.6696,
     2          -6.3862, -7.8541, -8.3122, -7.9723, -7.6002,
     3          -7.379,  -6.7855, -6.9595, -6.2114, -4.324,
     4          -3.1991, -2.6465, -2.7398, -2.3124, -2.4087 /
      data c4 / 0.4153, 0.4142, 0.4154, 0.4187, 0.3868,
     1          0.396,  0.4118, 0.4173, 0.4478, 0.4493,
     2          0.5009, 0.6161, 0.6513, 0.6139, 0.5972,
     3          0.5842, 0.5616, 0.5863, 0.5216, 0.3618,
     4          0.2589, 0.2193, 0.2339, 0.1879, 0.2154 /
      data c5 / 4.2, 4.2, 4.2, 4.2, 4.2,
     1          4.2, 4.3, 4.3, 4.4, 4.4,
     2          4.7, 5.1, 5.2, 5.2, 5.1,
     3          5.1, 4.9, 4.9, 4.7, 3.9,
     4          3.2, 2.8, 2.8, 2.8, 2.3 /
      data c6 / 0.0017,  0.0025,  0.0023,  0.0017, -0.0318,
     1         -0.0155, -0.0155, -0.0146, -0.0071, -0.0018,
     2         -0.0019, -0.0064, -0.0001, -0.0264,  0.006,
     3         -0.0023,  0.0256, -0.0039,  0.0161, -0.0011,
     4         -0.0225,  0.0416,  0.037,   0.0364,  0.0647 /
      data sig / 0.724,  0.7195, 0.7235, 0.7221, 0.6969,
     1           0.7086, 0.7215, 0.7302, 0.7326, 0.7815,
     2           0.7954, 0.8605, 0.8544, 0.8478, 0.8679,
     3           0.8444, 0.8776, 0.8801, 0.8039, 0.8295,
     4           0.7567, 0.6943, 0.6305, 0.6657, 0.773  /

C Find the requested spectral period and corresponding coefficients
      nPer = 25

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period  = period1(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c3T     = c3(1)
         c4T     = c4(1)
         c5T     = c5(1)
         c6T     = c6(1)
         sigT    = sig(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period1(i) .and. specT .le. period1(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Gregor et al. (2002) Cascadia'
C      write (*,*) 'Subduction attenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period1(count1),period1(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period1(count1),period1(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period1(count1),period1(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period1(count1),period1(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period1(count1),period1(count2),c5(count1),c5(count2),
     +             specT,c5T,iflag)
      call interp (period1(count1),period1(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period1(count1),period1(count2),sig(count1),sig(count2),
     +             specT,sigT,iflag)

 1011 period = specT

      attenName ='Gregor et al. (2002) Cascadia, Rock'

      period = specT

      lnY = c1T + c2T*mag + (c3T + c4T*mag)*alog(rupdist+exp(c5T)) +
     1      c6T*(mag-10.0)**3.0

         sigma = sigT


C     Now convert to gals.
      lnY = lnY + 6.89

      return
      end

c -------------------------------------------------------------------
C *** Gregor et al. (2002) Horizontal Cascadia Interface, Soil ******
c -------------------------------------------------------------------

      subroutine Gregor02CasS ( mag, rupdist, lnY, sigma, specT,
     1                  attenName, period,iflag )

C     This relationship is constrained to a limited magnitude range of:
c             8.0 < M < 9.0
c     This magnitude range is checked before calling this subroutine.

      real mag, rupDist, lnY, sigma, period
      character*80 attenName
      real c1(25), c2(25), c3(25), c4(25), c5(25), c6(25)
      real period1(25), sig(25)
      real specT, c1T, c2T, c3T, c4T, c5T, c6T
      integer nper, count1, count2,iflag

      data period1 / 0.000, 0.020, 0.025, 0.032, 0.040, 0.050, 0.056,
     1               0.063, 0.071, 0.083, 0.100, 0.125, 0.143, 0.167,
     2               0.200, 0.250, 0.333, 0.400, 0.500, 0.769, 1.000,
     3               1.667, 2.000, 2.500, 5.000  /
      data c1 / 23.8613,  25.4339, 25.42,   25.3849, 22.7042,
     1          23.2948,  23.2165, 24.7067, 24.9425, 26.5395,
     2          29.9693,  35.666,  50.7368, 55.6402, 75.8218,
     3          100.3357, 71.7967, 67.372,  56.0088, 26.3013,
     4          17.233,   11.9971, 17.9124, 16.1666,  7.4856 /
      data c2 / -2.2742, -2.4185, -2.4168, -2.4127, -2.1004,
     1          -2.1619, -2.1528, -2.2814, -2.3045, -2.4402,
     2          -2.7254, -3.1853, -4.5292, -4.9662, -6.8396,
     3          -9.0324, -6.499,  -6.1755, -5.1176, -2.4482,
     4          -1.5506, -1.118,  -1.7505, -1.5091, -0.836  /
      data c3 /-4.8803,  -5.1044,  -5.1026, -5.0977,  -4.9006,
     1         -4.8855,  -4.8744,  -5.0947, -5.0672,  -5.3025,
     2         -5.8054,  -6.6251,  -8.7213, -9.5555, -12.0687,
     3        -15.3511, -11.6056, -11.1567, -9.5083,  -5.3818,
     4         -4.3287,  -2.9451,  -3.815,  -3.7101,  -2.0627 /
      data c4 / 0.4399, 0.4602, 0.46,   0.4594, 0.4353,
     1          0.4332, 0.4319, 0.4509, 0.4476, 0.4677,
     2          0.5098, 0.5769, 0.7649, 0.8435, 1.0753,
     3          1.3731, 1.0415, 1.0167, 0.8632, 0.4957,
     4          0.393,  0.2639, 0.3574, 0.3344, 0.1779 /
      data c5 / 4.7, 4.8, 4.8, 4.8, 4.8,
     1          4.8, 4.8, 4.9, 4.9, 5.0,
     2          5.2, 5.5, 5.9, 6.0, 6.3,
     3          6.6, 6.2, 6.1, 5.9, 4.8,
     4          4.2, 3.7, 4.1, 4.1, -0.2 /
      data c6 / 0.0366, 0.037,  0.0369, 0.0366, 0.0164,
     1          0.0263, 0.0255, 0.0245, 0.0295, 0.0276,
     2          0.0226, 0.0123, 0.0108, -0.007, 0.0096,
     3         -0.0043, 0.0102, 0.0035, 0.0164, 0.0259,
     4          0.0133, 0.0538, 0.0583, 0.0473, 0.0821 /
      data sig / 0.5436, 0.5422, 0.5464, 0.5422, 0.5241,
     1           0.5319, 0.5413, 0.548,  0.5413, 0.5835,
     2           0.5926, 0.6665, 0.6532, 0.6393, 0.6618,
     3           0.6371, 0.6431, 0.6699, 0.6139, 0.7256,
     4           0.6606, 0.6837, 0.6276, 0.6676, 0.8207  /

C Find the requested spectral period and corresponding coefficients
      nPer = 25

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period  = period1(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c3T     = c3(1)
         c4T     = c4(1)
         c5T     = c5(1)
         c6T     = c6(1)
         sigT    = sig(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period1(i) .and. specT .le. period1(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Gregor et al. (2002) Cascadia'
C      write (*,*) 'Subduction attenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period1(count1),period1(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period1(count1),period1(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period1(count1),period1(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period1(count1),period1(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period1(count1),period1(count2),c5(count1),c5(count2),
     +             specT,c5T,iflag)
      call interp (period1(count1),period1(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period1(count1),period1(count2),sig(count1),sig(count2),
     +             specT,sigT,iflag)

 1011 period = specT

      attenName ='Gregor et al. (2002) Cascadia, Soil'

      period = specT

      lnY = c1T + c2T*mag + (c3T + c4T*mag)*alog(rupdist+exp(c5T)) +
     1      c6T*(mag-10.0)**3.0

         sigma = sigT

C     Now convert to gals.
      lnY = lnY + 6.89

      return
      end

c -------------------------------------------------------------------
C *** Gregor et al. (2006) Horizontal Cascadia Interface, Vs30 ******
c -------------------------------------------------------------------

      subroutine Gregor06Cas ( mag, rupdist, lnY, sigma, specT,
     1                  attenName, vs30, period,iflag )

      real mag, rupDist, lnY, sigma, period
      character*80 attenName
      real c1(25), c2(25), c3(25), c4(25), c5(25), c6(25)
      real period1(25), sig(25)
      real specT, c1T, c2T, c3T, c4T, c5T, c6T, vs30
      integer nper, count1, count2,iflag
      real n, c, b_soil(25), theta10(25), vref(25), sampadj(25)
      real b_soilT, Theta10T, vrefT, sampadjT

      data Period1 / 0.00, 0.02, 0.025, 0.03, 0.04, 0.05, 0.056, 0.063, 0.071428571,
     1               0.083, 0.1, 0.125, 0.143, 0.167, 0.2, 0.25, 0.333, 0.4,
     2               0.5, 0.769, 1.0, 1.667, 2.0, 2.5, 5.0 /

      data c1      / 9.30979, 9.41101, 9.55386, 9.93963, 9.89636, 10.43056,
     1              10.96241, 11.18537, 11.6955, 11.97711, 13.45255, 13.31905,
     2              14.11414, 14.24239, 13.70461, 14.01509, 12.17016, 11.26958,
     3              10.7543, 7.75352, 6.00913, 4.08439, 5.54081, 4.79477, 5.13609 /

      data c2      / -0.72025, -0.72744, -0.73843, -0.76664, -0.75422,
     1               -0.77911, -0.80698, -0.81486, -0.83129, -0.82809,
     2               -0.93278, -0.89503, -0.95795, -0.94895, -0.91753,
     3               -0.9636,  -0.81309, -0.73763, -0.73886, -0.51697,
     4               -0.38538, -0.30129, -0.50319, -0.46478, -0.61463 /

      data c5      / 2.8, 2.8, 2.8, 2.8, 2.7, 2.7, 2.8, 2.8, 2.9, 3.0,
     1               3.2, 3.3, 3.4, 3.5, 3.5, 3.5, 3.5, 3.5, 3.4, 3.2,
     2               2.9, 2.7, 2.6, 2.4, 2.1 /

      data c3      / -3.10553, -3.12269, -3.14878, -3.21488, -3.21742,
     1               -3.23785, -3.31652, -3.34308, -3.44266, -3.47499,
     2               -3.61826, -3.64879, -3.64193, -3.70331, -3.65089,
     3               -3.6063,  -3.53255, -3.51567, -3.31553, -3.12098,
     4               -2.75873, -2.49346, -2.47444, -2.16295, -1.95111 /

      data c4      / 0.23705, 0.2383, 0.2404, 0.2453, 0.24439, 0.24094,
     1               0.24457, 0.24497, 0.24982, 0.24837, 0.25549, 0.2567,
     2               0.25266, 0.2571, 0.257, 0.25674, 0.2595, 0.26323,
     3               0.25162, 0.25014, 0.22003, 0.20614, 0.20765,
     4               0.177, 0.16358 /

      data c6      / 0.03739, 0.03731, 0.03715, 0.03691, 0.03598, 0.03894,
     1               0.03911, 0.03914, 0.03752, 0.03751, 0.04228, 0.03879,
     2               0.04621, 0.04379, 0.04239, 0.04843, 0.03491, 0.02456,
     3               0.03481, 0.01789, 0.02998, 0.02732, 0.0438, 0.05213, 0.07373 /

      data sig     / 0.7028, 0.7062, 0.7135, 0.7221, 0.7290, 0.7422,
     1               0.7516, 0.7610, 0.7655, 0.8060, 0.8240, 0.8690,
     2               0.8536, 0.8374, 0.8240, 0.8093, 0.7914, 0.7962,
     3               0.7237, 0.7871, 0.7095, 0.6570, 0.5959, 0.6552, 0.7897 /
      data b_soil  / -1.186, -1.219, -1.248718345, -1.273, -1.308, -1.346,
     1               -1.380937866, -1.417248955, -1.455958581, -1.534878688,
     2               -1.624, -1.792954292, -1.894815052, -2.026908441, -2.188,
     3               -2.378282827, -2.568423866, -2.657, -2.669, -2.362214398,
     4               -1.955, -0.758605507, -0.299, -0.134448426, 0.0 /

      data Vref    / 865.1, 865.1, 888.5995058, 907.8, 994.5, 1053.5,
     1              1062.499994, 1071.853731, 1081.825331, 1058.230721,
     2              1032.5, 947.2523784, 895.8574867, 829.3099131, 748.2,
     3               655.3244676, 556.5917476, 503.0, 456.6, 409.5868861,
     4               400.0, 400.0, 400.0, 400.0, 400.0 /

      data Theta10 / 0.9255, 0.9647, 0.997445213, 1.0242, 1.057, 1.1022,
     1               1.147199972, 1.193968654, 1.243826653, 1.335426432,
     2               1.4285, 1.62722767, 1.747038486, 1.897524986,
     3               2.0788, 2.278848596, 2.463524828, 2.5514, 2.528,
     4               2.075643639, 1.506, -0.00763144, -0.5703,
     5              -0.742391228, -0.7993 /
      data sampadj / -0.118149083, -0.118084273, -0.105904522, -0.09610953,
     1               -0.05344769, -0.025393821, -0.021093876, -0.016729322,
     2               -0.01219193, -0.022721662, -0.035306933, -0.077444948,
     3               -0.10477571, -0.144077725, -0.198421599, -0.277997736,
     4               -0.391539256, -0.462139859, -0.552012084, -0.709610012,
     5               -0.817439183, -0.921429142, -0.942183118, -0.919647528,
     6               -0.815806142 /

C Find the requested spectral period and corresponding coefficients
      nPer = 25

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period   = period1(1)
         c1T      = c1(1)
         c2T      = c2(1)
         c3T      = c3(1)
         c4T      = c4(1)
         c5T      = c5(1)
         c6T      = c6(1)
         sigT     = sig(1)
         b_soilT  = b_soil(1)
         vrefT    = vref(1)
         Theta10T = theta10(1)
         sampadjT = sampadj(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period1(i) .and. specT .le. period1(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Gregor et al. (2006) Cascadia'
C      write (*,*) 'Subduction attenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period1(count1),period1(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period1(count1),period1(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period1(count1),period1(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period1(count1),period1(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period1(count1),period1(count2),c5(count1),c5(count2),
     +             specT,c5T,iflag)
      call interp (period1(count1),period1(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period1(count1),period1(count2),sig(count1),sig(count2),
     +             specT,sigT,iflag)
      call interp (period1(count1),period1(count2),b_soil(count1),b_soil(count2),
     +             specT,b_soilT,iflag)
      call interp (period1(count1),period1(count2),vref(count1),vref(count2),
     +             specT,vrefT,iflag)
      call interp (period1(count1),period1(count2),Theta10(count1),Theta10(count2),
     +             specT,Theta10T,iflag)
      call interp (period1(count1),period1(count2),sampadj(count1),sampadj(count2),
     +             specT,sampadjT,iflag)

 1011 period = specT

      attenName ='Gregor et al. (2006) Cascadia'

      period = specT

      lnY = c1T + c2T*mag + (c3T + c4T*mag)*alog(rupdist+exp(c5T)) +
     1      c6T*(mag-10.0)**3.0

C     Now apply Walling and Abrahamson site amplification model.
c     Site response
c     Compute PGARock (i.e., Vs=1100 m/sec)
      pgaRock =  9.28996 -0.71918*mag + (-3.10146 + 0.23683*mag)*alog(rupdist+exp(2.8)) +
     1      0.03741*(mag-10.0)**3.0
      pgarock = exp(pgarock)

      sigrock = 0.7038
      c = 1.88
      n = 1.18

      if (vs30 .lt. vrefT) then
          soilamp = theta10T*alog(vs30/vrefT) - 1.0*b_soilT*alog(c+pgaRock)
     1              + b_soilT*alog(pgaRock+c*((vs30/vrefT)**(n)) )
      else
        soilamp = (theta10T + b_soilT*n) * alog(vs30/vrefT)
      endif

C     Now correct for reference Vs30m = 1100 m/sec
      soilamp = soilamp - sampadjT

      lnY = lnY + soilamp
C     Now convert to gals.
      lnY = lnY + 6.89
      sigma = sigT

      return
      end

c ---------------------------------------------------------------------
C     *** Kanno et al. (2006, BSSA) ***
c ---------------------------------------------------------------------
      subroutine kanno2006 ( mag, Rrup, specT,
     1                     period2, lnY, sigma, iflag, vs30, depth )

      parameter (MAXPER=38)
      REAL Period(MAXPER), a1(MAXPER), b1(MAXPER), c1(MAXPER), d1(MAXPER)
      real a2(MAXPER), b2(MAXPER), c2(MAXPER)
      real sig1(MAXPER), sig2(MAXPER), p(MAXPER), q(MAXPER)

      REAL MAG, Rrup, VS30, logY, lnY, sigma, specT, period2, depth, e1
      INTEGER iFlag, count1, count2
      real a1T, b1T, c1T, d1T, sig1T, a2T, b2T, c2T, sig2T
      real pT, qT

      data period / 0,0.05,0.06,0.07,0.08,0.09,0.1,0.11,0.12,0.13,0.15,0.17,
     1         0.2,0.22,0.25,0.3,0.35,0.4,0.45,0.5,0.6,0.7,0.8,0.9,1,1.1,
     2         1.2,1.3,1.5,1.7,2,2.2,2.5,3,3.5,4,4.5,5 /
      data a1 / 0.56,0.54,0.54,0.53,0.52,0.52,0.52,0.5,0.51,0.51,0.52,0.53,0.54,
     1     0.54,0.54,0.56,0.56,0.58,0.59,0.59,0.62,0.63,0.65,0.68,0.71,0.72,
     2     0.73,0.74,0.77,0.79,0.8,0.82,0.84,0.86,0.9,0.92,0.94,0.92 /
      data b1 / -0.0031,-0.0035,-0.0037,-0.0039,-0.004,-0.0041,-0.0041,
     1          -0.004,-0.004,-0.0039,-0.0038,-0.0037,-0.0034,-0.0032,
     2          -0.0029,-0.0026,-0.0024,-0.0021,-0.0019,-0.0016,-0.0014,
     3          -0.0012,-0.0011,-0.0009,-0.0009,-0.0007,-0.0006,-0.0006,
     4          -0.0005,-0.0005,-0.0004,-0.0004,-0.0003,-0.0002,-0.0003,
     5          -0.0005,-0.0007,-0.0004 /
      data c1 / 0.26,0.48,0.57,0.67,0.75,0.8,0.85,0.96,0.93,0.91,0.89,0.84,
     1          0.76,0.73,0.66,0.51,0.42,0.26,0.13,0.04,-0.22,-0.37,-0.54,
     2          -0.8,-1.04,-1.19,-1.32,-1.44,-1.7,-1.89,-2.08,-2.24,-2.46,
     3          -2.72,-2.99,-3.21,-3.39,-3.35/
      data d1 / 0.0055,0.0061,0.0065,0.0066,0.0069,0.0071,0.0073,0.0061,
     1          0.0062,0.0062,0.006,0.0056,0.0053,0.0048,0.0044,0.0039,
     2          0.0036,0.0033,0.003,0.0022,0.0025,0.0022,0.002,0.0019,
     3          0.0021,0.0018,0.0014,0.0014,0.0017,0.0019,0.002,0.0022,
     4          0.0023,0.0021,0.0032,0.0045,0.0064,0.003 /
      data sig1 / 0.37,0.37,0.38,0.38,0.39,0.4,0.4,0.4,0.4,0.4,0.41,0.41,
     1            0.4,0.4,0.4,0.39,0.4,0.4,0.41,0.41,0.41,0.41,0.41,0.41,
     2            0.41,0.41,0.41,0.41,0.4,0.39,0.39,0.38,0.38,0.38,0.37,
     3            0.38,0.38,0.38 /

      data a2 / 0.41,0.39,0.39,0.38,0.38,0.38,0.38,0.38,0.38,0.38,0.39,
     1          0.4,0.4,0.4,0.41,0.43,0.43,0.45,0.46,0.47,0.49,0.51,0.53,
     2          0.56,0.57,0.59,0.6,0.62,0.64,0.66,0.68,0.69,0.71,0.73,0.75,
     3          0.77,0.79,0.82 /
      data b2 / -0.0039,-0.004,-0.0041,-0.0042,-0.0042,-0.0043,-0.0043,-0.0044,
     1          -0.0044,-0.0044,-0.0044,-0.0043,-0.0042,-0.0041,-0.004,-0.0038,
     2          -0.0036,-0.0034,-0.0032,-0.003,-0.0028,-0.0026,-0.0025,-0.0023,
     3          -0.0022,-0.0022,-0.0021,-0.002,-0.002,-0.0018,-0.0017,-0.0017,
     4          -0.0017,-0.0017,-0.0017,-0.0016,-0.0016,-0.0017/
      data c2 / 1.56,1.76,1.86,1.96,2.03,2.08,2.12,2.14,2.14,2.13,2.12,2.08,2.02,
     1          1.99,1.88,1.75,1.62,1.49,1.33,1.19,0.95,0.72,0.49,0.27,0.08,-0.08,
     2          -0.24,-0.4,-0.63,-0.83,-1.12,-1.27,-1.48,-1.72,-1.97,-2.22,-2.45,-2.7 /
      data sig2 / 0.4,0.42,0.43,0.45,0.45,0.46,0.46,0.46,0.46,0.46,0.46,0.45,0.44,
     1            0.43,0.42,0.42,0.41,0.41,0.41,0.4,0.4,0.4,0.4,0.4,0.41,0.41,0.41,
     2            0.41,0.41,0.4,0.4,0.4,0.39,0.39,0.38,0.37,0.36,0.35/
      data p  / -0.55,-0.32,-0.26,-0.24,-0.26,-0.29,-0.32,-0.35,-0.39,-0.43,-0.53,
     1        -0.61,-0.68,-0.72,-0.75,-0.8,-0.85,-0.87,-0.89,-0.91,-0.92,-0.96,
     2        -0.98,-0.97,-0.93,-0.92,-0.91,-0.88,-0.85,-0.83,-0.78,-0.76,-0.72,
     3        -0.68,-0.66,-0.62,-0.6,-0.59 /
      data q / 1.35,0.8,0.65,0.6,0.64,0.72,0.78,0.84,0.94,1.04,1.28,1.47,1.65,
     1         1.74,1.82,1.96,2.09,2.13,2.18,2.25,2.3,2.41,2.46,2.44,2.32,2.3,
     2         2.26,2.2,2.12,2.06,1.92,1.88,1.8,1.7,1.64,1.54,1.5,1.46 /

C First check for the PGA case (i.e., specT=0.0)
      nPer = 38
      if (specT .eq. 0.0) then
         period1 = period(1)
         a1T = a1(1)
         b1T = b1(1)
         c1T = c1(1)
         d1T = d1(1)
         a2T = a2(1)
         b2T = b2(1)
         c2T = c2(1)
         sig1T = sig1(1)
         sig2T = sig2(1)
         pT = p(1)
         qT = q(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Kanno et al (2006) Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),a1(count1),a1(count2),
     +                   specT,a1T,iflag)
            call interp (period(count1),period(count2),b1(count1),b1(count2),
     +                   specT,b1T,iflag)
            call interp (period(count1),period(count2),c1(count1),c1(count2),
     +                   specT,c1T,iflag)
            call interp (period(count1),period(count2),d1(count1),d1(count2),
     +                   specT,d1T,iflag)
            call interp (period(count1),period(count2),a2(count1),a2(count2),
     +                   specT,a2T,iflag)
            call interp (period(count1),period(count2),b2(count1),b2(count2),
     +                   specT,b2T,iflag)
            call interp (period(count1),period(count2),c2(count1),c2(count2),
     +                   specT,c2T,iflag)
            call interp (period(count1),period(count2),sig1(count1),sig1(count2),
     +                   specT,sig1T,iflag)
            call interp (period(count1),period(count2),sig2(count1),sig2(count2),
     +                   specT,sig2T,iflag)
            call interp (period(count1),period(count2),p(count1),p(count2),
     +                   specT,pT,iflag)
            call interp (period(count1),period(count2),q(count1),q(count2),
     +                   specT,qT,iflag)

 1011 period1 = specT

      e1 = 0.50
      X = rrup
      if ( depth .lt. 30. ) then
        logY = a1T*mag + b1T*X - alog10(X+d1T*10.0**(e1*mag)) + c1T
        sigma = sig1T
      else
        logY = a2T*mag + b2T*X - alog10(X) + c2T
        sigma = sig2T
      endif
      logY = logY + pT*alog10(vs30)+qT
      lnY = logY * alog(10.)
      sigma = sigma * alog(10.)
      period2 = period1

C     Convert ground motion to units of gals.
c      lnY = lnY + 6.89

      return
      END

c -------------------------------------------------------------------
C **** Zhao et al. 2006 (BSSA, Vol 96, No. 3) *************
c -------------------------------------------------------------------

      subroutine Zhaoetal2006 ( m, dist, ftype, lnY, sigma, sclass, specT,
     1                   attenName, period1, iflag, sourcetype, hypo, phi, tau )

c     This  subroutine calculates the spectral acceleration from the
c     Zhao et al. (2006) attenuation model which is defined for crustal
c     and subduction events. Five separate site classes are also modeled.

      parameter (MAXPER=22)
      real ftype, dist, m, lnY, sigma, specT
      real a(MAXPER), b(MAXPER), c(MAXPER), d(MAXPER), e(MAXPER)
      real Sr(MAXPER), Si(MAXPER), Ss(MAXPER), Ssl(MAXPER)
      real Ch(MAXPER), C1(MAXPER), C2(MAXPER), C3(MAXPER), C4(MAXPER)
      real tauc(MAXPER), taui(MAXPER), taus(MAXPER)
      real Qc(MAXPER), Wc(MAXPER), Qi(MAXPER), Wi(MAXPER), Qs(MAXPER), Ws(MAXPER)
      real Ps(MAXPER)
      real sigma1(MAXPER), period(MAXPER)
      character*80 attenName
      integer nper, count1, count2, iflag
      real aT, bT, cT, dT, eT, sourcetype, sclass
      real SrT, SiT, SsT, SslT
      real ChT, C1T, C2T, C3T, C4T, sigma1T
      real taucT, tauiT, tausT
      real QcT, WcT, QiT, WiT, QsT, WsT, PsT
      real hc, mech, deltac, classterm, msq, hypo
      real phi, tau

      data period / 0.00, 0.01, 0.05, 0.10, 0.15, 0.20, 0.25, 0.30, 0.40, 0.50,
     1              0.60, 0.70, 0.80, 0.90, 1.00, 1.25, 1.50, 2.00, 2.50,
     1              3.00, 4.00, 5.00 /
      data a      / 1.101, 1.101, 1.076, 1.118, 1.134, 1.147, 1.149, 1.163,
     1              1.200, 1.250, 1.293, 1.336, 1.386, 1.433, 1.479,
     1              1.551, 1.621, 1.694, 1.748, 1.759, 1.826, 1.825 /
      data b      / -0.00564,-0.00564, -0.00671, -0.00787, -0.00722, -0.00659,
     1              -0.00590, -0.00520, -0.00422, -0.00338, -0.00282,
     1              -0.00258, -0.00242, -0.00232, -0.00220, -0.00207,
     1              -0.00224, -0.00201, -0.00187, -0.00147, -0.00195,
     1              -0.00237 /
      data c      / 0.0055, 0.0055, 0.0075, 0.0090, 0.0100, 0.0120, 0.0140,
     1              0.0150, 0.0100, 0.0060, 0.0030, 0.0025, 0.0022,
     1              0.0020, 0.0020, 0.0020, 0.0020, 0.0025, 0.0028,
     1              0.0032, 0.0040, 0.0050 /
      data d      / 1.080, 1.080, 1.060, 1.083, 1.053, 1.014, 0.966, 0.934,
     1              0.959, 1.008, 1.088, 1.084, 1.088, 1.109, 1.115,
     1              1.083, 1.091, 1.055, 1.052, 1.025, 1.044, 1.065 /
      data e      / 0.01412, 0.01412, 0.01463, 0.01423, 0.01509, 0.01462,
     1              0.01459, 0.01458, 0.01257, 0.01114, 0.01019,
     1              0.00979, 0.00944, 0.00972, 0.01005, 0.01003,
     1              0.00928, 0.00833, 0.00776, 0.00644, 0.00590, 0.00510 /
      data Sr     / 0.251, 0.251, 0.251, 0.240, 0.251, 0.260, 0.269, 0.259,
     1              0.248, 0.247, 0.233, 0.220, 0.232, 0.220, 0.211,
     1              0.251, 0.248, 0.263, 0.262, 0.307, 0.353, 0.248 /
      data Si     / 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000,
     1             -0.041, -0.053, -0.103, -0.146, -0.164, -0.206,
     1             -0.239, -0.256, -0.306, -0.321, -0.337, -0.331,
     1             -0.390, -0.498 /
      data Ss     / 2.607, 2.607, 2.764, 2.156, 2.161, 1.901, 1.814, 2.181,
     1              2.432, 2.629, 2.702, 2.654, 2.480, 2.332, 2.233,
     1              2.029, 1.589, 0.966, 0.789, 1.037, 0.561, 0.225 /
      data Ssl    / -0.528, -0.528, -0.551, -0.420, -0.431, -0.372, -0.360,
     1              -0.450, -0.506, -0.554, -0.575, -0.572, -0.540,
     1              -0.522, -0.509, -0.469, -0.379, -0.248, -0.221,
     1              -0.263, -0.169, -0.120 /
      data Ch     / 0.293, 0.293, 0.939, 1.499, 1.462, 1.280, 1.121, 0.852,
     1              0.365, -0.207, -0.705, -1.144, -1.609, -2.023,
     1             -2.451, -3.243, -3.888, -4.783, -5.444, -5.839,
     1             -6.598, -6.752 /
      data C1     / 1.111, 1.111, 1.684, 2.061, 1.916, 1.669, 1.468, 1.172,
     1              0.655, 0.071, -0.429, -0.866, -1.325, -1.732,
     1             -2.152, -2.923, -3.548, -4.410, -5.049, -5.431,
     1             -6.181, -6.347 /
      data C2     / 1.344, 1.344, 1.793, 2.135, 2.168, 2.085, 1.942, 1.683,
     1              1.127, 0.515, -0.003, -0.449, -0.928, -1.349,
     1             -1.776, -2.542, -3.169, -4.039, -4.698, -5.089,
     1             -5.882, -6.051 /
      data C3     / 1.355, 1.355, 1.747, 2.031, 2.052, 2.001, 1.941, 1.808,
     1              1.482, 0.934, 0.394, -0.111, -0.620, -1.066, -1.523,
     1              -2.327, -2.979, -3.871, -4.496, -4.893, -5.698, -5.873 /
      data C4     / 1.420, 1.420, 1.814, 2.082, 2.113, 2.030, 1.937, 1.770,
     1              1.397, 0.955, 0.559, 0.188, -0.246, -0.643, -1.084,
     1             -1.936, -2.661, -3.640, -4.341, -4.758, -5.588,
     1             -5.798 /
      data sigma1 / 0.604, 0.604, 0.640, 0.694, 0.702, 0.692, 0.682, 0.670,
     1              0.659, 0.653, 0.653, 0.652, 0.647, 0.653, 0.657,
     1              0.660, 0.664, 0.669, 0.671, 0.667, 0.647, 0.643 /
      data tauc   / 0.303, 0.303, 0.326, 0.342, 0.331, 0.312, 0.298, 0.300,
     1              0.346, 0.338, 0.349, 0.351, 0.356, 0.348, 0.338,
     1              0.313, 0.306, 0.283, 0.287, 0.278, 0.273, 0.275 /
      data taui   / 0.308, 0.308, 0.343, 0.403, 0.367, 0.328, 0.289, 0.280,
     1              0.271, 0.277, 0.296, 0.313, 0.329, 0.324, 0.328,
     1              0.339, 0.352, 0.360, 0.356, 0.338, 0.307, 0.272 /
      data taus   / 0.321, 0.321, 0.378, 0.420, 0.372, 0.324, 0.294, 0.284,
     1              0.278, 0.272, 0.285, 0.290, 0.299, 0.289, 0.286,
     1              0.277, 0.282, 0.300, 0.292, 0.274, 0.281, 0.296 /
      data Qc     / 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000,
     1              0.000, -0.0126, -0.0329, -0.0501, -0.0650, -0.0781,
     1             -0.0899, -0.1148, -0.1351, -0.1672, -0.1921, -0.2124,
     1             -0.2445, -0.2694 /
      data Wc     / 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000,
     1              0.000,  0.0116, 0.0202, 0.0274, 0.0336, 0.0391,
     1              0.0440, 0.0545, 0.0630, 0.0764, 0.0869, 0.0954,
     1              0.1088, 0.1193 /
      data Qi     / 0.000, 0.000, 0.000, 0.000, -0.0138, -0.0256, -0.0348,
     1             -0.0423, -0.0541, -0.0632, -0.0707, -0.0771,
     1             -0.0825, -0.0874, -0.0917, -0.1009, -0.1083,
     1             -0.1202, -0.1293, -0.1368, -0.1486, -0.1578 /
      data Wi     / 0.000, 0.000, 0.000, 0.000, 0.0286, 0.0352, 0.0403,
     1              0.0445, 0.0511, 0.0562, 0.0604, 0.0639, 0.0670,
     1              0.0697, 0.0721, 0.0772, 0.0814, 0.0880, 0.0931,
     1              0.0972, 0.1038, 0.1090  /
      data Qs     / 0.1584, 0.1584, 0.1932, 0.2057, 0.1984, 0.1856, 0.1714,
     1              0.1573, 0.1309, 0.1078, 0.0878, 0.0705, 0.0556,
     1              0.0426, 0.0314, 0.0093, -0.0062, -0.0235, -0.0287,
     1             -0.0261, -0.0065, 0.0246 /
      data Ws     / -0.0529, -0.0529, -0.0841, -0.0877, -0.0773, -0.0644, -0.0515,
     1              -0.0395, -0.0183, -0.0008, 0.0136, 0.0254, 0.0352,
     1               0.0432, 0.0498, 0.0612, 0.0674, 0.0692, 0.0622,
     1               0.0496, 0.0150, -0.0268 /
      data Ps     / 0.1392, 0.1392, 0.1636, 0.1690, 0.1669, 0.1631, 0.1588,
     1              0.1544, 0.1460, 0.1381, 0.1307, 0.1239, 0.1176,
     1              0.1116, 0.1060, 0.0933, 0.0821, 0.0628, 0.0465,
     1              0.0322, 0.0083, -0.0117 /

      hc = 15.0

c Set attenuation name
c     Sourcetype = 0 Crustal
c     Sourcetype = 1 Subduction - Interface
c     Sourcetype = 2 Subduction - Slab
c     Sclass = 0 Hard Rock
c     Sclass = 1 SC I
c     Sclass = 2 SC II
c     Sclass = 3 SC III
c     Sclass = 4 SC IV

      if (sourcetype .eq. 0.0) then
         if (sclass .eq. 0.0) then
            attenName = 'Zhao etal. (2006)-Crustal, Hard Rock'
         elseif (sclass .eq. 1.0) then
            attenName = 'Zhao etal. (2006)-Crustal, Site Class I'
         elseif (sclass .eq. 2.0) then
            attenName = 'Zhao etal. (2006)-Crustal, Site Class II'
         elseif (sclass .eq. 3.0) then
            attenName = 'Zhao etal. (2006)-Crustal, Site Class III'
         elseif (sclass .eq. 4.0) then
            attenName = 'Zhao etal. (2006)-Crustal, Site Class IV'
         endif
      elseif (sourcetype .eq. 1.0) then
         if (sclass .eq. 0.0) then
            attenName = 'Zhao etal. (2006)-Sub.Int, Hard Rock'
         elseif (sclass .eq. 1.0) then
            attenName = 'Zhao etal. (2006)-Sub.Int, Site Class I'
         elseif (sclass .eq. 2.0) then
            attenName = 'Zhao etal. (2006)-Sub.Int, Site Class II'
         elseif (sclass .eq. 3.0) then
            attenName = 'Zhao etal. (2006)-Sub.Int, Site Class III'
         elseif (sclass .eq. 4.0) then
            attenName = 'Zhao etal. (2006)-Sub.Int, Site Class IV'
         endif
      elseif (sourcetype .eq. 2.0) then
         if (sclass .eq. 0.0) then
            attenName = 'Zhao etal. (2006)-Sub.Slab, Hard Rock'
         elseif (sclass .eq. 1.0) then
            attenName = 'Zhao etal. (2006)-Sub.Slab, Site Class I'
         elseif (sclass .eq. 2.0) then
            attenName = 'Zhao etal. (2006)-Sub.Slab, Site Class II'
         elseif (sclass .eq. 3.0) then
            attenName = 'Zhao etal. (2006)-Sub.Slab, Site Class III'
         elseif (sclass .eq. 4.0) then
            attenName = 'Zhao etal. (2006)-Sub.Slab, Site Class IV'
         endif
      endif

C Find the requested spectral period and corresponding coefficients
      nper = 22

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         aT = a(1)
         bT = b(1)
         cT = c(1)
         dT = d(1)
         eT = e(1)
         SrT = Sr(1)
         SiT = Si(1)
         SsT = Ss(1)
         SslT = Ssl(1)
         ChT = Ch(1)
         C1T = C1(1)
         C2T = C2(1)
         C3T = C3(1)
         C4T = C4(1)
         sigma1T = sigma1(1)
         taucT = tauc(1)
         tauiT = taui(1)
         tausT = taus(1)
         QcT = Qc(1)
         WcT = Wc(1)
         QiT = Qi(1)
         WiT = Wi(1)
         QsT = Qs(1)
         WsT = Ws(1)
         PsT = Ps(1)
         goto 1011
      elseif (specT .ne. 0.0) then

C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1010
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Zhao etal. (2006) Horizontal atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1010       call interp (period(count1),period(count2),a(count1),a(count2),
     +                   specT,aT,iflag)
            call interp (period(count1),period(count2),b(count1),b(count2),
     +                   specT,bT,iflag)
            call interp (period(count1),period(count2),c(count1),c(count2),
     +                   specT,cT,iflag)
            call interp (period(count1),period(count2),d(count1),d(count2),
     +                   specT,dT,iflag)
            call interp (period(count1),period(count2),e(count1),e(count2),
     +                   specT,eT,iflag)
            call interp (period(count1),period(count2),Sr(count1),Sr(count2),
     +                   specT,SrT,iflag)
            call interp (period(count1),period(count2),Si(count1),Si(count2),
     +                   specT,SiT,iflag)
            call interp (period(count1),period(count2),Ss(count1),Ss(count2),
     +                   specT,SsT,iflag)
            call interp (period(count1),period(count2),Ssl(count1),Ssl(count2),
     +                   specT,SslT,iflag)
            call interp (period(count1),period(count2),Ch(count1),Ch(count2),
     +                   specT,ChT,iflag)
            call interp (period(count1),period(count2),C1(count1),C1(count2),
     +                   specT,C1T,iflag)
            call interp (period(count1),period(count2),C2(count1),C2(count2),
     +                   specT,C2T,iflag)
            call interp (period(count1),period(count2),C3(count1),C3(count2),
     +                   specT,C3T,iflag)
            call interp (period(count1),period(count2),C4(count1),C4(count2),
     +                   specT,C4T,iflag)
            call interp (period(count1),period(count2),sigma1(count1),sigma1(count2),
     +                   specT,sigma1T,iflag)
            call interp (period(count1),period(count2),tauc(count1),tauc(count2),
     +                   specT,taucT,iflag)
            call interp (period(count1),period(count2),taui(count1),taui(count2),
     +                   specT,tauiT,iflag)
            call interp (period(count1),period(count2),taus(count1),taus(count2),
     +                   specT,tausT,iflag)
            call interp (period(count1),period(count2),Qc(count1),Qc(count2),
     +                   specT,QcT,iflag)
            call interp (period(count1),period(count2),Wc(count1),Wc(count2),
     +                   specT,WcT,iflag)
            call interp (period(count1),period(count2),Qi(count1),Qi(count2),
     +                   specT,QiT,iflag)
            call interp (period(count1),period(count2),Wi(count1),Wi(count2),
     +                   specT,WiT,iflag)
            call interp (period(count1),period(count2),Qs(count1),Qs(count2),
     +                   specT,QsT,iflag)
            call interp (period(count1),period(count2),Ws(count1),Ws(count2),
     +                   specT,WsT,iflag)
            call interp (period(count1),period(count2),Ps(count1),Ps(count2),
     +                   specT,PsT,iflag)

 1011 period1 = specT

C     Compute base model first (units of cm/s*s)
      if (hypo .lt. hc) then
         deltac = 0.0
      else
         deltac =  1.0
      endif
      if (hypo .gt. 125.0) then
          hypo = 125.0
      endif

C     Set mechanism term and magnitude squared term.
      if (sourcetype .eq. 0 ) then
         if (ftype .eq. 1) then
            mech = SrT
         else
            mech = 0.0
         endif
         msq = QcT*(m - 6.3)*(m-6.3) + WcT
      elseif (sourcetype .eq. 1) then
          mech = SiT
          msq = QiT*(m - 6.3)*(m-6.3) + WiT
      elseif (sourcetype .eq. 2) then
          mech = SsT + SslT*alog(dist)
          msq = PsT*(m-6.5) + QsT*(m - 6.5)*(m-6.5) + WsT
      endif

C     Set Site class term
      if (sclass .eq. 0) then
         classterm = ChT
      elseif (sclass .eq. 1) then
         classterm = C1T
      elseif (sclass .eq. 2) then
         classterm = C2T
      elseif (sclass .eq. 3) then
         classterm = C3T
      elseif (sclass .eq. 4) then
         classterm = C4T
      endif

      r = dist + cT*exp(dT*m)

      lnY = aT*m + bT*dist - alog(r) +eT*deltac*(hypo-hc) +
     1       mech + classterm + msq

c     Set standard error
      phi = sigma1T
      if (sourcetype .eq. 0) then
         sigma = sqrt( sigma1T*sigma1T + taucT*taucT )
         tau = taucT
      elseif (sourcetype .eq. 1) then
         sigma = sqrt( sigma1T*sigma1T + tauiT*tauiT )
         tau = tauiT
      elseif (sourcetype .eq. 2) then
         sigma = sqrt( sigma1T*sigma1T + tausT*tausT )
         tau = tausT
      endif

      return
      end

c -------------------------------------------------------------------
C *** Atkinson and Boore (1984) Horizontal EUS Hard Rock ************
c -------------------------------------------------------------------

      subroutine AB95 ( m, dist, lnY, sigma, specT,
     1                  attenName, period1,iflag )

c     Atkinson and Boore (1995) Eastern North America - Eq model
      real lnY, m, dist, sigma, period1
      real specT, c1T, c2T, c3T, c4T, sig0T
      integer nper, count1, count2,iflag
      character*80 attenName

      parameter (MAXPER=12)
      real c1(MAXPER), c2(MAXPER), c3(MAXPER), c4(MAXPER)
      REAL period(MAXPER), sig0(MAXPER)
      data period / 0.0, 0.05, 0.077, 0.10, 0.127, 0.20, 0.313, 0.50,
     1              0.769, 1.0, 1.25, 2.0 /
      data c1 / 1.841, 2.762, 2.463, 2.301, 2.140, 1.749, 1.265, 0.620,
     1          -0.094, -0.508, -0.900, -1.660 /
      data c2 / 0.686, 0.755, 0.797, 0.829, 0.864, 0.963, 1.094, 1.267,
     1        1.391, 1.428, 1.462, 1.460 /
      data c3 / -0.123, -0.110, -0.113, -0.121, -0.129, -0.148,
     1       -0.165, -0.147, -0.118, -0.094, -0.0710, -0.039 /
      data c4 / 0.00311, 0.00520, 0.00352, 0.00279, 0.00207,
     1          0.00105, 0.00024, 0.00, 0.00, 0.00, 0.00, 0.00 /

      data sig0 / 0.622, 0.622, 0.622, 0.622, 0.616, 0.599, 0.577,
     1  0.553, 0.553, 0.553, 0.553, 0.553 /

      twoPi = 2.0 * 3.1415296

C Find the requested spectral period and corresponding coefficients
      nPer = 12

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c3T     = c3(1)
         c4T     = c4(1)
         sig0T   = sig0(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Atkinson and Boore (1995) EUS (Mw) atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),sig0(count1),sig0(count2),
     +             specT,sig0T,iflag)

 1011 period1 = specT

c     Set atten name
      attenName = 'Atkinson & Boore, (1995), Mw, Eq Model'

      lnY = c1T + c2T*(m-6) + c3T*(m-6)**2 -
     1          alog(dist) - c4T*dist

c     Convert to spectral acceleration in gal
      lnY = lnY + 6.89

      sigma = sig0T

      return
      end

c ------------------------------------------------------------------------
C *** Atkinson and Boore (1984) Horizontal EUS Hard Rock MLg magnitude ***
c ------------------------------------------------------------------------

      subroutine AB95Mn ( m, dist, lnY, sigma, specT,
     1                  attenName, period1,iflag )

      real lnY, m, dist, sigma, period1,mgsigma,sgmod
      real specT, c1T, c2T, c3T, c4T, sig0T
      integer nper, count1, count2,iflag
      character*80 attenName

      parameter (MAXPER=12)
      real c1(MAXPER), c2(MAXPER), c3(MAXPER), c4(MAXPER)
      real period(MAXPER), sig0(MAXPER)
      data period / 0.0, 0.05, 0.077, 0.10, 0.127, 0.20, 0.313, 0.50,
     1              0.769, 1.0, 1.25, 2.0 /
      data c1 / 1.838, 2.759, 2.460, 2.299, 2.138, 1.746, 1.263, 0.618,
     1         -0.096, -0.510, -0.902, -1.662 /
      data c2 / 0.686, 0.755, 0.797, 0.829, 0.863, 0.962, 1.094, 1.266,
     1          1.391, 1.428, 1.462, 1.460 /
      data c3 / -0.1234, -0.1098, -0.1133, -0.1213, -0.1294, -0.1483,
     1        -0.1651, -0.1474, -0.1177, -0.0942, -0.0709, -0.0391 /
      data c4 / 0.003108, 0.005204, 0.003523, 0.002786, 0.002068,
     1    0.001052, 0.000244, 0.00, 0.00, 0.00, 0.00, 0.00 /

      data sig0 / 0.668, 0.668, 0.668, 0.668, 0.682, 0.714, 0.747,
     1     0.783, 0.910, 0.990, 0.990, 0.990 /
      twoPi = 2.0 * 3.1415296

C Find the requested spectral period and corresponding coefficients
      nPer = 12

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c3T     = c3(1)
         c4T     = c4(1)
         sig0T   = sig0(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Atkinson and Boore (1995) EUS (mbLG) atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),sig0(count1),sig0(count2),
     +             specT,sig0T,iflag)

 1011 period1 = specT

c     Set atten name
      attenName = 'Atkinson & Boore, (1995), mbLG, Eq Model '

      lnY = c1T + c2T*(m-6) + c3T*(m-6)**2 -
     1             alog(dist) - c4T*dist

C    Calculate the sigma from the estimate in magnitude conversion.
c    Take partial of ground motion wrt magnitude.
       mgsigma = (c2T*m + 2.0*c3T*(m-6.0))*(c2T*m +
     1            2.0*c3T*(m-6.0))*0.15*0.15

c     Convert to spectral acceleration in gal
      lnY = lnY + 6.89

      sgmod = sig0T
      sigma = sqrt(mgsigma*mgsigma+sgmod*sgmod)
      return
      end

c -------------------------------------------------------------------
C *** Toro et al. (1996) Horizontal MidCon. *************************
c -------------------------------------------------------------------

      subroutine TAS96 ( m, dist, lnY, sigma, specT,
     1                  attenName, period1,iflag )

      real lnY, m, dist, sigma, period1, rm, rmmax
      real specT, c1T, c2T, c3T, c4T, c5T, c6T, c7T
      integer nper, count1, count2,iflag
      character*80 attenName
      real sigma_aMag, sigma_aRjb
      real sig_aMag1T, sig_aMag2T, sig_aMag3T
      real sig_aRjb1T, sig_aRjb2T

      parameter (MAXPER=8)
      real c1(MAXPER), c2(MAXPER), c3(MAXPER), c4(MAXPER), c5(MAXPER)
      real c6(MAXPER), c7(MAXPER), period(MAXPER)
      real sig_aMag1(MAXPER), sig_aMag2(MAXPER), sig_aMag3(MAXPER)
      real sig_aRjb1(MAXPER), sig_aRjb2(MAXPER)
      data period / 0.0, 0.029, 0.04, 0.10, 0.20, 0.40, 1.00, 2.00 /
      data c1 / 2.20, 4.00, 3.68, 2.37, 1.73, 1.07, 0.09, -0.74 /
      data c2 / 0.81, 0.79, 0.80, 0.81, 0.84, 1.05, 1.42, 1.86 /
      data c3 / 0.00, 0.00, 0.00, 0.00, 0.00, -0.10, -0.20, -0.31 /
      data c4 / 1.27, 1.57, 1.46, 1.10, 0.98, 0.93, 0.90, 0.92 /
      data c5 / 1.16, 1.83, 1.77, 1.02, 0.66, 0.56, 0.49, 0.46 /
      data c6 / 0.0021, 0.0008, 0.0013, 0.0040, 0.0042, 0.0033, 0.0023,
     1          0.0017 /
      data c7 /  9.3, 11.1, 10.5,  8.3,  7.5,  7.1,  6.8,  6.9 /
      data sig_aMag1 / 0.55, 0.62, 0.62, 0.59, 0.60, 0.63, 0.63, 0.61 /
      data sig_aMag2 / 0.59, 0.63, 0.63, 0.61, 0.64, 0.68, 0.64, 0.62 /
      data sig_aMag3 / 0.50, 0.50, 0.50, 0.50, 0.56, 0.64, 0.67, 0.66 /
      data sig_aRjb1 / 0.54, 0.62, 0.57, 0.50, 0.45, 0.45, 0.45, 0.45 /
      data sig_aRjb2 / 0.20, 0.35, 0.29, 0.17, 0.12, 0.12, 0.12, 0.12 /
      twoPi = 2.0 * 3.1415296

C Find the requested spectral period and corresponding coefficients
      nPer = 8

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c3T     = c3(1)
         c4T     = c4(1)
         c5T     = c5(1)
         c6T     = c6(1)
         c7T     = c7(1)
         sig_aMag1T = sig_aMag1(1)
         sig_aMag2T = sig_aMag2(1)
         sig_aMag3T = sig_aMag2(1)
         sig_aRjb1T = sig_aRjb1(1)
         sig_aRjb2T = sig_aRjb1(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Toro et al. (1996) MidCont. (Mw) atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c5(count1),c5(count2),
     +             specT,c5T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),sig_aMag1(count1),sig_aMag1(count2),
     +             specT,sig_aMag1T,iflag)
      call interp (period(count1),period(count2),sig_aMag2(count1),sig_aMag2(count2),
     +             specT,sig_aMag2T,iflag)
      call interp (period(count1),period(count2),sig_aMag3(count1),sig_aMag3(count2),
     +             specT,sig_aMag3T,iflag)
      call interp (period(count1),period(count2),sig_aRjb1(count1),sig_aRjb1(count2),
     +             specT,sig_aRjb1T,iflag)
      call interp (period(count1),period(count2),sig_aRjb2(count1),sig_aRjb2(count2),
     +             specT,sig_aRjb2T,iflag)

 1011 period1 = specT

c     Set atten name
      attenName = 'Toro et al. MidCont. (1996)'

      rm = sqrt(dist*dist+c7T*c7T)
      if (rm .le. 100) then
         rmmax=0.0
      else
         rmmax = alog(rm/100.0)
      endif

      lnY = c1T + c2T*(m-6) + c3T*(m-6)**2 -
     1    c4T*alog(rm) - rmmax*(c5T-c4T) - c6T*rm

c     Convert to spectral acceleration in gal
      lnY = lnY + 6.89

C     Set the sigma value.
c      if (specT .eq. 2.0) then
c         sigma = 0.34 + 0.06*(m-6.0)
c      else
c         sigma = 0.36 + 0.07*(m-6.0)
c      endif
c     Aleatory uncertainty - Magnitude Dependence
      if ( m <= 5 ) then
        sigma_aMag = sig_aMag1T
      elseif ( m <= 5.5 ) then
        sigma_aMag = sig_aMag1T+(sig_aMag2T-sig_aMag1T)/(5.5-5) * (m-5)
      elseif ( m <= 8.0 ) then
        sigma_aMag = sig_aMag2T+(sig_aMag3T-sig_aMag2T)/(8.0-5.5) * (m-5.5)
      elseif ( m > 8.0 ) then
        sigma_aMag = sig_aMag3T
      endif

c     Aleatory uncertainty - Distance Dependence
      if ( dist <= 5 ) then
        sigma_aRjb = sig_aRjb1T
      elseif ( dist <= 20 ) then
        sigma_aRjb = sig_aRjb1T + (sig_aRjb2T - sig_aRjb1T)/(20.-5.) * (dist-5)
      elseif ( dist > 20 ) then
        sigma_aRjb = sig_aRjb2T
      endif

      sigma = SQRT(sigma_aMag**2 + sigma_aRjb**2)

      return
      end

c -------------------------------------------------------------------
C *** Toro et al. (1996) Horizontal MidCon., MLg magnitude **********
c -------------------------------------------------------------------

      subroutine TAS96MLg ( m, dist, lnY, sigma, specT,
     1                  attenName, period1,iflag )

      real lnY, m, dist, sigma, period1, rm, rmmax
      real specT, c1T, c2T, c3T, c4T, c5T, c6T, c7T
      integer nper, count1, count2,iflag
      character*80 attenName
      real sigma_aMag, sigma_aRjb
      real sig_aMag1T, sig_aMag2T, sig_aMag3T
      real sig_aRjb1T, sig_aRjb2T

      parameter (MAXPER=8)
      real c1(MAXPER), c2(MAXPER), c3(MAXPER), c4(MAXPER), c5(MAXPER)
      real c6(MAXPER), c7(MAXPER), period(MAXPER)
      real sig_aMag1(MAXPER), sig_aMag2(MAXPER), sig_aMag3(MAXPER)
      real sig_aRjb1(MAXPER), sig_aRjb2(MAXPER)
      data period / 0.0, 0.029, 0.04, 0.10, 0.20, 0.40, 1.00, 2.00 /
      data c1 / 2.07, 3.87, 3.54, 2.36, 1.60, 0.90, -0.12, -0.97 /
      data c2 / 1.20, 1.19, 1.19, 1.23, 1.24, 1.70, 2.05, 2.52 /
      data c3 / 0.00, 0.00, 0.00, 0.00, 0.00, -0.26, -0.34, -0.47 /
      data c4 / 1.28, 1.58, 1.46, 1.12, 0.98, 0.94, 0.90, 0.93 /
      data c5 / 1.23, 1.90, 1.84, 1.05, 0.74, 0.65, 0.59, 0.60 /
      data c6 / 0.0018, 0.0005, 0.0010, 0.0043, 0.0039, 0.0030, 0.0019,
     1          0.0012 /
      data c7 /  9.3, 11.1, 10.5,  8.5,  7.5,  7.2,  6.8,  7.0 /
      data sig_aMag1 / 0.58, 0.57, 0.57, 0.54, 0.54, 0.58, 0.62, 0.63 /
      data sig_aMag2 / 0.58, 0.58, 0.58, 0.57, 0.63, 0.70, 0.81, 0.81 /
      data sig_aMag3 / 0.44, 0.44, 0.44, 0.44, 0.51, 0.59, 0.61, 0.61 /
      data sig_aRjb1 / 0.54, 0.62, 0.57, 0.50, 0.45, 0.45, 0.45, 0.45 /
      data sig_aRjb2 / 0.20, 0.35, 0.29, 0.17, 0.12, 0.12, 0.12, 0.12 /
      twoPi = 2.0 * 3.1415296

C Find the requested spectral period and corresponding coefficients
      nPer = 8

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c3T     = c3(1)
         c4T     = c4(1)
         c5T     = c5(1)
         c6T     = c6(1)
         c7T     = c7(1)
         sig_aMag1T = sig_aMag1(1)
         sig_aMag2T = sig_aMag2(1)
         sig_aMag3T = sig_aMag2(1)
         sig_aRjb1T = sig_aRjb1(1)
         sig_aRjb2T = sig_aRjb1(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Toro et al. (1996) MidCont. (MLg) atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c5(count1),c5(count2),
     +             specT,c5T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),sig_aMag1(count1),sig_aMag1(count2),
     +             specT,sig_aMag1T,iflag)
      call interp (period(count1),period(count2),sig_aMag2(count1),sig_aMag2(count2),
     +             specT,sig_aMag2T,iflag)
      call interp (period(count1),period(count2),sig_aMag3(count1),sig_aMag3(count2),
     +             specT,sig_aMag3T,iflag)
      call interp (period(count1),period(count2),sig_aRjb1(count1),sig_aRjb1(count2),
     +             specT,sig_aRjb1T,iflag)
      call interp (period(count1),period(count2),sig_aRjb2(count1),sig_aRjb2(count2),
     +             specT,sig_aRjb2T,iflag)

 1011 period1 = specT

c     Set atten name
      attenName = 'Toro et al. MidCon. (1996), MLg Magnitude'

      rm = sqrt(dist*dist+c7T*c7T)

      if (rm .le. 100) then
         rmmax=0.0
      else
         rmmax = alog(rm/100.0)
      endif

      lnY = c1T + c2T*(m-6) + c3T*(m-6)**2 -
     1    c4T*alog(rm) - rmmax*(c5T-c4T) - c6T*rm

c     Convert to spectral acceleration in gal
      lnY = lnY + 6.89

C     Set the sigma value.
c      if (specT .eq. 2.0) then
c         sigma = 0.37 + 0.10*(m-6.0)
c      elseif (specT .eq. 1.0) then
c         sigma = 0.35 + 0.08*(m-6.0)
c      else
c         sigma = 0.34 + 0.07*(m-6.0)
c      endif
C     Aleatory uncertainty - Magnitude Dependence
      if ( m <= 5 ) then
        sigma_aMag = sig_aMag1T
      elseif ( m <= 6.0 ) then
        sigma_aMag = sig_aMag1T+(sig_aMag2T-sig_aMag1T)/(6.0-5) * (m-5)
      elseif ( m <= 7.5 ) then
        sigma_aMag = sig_aMag2T+(sig_aMag3T-sig_aMag2T)/(7.5-6.0) * (m-6.0)
      elseif ( m > 7.5 ) then
        sigma_aMag = sig_aMag3T
      endif
C     Aleatory uncertainty - Distance Dependence
      if ( dist <= 5 ) then
        sigma_aRjb = sig_aRjb1T
      elseif ( dist <= 20 ) then
        sigma_aRjb = sig_aRjb1T + (sig_aRjb2T - sig_aRjb1T)/(20.-5.) * (dist-5)
      elseif ( dist > 20 ) then
        sigma_aRjb = sig_aRjb2T
      endif

      sigma = SQRT(sigma_aMag**2 + sigma_aRjb**2)

      return
      end

c -------------------------------------------------------------------
C *** Toro et al. (1996) Horizontal Gulf ****************************
c -------------------------------------------------------------------

      subroutine TAS96Gulf ( m, dist, lnY, sigma, specT,
     1                  attenName, period1,iflag )

      real lnY, m, dist, sigma, period1, rm, rmmax
      real specT, c1T, c2T, c3T, c4T, c5T, c6T, c7T
      integer nper, count1, count2,iflag
      character*80 attenName
      real sigma_aMag, sigma_aRjb
      real sig_aMag1T, sig_aMag2T, sig_aMag3T
      real sig_aRjb1T, sig_aRjb2T

      parameter (MAXPER=8)
      real c1(MAXPER), c2(MAXPER), c3(MAXPER), c4(MAXPER), c5(MAXPER)
      real c6(MAXPER), c7(MAXPER), period(MAXPER)
      real sig_aMag1(MAXPER), sig_aMag2(MAXPER), sig_aMag3(MAXPER)
      real sig_aRjb1(MAXPER), sig_aRjb2(MAXPER)
      data period / 0.0, 0.029, 0.04, 0.10, 0.20, 0.40, 1.00, 2.00 /
      data c1 / 2.91, 4.81, 5.19, 5.08, 3.10, 1.64, 0.24, -0.81 /
      data c2 / 0.92, 0.91, 0.91, 1.00, 0.92, 1.06, 1.31, 1.72 /
      data c3 / 0.00, 0.00, 0.00, 0.00, 0.00, -0.08, -0.15, -0.26 /
      data c4 / 1.49, 1.89, 1.96, 1.87, 1.34, 0.99, 0.79, 0.74 /
      data c5 / 1.61, 1.80, 1.96, 2.52, 1.95, 1.27, 0.82, 0.71 /
      data c6 / 0.0014, 0.0008, 0.0004, 0.0002, 0.0017, 0.0036, 0.0034,
     1          0.0025 /
      data c7 / 10.9, 11.9, 12.9, 14.1, 11.4,  8.9,  7.2,  6.6 /
      data sig_aMag1 / 0.55, 0.62, 0.62, 0.59, 0.60, 0.63, 0.63, 0.61 /
      data sig_aMag2 / 0.59, 0.63, 0.63, 0.61, 0.64, 0.68, 0.64, 0.62 /
      data sig_aMag3 / 0.50, 0.50, 0.50, 0.50, 0.56, 0.64, 0.67, 0.66 /
      data sig_aRjb1 / 0.48, 0.68, 0.63, 0.53, 0.50, 0.50, 0.51, 0.54 /
      data sig_aRjb2 / 0.30, 0.47, 0.47, 0.38, 0.33, 0.34, 0.39, 0.39 /
      twoPi = 2.0 * 3.1415296

C Find the requested spectral period and corresponding coefficients
      nPer = 8

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c3T     = c3(1)
         c4T     = c4(1)
         c5T     = c5(1)
         c6T     = c6(1)
         c7T     = c7(1)
         sig_aMag1T = sig_aMag1(1)
         sig_aMag2T = sig_aMag2(1)
         sig_aMag3T = sig_aMag2(1)
         sig_aRjb1T = sig_aRjb1(1)
         sig_aRjb2T = sig_aRjb1(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Toro et al. (1996) Gulf (Mw) atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c5(count1),c5(count2),
     +             specT,c5T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),sig_aMag1(count1),sig_aMag1(count2),
     +             specT,sig_aMag1T,iflag)
      call interp (period(count1),period(count2),sig_aMag2(count1),sig_aMag2(count2),
     +             specT,sig_aMag2T,iflag)
      call interp (period(count1),period(count2),sig_aMag3(count1),sig_aMag3(count2),
     +             specT,sig_aMag3T,iflag)
      call interp (period(count1),period(count2),sig_aRjb1(count1),sig_aRjb1(count2),
     +             specT,sig_aRjb1T,iflag)
      call interp (period(count1),period(count2),sig_aRjb2(count1),sig_aRjb2(count2),
     +             specT,sig_aRjb2T,iflag)

 1011 period1 = specT

c     Set atten name
      attenName = 'Toro et al. Gulf (1996)'

      rm = sqrt(dist*dist+c7T*c7T)

      if (rm .le. 100) then
         rmmax=0.0
      else
         rmmax = alog(rm/100.0)
      endif

      lnY = c1T + c2T*(m-6) + c3T*(m-6)**2 -
     1    c4T*alog(rm) - rmmax*(c5T-c4T) - c6T*rm

c     Convert to spectral acceleration in gal
      lnY = lnY + 6.89

C     Set the sigma value.
c      if (specT .eq. 2.00) then
c         sigma = 0.34 + 0.06*(m-6.0)
c      else
c         sigma = 0.36 + 0.07*(m-6.0)
c      endif
C     Aleatory uncertainty - Magnitude Dependence
      if ( m <= 5 ) then
        sigma_aMag = sig_aMag1T
      elseif ( m <= 5.5 ) then
        sigma_aMag = sig_aMag1T+(sig_aMag2T-sig_aMag1T)/(5.5-5) * (m-5)
      elseif ( m <= 8.0 ) then
        sigma_aMag = sig_aMag2T+(sig_aMag3T-sig_aMag2T)/(8.0-5.5) * (m-5.5)
      elseif ( m > 8.0 ) then
        sigma_aMag = sig_aMag3T
      endif
C     Aleatory uncertainty - Distance Dependence
      if ( dist <= 5 ) then
        sigma_aRjb = sig_aRjb1T
      elseif ( dist <= 20 ) then
        sigma_aRjb = sig_aRjb1T + (sig_aRjb2T - sig_aRjb1T)/(20.-5.) * (dist-5)
      elseif ( dist > 20 ) then
        sigma_aRjb = sig_aRjb2T
      endif

      sigma = SQRT(sigma_aMag**2 + sigma_aRjb**2)

      return
      end

c -------------------------------------------------------------------
C *** Toro et al. (1996) Horizontal Gulf, MLg Magnitude *************
c -------------------------------------------------------------------

      subroutine TAS96GulfMLg ( m, dist, lnY, sigma, specT,
     1                  attenName, period1,iflag )

      real lnY, m, dist, sigma, period1, rm, rmmax
      real specT, c1T, c2T, c3T, c4T, c5T, c6T, c7T
      integer nper, count1, count2,iflag
      character*80 attenName
      real sigma_aMag, sigma_aRjb
      real sig_aMag1T, sig_aMag2T, sig_aMag3T
      real sig_aRjb1T, sig_aRjb2T

      parameter (MAXPER=8)
      real c1(MAXPER), c2(MAXPER), c3(MAXPER), c4(MAXPER), c5(MAXPER)
      real c6(MAXPER), c7(MAXPER), period(MAXPER)
      real sig_aMag1(MAXPER), sig_aMag2(MAXPER), sig_aMag3(MAXPER)
      real sig_aRjb1(MAXPER), sig_aRjb2(MAXPER)
      data period / 0.0, 0.029, 0.04, 0.10, 0.20, 0.40, 1.00, 2.00 /
      data c1 / 2.80, 4.68, 5.08, 4.65, 3.00, 1.49, 0.06, -1.01 /
      data c2 / 1.31, 1.30, 1.29, 1.30, 1.31, 1.74, 1.97, 2.38 /
      data c3 / 0.00, 0.00, 0.00, 0.00, 0.00, -0.26, -0.32, -0.42 /
      data c4 / 1.49, 1.89, 1.97, 1.78, 1.35, 1.00, 0.80, 0.75 /
      data c5 / 1.68, 1.88, 2.04, 2.41, 2.03, 1.36, 0.92, 0.83 /
      data c6 / 0.0017, 0.0005, 0.0000, 0.0000, 0.0014, 0.0032, 0.0030,
     1          0.0032 /
      data c7 / 10.9, 11.9, 12.9, 13.8, 11.4,  9.0,  7.3,  6.8 /
      data sig_aMag1 / 0.58, 0.57, 0.57, 0.54, 0.54, 0.58, 0.62, 0.63 /
      data sig_aMag2 / 0.58, 0.58, 0.58, 0.57, 0.63, 0.70, 0.81, 0.81 /
      data sig_aMag3 / 0.44, 0.44, 0.44, 0.44, 0.51, 0.59, 0.61, 0.61 /
      data sig_aRjb1 / 0.48, 0.68, 0.63, 0.53, 0.50, 0.50, 0.51, 0.54 /
      data sig_aRjb2 / 0.30, 0.47, 0.47, 0.38, 0.33, 0.34, 0.39, 0.39 /
      twoPi = 2.0 * 3.1415296

C Find the requested spectral period and corresponding coefficients
      nPer = 8

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c3T     = c3(1)
         c4T     = c4(1)
         c5T     = c5(1)
         c6T     = c6(1)
         c7T     = c7(1)
         sig_aMag1T = sig_aMag1(1)
         sig_aMag2T = sig_aMag2(1)
         sig_aMag3T = sig_aMag2(1)
         sig_aRjb1T = sig_aRjb1(1)
         sig_aRjb2T = sig_aRjb1(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Toro et al. (1996) Gulf (MLg) atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c5(count1),c5(count2),
     +             specT,c5T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),sig_aMag1(count1),sig_aMag1(count2),
     +             specT,sig_aMag1T,iflag)
      call interp (period(count1),period(count2),sig_aMag2(count1),sig_aMag2(count2),
     +             specT,sig_aMag2T,iflag)
      call interp (period(count1),period(count2),sig_aMag3(count1),sig_aMag3(count2),
     +             specT,sig_aMag3T,iflag)
      call interp (period(count1),period(count2),sig_aRjb1(count1),sig_aRjb1(count2),
     +             specT,sig_aRjb1T,iflag)
      call interp (period(count1),period(count2),sig_aRjb2(count1),sig_aRjb2(count2),
     +             specT,sig_aRjb2T,iflag)

 1011 period1 = specT

c     Set atten name
      attenName = 'Toro et al. Gulf (1996), MLg magnitude'

      rm = sqrt(dist*dist+c7T*c7T)

      if (rm .le. 100) then
         rmmax=0.0
      else
         rmmax = alog(rm/100.0)
      endif

      lnY = c1T + c2T*(m-6) + c3T*(m-6)**2 -
     1    c4T*alog(rm) - rmmax*(c5T-c4T) - c6T*rm

c     Convert to spectral acceleration in gal
      lnY = lnY + 6.89

C     Set the sigma value.
c      if (specT .eq. 2.00) then
c         sigma = 0.37 + 0.10*(m-6.0)
c      elseif (specT .eq. 1.00) then
c         sigma = 0.35 + 0.08*(m-6.0)
c      else
c         sigma = 0.34 + 0.07*(m-6.0)
c      endif
c     Aleatory uncertainty - Magnitude Dependence
      if ( m <= 5 ) then
        sigma_aMag = sig_aMag1T
      elseif ( m <= 6.0 ) then
        sigma_aMag = sig_aMag1T+(sig_aMag2T-sig_aMag1T)/(6.0-5) * (m-5)
      elseif ( m <= 7.5 ) then
        sigma_aMag = sig_aMag2T+(sig_aMag3T-sig_aMag2T)/(7.5-6.0) * (m-6.0)
      elseif ( m > 7.5 ) then
        sigma_aMag = sig_aMag3T
      endif
c     Aleatory uncertainty - Distance Dependence
      if ( dist <= 5 ) then
        sigma_aRjb = sig_aRjb1T
      elseif ( dist <= 20 ) then
        sigma_aRjb = sig_aRjb1T + (sig_aRjb2T - sig_aRjb1T)/(20.-5.) * (dist-5)
      elseif ( dist > 20 ) then
        sigma_aRjb = sig_aRjb2T
      endif

      sigma = SQRT(sigma_aMag**2 + sigma_aRjb**2)

      return
      end

c ---------------------------------------------------------------
C *** McVerry et al. (1993) New Zealand Horizontal (PGA only) ***
c ---------------------------------------------------------------

      subroutine mcverry93 ( mag, rupDist, lnY, sigma, attenName, ftype)

      real mag, rupDist, lnY, sigma, pgalog10
      character*80 attenName
      attenName = 'McVerry et al. (1993)'

c     Model A (all depths)
C Note the Log(rupDist) term was increased by 1 km to prevent the
C code from bombing for a rupDist of 0 km.
C 11/15/95

      pgalog10 = 0.209*mag - 0.00297*rupDist - 0.449*alog10(rupDist+1)
     1           - 1.434
      lnY = 2.303 * pgaLog10 + 6.889
      sigma = 0.63

c     modify for depth (50% increase)  *NAA modification*
      if ( ftype .eq. 1 ) then
        lnY = lnY + 0.4
      endif

      return
      end

c ------------------------------------------------------------
C *** Fukushima (1990) Horizontal Rock (PGA only) ************
c ------------------------------------------------------------

      subroutine fukushima90 ( mag, rupDist, lnY, sigma, attenName )

      real mag, rupDist, lnY, sigma
      character*80 attenName
      attenName = 'McVerry et al. (1993)'

c     Model A (all depths)
      pgaLog10 = 0.41*mag - 0.0034*rupDist
     1           - alog10(rupDist+0.032*10.**(0.41*mag)) + 1.3
      lnY = 2.303 * pgaLog10
      sigma = 0.48

c     modify for rock (60 percent of soil)
      lnY = lnY - 0.5

      return
      end

c ------------------------------------------------------------
C *** Loh High Speed Rail Horizontal (PGA only) **************
c ------------------------------------------------------------

      subroutine HighSpeedRail ( mag, rupDist, lnY, sigma,
     1            attenName, period )

      real mag, rupDist, lnY, sigma, period, lnY1, lnY2, lnY3
      character*80 attenName

c     Kanai form
      lnY1  = 0.137 + 0.708*mag -1.7266*alog(rupDist+40)

c     Campbell From
      lnY2 = -4.02 + 1.298*mag -1.739*alog(rupDist+0.177*exp(0.746*mag))

c     New Joyner Boore Form
      lnY3 = -5.22 + 0.7529*mag - 0.013*mag**2 - 0.0027*rupDist
     1       -0.5258*alog(rupDist+1)

c     lnY = (lnY1+lnY2+lnY3)/3.
c     sigma = 0.647
      lnY = lnY3
      sigma = 0.617
      attenName = 'High Speed Rail - Modified Joyner Boore, PGA'
      period = 0.0

c     Convert from g to gal
      lnY = lnY + 6.89
      return
      end

c ------------------------------------------------------------
C *** Loh (1996) Horizontal Rock (PGA only) ******************
c ------------------------------------------------------------
      subroutine Loh96 ( mag, rupDist, lnY, sigma, attenName, period )

      real mag, rupDist, lnY, sigma, period
      character*80 attenName

c     Loh 1996
      lnY = -3.601 + 1.1158*mag -
     1      1.6471*alog(rupdist+0.141*exp(0.656*mag))

      sigma = 0.617
      attenName = 'Loh (1996), PGA'
      period = 0.0

c     Convert from g to gal
      lnY = lnY + 6.89
      return
      end

c ------------------------------------------------------------
C *** Campbell and Bozorgnia (2003) Horizontal ***************
c ------------------------------------------------------------
      subroutine Camp03_H ( m, seismodist, jbDist, lnY, sigma,
     1                      specT, period1, Svfs, Ssr, Sfr,
     2                      Frv, Fth, hwflag, iflag )

c     Campbell and Bozorgnia (2003) - Horizontal

      parameter (MAXPER=15)
      real seismodist, m, lnY, sigma, period1, jbDist
      integer iflag, hwflag
      real Svfs, Ssr, Sfr, Frv, Fth
      real period(MAXPER)
      real c1(MAXPER), c2(MAXPER), c3(MAXPER), c4(MAXPER),
     1     c5(MAXPER), c6(MAXPER), c7(MAXPER), c8(MAXPER),
     2     c9(MAXPER), c10(MAXPER), c11(MAXPER), c12(MAXPER),
     3     c13(MAXPER), c14(MAXPER), c15(MAXPER), c16(MAXPER),
     4     c17(MAXPER)
      real specT, c1T, c2T, c3T, c4T, c5T, c6T, c7T, c8T
      real c9T, c10T, c11T, c12T, c13T, c14T, c15T, c16T, c17T
      integer nper, count1, count2
      real hw, fhwm, fhws, f1, f2, f3, f4, f5

      data period / 0.00, 0.05, 0.075, 0.10, 0.15, 0.20, 0.30,
     1              0.40, 0.50, 0.75,  1.00, 1.50, 2.00, 3.00, 4.00 /
      data c1 / -4.033, -3.740, -3.076, -2.661, -2.270, -2.771,
     1          -2.999, -3.511, -3.556, -3.709, -3.867, -4.093,
     2          -4.311, -4.817, -5.211 /
      data c2 / 0.812, 0.812, 0.812, 0.812, 0.812, 0.812, 0.812,
     1          0.812, 0.812, 0.812, 0.812, 0.812, 0.812, 0.812,
     2          0.812 /
      data c3 / 0.036,  0.036,  0.050,  0.060,  0.041,  0.030, 0.007,
     1         -0.015, -0.035, -0.071, -0.101, -0.150, -0.180,
     2         -0.193, -0.202 /
      data c4 /-1.061, -1.121, -1.252, -1.308, -1.324, -1.153,
     1         -1.080, -0.964, -0.964, -0.964, -0.964, -0.964, -0.964,
     2         -0.964, -0.964 /
      data c5 / 0.041, 0.058, 0.121, 0.166, 0.212, 0.098, 0.059,
     1          0.024, 0.023, 0.021, 0.019, 0.019, 0.019, 0.019, 0.019 /
      data c6 / -0.005, -0.004, -0.005, -0.009, -0.033, -0.014, -0.007,
     1          -0.002, -0.002, -0.002,  0.000,  0.000,  0.000,  0.000,
     2           0.000 /
      data c7 / -0.018, -0.028, -0.051, -0.068, -0.081, -0.038, -0.022,
     1          -0.005, -0.004, -0.002,  0.000,  0.000,  0.000,  0.000,
     2           0.000 /
      data c8 / 0.766, 0.724, 0.648, 0.621, 0.613, 0.704, 0.752, 0.842,
     1          0.842, 0.842, 0.842, 0.842, 0.842, 0.842, 0.842 /
      data c9 / 0.034,  0.032,  0.040,  0.046,  0.031,  0.026, 0.007,
     1         -0.016, -0.036, -0.074, -0.105, -0.155, -0.187,
     2         -0.200, -0.209 /
      data c10 / 0.343, 0.302, 0.243, 0.224, 0.318, 0.296, 0.359,
     1           0.379, 0.406, 0.347, 0.329, 0.217, 0.060,
     2          -0.079, -0.061 /
      data c11 / 0.351, 0.362, 0.333, 0.313, 0.344, 0.342, 0.385,
     1           0.438, 0.479, 0.419, 0.338, 0.188, 0.064, 0.021,
     2           0.057 /
      data c12 / -0.123, -0.140, -0.150, -0.146, -0.176,
     1           -0.148, -0.162, -0.078, -0.122, -0.108, -0.073,
     2           -0.079, -0.124, -0.154, -0.054 /
      data c13 / -0.138, -0.158, -0.196, -0.253, -0.267, -0.183,
     1           -0.157, -0.129, -0.130, -0.124, -0.072, -0.056,
     2           -0.116, -0.117, -0.261 /
      data c14 / -0.289, -0.205, -0.208, -0.258, -0.284, -0.359,
     1           -0.585, -0.557, -0.701, -0.796, -0.858, -0.954,
     2           -0.916, -0.873, -0.889 /
      data c15 / 0.370, 0.370, 0.370, 0.370, 0.370, 0.370, 0.370,
     1           0.370, 0.370, 0.331, 0.281, 0.210, 0.160, 0.089,
     2           0.039 /
      data c16 / 0.920, 0.940, 0.952, 0.958, 0.974, 0.981, 0.984,
     1           0.987, 0.990, 1.021, 1.021, 1.021, 1.021, 1.021,
     2           1.021 /
      data c17 / 0.219, 0.239, 0.251, 0.257, 0.273, 0.280, 0.283,
     1           0.286, 0.289, 0.320, 0.320, 0.320, 0.320, 0.320,
     2           0.320 /

C Find the requested spectral period and corresponding coefficients
      nPer = 15
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c3T     = c3(1)
         c4T     = c4(1)
         c5T     = c5(1)
         c6T     = c6(1)
         c7T     = c7(1)
         c8T     = c8(1)
         c9T     = c9(1)
         c10T    = c10(1)
         c11T    = c11(1)
         c12T    = c12(1)
         c13T    = c13(1)
         c14T    = c14(1)
         c15T    = c15(1)
         c16T    = c16(1)
         c17T    = c17(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Campbell and Bozorgnia (2003) Horizonal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),c1(count1),c1(count2),
     +                   specT,c1T,iflag)
            call interp (period(count1),period(count2),c2(count1),c2(count2),
     +                   specT,c2T,iflag)
            call interp (period(count1),period(count2),c3(count1),c3(count2),
     +                   specT,c3T,iflag)
            call interp (period(count1),period(count2),c4(count1),c4(count2),
     +                   specT,c4T,iflag)
            call interp (period(count1),period(count2),c5(count1),c5(count2),
     +                   specT,c5T,iflag)
            call interp (period(count1),period(count2),c6(count1),c6(count2),
     +                   specT,c6T,iflag)
            call interp (period(count1),period(count2),c7(count1),c7(count2),
     +                   specT,c7T,iflag)
            call interp (period(count1),period(count2),c8(count1),c8(count2),
     +                   specT,c8T,iflag)
            call interp (period(count1),period(count2),c9(count1),c9(count2),
     +                   specT,c9T,iflag)
            call interp (period(count1),period(count2),c10(count1),c10(count2),
     +                   specT,c10T,iflag)
            call interp (period(count1),period(count2),c11(count1),c11(count2),
     +                   specT,c11T,iflag)
            call interp (period(count1),period(count2),c12(count1),c12(count2),
     +                   specT,c12T,iflag)
            call interp (period(count1),period(count2),c13(count1),c13(count2),
     +                   specT,c13T,iflag)
            call interp (period(count1),period(count2),c14(count1),c14(count2),
     +                   specT,c14T,iflag)
            call interp (period(count1),period(count2),c15(count1),c15(count2),
     +                   specT,c15T,iflag)
            call interp (period(count1),period(count2),c16(count1),c16(count2),
     +                   specT,c16T,iflag)
            call interp (period(count1),period(count2),c17(count1),c17(count2),
     +                   specT,c17T,iflag)
 1011 period1 = specT

C     Compute ground motion:
      f1 = c2T*m + c3T*(8.5-m)**2.0
      gs = c5T + c6T*(Svfs + Ssr) + c7T*Sfr
      f2 = seismoDist*seismoDist + gs*gs*
     1       (exp(c8T*m+c9T*(8.5-m)**2.0) )**2.0
      f3 = c10T*Frv + c11T*Fth
      f4 = c12T*Svfs + c13T*Ssr + c14T*Sfr

C     Check for HW factor.
      sum = 0.0
      sum = Svfs + Ssr + Sfr
      if (sum .eq. 0.0) then
         f5 = 0.0
      else
         if (hwflag .eq. 1) then
c     Compute HW term
            if (jbDist .lt. 5.0) then
               hw = sum*(5.0 - jbDist)/5.0
            else
               hw = 0.0
            endif
c     Compute Magnitude term
            if (m .lt. 5.5) then
               fhwm = 0.0
            elseif (m .le. 6.5) then
               fhwm = m - 5.5
            else
               fhwm = 1.0
            endif
c     Compute SeismoDist term
            if (seismoDist .ge. 8.0) then
               fhws = c15T
            else
               fhws = c15T*(seismoDist/8.0)
            endif
            f5 = hw*fhwm*fhws*(Frv+Fth)
         else
            f5 = 0.0
         endif

      endif

      LnY = c1T + f1 + c4T*alog(sqrt(f2)) + f3 + f4 + f5

c     Set sigma as a function of Mw
      if ( m .lt. 7.4 ) then
         sigma = c16T - 0.07*m
      else
         sigma = c16T - 0.518
      endif

c     Convert units spectral acceleration in gal
      lnY = lnY + 6.89

      return
      end

c ------------------------------------------------------------------
C *** Campbell and Bozorgnia (2003) Vertical ***********************
c ------------------------------------------------------------------
      subroutine Camp03_V ( m, seismodist, jbDist, lnY, sigma,
     1                      specT, period1, Svfs, Ssr, Sfr,
     2                      Frv, Fth, hwflag, iflag )

c     Campbell and Bozorgnia (2003) - Vertical

      parameter (MAXPER=15)
      real seismodist, m, lnY, sigma, period1, jbDist
      integer iflag, hwflag
      real Svfs, Ssr, Sfr, Frv, Fth
      real period(MAXPER)
      real c1(MAXPER), c2(MAXPER), c3(MAXPER), c4(MAXPER),
     1     c5(MAXPER), c6(MAXPER), c7(MAXPER), c8(MAXPER),
     2     c9(MAXPER), c10(MAXPER), c11(MAXPER), c12(MAXPER),
     3     c13(MAXPER), c14(MAXPER), c15(MAXPER), c16(MAXPER),
     4     c17(MAXPER)
      real specT, c1T, c2T, c3T, c4T, c5T, c6T, c7T, c8T
      real c9T, c10T, c11T, c12T, c13T, c14T, c15T, c16T, c17T
      integer nper, count1, count2
      real hw, fhwm, fhws, f1, f2, f3, f4, f5

      data period / 0.00, 0.05, 0.075, 0.10, 0.15, 0.20, 0.30,
     1              0.40, 0.50, 0.75,  1.00, 1.50, 2.00, 3.00, 4.00 /
      data c1 / -3.108, -1.918, -1.504, -1.672, -2.323, -2.998,
     1          -3.721, -4.536, -4.651, -4.903, -4.950, -5.073,
     2          -5.292, -5.748, -6.042 /
      data c2 / 0.756, 0.756, 0.756, 0.756, 0.756, 0.756, 0.756,
     1          0.756, 0.756, 0.756, 0.756, 0.756, 0.756, 0.756,
     2          0.756 /
      data c3 / 0.000,  0.000,  0.000,  0.000,  0.000,  0.000, 0.007,
     1         -0.015, -0.035, -0.071, -0.101, -0.150, -0.180,
     2         -0.193, -0.202 /
      data c4 /-1.287, -1.517, -1.551, -1.473, -1.280, -1.131,
     1         -1.028, -0.812, -0.812, -0.812, -0.812, -0.812, -0.812,
     2         -0.812, -0.812 /
      data c5 / 0.142, 0.309, 0.343, 0.282, 0.171, 0.089, 0.050,
     1          0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012 /
      data c6 / 0.046, 0.069, 0.083, 0.062, 0.045, 0.028, 0.010,
     1          0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000,
     2          0.000 /
      data c7 / -0.040, -0.023,  0.000,  0.001,  0.008,  0.004,  0.004,
     1           0.004,  0.000,  0.000,  0.000,  0.000,  0.000,  0.000,
     2           0.000 /
      data c8 / 0.587, 0.498, 0.487, 0.513, 0.591, 0.668, 0.736, 0.931,
     1          0.931, 0.931, 0.931, 0.931, 0.931, 0.931, 0.931 /
      data c9 / 0.000,  0.000,  0.000,  0.000,  0.000,  0.000, 0.007,
     1         -0.018, -0.043, -0.087, -0.124, -0.184, -0.222,
     2         -0.238, -0.248 /
      data c10 / 0.253, 0.058, 0.135, 0.168, 0.223, 0.234, 0.249,
     1           0.299, 0.243, 0.295, 0.266, 0.171, 0.114,
     2           0.179, 0.237 /
      data c11 / 0.173, 0.100, 0.182, 0.210, 0.238, 0.256, 0.328,
     1           0.317, 0.354, 0.418, 0.315, 0.211, 0.115, 0.159,
     2           0.134 /
      data c12 / -0.135, -0.195, -0.224, -0.198, -0.170,
     1           -0.098, -0.026, -0.017, -0.020,  0.078,  0.043,
     2           -0.038,  0.033, -0.010, -0.059 /
      data c13 / -0.138, -0.274, -0.303, -0.275, -0.175, -0.041,
     1            0.082,  0.022,  0.092,  0.091,  0.101, -0.018,
     2           -0.022, -0.047, -0.267 /
      data c14 / -0.256, -0.219, -0.263, -0.252, -0.270, -0.311,
     1           -0.265, -0.257, -0.293, -0.349, -0.481, -0.518,
     2           -0.503, -0.539, -0.606 /
      data c15 / 0.630, 0.630, 0.630, 0.630, 0.630, 0.571, 0.488,
     1           0.428, 0.383, 0.299, 0.240, 0.240, 0.240, 0.240,
     2           0.240 /
      data c16 / 0.975, 1.031, 1.031, 1.031, 1.031, 1.031, 1.031,
     1           1.031, 1.031, 1.031, 1.031, 1.031, 1.031, 1.031,
     2           1.031 /
      data c17 / 0.274, 0.330, 0.330, 0.330, 0.330, 0.330, 0.330,
     1           0.330, 0.330, 0.330, 0.330, 0.330, 0.330, 0.330,
     2           0.330 /

C Find the requested spectral period and corresponding coefficients
      nPer = 15
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c3T     = c3(1)
         c4T     = c4(1)
         c5T     = c5(1)
         c6T     = c6(1)
         c7T     = c7(1)
         c8T     = c8(1)
         c9T     = c9(1)
         c10T    = c10(1)
         c11T    = c11(1)
         c12T    = c12(1)
         c13T    = c13(1)
         c14T    = c14(1)
         c15T    = c15(1)
         c16T    = c16(1)
         c17T    = c17(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Campbell and Bozorgnia (2003) Vertical'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),c1(count1),c1(count2),
     +                   specT,c1T,iflag)
            call interp (period(count1),period(count2),c2(count1),c2(count2),
     +                   specT,c2T,iflag)
            call interp (period(count1),period(count2),c3(count1),c3(count2),
     +                   specT,c3T,iflag)
            call interp (period(count1),period(count2),c4(count1),c4(count2),
     +                   specT,c4T,iflag)
            call interp (period(count1),period(count2),c5(count1),c5(count2),
     +                   specT,c5T,iflag)
            call interp (period(count1),period(count2),c6(count1),c6(count2),
     +                   specT,c6T,iflag)
            call interp (period(count1),period(count2),c7(count1),c7(count2),
     +                   specT,c7T,iflag)
            call interp (period(count1),period(count2),c8(count1),c8(count2),
     +                   specT,c8T,iflag)
            call interp (period(count1),period(count2),c9(count1),c9(count2),
     +                   specT,c9T,iflag)
            call interp (period(count1),period(count2),c10(count1),c10(count2),
     +                   specT,c10T,iflag)
            call interp (period(count1),period(count2),c11(count1),c11(count2),
     +                   specT,c11T,iflag)
            call interp (period(count1),period(count2),c12(count1),c12(count2),
     +                   specT,c12T,iflag)
            call interp (period(count1),period(count2),c13(count1),c13(count2),
     +                   specT,c13T,iflag)
            call interp (period(count1),period(count2),c14(count1),c14(count2),
     +                   specT,c14T,iflag)
            call interp (period(count1),period(count2),c15(count1),c15(count2),
     +                   specT,c15T,iflag)
            call interp (period(count1),period(count2),c16(count1),c16(count2),
     +                   specT,c16T,iflag)
            call interp (period(count1),period(count2),c17(count1),c17(count2),
     +                   specT,c17T,iflag)

 1011 period1 = specT

C     Compute ground motion:
      f1 = c2T*m+c3T*(8.5-m)**2.0
      gs = c5T + c6T*(Svfs + Ssr) + c7T*Sfr
      f2 = seismoDist*seismoDist + gs*gs*
     1       (exp(c8T*m+c9T*(8.5-m)**2.0) )**2.0
      f3 = c10T*Frv + c11T*Fth
      f4 = c12T*Svfs + c13T*Ssr + c14T*Sfr

C     Check for HW factor.
      sum = 0.0
      sum = Svfs + Ssr + Sfr
      if (sum .eq. 0.0) then
         f5 = 0.0
      else
         if (hwflag .eq. 1) then
c     Compute HW term
            if (jbDist .lt. 5.0) then
               hw = sum*(5.0-jbDist)/5.0
            else
               hw = 0.0
            endif
c     Compute Magnitude term
            if (m .lt. 5.5) then
               fhwm = 0.0
            elseif (m .le. 6.5) then
               fhwm = m - 5.5
            else
               fhwm = 1.0
            endif
c     Compute SeismoDist term
            if (seismoDist .ge. 8.0) then
               fhws = c15T
            else
               fhws = c15T*(seismoDist/8.0)
            endif
            f5 = hw*fhwm*fhws*(Frv+Fth)
         else
            f5 = 0.0
         endif

      endif

      LnY = c1T + f1 + c4T*alog(sqrt(f2)) + f3 + f4 + f5

c     Set sigma as a function of Mw
      if ( m .lt. 7.4 ) then
            sigma = c16T - 0.07*m
          else
            sigma = c16T - 0.518
          endif

c     Convert units spectral acceleration in gal
      lnY = lnY + 6.89

      return
      end

c ------------------------------------------------------------------
C *** Garcia et al. (2005) Horizontal for Subduction Zones, Rock ****
c ------------------------------------------------------------------

      subroutine GarciaH05 ( mag, rupdist, specT, period, lnY, sigma,
     1  iflag, depth )

c     Garcia et al. (2005) Horizontal Subduction (inslab only), Rock
C     Rock Site Conditions

      real mag, rupDist, lnY, sigma, period
      real depth
      real c1(16), c2(16), c3(16), c4(16), c5(16)
      real specT, c1T, c2T, c3T, c4T, c5T, R, Delta
      integer nper, count1, count2,iflag

      real period1(16), sig(16)

      data period1 / 0.0, 0.04, 0.05, 0.075, 0.1, 0.2, 0.3, 0.4, 0.5,
     1               0.75, 1.00, 1.50, 2.0, 3.0, 4.0, 5.0 /
      data c1 /  -0.20, 0.03, 0.10, 0.20, 0.40, 0.05, -0.30, -0.60,
     1           -0.80, -1.30, -1.70, -2.30, -2.70, -3.30, -3.90, -4.30 /
      data c2 / 0.59, 0.59, 0.58, 0.57, 0.55, 0.59, 0.63, 0.64, 0.67,
     1          0.71, 0.75, 0.81, 0.85, 0.89, 0.94, 0.97 /
      data c3 / -0.0039, -0.0043, -0.0043, -0.0043, -0.0041, -0.0037,
     &          -0.0033, -0.0028, -0.0024, -0.0020, -0.0017, -0.0014,
     &          -0.0012, -0.0009, -0.0008, -0.0007 /
      data c4 / 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
     1          1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 /
      data c5 / 0.008, 0.007, 0.008, 0.008, 0.008, 0.007, 0.005, 0.005,
     &          0.004, 0.004, 0.003, 0.002, 0.001, 0.0009, 0.0009, 0.001 /
      data sig / 0.28, 0.32, 0.34, 0.34, 0.33, 0.28, 0.28, 0.27, 0.26,
     &           0.27, 0.28, 0.28, 0.26, 0.26, 0.25, 0.25 /

C Find the requested spectral period and corresponding coefficients
      nPer = 16

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period  = period1(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c3T     = c3(1)
         c4T     = c4(1)
         c5T     = c5(1)
         sigT    = sig(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period1(i) .and. specT .le. period1(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Garcia et al. (2005) Sub-Inslab Hor. atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period1(count1),period1(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period1(count1),period1(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period1(count1),period1(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period1(count1),period1(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period1(count1),period1(count2),c5(count1),c5(count2),
     +             specT,c5T,iflag)
      call interp (period1(count1),period1(count2),sig(count1),sig(count2),
     +             specT,sigT,iflag)

 1011 period = specT

C     Compute the ground motions.
C     Note that equation is in log10 and in units of cm/s*s
      delta = 0.00750*10.0**(0.507*mag)
      R = sqrt( rupdist*rupdist + delta*delta )
      lnY = c1T + c2T*mag + c3T*R - c4T*alog10(R) + c5T*depth
      sigma = sigT

C     Now convert to Ln Units in gals.
      lnY = alog(10.0)*lnY
      sigma = alog(10.0)*sigma

      return
      end

c ------------------------------------------------------------------
C *** Garcia et al. (2005) Vertical for Subduction Zones, Rock ****
c ------------------------------------------------------------------

      subroutine GarciaV05 ( mag, rupdist, specT, period, lnY, sigma,
     1  iflag, depth )

c     Garcia et al. (2005) Vertical Subduction (inslab only), Rock
C     Rock Site Conditions

      real mag, rupDist, lnY, sigma, period
      real depth
      real c1(16), c2(16), c3(16), c4(16), c5(16)
      real specT, c1T, c2T, c3T, c4T, c5T, R, delta
      integer nper, count1, count2,iflag

      real period1(16), sig(16)

      data period1 / 0.0, 0.04, 0.05, 0.075, 0.1, 0.2, 0.3, 0.4, 0.5,
     1               0.75, 1.00, 1.50, 2.0, 3.0, 4.0, 5.0 /
      data c1 /  -0.40, -0.30, -0.2, -0.06, -0.04, -0.07, -0.20, -0.70,
     1           -0.90, -1.30, -1.80, -2.40, -2.80, -3.30, -4.00, -4.40 /
      data c2 / 0.60, 0.62, 0.62, 0.60, 0.59, 0.59, 0.60, 0.64, 0.66,
     1          0.69, 0.75, 0.80, 0.83, 0.88, 0.95, 0.98 /
      data c3 / -0.0036, -0.0041, -0.0043, -0.0041, -0.0039, -0.0033,
     &          -0.0029, -0.0022, -0.0018, -0.0014, -0.0010, -0.0008,
     &          -0.0006, -0.0005, -0.0004, -0.0003 /
      data c4 / 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
     1          1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 /
      data c5 / 0.006, 0.006, 0.007, 0.007, 0.007, 0.004, 0.003, 0.003,
     &          0.002, 0.002, 0.001, 0.0004, -0.0005, -0.0004, -0.0003, -0.0002 /
      data sig / 0.27, 0.31, 0.32, 0.32, 0.31, 0.26, 0.26, 0.26, 0.26,
     &           0.25, 0.27, 0.26, 0.27, 0.28, 0.27, 0.26 /

C Find the requested spectral period and corresponding coefficients
      nPer = 16

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period  = period1(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c3T     = c3(1)
         c4T     = c4(1)
         c5T     = c5(1)
         sigT    = sig(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period1(i) .and. specT .le. period1(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Garcia et al. (2005) Sub-Inslab Ver. atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period1(count1),period1(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period1(count1),period1(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period1(count1),period1(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period1(count1),period1(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period1(count1),period1(count2),c5(count1),c5(count2),
     +             specT,c5T,iflag)
      call interp (period1(count1),period1(count2),sig(count1),sig(count2),
     +             specT,sigT,iflag)

 1011 period = specT

C     Compute the ground motions.
C     Note that equation is in log10 and in units of cm/s*s
      delta = 0.00750*10.0**(0.507*mag)
      R = sqrt( rupdist*rupdist + delta*delta )
      lnY = c1T + c2T*mag + c3T*R - c4T*alog10(R) + c5T*depth
      sigma = sigT

C     Now convert to Ln Units in gals.
      lnY = alog(10.0)*lnY
      sigma = alog(10.0)*sigma

      return
      end

c ------------------------------------------------------------------
C *** Lin and Lee (2008) Horizontal for Subduction Zones, Rock ****
c ------------------------------------------------------------------

      subroutine LinLee08rock ( mag, rupdist, specT, period, lnY, sigma,
     1  iflag, depth, ftype )

c     Lin and Lee (2008) Horizontal Subduction, Rock
C     Rock Site Conditions

      real mag, rupDist, lnY, sigma, period
      real depth, ftype
      real c1(28), c2(28), c3(28)
      real specT, c1T, c2T, c3T, c4, c5, c6, c7
      integer nper, count1, count2,iflag
      real period1(28), sig(28)

      data period1 / 0.00, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.09,
     &               0.10, 0.12, 0.15, 0.17, 0.20, 0.24, 0.30, 0.36,
     &               0.40, 0.46, 0.50, 0.60, 0.75, 0.85, 1.00, 1.50,
     &               2.00, 3.00, 4.00, 5.00 /

      data c1 / -2.500, -2.500, -2.490, -2.280, -2.000, -1.900, -1.725,
     &          -1.265, -1.220, -1.470, -1.675, -1.846, -2.170, -2.585,
     &          -3.615, -4.160, -4.595, -5.020, -5.470, -6.095, -6.675,
     &          -7.320, -8.000, -9.240, -10.200, -11.470, -12.550, -13.390 /
      data c2 / 1.205, 1.205, 1.200, 1.155, 1.100, 1.090, 1.065, 1.020,
     &          1.000, 1.040, 1.045, 1.065, 1.085, 1.105, 1.215, 1.255,
     &          1.285, 1.325, 1.365, 1.420, 1.465, 1.545, 1.620, 1.705,
     &          1.770, 1.830, 1.845, 1.805 /
      data c3 / -1.905, -1.895, -1.880, -1.875, -1.860, -1.855, -1.840,
     &          -1.815, -1.795, -1.770, -1.730, -1.710, -1.675, -1.630,
     &          -1.570, -1.535, -1.500, -1.495, -1.465, -1.455, -1.450,
     &          -1.450, -1.450, -1.440, -1.430, -1.370, -1.260, -1.135 /
      data sig / 0.5268, 0.5218, 0.5189, 0.5235, 0.5352, 0.5370, 0.5544,
     &           0.5818, 0.5806, 0.5748, 0.5817, 0.5906, 0.6059, 0.6315,
     &           0.6656, 0.7010, 0.7105, 0.7148, 0.7145, 0.7177, 0.7689,
     &           0.7787, 0.7983, 0.8411, 0.8766, 0.8590, 0.8055, 0.7654  /

C Find the requested spectral period and corresponding coefficients
      nPer = 28

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period  = period1(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c3T     = c3(1)
         sigT    = sig(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period1(i) .and. specT .le. period1(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Lin and Lee (2008) Sub-Hor. Rock atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period1(count1),period1(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period1(count1),period1(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period1(count1),period1(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period1(count1),period1(count2),sig(count1),sig(count2),
     +             specT,sigT,iflag)

 1011 period = specT

C     Compute the ground motions.
      c4 = 0.51552
      c5 = 0.63255
      c6 = 0.0075
      c7 = 0.275

      lnY = c1T + c2T*mag + c3T*alog(Rupdist+c4*exp(c5*mag) ) + c6*depth
     1          + c7*ftype

      sigma = sigT

C     Now convert to Ln Units in gals.
      lnY = lnY + 6.89

      return
      end

c ------------------------------------------------------------------
C *** Lin and Lee (2008) Horizontal for Subduction Zones, Soil ****
c ------------------------------------------------------------------

      subroutine LinLee08soil ( mag, rupdist, specT, period, lnY, sigma,
     1  iflag, depth, ftype )

c     Lin and Lee (2008) Horizontal Subduction, Soil
C     Rock Site Conditions

      real mag, rupDist, lnY, sigma, period
      real depth, ftype
      real c1(28), c2(28), c3(28)
      real specT, c1T, c2T, c3T, c4, c5, c6, c7
      integer nper, count1, count2,iflag
      real period1(28), sig(28)

      data period1 / 0.00, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.09,
     &               0.10, 0.12, 0.15, 0.17, 0.20, 0.24, 0.30, 0.36,
     &               0.40, 0.46, 0.50, 0.60, 0.75, 0.85, 1.00, 1.50,
     &               2.00, 3.00, 4.00, 5.00 /

      data c1 / -0.900, -2.200, -2.290, -2.340, -2.215, -1.895, -1.110,
     &          -0.210, -0.055,  0.055, -0.040, -0.340, -0.800, -1.575,
     &          -3.010, -3.680, -4.250, -4.720, -5.220, -5.700, -6.450,
     &          -7.250, -8.150, -10.300, -11.620, -12.630, -13.420, -13.750 /
      data c2 / 1.000, 1.085, 1.085, 1.095, 1.090, 1.055, 1.010, 0.945,
     &          0.920, 0.935, 0.955, 1.020, 1.045, 1.120, 1.315, 1.380,
     &          1.415, 1.430, 1.455, 1.470, 1.500, 1.565, 1.605, 1.800,
     &          1.860, 1.890, 1.870, 1.835 /
      data c3 / -1.900, -1.750, -1.730, -1.720, -1.730, -1.755, -1.835,
     &          -1.890, -1.880, -1.895, -1.880, -1.885, -1.820, -1.755,
     &          -1.695, -1.660, -1.600, -1.545, -1.490, -1.445, -1.380,
     &          -1.325, -1.235, -1.165, -1.070, -1.060, -0.990, -0.975 /
      data sig / 0.6277, 0.5800, 0.5730, 0.5774, 0.5808, 0.5937, 0.6123,
     &           0.6481, 0.6535, 0.6585, 0.6595, 0.6680, 0.6565, 0.6465,
     &           0.6661, 0.6876, 0.7002, 0.7092, 0.7122, 0.7280, 0.7752,
     &           0.7931, 0.8158, 0.8356, 0.8474, 0.8367, 0.7937, 0.7468  /

C Find the requested spectral period and corresponding coefficients
      nPer = 28

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period  = period1(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c3T     = c3(1)
         sigT    = sig(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period1(i) .and. specT .le. period1(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Lin and Lee (2008) Sub-Hor. Soil atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period1(count1),period1(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period1(count1),period1(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period1(count1),period1(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period1(count1),period1(count2),sig(count1),sig(count2),
     +             specT,sigT,iflag)

 1011 period = specT

C     Compute the ground motions.
      c4 = 0.99178
      c5 = 0.52632
      c6 = 0.004
      c7 = 0.310

      lnY = c1T + c2T*mag + c3T*alog(Rupdist+c4*exp(c5*mag) ) + c6*depth
     1          + c7*ftype

      sigma = sigT

C     Now convert to Ln Units in gals.
      lnY = lnY + 6.89

      return
      end

c -------------------------------------------------------------------
C *** Atkinson and Macias (2009) Cascadia, Horizontal NEHRP B/C *****
c -------------------------------------------------------------------

      subroutine AM09_Cas ( mag, rupDist, lnY, sigma,
     1   specT, period, iflag )

      real mag, rupDist, lnY, sigma, period
      real c0(26), c1(26), c2(26), c3(26), c4(26), period1(26), sig(26)
      real specT, c0T, c1T, c2T, c3T, c4T, sigT, h
      integer nper, count1, count2,iflag

      data  period1 /0, 0.01, 0.05, 0.0631, 0.0794, 0.1, 0.125, 0.1587, 0.2, 0.25,
     1    0.3165, 0.4, 0.5, 0.6329, 0.7937, 1.0, 1.2658, 1.5873, 2.0, 2.5, 3.125,
     2    4.0, 5.0, 6.25, 7.6923, 10.0 /
      data c0 / 5.006,5.006, 5.843, 5.823, 5.676, 5.49, 5.209, 4.93, 4.746, 4.472, 4.303,
     1          4.167, 3.999, 3.856, 3.733, 3.621, 3.453, 3.393, 3.241, 3.104, 2.978,
     2          2.814, 2.671, 2.569, 2.489, 2.338 /
      data c1 / -1.5573,-1.5573, -1.9391, -1.8889, -1.7633, -1.6257, -1.4404, -1.2671, -1.1691,
     1          -1.0133, -0.9322, -0.8854, -0.8211, -0.7746, -0.7473, -0.7376, -0.6885,
     2          -0.7101, -0.6741, -0.6585, -0.6431, -0.6108, -0.5942, -0.6048,
     3          -0.6412, -0.6311 /
      data c2 / -0.00034,-0.00034, 0.0, -0.00022, -0.00071, -0.00115, -0.00163, -0.00204,
     1          -0.00212, -0.00234, -0.00231, -0.00211, -0.00195, -0.00179,
     2          -0.00159, -0.00128, -0.00119, -0.00089, -0.00081, -0.00063,
     3          -0.00057, -0.00046, -0.0004, -0.00024, -0.00003, 0.0 /
      data c3 / 0.1774,0.1774, 0.1813, 0.1845, 0.1784, 0.1736, 0.1788, 0.1645, 0.1593, 0.1713,
     1          0.1713, 0.1802, 0.187, 0.201, 0.2035, 0.2116, 0.2417, 0.2483, 0.2696,
     2          0.299, 0.3258, 0.349, 0.3822, 0.4324, 0.476, 0.5357 /
      data c4 /0.0827, 0.0827, 0.0199, 0.016, 0.0245, 0.0261, 0.0151, 0.0301, 0.0432, 0.0255,
     1          0.027, 0.0258, 0.0271, 0.0153, 0.0292, 0.0328, 0.0125, 0.0103, -0.0064,
     2         -0.0074, -0.0103, -0.0299, -0.0417, -0.0641, -0.0629, -0.0737 /
      data sig / 0.5526,0.5526, 0.5987, 0.5987, 0.6217, 0.6217, 0.6217, 0.6217, 0.6217,
     1             0.6217, 0.6217, 0.6217, 0.6217, 0.6447, 0.6447, 0.6677, 0.6677,
     2             0.6677, 0.6908, 0.6908, 0.6908, 0.6908, 0.7368, 0.7829, 0.8059, 0.8750 /

C Find the requested spectral period and corresponding coefficients
      nPer = 26

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period  = period1(1)
         c0T     = c0(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c3T     = c3(1)
         c4T     = c4(1)
         sigT    = sig(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period1(i) .and. specT .le. period1(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Atkinson&Macias (2009) Subduction atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period1(count1),period1(count2),c0(count1),c0(count2),
     +             specT,c0T,iflag)
      call interp (period1(count1),period1(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period1(count1),period1(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period1(count1),period1(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period1(count1),period1(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period1(count1),period1(count2),sig(count1),sig(count2),
     +             specT,sigT,iflag)

 1011 period = specT

      h = mag*mag - 3.1*mag - 14.55
      R = sqrt (rupDist*rupDist + h*h)

      lnY = 10**(C0T + c1T*alog10(R) + c2T*R + c3T*(mag-8.0) + c4T*(mag-8.0)*(mag-8.0))

C     Convert to Natural log in gals.
      lnY = alog(lnY)
      sigma = sigT

      return
      end

c ------------------------------------------------------------
      real function csratio (mag)
c     This function computes the scale factor to convert an acceleration
c     from a magnitude "mag" earthquake to the equivalent acceleration
c     from a magnitude 7.5 earthquake for liquifaction potential.
c     See Seed and Idriss (1982) pg 110.
      real mag, xnode(6), ynode(6)
      data xnode /5.0, 5.25, 6.0, 6.75, 7.5, 8.5/
      data ynode /1.58, 1.50, 1.32, 1.13, 1.00, 0.89/
      n = 6
      if (mag .lt. xnode(1)) then
C        write (*,*)')
        goto 100
      endif
      if (mag .gt. xnode(6)) then
C        write (*,*)')
        goto 100
      endif
      do i=2,n
        if (mag .lt. xnode(i)) then
          temp = (mag-xnode(i-1))/(xnode(i)-xnode(i-1))
          csratio = temp*(ynode(i)-ynode(i-1)) + ynode(i-1)
          csratio = alog(csratio)
          return
        endif
      enddo
      return
 100  return
      end

c ---------------------------------------------------------------------
C     *** Akkar and Cagan (2010) ***
c ---------------------------------------------------------------------

      subroutine AC_2010 ( mag, Rbjf, specT,
     1                     period2, lnY, sigma, iflag, vs, ftype, pga4nl )

      parameter (MAXPER=17)
      REAL Period(MAXPER), a1(MAXPER), a2(MAXPER), a3(MAXPER), a4(MAXPER)
      Real a5(MAXPER), a6(MAXPER), a7(MAXPER), a8(MAXPER), a9(MAXPER)
      real sigtot(MAXPER), Blin(MAXPER), b1(MAXPER), b2(MAXPER)
      real specT, a1T, a2T, a3T, a4T, a5T, a6T, a7T, a8T, a9T, sigmaT
      real mag, Rbjf, Vs, Ftype, Fn, Fr, Flin, Fnl, pga4nl
      real blinT, b1T, b2T, c1, vref, v1, v2, pga_low, bnl, LnY
      real deltaX, deltaY, a1slope, a2slope, c, d, term1, term3
      INTEGER iFlag, count1, count2

      Data Period / 0.0, -1.0, 0.01, 0.03, 0.05, 0.075, 0.1, 0.15, 0.2,
     1              0.25, 0.3, 0.4, 0.5, 0.75, 1.0, 1.5, 2.0  /
      Data a1 / 8.92418, 5.60931, 8.92418, 8.85984, 9.05262, 9.5667,
     1          9.85606, 10.43715, 10.63516, 10.12551, 10.12745, 9.47855,
     2          8.95147, 8.10498, 7.61737, 7.20427, 6.70845 /
      Data a2 / -0.513, -0.513, -0.513, -0.513, -0.513, -0.513, -0.513,
     1          -0.513, -0.513, -0.513, -0.513, -0.513, -0.513, -0.513,
     2          -0.513, -0.513, -0.513 /
      Data a3 / -0.695, -0.695, -0.695, -0.695, -0.695, -0.695, -0.695,
     1          -0.695, -0.695, -0.695, -0.695, -0.695, -0.695, -0.695,
     2          -0.695, -0.695, -0.695 /
      Data a4 / -0.18555, -0.258, -0.18555, -0.17123, -0.15516, -0.1384,
     1          -0.11563, -0.17897, -0.21034, -0.25565, -0.2702, -0.30498,
     2          -0.29877, -0.3349, -0.35366, -0.39858, -0.39528 /
      Data a5 / -1.25594, -0.90393, -1.25594, -1.25132, -1.28796, -1.38817,
     1          -1.43846, -1.46786, -1.44625, -1.27388, -1.26899, -1.09793,
     2          -1.01703, -0.84365, -0.7584, -0.70134, -0.70766	 /
      Data a6 / 0.18105, 0.21576, 0.18105, 0.18421, 0.1984, 0.20246, 0.21833,
     1          0.15588, 0.1159, 0.09426, 0.08352, 0.06082, 0.09099, 0.08647,
     2          0.09623, 0.11219, 0.12032 /
      Data a7 / 7.33617, 5.57472, 7.33617, 7.46968, 7.26552, 8.03646, 8.84202,
     1          9.39515, 9.60868, 7.54353, 8.03144, 6.24042, 5.67936, 4.93842,
     2          4.1259, 3.46535, 3.8822 /
      Data a8 / -0.02125, -0.10481, -0.02125, -0.0134, 0.02076, 0.07311,
     1           0.11044, 0.03555, -0.03536, -0.10685, -0.10685, -0.11197,
     2          -0.10118, -0.0456, -0.01936, -0.02618, -0.03215 /
      Data a9 / 0.01851, 0.07791, 0.01851, 0.03512, 0.01484, 0.02492, -0.0062,
     1          0.19751, 0.18594, 0.13574, 0.13574, 0.16555, 0.23546, 0.10993,
     2          0.19729, 0.21977, 0.20584 /
      Data sigtot / 0.8322, 0.8096, 0.8322, 0.8279, 0.8327, 0.8566, 0.871,
     1              0.8863, 0.8912, 0.9002, 0.8833, 0.8898, 0.8666, 0.8934,
     2              0.9116, 0.9234, 0.9066 /
      Data blin / -0.36, -0.6, -0.36, -0.33, -0.29, -0.23, -0.25, -0.28,
     1            -0.31, -0.39, -0.44, -0.5, -0.6, -0.69, -0.7, -0.72, -0.73 /
      Data b1 / -0.64, -0.5, -0.64, -0.62, -0.64, -0.64, -0.6, -0.53, -0.52,
     1          -0.52, -0.52, -0.51, -0.5, -0.47, -0.44, -0.4, -0.38 /
      Data b2 / -0.14, -0.06, -0.14, -0.11, -0.11, -0.11, -0.13, -0.18,
     1          -0.19, -0.16, -0.14, -0.1, -0.06, 0.0, 0.0, 0.0, 0.0 /


C     Set parameters
      c1 = 6.5
      pga_low = 0.06
      vref = 760.0
      v1 = 180.0
      v2 = 300.0

c     Set Parameters to compute PGA rock
      a1p = 8.92418
      a2p = -0.513
      a3p = -0.695
      a4p = -0.18555
      a5p = -1.25594
      a6p = 0.18105
      a7p = 7.33617
      a8p = -0.02125
      a9p = 0.01851

C First check for the PGA case (i.e., specT=0.0)
      nPer = 17
      if (specT .eq. 0.0) then
         period1 = period(1)
         a1T = a1(1)
         a2T = a2(1)
         a3T = a3(1)
         a4T = a4(1)
         a5T = a5(1)
         a6T = a6(1)
         a7T = a7(1)
         a8T = a8(1)
         a9T = a9(1)
         blinT = blin(1)
         b1T = b1(1)
         b2T = b2(1)
         sigmaT = sigTot(1)
         goto 1011
C Check for the PGV case (i.e., specT=-1.0)
      elseif (specT .eq. -1.0) then
         period1 = period(2)
         a1T = a1(2)
         a2T = a2(2)
         a3T = a3(2)
         a4T = a4(2)
         a5T = a5(2)
         a6T = a6(2)
         a7T = a7(2)
         a8T = a8(2)
         a9T = a9(2)
         blinT = blin(2)
         b1T = b1(2)
         b2T = b2(2)
         sigmaT = sigTot(2)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=3,nper-1+2
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Akkar&Cagan (2010) Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),a1(count1),a1(count2),
     +                   specT,a1T,iflag)
            call interp (period(count1),period(count2),a2(count1),a2(count2),
     +                   specT,a2T,iflag)
            call interp (period(count1),period(count2),a3(count1),a3(count2),
     +                   specT,a3T,iflag)
            call interp (period(count1),period(count2),a4(count1),a4(count2),
     +                   specT,a4T,iflag)
            call interp (period(count1),period(count2),a5(count1),a5(count2),
     +                   specT,a5T,iflag)
            call interp (period(count1),period(count2),a6(count1),a6(count2),
     +                   specT,a6T,iflag)
            call interp (period(count1),period(count2),a7(count1),a7(count2),
     +                   specT,a7T,iflag)
            call interp (period(count1),period(count2),a8(count1),a8(count2),
     +                   specT,a8T,iflag)
            call interp (period(count1),period(count2),a9(count1),a9(count2),
     +                   specT,a9T,iflag)
            call interp (period(count1),period(count2),blin(count1),blin(count2),
     +                   specT,blinT,iflag)
            call interp (period(count1),period(count2),b1(count1),b1(count2),
     +                   specT,b1T,iflag)
            call interp (period(count1),period(count2),b2(count1),b2(count2),
     +                   specT,b2T,iflag)
            call interp (period(count1),period(count2),sigTot(count1),sigTot(count2),
     +                   specT,sigmaT,iflag)
 1011 period1 = specT

C.....Set the mechanism terms based on ftype............
C     Set mechanism term and corresponding Frv and Fnm values.
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C      -1       Normal                    -120 < Rake <  -60
C     -0.5      Normal/Oblique            -150 < Rake < -120
C                                          -60 < Rake <  -30
C       0       Strike-Slip               -180 < Rake < -150
C                                          -30 < Rake <   30
C                                          150 < Rake <  180
C      0.5      Reverse/Oblique             30 < Rake <   60
C                                          120 < Rake <  150
C       1       Reverse                     60 < Rake <  120
      if (ftype .eq. -1.0) then
         Fr = 0.0
         Fn = 1.0
      elseif (ftype .eq. -0.5) then
         Fr = 0.0
         Fn = 1.0
      elseif (ftype .eq. 0.0) then
         Fr = 0.0
         Fn = 0.0
      elseif (ftype .eq. 0.5) then
         Fr = 1.0
         Fn = 0.0
      elseif (ftype .eq. 1.0) then
         Fr = 1.0
         Fn = 0.0
      endif

C.....First compute the Reference Rock PGA value.........
      if (mag .le. c1) then
         term1 = a1p + a2p*(mag-c1) + a4p*(8.5-mag)**2.0 +
     1           ( a5p + a6p*(mag-c1) ) * alog(sqrt(Rbjf*Rbjf+a7p*a7p)) +
     2           a8p*Fn + a9p*Fr
      else
         term1 = a1p + a3p*(mag-c1) + a4p*(8.5-mag)**2.0 +
     1           ( a5p + a6p*(mag-c1) ) * alog(sqrt(Rbjf*Rbjf+a7p*a7p)) +
     2           a8p*Fn + a9p*Fr
      endif

      pga4nl = exp(term1)

C.....Now compute the requested ground motion value........
      if (mag .le. c1) then
         term1 = a1T + a2T*(mag-c1) + a4T*(8.5-mag)**2.0 +
     1           ( a5T + a6T*(mag-c1) ) * alog(sqrt(Rbjf*Rbjf+a7T*a7T)) +
     2           a8T*Fn + a9T*Fr
      else
         term1 = a1T + a3T*(mag-c1) + a4T*(8.5-mag)**2.0 +
     1           ( a5T + a6T*(mag-c1) ) * alog(sqrt(Rbjf*Rbjf+a7T*a7T)) +
     2           a8T*Fn + a9T*Fr
      endif

C.....Site Response Term.........
C.....First compute Bnl slope term......
      if (vs .le. v1) then
         bnl = b1T
      elseif (vs .le. v2) then
        bnl = (b1T-b2T)*(alog(vs/v2)/alog(v1/v2)) + b2T
      elseif (vs .lt. vref) then
        bnl = b2t*alog(vs/vref)/alog(v2/vref)
      else
        bnl = 0.0
      endif

c.....next compute the slope coefficients for model....
      a1slope = 0.03
      a2slope = 0.09
      deltaX = alog(a2slope/a1slope)
      deltaY = bnl*alog(a2slope/pga_low)
      c = (3.0*deltaY-bnl*deltaX)/(deltaX*deltaX)
      d = -1.0*(2.0*deltaY-bnl*deltaX)/(deltaX*deltaX*deltaX)

C.....Now compute the site term........
      if (pga4nl .le. a1slope) then
          TERM3 = blinT*alog(vs/vref) + bnl*alog(pga_low/0.1)
      elseif (pga4nl .le. a2slope) then
          TERM3 = blinT*alog(vs/vref) + bnl*alog(pga_low/0.1)
     1            + c*(alog(pga4nl/a1slope))**2.0
     2            + d*(alog(pga4nl/a1slope))**3.0
      elseif (pga4nl .gt. a2slope) then
          TERM3 = blinT*alog(vs/vref) + bnl*alog(pga4nl/0.1)
      endif

      lnY = term1 + term3

      period2 = period1

      sigma = sigmaT

      return
      END


c ---------------------------------------------------------------------
C     *** Akkar and Bommer (2010) ***
c ---------------------------------------------------------------------

      subroutine AB_2010 ( mag, Rbjf, specT,
     1                     period2, lnY, sigma, iflag, ftype, Ss, Sa )

      parameter (MAXPER=63)
      REAL Period(MAXPER), b1(MAXPER), b2(MAXPER), b3(MAXPER), b4(MAXPER)
      Real b5(MAXPER), b6(MAXPER), b7(MAXPER), b8(MAXPER), b9(MAXPER)
      real b10(MAXPER), sigtot(MAXPER)
      real specT, b1T, b2T, b3T, b4T, b5T, b6T, b7T, b8T, b9T, b10T, sigmaT
      real mag, Rbjf, Ftype, Fn, Fr, Ss, Sa, Term1, lnY
      INTEGER iFlag, count1, count2

      data period / 0.00, -1.0, 0.01, 0.05, 0.10, 0.15, 0.20, 0.25, 0.30, 0.35,
     1              0.40, 0.45, 0.50, 0.55, 0.60, 0.65, 0.70, 0.75, 0.80, 0.85,
     2              0.90, 0.95, 1.00, 1.05, 1.10, 1.15, 1.20, 1.25, 1.30, 1.35,
     3              1.40, 1.45, 1.50, 1.55, 1.60, 1.65, 1.70, 1.75, 1.80, 1.85,
     4              1.90, 1.95, 2.00, 2.05, 2.10, 2.15, 2.20, 2.25, 2.30, 2.35,
     5              2.40, 2.45, 2.50, 2.55, 2.60, 2.65, 2.70, 2.75, 2.80, 2.85,
     6              2.90, 2.95, 3.00 /
      data b1 / 1.04159,  -2.12833,  1.04159, 2.11528,  2.11994,  1.64489,  0.92065,
     1           0.13978, -0.84006, -1.32207, -1.70320, -1.97201, -2.76925, -3.51672,
     1          -3.92759, -4.49490, -4.62925, -4.95053, -5.32863, -5.75799, -5.82689,
     1          -5.90592, -6.17066, -6.60337, -6.90379, -6.96180, -6.99236, -6.74613,
     1          -6.51719, -6.55821, -6.61945, -6.62737, -6.71787, -6.80776, -6.83632,
     1          -6.88684, -6.94600, -7.09166, -7.22818, -7.29772, -7.35522, -7.40716,
     1          -7.50404, -7.55598, -7.53463, -7.50811, -8.09168, -8.11057, -8.16272,
     1          -7.94704, -7.96679, -7.97878, -7.88403, -7.68101, -7.72574, -7.53288,
     1          -7.41587, -7.34541, -7.24561, -7.07107, -6.99332, -6.95669, -6.92924 /
      data b2 / 0.91333, 1.21448, 0.91333, 0.72571, 0.75179, 0.83683, 0.96815, 1.13068,
     1          1.37439, 1.47055, 1.55930, 1.61645, 1.83268, 2.02523, 2.08471, 2.21154,
     1          2.21764, 2.29142, 2.38389, 2.50635, 2.50287, 2.51405, 2.58558, 2.69584,
     1          2.77044, 2.75857, 2.73427, 2.62375, 2.51869, 2.52238, 2.52611, 2.49858,
     1          2.49486, 2.50291, 2.51009, 2.54048, 2.57151, 2.62938, 2.66824, 2.67565,
     1          2.67749, 2.68206, 2.71004, 2.72737, 2.71709, 2.71035, 2.91159, 2.92087,
     1          2.93325, 2.85328, 2.85363, 2.84900, 2.81817, 2.75720, 2.82043, 2.74824,
     1          2.69012, 2.65352, 2.61028, 2.56123, 2.52699, 2.51006, 2.45899 /
      data b3 / -0.08140, -0.08137, -0.08140, -0.07351, -0.07448, -0.07544, -0.07903,
     1          -0.08761, -0.10349, -0.10873, -0.11388, -0.11742, -0.13202, -0.14495,
     1          -0.14648, -0.15522, -0.15491, -0.15983, -0.16571, -0.17479, -0.17367,
     1          -0.17417, -0.17938, -0.18646, -0.19171, -0.18890, -0.18491, -0.17392,
     1          -0.16330, -0.16307, -0.16274, -0.15910, -0.15689, -0.15629, -0.15676,
     1          -0.15995, -0.16294, -0.16794, -0.17057, -0.17004, -0.16934, -0.16906,
     1          -0.17130, -0.17291, -0.17221, -0.17212, -0.18920, -0.19044, -0.19155,
     1          -0.18539, -0.18561, -0.18527, -0.18320, -0.17905, -0.18717, -0.18142,
     1          -0.17632, -0.17313, -0.16951, -0.16616, -0.16303, -0.16142, -0.15513 /
      data b4 / -2.92728, -2.46942, -2.92728, -3.33201, -3.10538, -2.75848, -2.49264,
     1          -2.33824, -2.19123, -2.12993, -2.12718, -2.16619, -2.12969, -2.04211,
     1          -1.88144, -1.79031, -1.79800, -1.81321, -1.77273, -1.77068, -1.76295,
     1          -1.79854, -1.80717, -1.73843, -1.71109, -1.66588, -1.59120, -1.52886,
     1          -1.46527, -1.48223, -1.48257, -1.43310, -1.35301, -1.31227, -1.33260,
     1          -1.40931, -1.47676, -1.54037, -1.54273, -1.50936, -1.46988, -1.43816,
     1          -1.44395, -1.45794, -1.46662, -1.49679, -1.55644, -1.59537, -1.60461,
     1          -1.57428, -1.57833, -1.57728, -1.60381, -1.65212, -1.88782, -1.89525,
     1          -1.87041, -1.86079, -1.85612, -1.90422, -1.89704, -1.90132, -1.76801 /
      data b5 / 0.28120, 0.22349, 0.28120, 0.33534, 0.30253, 0.25490, 0.21790, 0.20089,
     1          0.18139, 0.17485, 0.17137, 0.17700, 0.16877, 0.15617, 0.13621, 0.12916,
     1          0.13495, 0.13920, 0.13273, 0.13096, 0.13059, 0.13535, 0.13599, 0.12485,
     1          0.12227, 0.11447, 0.10265, 0.09129, 0.08005, 0.08173, 0.08213, 0.07577,
     1          0.06379, 0.05697, 0.05870, 0.06860, 0.07672, 0.08428, 0.08325, 0.07663,
     1          0.07065, 0.06525, 0.06602, 0.06774, 0.06940, 0.07429, 0.08428, 0.09052,
     1          0.09284, 0.09077, 0.09288, 0.09428, 0.09887, 0.10680, 0.14049, 0.14356,
     1          0.14283, 0.14340, 0.14444, 0.15127, 0.15039, 0.15081, 0.13314 /
      data b6 / 7.86638, 7.86638, 6.41443, 7.74734, 8.21405, 8.31786, 8.21914, 7.20688,
     1          6.54299, 6.24751, 6.57173, 6.78082, 7.17423, 6.76170, 6.10103, 5.19135,
     1          4.46323, 4.27945, 4.37011, 4.62192, 4.65393, 4.84540, 4.97596, 5.04489,
     1          5.00975, 5.08902, 5.03274, 5.08347, 5.14423, 5.29006, 5.33490, 5.19412,
     1          5.15750, 5.27441, 5.54539, 5.93828, 6.36599, 6.82292, 7.11603, 7.31928,
     1          7.25988, 7.25344, 7.26059, 7.40320, 7.46168, 7.51273, 7.77062, 7.87702,
     1          7.91753, 7.61956, 7.59643, 7.50338, 7.53947, 7.61893, 8.12248, 7.92236,
     1          7.49999, 7.26668, 7.11861, 7.36277, 7.45038, 7.60234, 7.21950 /
      data b7 / 0.08753, 0.20354, 0.08753, 0.04707, 0.02667, 0.02578, 0.06557, 0.09810,
     1          0.12847, 0.16213, 0.21222, 0.24121, 0.25944, 0.26498, 0.27718, 0.28574,
     1          0.30348, 0.31516, 0.32153, 0.33520, 0.34849, 0.35919, 0.36619, 0.37278,
     1          0.37756, 0.38149, 0.38120, 0.38782, 0.38862, 0.38677, 0.38625, 0.38285,
     1          0.37867, 0.37267, 0.36952, 0.36531, 0.35936, 0.35284, 0.34775, 0.34561,
     1          0.34142, 0.33720, 0.33298, 0.33010, 0.32645, 0.32439, 0.31354, 0.30997,
     1          0.30826, 0.32071, 0.31801, 0.31401, 0.31104, 0.30875, 0.31122, 0.30935,
     1          0.30688, 0.30635, 0.30534, 0.30508, 0.30362, 0.29987, 0.29772 /
      data b8 / 0.01527, 0.08484, 0.01527, -0.02426, -0.00062, 0.01703, 0.02105, 0.03919,
     1          0.04340, 0.06695, 0.09201,  0.11675,  0.13562, 0.14446, 0.15156, 0.15239,
     1          0.15652, 0.16333, 0.17366,  0.18480,  0.19061, 0.19411, 0.19519, 0.19461,
     1          0.19423, 0.19402, 0.19309,  0.19392,  0.19273, 0.19082, 0.19285, 0.19161,
     1          0.18812, 0.18568, 0.18149,  0.17617,  0.17301, 0.16945, 0.16743, 0.16730,
     1          0.16325, 0.16171, 0.15839,  0.15496,  0.15337, 0.15264, 0.14430, 0.14430,
     1          0.14412, 0.14321, 0.14301,  0.14324,  0.14332, 0.14343, 0.14255, 0.14223,
     1          0.14074, 0.14052, 0.13923,  0.13933,  0.13776, 0.13584, 0.13198 /
      data b9 / -0.04189, -0.05856, -0.04189, -0.04260, -0.04906, -0.04184, -0.02098,
     1          -0.04853, -0.05554, -0.04722, -0.05145, -0.05202, -0.04283, -0.04259,
     1          -0.03853, -0.03423, -0.04146, -0.04050, -0.03946, -0.03786, -0.02884,
     1          -0.02209, -0.02269, -0.02613, -0.02655, -0.02088, -0.01623, -0.01826,
     1          -0.01902, -0.01842, -0.01607, -0.01288, -0.01208, -0.00845, -0.00533,
     1          -0.00852, -0.01204, -0.01386, -0.01402, -0.01526, -0.01563, -0.01848,
     1          -0.02258, -0.02626, -0.02920, -0.03484, -0.03985, -0.04155, -0.04238,
     1          -0.04963, -0.04910, -0.04812, -0.04710, -0.04607, -0.05106, -0.05024,
     1          -0.04887, -0.04743, -0.04731, -0.04522, -0.04203, -0.03863, -0.03855 /
      data b10 / 0.08015, 0.01305, 0.08015, 0.08649,  0.07910,  0.07840,  0.08438,  0.08577,
     1           0.09221, 0.09003, 0.09903, 0.09943,  0.08579,  0.06945,  0.05932,  0.05111,
     1           0.04661, 0.04253, 0.03373, 0.02867,  0.02475,  0.02502,  0.02121,  0.01115,
     1           0.00140, 0.00148, 0.00413, 0.00413, -0.00369, -0.00897, -0.00876, -0.00564,
     1          -0.00215, -0.00047, -0.00006, -0.00301, -0.00744, -0.01387, -0.01492, -0.01192,
     1          -0.00703, -0.00351, -0.00486, -0.00731, -0.00871, -0.01225, -0.01927, -0.02322,
     1          -0.02626, -0.02342, -0.02570, -0.02643, -0.02769, -0.02819, -0.02966, -0.02930,
     1          -0.02963, -0.02919, -0.02751, -0.02776, -0.02615, -0.02487, -0.02469 /
      data sigtot / 0.279287236, 0.278149834, 0.279287236, 0.295001085, 0.296713212, 0.303212928,
     1              0.302102665, 0.303689661, 0.306172827, 0.316373276, 0.319377598, 0.323797746,
     1              0.329038797, 0.332384958, 0.332970704, 0.337848072, 0.339298688, 0.337714865,
     1              0.332812034, 0.329996030, 0.328795772, 0.326833291, 0.325273946, 0.323832812,
     1              0.322848958, 0.320965201, 0.321770182, 0.321060399, 0.320429243, 0.321906959,
     1              0.322356774, 0.321620553, 0.319608276, 0.319319981, 0.319549448, 0.321407685,
     1              0.322923660, 0.323928449, 0.324565556, 0.324531170, 0.325293667, 0.327358947,
     1              0.328372867, 0.328863513, 0.328417311, 0.328143581, 0.326435736, 0.326435736,
     1              0.326648588, 0.325386678, 0.326990841, 0.327915385, 0.328129319, 0.328488478,
     1              0.332946317, 0.334486263, 0.335936006, 0.337196278, 0.338202972, 0.338054803,
     1              0.338268119, 0.338045456, 0.338490783 /

C First check for the PGA case (i.e., specT=0.0)
      nPer = 63
      if (specT .eq. 0.0) then
         period1 = period(1)
         b1T = b1(1)
         b2T = b2(1)
         b3T = b3(1)
         b4T = b4(1)
         b5T = b5(1)
         b6T = b6(1)
         b7T = b7(1)
         b8T = b8(1)
         b9T = b9(1)
         b10T = b10(1)
         sigmaT = sigTot(1)
         goto 1011
C Check for the PGV case (i.e., specT=-1.0)
      elseif (specT .eq. -1.0) then
         period1 = period(2)
         b1T = b1(2)
         b2T = b2(2)
         b3T = b3(2)
         b4T = b4(2)
         b5T = b5(2)
         b6T = b6(2)
         b7T = b7(2)
         b8T = b8(2)
         b9T = b9(2)
         b10T = b10(2)
         sigmaT = sigTot(2)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=3,nper-1+2
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Akkar&Bommer (2010) Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),b1(count1),b1(count2),
     +                   specT,b1T,iflag)
            call interp (period(count1),period(count2),b2(count1),b2(count2),
     +                   specT,b2T,iflag)
            call interp (period(count1),period(count2),b3(count1),b3(count2),
     +                   specT,b3T,iflag)
            call interp (period(count1),period(count2),b4(count1),b4(count2),
     +                   specT,b4T,iflag)
            call interp (period(count1),period(count2),b5(count1),b5(count2),
     +                   specT,b5T,iflag)
            call interp (period(count1),period(count2),b6(count1),b6(count2),
     +                   specT,b6T,iflag)
            call interp (period(count1),period(count2),b7(count1),b7(count2),
     +                   specT,b7T,iflag)
            call interp (period(count1),period(count2),b8(count1),b8(count2),
     +                   specT,b8T,iflag)
            call interp (period(count1),period(count2),b9(count1),b9(count2),
     +                   specT,b9T,iflag)
            call interp (period(count1),period(count2),b10(count1),b10(count2),
     +                   specT,b10T,iflag)
            call interp (period(count1),period(count2),sigTot(count1),sigTot(count2),
     +                   specT,sigmaT,iflag)
 1011 period1 = specT

C.....Set the mechanism terms based on ftype............
C     Set mechanism term and corresponding Frv and Fnm values.
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C      -1       Normal                    -120 < Rake <  -60
C     -0.5      Normal/Oblique            -150 < Rake < -120
C                                          -60 < Rake <  -30
C       0       Strike-Slip               -180 < Rake < -150
C                                          -30 < Rake <   30
C                                          150 < Rake <  180
C      0.5      Reverse/Oblique             30 < Rake <   60
C                                          120 < Rake <  150
C       1       Reverse                     60 < Rake <  120
      if (ftype .eq. -1.0) then
         Fr = 0.0
         Fn = 1.0
      elseif (ftype .eq. -0.5) then
         Fr = 0.0
         Fn = 1.0
      elseif (ftype .eq. 0.0) then
         Fr = 0.0
         Fn = 0.0
      elseif (ftype .eq. 0.5) then
         Fr = 1.0
         Fn = 0.0
      elseif (ftype .eq. 1.0) then
         Fr = 1.0
         Fn = 0.0
      endif

C.....Compute the requested ground motion value........
         term1 = b1T + b2T*mag + b3T*(mag)**2.0 +
     1           ( b4T + b5T*mag ) * alog10(sqrt(Rbjf*Rbjf+b6T*b6T)) +
     2           b7T*Ss + b8T*Sa + b9T*Fn + b10T*Fr

C     Convert from Log10 to LnY
      lnY = alog(10.0)*term1

      period2 = period1

      sigma = sigmaT*alog(10.0)

      return
      END



c ---------------------------------------------------------------------
C ** Bradley (2010) Horizontal **
c ---------------------------------------------------------------------
      Subroutine Bradley_2010 ( m, Rrup, Rbjf, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, Delta, DTor, Ftype, depthvs10,
     3                     hwflag, Rx )

      parameter (MAXPER=23)
      REAL Period(MAXPER), C1(MAXPER), C1a(MAXPER), C1b(MAXPER)
      REAL cn(MAXPER), cm(MAXPER), c5(MAXPER), c6(MAXPER)
      REAL c7(MAXPER), c9(MAXPER), gamma1(MAXPER), gamma2(MAXPER)
      REAL phi1(MAXPER), phi2(MAXPER), phi3(MAXPER), phi4(MAXPER)
      REAL phi5(MAXPER), phi6(MAXPER), phi7(MAXPER), phi8(MAXPER)
      REAL tau1(MAXPER), tau2(MAXPER), sigma1(MAXPER), sigma2(MAXPER)
      REAL sigma3(MAXPER), sigma4(MAXPER), c9a(MAXPER)
      real c3(MAXPER), c8(MAXPER) , ctvz(MAXPER)
      REAL c1T, c1aT, c1bT, cnT, cmT, c5T, c6T, c7T, c9T, c9aT, c3T, c8T, ctvzT
      REAL gamma1T, gamma2T, phi1T, phi2T, phi3T, phi4T, sigma3T, sigma4T
      REAL phi5T, phi6T, phi7T, phi8T, tau1T, tau2T, sigma1T, sigma2T
      REAL c2, c4, c4a, cRB, cHM, gm, pi, d2r, gamma
      real cc, cosdelta, r1, r2, r3, r4, hw, psa_ref, psa, a, b, c
      integer iflag, count1, count2, hwflag
      REAL M, RRUP, RBJF, DTOR, Delta, specT, sigma, Ftype, Rx
      REAL period2, lnY, F_RV, F_NM, depthvs10, sigma_M, tau, NL, rkdepth

      data period / 0.0, 0.01, 0.02, 0.03, 0.04, 0.05, 0.075, 0.1, 0.15, 0.2,
     1             0.25, 0.3,   0.4,  0.5, 0.75,  1.0,   1.5, 2.0,  3.0, 4.0,
     1             5.0,  7.5,  10.0 /
      data c1 / -1.1985, -1.1958, -1.1756, -1.0909, -0.9793, -0.8549, -0.6008,
     1          -0.4700, -0.4139, -0.5237, -0.6678, -0.8277, -1.1284, -1.3926,
     1          -1.8664, -2.1935, -2.6883, -3.1040, -3.7085, -4.1486, -4.4881,
     1          -5.0891, -5.5530 /
      data c1a / 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.0999,
     1           0.0997, 0.0991, 0.0936, 0.0766, 0.0022, -0.0591, -0.0931, -0.0982,
     1          -0.0994, -0.0999, -0.1 /
      data c1b / -0.455, -0.455, -0.455, -0.455, -0.455, -0.455, -0.454, -0.453,
     1           -0.45, -0.4149, -0.3582, -0.3113, -0.2646, -0.2272, -0.162, -0.14,
     1           -0.1184, -0.11, -0.104, -0.102, -0.101, -0.101, -0.1 /
      data c3 / 1.50000, 1.50299, 1.50845, 1.51549, 1.52380, 1.53319, 1.56053,
     1          1.59241, 1.66640, 1.75021, 1.84052, 1.93480, 2.12764, 2.31684,
     1          2.73064, 3.03000, 3.43384, 3.67464, 3.64933, 3.60999, 3.50000,
     1          3.45000, 3.45000 /
      data cm / 5.85000, 5.81711, 5.80023, 5.78659, 5.77472, 5.76402, 5.74056,
     1          5.72017, 5.68493, 5.65435, 5.62686, 5.60162, 5.55602, 5.51513,
     1          5.38632, 5.31000, 5.29995, 5.32730, 5.43850, 5.59770, 5.72760,
     1          5.98910, 6.19300 /
      data cn / 2.996, 2.996, 3.292, 3.514, 3.563, 3.547, 3.448, 3.312, 3.044,
     1          2.831, 2.658, 2.505, 2.261, 2.087, 1.812, 1.648, 1.511, 1.47,
     1          1.456, 1.465, 1.478, 1.498, 1.502 /
      data c5 / 6.16, 6.16, 6.158, 6.155, 6.1508, 6.1441, 6.12, 6.085, 5.9871,
     1          5.8699, 5.7547, 5.6527, 5.4997, 5.4029, 5.29, 5.248, 5.2194,
     1          5.2099, 5.204, 5.202, 5.201, 5.2, 5.2 /
      data c6 / 0.4893, 0.4893, 0.4892, 0.489, 0.4888, 0.4884, 0.4872, 0.4854,
     1          0.4808, 0.4755, 0.4706, 0.4665, 0.4607, 0.4571, 0.4531, 0.4517,
     1          0.4507, 0.4504, 0.4501, 0.4501, 0.45, 0.45, 0.45 /
      data c7 / 0.0512, 0.0512, 0.0512, 0.0511, 0.0508, 0.0504, 0.0495, 0.0489,
     1          0.0479, 0.0471, 0.0464, 0.0458, 0.0445, 0.0429, 0.0387, 0.035,
     1          0.028, 0.0213, 0.0106, 0.0041, 0.001, 0.0, 0.0 /
      data c8 / 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0,
     1          10.5, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 18.0, 19.0, 19.75,
     1          20.0, 20.0, 20.0 /
      data c9  / 0.79, 0.79, 0.8129, 0.8439, 0.874, 0.8996, 0.9442, 0.9677,
     1           0.966, 0.9334, 0.8946, 0.859, 0.8019, 0.7578, 0.6788,
     1           0.6196, 0.5101, 0.3917, 0.1244, 0.0086, 0.0, 0.0, 0.0 /
      data c9a / 1.5005, 1.5005, 1.5028, 1.5071, 1.5138, 1.523, 1.5597,
     1           1.6104, 1.7549, 1.9157, 2.0709, 2.2005, 2.3886, 2.5,
     1           2.6224, 2.669, 2.6985, 2.7085, 2.7145, 2.7164, 2.7172,
     1           2.7177, 2.718 /
      data gamma1 / -0.0096, -0.0096, -0.0097, -0.0101, -0.0105, -0.0109,
     1              -0.0117, -0.0117, -0.0111, -0.0100, -0.0091, -0.0082,
     1              -0.0069, -0.0059, -0.0045, -0.0037, -0.0028, -0.0023,
     1              -0.0019, -0.0018, -0.0017, -0.0017, -0.0017 /
      data gamma2 / -0.00480, -0.00481, -0.00486, -0.00503, -0.00526, -0.00549,
     1              -0.00588, -0.00591, -0.00540, -0.00479, -0.00427, -0.00384,
     1              -0.00317, -0.00272, -0.00209, -0.00175, -0.00142, -0.00143,
     1              -0.00115, -0.00104, -0.00099, -0.00094, -0.00091 /
      data ctvz / 2.0000, 2.0000, 2.0000, 2.0000, 2.0000, 2.0000, 2.0000, 2.0000,
     1            2.0000, 2.0000, 2.0000, 2.5000, 3.2000, 3.5000, 4.500, 5.0000,
     1            5.4000, 5.8000, 6.0000, 6.1500, 6.3000, 6.4250, 6.5500 /

      data phi1 / -0.4417, -0.4417, -0.434, -0.4177, -0.4, -0.3903, -0.404,
     1            -0.4423, -0.5162, -0.5697, -0.6109, -0.6444, -0.6931, -0.7246,
     1            -0.7708, -0.799, -0.8382, -0.8663, -0.9032, -0.9231, -0.9222,
     1            -0.8346, -0.7332 /
      data phi2 / -0.1417, -0.1417, -0.1364, -0.1403, -0.1591, -0.1862, -0.2538,
     1            -0.2943, -0.3113, -0.2927, -0.2662, -0.2405, -0.1975, -0.1633,
     1            -0.1028, -0.0699, -0.0425, -0.0302, -0.0129, -0.0016,  0.0, 0.0, 0.0 /
      data phi3 / -0.00701, -0.00701, -0.007279, -0.007354, -0.006977, -0.006467,
     1            -0.005734, -0.005604, -0.005845, -0.006141, -0.006439, -0.006704,
     1            -0.007125, -0.007435, -0.00812, -0.008444, -0.007707, -0.004792,
     1            -0.001828, -0.001523, -0.00144, -0.001369, -0.001361 /
      data phi4 / 0.102151, 0.102151, 0.10836, 0.119888, 0.133641, 0.148927, 0.190596,
     1            0.230662, 0.266468, 0.255253, 0.231541, 0.207277, 0.165464,
     1            0.133828, 0.085153, 0.058595, 0.031787, 0.019716, 0.009643,
     1            0.005379, 0.003223, 0.001134, 0.000515 /
      data phi5 /  0.2289, 0.2289, 0.2289, 0.2289, 0.2289, 0.229, 0.2292, 0.2297,
     1             0.2326, 0.2386, 0.2497, 0.2674, 0.312, 0.361, 0.4353, 0.4629,
     1             0.4756, 0.4785, 0.4796, 0.4799, 0.4799, 0.48, 0.48 /
      data phi6  / 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996,
     1             0.014996, 0.014996, 0.014988, 0.014964, 0.014881, 0.014639,
     1             0.013493,  0.011133, 0.006739, 0.005749, 0.005544, 0.005521,
     1             0.005517, 0.005517, 0.005517, 0.005517, 0.005517 /
      data phi7  / 580.0, 580.0, 580.0, 580.0, 579.9, 579.9, 579.6, 579.2, 577.2,
     1             573.9, 568.5, 560.5, 540.0, 512.9, 441.9, 391.8, 348.1, 332.5,
     1             324.1, 321.7, 320.9, 320.3, 320.1 /
      data phi8  / 0.07, 0.07, 0.0699, 0.0701, 0.0702, 0.0701, 0.0686, 0.0646,
     1             0.0494, -0.0019, -0.0479, -0.0756, -0.096, -0.0998, -0.0765,
     1            -0.0412, 0.014, 0.0544, 0.1232, 0.1859, 0.2295, 0.266, 0.2682 /
      data tau1  / 0.3437, 0.3437, 0.3471, 0.3603, 0.3718, 0.3848, 0.3878, 0.3835,
     1             0.3719, 0.3601, 0.3522, 0.3438, 0.3351, 0.3353, 0.3429, 0.3577,
     1             0.3769, 0.4023, 0.4406, 0.4784, 0.5074, 0.5328, 0.5542 /
      data tau2  / 0.2637, 0.2637, 0.2671, 0.2803, 0.2918, 0.3048, 0.3129, 0.3152,
     1             0.3128, 0.3076, 0.3047, 0.3005, 0.2984, 0.3036, 0.3205, 0.3419,
     1             0.3703, 0.4023, 0.4406, 0.4784, 0.5074, 0.5328, 0.5542 /
      data sigma1 / 0.4458, 0.4458, 0.4458, 0.4535, 0.4589, 0.463, 0.4702, 0.4747,
     1              0.4798, 0.4816, 0.4815, 0.4801, 0.4758, 0.471, 0.4621, 0.4581,
     1              0.4493, 0.4459, 0.4433, 0.4424, 0.442,  0.4416, 0.4414 /
      data sigma2 / 0.3459, 0.3459, 0.3459, 0.3537, 0.3592, 0.3635, 0.3713, 0.3769,
     1              0.3847, 0.3902, 0.3946, 0.3981, 0.4036, 0.4079, 0.4157, 0.4213,
     1              0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213 /
      data sigma3 / 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.7999,
     1              0.7997, 0.7988, 0.7966, 0.7792, 0.7504, 0.7136, 0.7035,
     1              0.7006, 0.7001, 0.7, 0.7, 0.7 /


c      Note: Ctvz array is included but the model does not account for this.
C            To apply this term in the model the distance of travel within the
C            volcanic zone would need to be computed and used.

C Find the requested spectral period and corresponding coefficients
      nPer = 23
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         c1T      = c1(1)
         c1aT     = c1a(1)
         c1bT     = c1b(1)
         cnT      = cn(1)
         cmT      = cm(1)
         c3T      = c3(1)
         c5T      = c5(1)
         c6T      = c6(1)
         c7T      = c7(1)
         c8T      = c8(1)
         c9T      = c9(1)
         c9aT     = c9a(1)
         ctvzT    = ctvz(1)
         gamma1T  = gamma1(1)
         gamma2T  = gamma2(1)
         phi1T    = phi1(1)
         phi2T    = phi2(1)
         phi3T    = phi3(1)
         phi4T    = phi4(1)
         phi5T    = phi5(1)
         phi6T    = phi6(1)
         phi7T    = phi7(1)
         phi8T    = phi8(1)
         tau1T    = tau1(1)
         tau2T    = tau2(1)
         sigma1T = sigma1(1)
         sigma2T = sigma2(1)
         sigma3T = sigma3(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Bradley (2010) Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),c1(count1),c1(count2),
     +                   specT,c1T,iflag)
            call interp (period(count1),period(count2),c1a(count1),c1a(count2),
     +                   specT,c1aT,iflag)
            call interp (period(count1),period(count2),c1b(count1),c1b(count2),
     +                   specT,c1bT,iflag)
            call interp (period(count1),period(count2),cn(count1),cn(count2),
     +                   specT,cnT,iflag)
            call interp (period(count1),period(count2),cm(count1),cm(count2),
     +                   specT,cmT,iflag)
            call interp (period(count1),period(count2),c3(count1),c3(count2),
     +                   specT,c3T,iflag)
            call interp (period(count1),period(count2),c5(count1),c5(count2),
     +                   specT,c5T,iflag)
            call interp (period(count1),period(count2),c6(count1),c6(count2),
     +                   specT,c6T,iflag)
            call interp (period(count1),period(count2),c7(count1),c7(count2),
     +                   specT,c7T,iflag)
            call interp (period(count1),period(count2),c8(count1),c8(count2),
     +                   specT,c8T,iflag)
            call interp (period(count1),period(count2),c9(count1),c9(count2),
     +                   specT,c9T,iflag)
            call interp (period(count1),period(count2),c9a(count1),c9a(count2),
     +                   specT,c9aT,iflag)
            call interp (period(count1),period(count2),ctvz(count1),ctvz(count2),
     +                   specT,ctvzT,iflag)
            call interp (period(count1),period(count2),gamma1(count1),gamma1(count2),
     +                   specT,gamma1T,iflag)
            call interp (period(count1),period(count2),gamma2(count1),gamma2(count2),
     +                   specT,gamma2T,iflag)
            call interp (period(count1),period(count2),phi1(count1),phi1(count2),
     +                   specT,phi1T,iflag)
            call interp (period(count1),period(count2),phi2(count1),phi2(count2),
     +                   specT,phi2T,iflag)
            call interp (period(count1),period(count2),phi3(count1),phi3(count2),
     +                   specT,phi3T,iflag)
            call interp (period(count1),period(count2),phi4(count1),phi4(count2),
     +                   specT,phi4T,iflag)
            call interp (period(count1),period(count2),phi5(count1),phi5(count2),
     +                   specT,phi5T,iflag)
            call interp (period(count1),period(count2),phi6(count1),phi6(count2),
     +                   specT,phi6T,iflag)
            call interp (period(count1),period(count2),phi7(count1),phi7(count2),
     +                   specT,phi7T,iflag)
            call interp (period(count1),period(count2),phi8(count1),phi8(count2),
     +                   specT,phi8T,iflag)
            call interp (period(count1),period(count2),tau1(count1),tau1(count2),
     +                   specT,tau1T,iflag)
            call interp (period(count1),period(count2),tau2(count1),tau2(count2),
     +                   specT,tau2T,iflag)
            call interp (period(count1),period(count2),sigma1(count1),sigma1(count2),
     +                   specT,sigma1T,iflag)
            call interp (period(count1),period(count2),sigma2(count1),sigma2(count2),
     +                   specT,sigma2T,iflag)
            call interp (period(count1),period(count2),sigma3(count1),sigma3(count2),
     +                   specT,sigma3T,iflag)
c            call interp (period(count1),period(count2),sigma4(count1),sigma4(count2),
c     +                   specT,sigma4T,iflag)

 1011 period1 = specT

c     Set the fault mechanism term.
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C      -1       Normal                   -120 < Rake < -60.0
C     1, 0.5    Reverse and Rev/Obl        30 < Rake < 150.0
C     0,-0.5    Strike-Slip and NMl/Obl        Otherwise
         if (ftype .eq. -1) then
            F_RV = 0.0
            F_NM = 1.0
         elseif (ftype .ge. 0.5) then
            F_RV = 1.0
            F_NM = 0.0
         else
            F_RV = 0.0
            F_NM = 0.0
         endif

C HW factors......
c     For now, convert hwflag to an equivalent srcSiteA
c      if ( hwflag .eq. 1 ) then
c        srcSiteA = 90.
c      else
c        srcSiteA = 0.
c      endif
C No longer needed since Rx is computed and passed.
C     Compute Rx value given source to site azimuth
c      if (srcsiteA .eq. 90.0) then
c         Rx = Rrup/sin(abs(delta)*3.14159/180.0) - DTor/tan(abs(delta)*3.14159/180.0)
c      elseif (srcsiteA .gt. 0.0) then
c         Rx = Rbjf*tan(srcSiteA*3.14159/180.0)
c      elseif (srcsiteA .le. 0.0) then
c         Rx = 0.0
c      endif

        c2 = 1.06
        c4 = -2.1
        c4a = -0.5
        cRB = 50.0
        cHM = 3.0
        gm = 4.0

        pi = atan(1.0)*4.0
        d2r = pi/180.0

        cc = c5T* cosh(c6T * max((M-cHM),0.0))
        gamma = gamma1T + gamma2T/cosh(max((M-gm),0.0))
        cosDELTA = cos(abs(DELTA)*d2r)

c Magnitude scaling
        r1 = c1T + c2 * (M-6.0) +
     1       (c2-c3T)/cnT *
     1             alog(1.0 + exp(-cnT*(M-cMT)))

c Near-field magnitude and distance scaling
        r2 = c4 * alog(Rrup + cc)

c Distance scaling at large distance
        r3 = (c4a-c4)/2.0 *
     1            alog( Rrup*Rrup+cRB*cRB ) +
     1       Rrup * gamma

c More source scaling (Adjusted C7-DTor term)
        r4 = c1aT*F_RV +
     1       c1bT*F_NM +
     1       c7T*(min(DTor,c8T) - 4.0)

c HW effect
        if (HWFlag .eq. 0) then
           hw = 0.0
        else
           hw = c9T * tanh(Rx*cosDelta**2.0/c9aT) *
     1          (1.0 - sqrt(Rbjf**2.0+DTor**2.0)/(Rrup + 0.001))
        endif
c Predicted median Sa on reference condition (Vs=1130 m/sec)
        psa_ref = r1+r2+r3+r4+hw

C     Compute V1
        if (specT .eq. 0.0) then
           v1 = 1800.0
        elseif (spect .gt. 0.0) then
           v1 = min(max(1130.0*(specT/0.75)**(-0.11),1130.0),1800.0)
        endif

c Linear soil amplification
        a = phi1T * alog(min(Vs,v1)/1130.0)

c Nonlinear soil amplification
        b = phi2T *
     1      (exp(phi3T*(min(Vs,1130.0)-360.0)) - exp(phi3T*(1130.0-360.0)))
        c = phi4T

C Deviation from ln(Vs30) scaling: bedrock depth (Z1) effect
C NOTE: max(0,z1-15) is capped at 300 to avoid overflow of function cosh
        rkdepth = phi5T*
     1            (1.0-1.0/cosh(phi6T*max(0.0,depthvs10*1000.0-phi7T))) +
     1            phi8T/cosh(0.15*min(max(0.0,depthvs10*1000.0-15.0),300.0))

c Sa on soil condition
        psa = psa_ref + (a + b * alog((exp(psa_ref)+c)/c)) + rkdepth

C Compute the sigma term
        NL = b*exp(psa_ref)/(exp(psa_ref)+c)
        sigma_M = sigma1T + (sigma2T-sigma1T)/2.0*(min(max(M,5.0),7.0)-5.0)
        if (vs30_class .eq. 0) then
           sigma = sigma_M*sqrt(sigma3T+(1.0+NL)**2.0)
        else
           sigma = sigma_M*sqrt(0.7+(1.0+NL)**2.0)
        endif
C Compute the tau term
        tau = tau1T + (tau2T-tau1T)/2.0*(min(max(M,5.0),7.0)-5.0)
        tau = tau*(1.0+NL)

        sigma = sqrt(tau*tau + sigma*sigma)

C     Convert ground motion to units of gals.
      lnY = psa + 6.89
      period2 = period1

      return
      end

c----------------------------------------------------------------------
      Subroutine McVerry_crustal_2006 ( m, Rrup, specT,
     1                     period2, lnY, sigma, iflag, Ftype,
     3                     hwflag, Sc, Sd )

      parameter (MAXPER=14)
      REAL Period(MAXPER), C1(MAXPER), C3(MAXPER), C4(MAXPER)
      REAL c5(MAXPER), c6(MAXPER), c8(MAXPER), c10(MAXPER)
      REAL c32(MAXPER) ,c33(MAXPER), sigmaM6(MAXPER), sigslope(MAXPER)
      REAL tau(MAXPER), a9(MAXPER), C29(MAXPER), c30(MAXPER), c43(MAXPER)

      REAL c1T, c3T, c4T, c5T, c6T, c8T, c10T, c32T, c33T
      REAL sigmaM6T, sigslopeT, tauT, sigma, a9T, c29T, c30T, c43T
      REAL M, RRUP, specT, Ftype, sig
      REAL period2, lnY, F_RV, F_NM, lnYab
      REAL c1up, c3up, c4up, c5up, c6up, c8up, c10up, c29up, c30up, c43up
      REAL c32up, c33up, fhw, fhwm, fhwr, fhwp, fhwmp, fhwrp
      REAL pgaupab, pgaup, pgapab, pgap

      integer iflag, count1, count2, hwflag

      Data Period / 0.0, 0.01, 0.03, 0.075, 0.1, 0.2, 0.3, 0.4, 0.5, 0.75, 1.0, 1.5, 2.0, 3.0 /
      Data C1 / 0.07713, 0.07713, 0.07713, 1.2205, 1.53365, 1.22565, 0.21124, -0.10541, -0.1426,
     1         -0.65968, -0.51404, -0.95399, -1.24167, -1.5657 /
      Data C3 / 0.0, 0.0, 0.0, 0.03, 0.028, -0.0138, -0.036, -0.0518, -0.0635, -0.0862,
     1         -0.102, -0.12, -0.12, -0.1726 /
      Data C4 / -0.144, -0.144, -0.144, -0.144, -0.144, -0.144, -0.144, -0.144, -0.144,
     1          -0.144, -0.144, -0.144, -0.144, -0.144 /
      Data C5 / -0.00898, -0.00898, -0.00898, -0.00914, -0.00903, -0.00975, -0.01032,
     1          -0.00941, -0.00878, -0.00802, -0.00647, -0.00713, -0.00713, -0.00623 /
      Data C6 / 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17,
     1          0.17, 0.17, 0.17 /
      Data C8 / -0.73728, -0.73728, -0.73728, -0.93059, -0.96506, -0.75855, -0.524, -0.50802,
     1          -0.52214, -0.47264, -0.58672, -0.49268, -0.49268, -0.52257 /
      Data C10 / 5.6, 5.6, 5.6, 5.58, 5.5, 5.1, 4.8, 4.52, 4.3, 3.9, 3.7, 3.55, 3.55, 3.5 /

      data C29 / 0.3873, 0.3873, 0.3873, 0.27879, 0.28619, 0.34064, 0.53213, 0.63272,
     1           0.58809, 0.50708, 0.33002, 0.07445, 0.07445, 0.09869 /
      data C30 / -0.23, -0.23, -0.23, -0.28, -0.28, -0.245, -0.195, -0.16, -0.121, -0.05,
     1            0.0, 0.04, 0.04, 0.04 /
      Data C32 / 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 /
      Data C33 / 0.26, 0.26, 0.26, 0.26, 0.26, 0.26, 0.198, 0.154, 0.119, 0.057, 0.013,
     1         -0.049, -0.049, -0.156 /
      data C43 / -0.31036, -0.31036, -0.31036, -0.49068, -0.46604, -0.31282, -0.07565,
     1            0.17615, 0.34775, 0.7238, 0.89239, 0.77743, 0.77743, 0.60938 /
      Data SigmaM6 / 0.4871, 0.4871, 0.4871, 0.5297, 0.5401, 0.5599, 0.5456, 0.5556,
     1               0.5658, 0.5611, 0.5573, 0.5419, 0.5419, 0.5809 /
      Data sigslope / -0.1011, -0.1011, -0.1011, -0.0703, -0.0292, 0.0172, -0.0566, -0.1064,
     1                -0.1123, -0.0836, -0.062, 0.0385, 0.0385, 0.1403 /
      Data tau / 0.2469, 0.2469, 0.2469, 0.3139, 0.3017, 0.2583, 0.1967, 0.1802,
     1           0.144, 0.1871, 0.2073, 0.2405, 0.2405, 0.2053 /
      data a9 / 0.370, 0.370, 0.370, 0.370, 0.370, 0.370, 0.370, 0.370, 0.370,
     1          0.331, 0.281, 0.210, 0.160, 0.089 /
C     Notes Travel path term for Volcanic region is not included. This subroutine
C     is also only for crustal earthquakes and includes the Hanging Wall model
C     of Abrahamson and Silva (1997) as recommended in the McVerry et al. (2006) paper.

C Find the requested spectral period and corresponding coefficients
      nPer = 14
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1   = period(1)
         c1T       = c1(1)
         c3T       = c3(1)
         c4T       = c4(1)
         c5T       = c5(1)
         c6T       = c6(1)
         c8T       = c8(1)
         c10T      = c10(1)
         c29T      = c29(1)
         c30T      = c30(1)
         c32T      = c32(1)
         c33T      = c33(1)
         c43T      = c43(1)
         sigmaM6T  = sigmaM6(1)
         sigslopeT = sigslope(1)
         tauT      = tau(1)
         a9T       = a9(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'McVerry et al. (2006) Crustal Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c5(count1),c5(count2),
     +             specT,c5T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period(count1),period(count2),c8(count1),c8(count2),
     +             specT,c8T,iflag)
      call interp (period(count1),period(count2),c10(count1),c10(count2),
     +             specT,c10T,iflag)
      call interp (period(count1),period(count2),c29(count1),c29(count2),
     +             specT,c29T,iflag)
      call interp (period(count1),period(count2),c30(count1),c30(count2),
     +             specT,c30T,iflag)
      call interp (period(count1),period(count2),c32(count1),c32(count2),
     +             specT,c32T,iflag)
      call interp (period(count1),period(count2),c33(count1),c33(count2),
     +             specT,c33T,iflag)
      call interp (period(count1),period(count2),c43(count1),c43(count2),
     +             specT,c43T,iflag)
      call interp (period(count1),period(count2),sigmaM6(count1),sigmaM6(count2),
     +             specT,sigmaM6T,iflag)
      call interp (period(count1),period(count2),sigslope(count1),sigslope(count2),
     +             specT,sigslopeT,iflag)
      call interp (period(count1),period(count2),tau(count1),tau(count2),
     +             specT,tauT,iflag)
      call interp (period(count1),period(count2),a9(count1),a9(count2),
     +             specT,a9T,iflag)

 1011 period1 = specT

c     Set the fault mechanism term.
C     fType     Mechanism
C     ----------------------------------
C      -1       Normal
C     1, 0.5    Reverse and Rev/Obl
C     0,-0.5    Strike-Slip and NMl/Obl
      if (ftype .eq. -1.0) then
          F_RV = 0.0
          F_NM = 1.0
      elseif (ftype .ge. 0.5) then
          F_RV = 1.0
          F_NM = 0.0
      else
          F_RV = 0.0
          F_NM = 0.0
      endif

C     First compute the AS(1997) Hanging Wall
      if (HWFlag .eq. 1) then
         if(M. le. 5.5) then
            fhwm = 0.0
            fhwmp = 0.0
         elseif (M .gt. 5.5 .and. M .lt. 6.5) then
            fhwm = (M-5.5)
            fhwmp = (M-5.5)
         else
            fhwm = 1.0
            fhwmp = 1.0
         endif

         if (Rrup .lt. 4) then
            fhwr = 0.0
            fhwrp = 0.0
         elseif (Rrup .ge. 4.0 .and. Rrup .lt. 8.0) then
            fhwr = a9T*(Rrup-4.0)/4.0
            fhwrp = a9(1)*(Rrup-4.0)/4.0
         elseif (Rrup .ge. 8.0 .and. Rrup .lt. 18.0) then
            fhwr = a9T
            fhwrp = a9(1)
         elseif (Rrup .ge. 18.0 .and. Rrup .lt. 24.0) then
            fhwr = a9T*(1.0-(Rrup-18.0)/7.0)
            fhwrp = a9(1)*(1.0-(Rrup-18.0)/7.0)
         else
            fhwr = 0.0
            fhwrp = 0.0
         endif

         fhw = fhwm*fhwr
         fhwp = fhwmp*fhwrp
      else
        fhw = 0.0
        fhwp = 0.0
      endif

C     Next compute the PGA unprimed for later scaling.
      c1up = 0.14274
      c3up = 0.0
      c4up = -0.144
      c5up = -0.00989
      c6up = 0.17
      c8up = -0.68744
      c10up = 5.6
      c29up = 0.27315
      c30up = -0.23
      c43up = -0.33716
      c32up = 0.2
      c33up = 0.26

      pgaupab = c1up + c4up*(M-6.0) + c3up*(8.5-M)**2.0 + c5up*Rrup +
     1        (c8up+c6up*(M-6.0))*alog(sqrt(Rrup*Rrup+c10up*c10up)) +
     2        c32up*F_NM + c33up*F_RV + fhwp

      pgaup = pgaupab + c29up*Sc + (c30up*alog(exp(pgaupab)+0.03) + c43up)*Sd

C     Next compute the primed PGA value.
      pgapab = c1(1) + c4(1)*(M-6.0) + c3(1)*(8.5-M)**2.0 + c5(1)*Rrup +
     1        (c8(1)+c6(1)*(M-6.0))*alog(sqrt(Rrup*Rrup+c10(1)*c10(1))) +
     2        c32(1)*F_NM + c33(1)*F_RV + fhwp

      pgap = pgapab + c29(1)*Sc + (c30(1)*alog(exp(pgapab)+0.03) + c43(1))*Sd

C     Now compute the ground motion for the given spectral period.
      lnYab = c1T + c4T*(M-6.0) + c3T*(8.5-M)**2.0 + c5T*Rrup +
     1        (c8T+c6T*(M-6.0))*alog(sqrt(Rrup*Rrup+c10T*c10T)) +
     2        c32T*F_NM + c33T*F_RV + fhwp

      lnY = lnYab + c29T*Sc + (c30T*alog(exp(pgap)+0.03) + c43T)*Sd

C     Now make dataset adjustment.
      lnY = lnY + (pgaup - pgap)

C Compute the sigma term
      if (M .lt. 5.0) then
         sig = sigmaM6T - sigslopeT
      elseif (M .gt. 7.0) then
         sig = sigmaM6T + sigslopeT
      else
         sig = sigmaM6T + sigslopeT*(M-6.0)
      endif

      sigma = sqrt(tauT*tauT + sig*sig)

C     Convert ground motion to units of gals.
      lnY = lnY + 6.89
      period2 = period1

      return
      end

c----------------------------------------------------------------------
      subroutine S02_McVerry_Subduction_2006 ( m, Rrup, specT,
     1                     period2, lnY, sigma, iflag, Ftype,
     3                     depthtop, dip, width, hypodepth, Sc, Sd )

      Implicit None

      integer MAXPER
      parameter (MAXPER=14)
      REAL Period(MAXPER), C11(MAXPER), C12(MAXPER), C13(MAXPER)
      REAL c15(MAXPER), c17(MAXPER), c18(MAXPER), c19(MAXPER)
      REAL c20(MAXPER) ,c24(MAXPER), sigmaM6(MAXPER), sigslope(MAXPER)
      REAL tau(MAXPER), a9(MAXPER), C29(MAXPER), c30(MAXPER), c43(MAXPER), c46(MAXPER)

      REAL c11T, c12T, c13T, c15T, c17T, c18T, c19T, c20T, c24T
      REAL sigmaM6T, sigslopeT, tauT, sigma, a9T, c29T, c30T, c43T, c46T
      REAL M, RRUP, specT, Ftype, sig, Sc, Sd, RVOL
      REAL depthtop, dip, width, hypodepth
      REAL period2, lnY, lnYAB, period1, SI, Hc, DS
      REAL c11up, c12up, c13up, c15up, c17up, c18up, c19up, c29up, c30up, c43up, c46up
      REAL c20up, c24up
      REAL pgaupab, pgaup, pgapab, pgap

      integer iflag, count1, count2, nPer, i

      Data Period / 0.0, 0.01, 0.03, 0.075, 0.1, 0.2, 0.3, 0.4, 0.5, 0.75, 1.0, 1.5, 2.0, 3.0 /
      Data C11 / 8.08611, 8.08611, 8.08611, 8.69303, 9.30400, 10.41628, 9.21783,
     1           8.01150, 7.87495, 7.26785, 6.98741, 6.77543, 6.48775, 5.05424 /
      Data C12 / 1.41400, 1.41400, 1.41400, 1.41400, 1.41400, 1.41400, 1.41400,
     1           1.41400, 1.41400, 1.41400, 1.41400, 1.41400, 1.41400, 1.41400 /
      Data C13 / 0.00000, 0.00000, 0.00000, 0.00000, -0.00110, -0.00270, -0.00360,
     1          -0.00430, -0.00480, -0.00570, -0.00640, -0.00730, -0.00730, -0.00890 /
      Data C15 / -2.55200, -2.55200, -2.55200, -2.70700, -2.65500, -2.52800, -2.45400,
     1           -2.40100, -2.36000, -2.28600, -2.23400, -2.16000, -2.16000, -2.03300 /
      Data C17 / -2.49894, -2.49894, -2.49894, -2.55903, -2.61372, -2.70038, -2.47356,
     1           -2.30457, -2.31991, -2.28460, -2.28256, -2.27895, -2.27895, -2.05560 /
      Data C18 / 1.78180, 1.78180, 1.78180, 1.78180, 1.78180, 1.78180, 1.78180,
     1           1.78180, 1.78180, 1.78180, 1.78180, 1.78180, 1.78180, 1.78180 /
      Data C19 / 0.55400, 0.55400, 0.55400, 0.55400, 0.55400, 0.55400, 0.55400,
     1           0.55400, 0.55400, 0.55400, 0.55400, 0.55400, 0.55400, 0.55400 /
      Data C20 / 0.01590, 0.01590, 0.01590, 0.01821, 0.01737, 0.01531, 0.01304,
     1           0.01426, 0.01277, 0.01055, 0.00927, 0.00748, 0.00748, -0.00273 /
      Data C24 / -0.43223, -0.43223, -0.43223, -0.52504, -0.61452, -0.65966, -0.56604,
     1           -0.33169, -0.24374, -0.01583, 0.02009, -0.07051, -0.07051, -0.23967 /
      Data C29 / 0.3873, 0.3873, 0.3873, 0.27879, 0.28619, 0.34064, 0.53213, 0.63272,
     1           0.58809, 0.50708, 0.33002, 0.07445, 0.07445, 0.09869 /
      Data C30 / -0.23, -0.23, -0.23, -0.28, -0.28, -0.245, -0.195, -0.16, -0.121, -0.05,
     1            0.0, 0.04, 0.04, 0.04 /
      Data C43 / -0.31036, -0.31036, -0.31036, -0.49068, -0.46604, -0.31282, -0.07565,
     1            0.17615, 0.34775, 0.7238, 0.89239, 0.77743, 0.77743, 0.60938 /

      Data C46 / -0.03250, -0.03250, -0.03250, -0.03441, -0.03594, -0.03823, -0.03535,
     1           -0.03354, -0.03211, -0.02857, -0.02500, -0.02008, -0.02008, -0.01587 /


      Data SigmaM6 / 0.4871, 0.4871, 0.4871, 0.5297, 0.5401, 0.5599, 0.5456, 0.5556,
     1               0.5658, 0.5611, 0.5573, 0.5419, 0.5419, 0.5809 /
      Data sigslope / -0.1011, -0.1011, -0.1011, -0.0703, -0.0292, 0.0172, -0.0566, -0.1064,
     1                -0.1123, -0.0836, -0.062, 0.0385, 0.0385, 0.1403 /
      Data tau / 0.2469, 0.2469, 0.2469, 0.3139, 0.3017, 0.2583, 0.1967, 0.1802,
     1           0.144, 0.1871, 0.2073, 0.2405, 0.2405, 0.2053 /
      data a9 / 0.370, 0.370, 0.370, 0.370, 0.370, 0.370, 0.370, 0.370, 0.370,
     1          0.331, 0.281, 0.210, 0.160, 0.089 /
C     Notes Travel path term for Volcanic region is not included.

C Find the requested spectral period and corresponding coefficients
      nPer = 14
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1   = period(1)
         c11T       = c11(1)
         c12T       = c12(1)
         c13T       = c13(1)
         c15T       = c15(1)
         c17T       = c17(1)
         c18T       = c18(1)
         c19T      = c19(1)
         c20T      = c20(1)
         c24T      = c24(1)
         c29T      = c29(1)
         c30T      = c30(1)
         c43T      = c43(1)
         c46T      = c46(1)
         sigmaM6T  = sigmaM6(1)
         sigslopeT = sigslope(1)
         tauT      = tau(1)
         a9T       = a9(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
c     write statement removed for R package compliance
c     write statement removed for R package compliance
c     write statement removed for R package compliance
c     write statement removed for R package compliance
c     write statement removed for R package compliance
c     write statement removed for R package compliance
c     write statement removed for R package compliance
c     write statement removed for R package compliance
c     write statement removed for R package compliance
c     write statement removed for R package compliance
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call S24_interp (period(count1),period(count2),c11(count1),c11(count2),
     +             specT,c11T,iflag)
      call S24_interp (period(count1),period(count2),c12(count1),c12(count2),
     +             specT,c12T,iflag)
      call S24_interp (period(count1),period(count2),c13(count1),c13(count2),
     +             specT,c13T,iflag)
      call S24_interp (period(count1),period(count2),c15(count1),c15(count2),
     +             specT,c15T,iflag)
      call S24_interp (period(count1),period(count2),c17(count1),c17(count2),
     +             specT,c17T,iflag)
      call S24_interp (period(count1),period(count2),c18(count1),c18(count2),
     +             specT,c18T,iflag)
      call S24_interp (period(count1),period(count2),c19(count1),c19(count2),
     +             specT,c19T,iflag)
      call S24_interp (period(count1),period(count2),c20(count1),c20(count2),
     +             specT,c20T,iflag)
      call S24_interp (period(count1),period(count2),c24(count1),c24(count2),
     +             specT,c24T,iflag)
      call S24_interp (period(count1),period(count2),c29(count1),c29(count2),
     +             specT,c29T,iflag)
      call S24_interp (period(count1),period(count2),c30(count1),c30(count2),
     +             specT,c30T,iflag)
      call S24_interp (period(count1),period(count2),c43(count1),c43(count2),
     +             specT,c43T,iflag)
      call S24_interp (period(count1),period(count2),c46(count1),c46(count2),
     +             specT,c46T,iflag)
      call S24_interp (period(count1),period(count2),sigmaM6(count1),sigmaM6(count2),
     +             specT,sigmaM6T,iflag)
      call S24_interp (period(count1),period(count2),sigslope(count1),sigslope(count2),
     +             specT,sigslopeT,iflag)
      call S24_interp (period(count1),period(count2),tau(count1),tau(count2),
     +             specT,tauT,iflag)
      call S24_interp (period(count1),period(count2),a9(count1),a9(count2),
     +             specT,a9T,iflag)

 1011 period1 = specT

c     Set the fault mechanism term.
c     fType     Mechanism
C     ----------------------------------
c     0         Interface
c     1         Intraslab

      if (ftype .eq. 0.0) then
       SI = 1.0
      elseif (ftype .eq. 1.0) then
       SI = 0.0
      else
c     write statement removed for R package compliance
c     write statement removed for R package compliance
       return
      endif

c     Set the Centroid Depth
c     The centroid is assumed to be at the center of the rupture plane.
      Hc = depthtop + width * cos(dip/180*3.14159) / 2
c     OR the centroid depth is assumed to be the same as the hypocenter depth.
      Hc = hypodepth

c     Set the location of the intraslab earthquake
c     A rupture centroid depth of 50 km separates the deep from the shallow events.
      if (Hc . ge. 50.0) then
       DS = 1.0
      else
       DS = 0.0
      endif

c     Set distance through volcanic attenuation
      RVOL = 0.0*Rrup


C     Next compute the PGA unprimed for later scaling.
      c11up = 8.57343
      c12up = 1.41400
      c13up = 0.00000
      c15up = -2.55200
      c17up = -2.56592
      c18up = 1.78180
      c19up = 0.55400
      c20up = 0.01545
      c24up = -0.49963
      c29up = 0.27315
      c30up = -0.23000
      c43up = -0.33716
      c46up = -0.03255

      pgaupab = c11up + (c12up + (c15up - c17up) * c19up)*(M-6.0) +
     1          c13up * (10.0-M)**3 +
     2          c17up * alog (Rrup + c18up * exp(c19up * M)) +
     3          c20up * Hc + c24up * SI +
     4          c46up * RVOL * (1-DS)


      pgaup = pgaupab + c29up*Sc + (c30up*alog(exp(pgaupab)+0.03) + c43up)*Sd

C     Next compute the primed PGA value.

      pgapab = c11(1) + (c12(1) + (c15(1) - c17(1)) * c19(1))*(M-6.0) +
     1          c13(1) * (10.0-M)**3 +
     2          c17(1) * alog (Rrup + c18(1) * exp(c19(1) * M)) +
     3          c20(1) * Hc + c24(1) * SI +
     4          c46(1) * RVOL * (1-DS)

      pgap = pgapab + c29(1)*Sc + (c30(1)*alog(exp(pgapab)+0.03) + c43(1))*Sd

C     Now compute the ground motion for the given spectral period.

      lnYab = c11T + (c12T + (c15T - c17T) * c19T)*(M-6.0) +
     1          c13T * (10.0-M)**3 +
     2          c17T * alog (Rrup + c18T * exp(c19T * M)) +
     3          c20T * Hc + c24T * SI +
     4          c46T * RVOL * (1-DS)

      lnY = lnYab + c29T*Sc + (c30T*alog(exp(pgap)+0.03) + c43T)*Sd

C     Now make dataset adjustment.

      lnY = lnY + (pgaup - pgap)

C Compute the sigma term
      if (M .lt. 5.0) then
         sig = sigmaM6T - sigslopeT
      elseif (M .gt. 7.0) then
         sig = sigmaM6T + sigslopeT
      else
         sig = sigmaM6T + sigslopeT*(M-6.0)
      endif

      sigma = sqrt(tauT*tauT + sig*sig)

C     Convert ground motion to units of gals.
      lnY = lnY + 6.89
      period2 = period1

      return
      end

c----------------------------------------------------------------------
      Subroutine Bindi_Hor_2009 ( m, jbDist, specT,
     1                     period2, lnY, sigma, iflag, Sr, Ss, Sd )

      parameter (MAXPER=23)
      REAL Period(MAXPER), a(MAXPER), b1(MAXPER), b2(MAXPER)
      REAL c1(MAXPER), c2(MAXPER), h(MAXPER), Bigc0(MAXPER)
      REAL Bigc1(MAXPER), Bigc2(MAXPER), sig(MAXPER)
      REAL aT, b1T, b2T, c1T, c2T, hT, Bigc0T, Bigc1T, Bigc2T, sigT
      REAL M, jbDist, specT, sigma
      REAL period2, lnY, Sr, Ss, Sd

      integer iflag, count1, count2


      data Period / 0.0, 0.01, 0.03, 0.04, 0.07, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35,
     1           0.4, 0.45, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.25, 1.5, 1.75, 2.0 /
      data a / 3.7691, 3.7691, 3.8802, 3.8569, 4.005, 4.0176, 4.1, 4.0808,
     1         3.9805, 3.9016, 3.8185, 3.6578, 3.5972, 3.5304, 3.3531, 3.2126,
     2         3.098, 3.0472, 3.0311, 2.821, 2.8348, 2.861, 2.7506 /
      data b1 / 0.0523, 0.0523, 0.0086, 0.0395, 0.0479, 0.0619, 0.093, 0.0633,
     1          0.1333, 0.1224, 0.1167, 0.1583, 0.1656, 0.2035, 0.2456, 0.2754,
     2          0.2949, 0.35, 0.3555, 0.3621, 0.2498, 0.1834, 0.2056 /
      data b2 / -0.1389, -0.1389, -0.1287, -0.1255, -0.1232, -0.112, -0.133,
     1          -0.1358, -0.1418, -0.1407, -0.1366, -0.147, -0.1342, -0.132,
     2          -0.1181, -0.1209, -0.0963, -0.0952, -0.0962, -0.0963, -0.1103,
     3          -0.104, -0.1139 /
      data c1 / -1.9383, -1.9383, -1.972, -1.93, -1.9197, -1.8599, -1.8769,
     1          -1.8833, -1.8756, -1.8908, -1.8992, -1.8521, -1.8678, -1.8728,
     2          -1.8463, -1.8299, -1.8318, -1.8627, -1.9011, -1.878, -1.9787,
     3          -2.0899, -2.0976 /
      data c2 / 0.4661, 0.4661, 0.471, 0.4431, 0.4212, 0.3949, 0.4125, 0.4546,
     1          0.4318, 0.4551, 0.474, 0.4727, 0.4665, 0.4519, 0.4414, 0.4396,
     2          0.4255, 0.3992, 0.4036, 0.4151, 0.5216, 0.588, 0.5953 /
      data h / 10.1057, 10.1057, 10.594, 10.0362, 10.2414, 10.4222, 10.7824,
     1         10.5949, 10.2248, 9.7928, 9.4714, 9.269, 9.3437, 9.2842, 9.0307,
     2          8.8794, 8.7481, 9.1414, 9.6044, 9.5829, 9.9923, 10.8928, 10.5615 /
      data Bigc0 / 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1             0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /
      data Bigc1 / 0.226, 0.226, 0.2176, 0.2221, 0.2082, 0.2572, 0.2631, 0.2126,
     1            0.1618, 0.1409, 0.1289, 0.1146, 0.0946, 0.0763, 0.0539, 0.0447,
     2            0.0436, 0.04, 0.0347, 0.0233, -0.0006, -0.0002, -0.0065 /
      data Bigc2 / 0.1043, 0.1043, 0.0866, 0.0764, 0.039, 0.058, 0.0632, 0.1212,
     1             0.1454, 0.163, 0.1892, 0.219, 0.2632, 0.2741, 0.2973, 0.3217,
     2             0.3406, 0.3663, 0.3791, 0.4091, 0.4111, 0.4133, 0.3836 /
      data sig / 0.3523, 0.3523, 0.3521, 0.3648, 0.3649, 0.3734, 0.3832, 0.3924,
     1           0.3815, 0.375, 0.3842, 0.374, 0.3744, 0.3713, 0.3732, 0.3761,
     2           0.3756, 0.3784, 0.3907, 0.4119, 0.4059, 0.3987, 0.379 /


C Find the requested spectral period and corresponding coefficients
      nPer = 23
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         aT       = a(1)
         b1T      = b1(1)
         b2T      = b2(1)
         c1T      = c1(1)
         c2T      = c2(1)
         hT       = h(1)
         Bigc0T   = Bigc0(1)
         Bigc1T   = Bigc1(1)
         BIgc2T   = Bigc2(1)
         sigT     = sig(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Bindi et al. (2009) Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),a(count1),a(count2),
     +             specT,aT,iflag)
      call interp (period(count1),period(count2),b1(count1),b1(count2),
     +             specT,b1T,iflag)
      call interp (period(count1),period(count2),b2(count1),b2(count2),
     +             specT,b2T,iflag)
      call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),h(count1),h(count2),
     +             specT,hT,iflag)
      call interp (period(count1),period(count2),Bigc0(count1),Bigc0(count2),
     +             specT,Bigc0T,iflag)
      call interp (period(count1),period(count2),Bigc1(count1),Bigc1(count2),
     +             specT,Bigc1T,iflag)
      call interp (period(count1),period(count2),Bigc2(count1),Bigc2(count2),
     +             specT,Bigc2T,iflag)
      call interp (period(count1),period(count2),sig(count1),sig(count2),
     +             specT,sigT,iflag)

 1011 period1 = specT

C     Compute the ground motion for the given spectral period.

      lnY = aT + b1T*(M-4.5) + b2T*(M-4.5)**2.0 +
     1      (c1T+c2T*(M-4.5))*log10(sqrt(jbdist*jbdist+hT*hT)) +
     2      Bigc0T*Sr + Bigc1T*Ss + Bigc2T*Sd

C     Set the sigma value and convert from log10 to Ln units
      sigma = sigT*alog(10.0)

C     Convert ground motion to units of gals in natural log units.
      lnY = lnY*alog(10.0)
      period2 = period1

      return
      end

c----------------------------------------------------------------------
      Subroutine Bindi_Hor_2011 ( m, jbDist, ftype, specT,
     1                     period2, lnY, sigma, iflag, SCa, SCb, SCc, SCd, SCe, phiT, tauT )

      parameter (MAXPER=23)
      REAL Period(MAXPER), e1(MAXPER), c1(MAXPER), c2(MAXPER), h(MAXPER)
      REAL c3(MAXPER), b1(MAXPER), b2(MAXPER), SCacoef(MAXPER), SCbcoef(MAXPER)
      REAL SCccoef(MAXPER), SCdcoef(MAXPER), SCecoef(MAXPER), f1(MAXPER), f2(MAXPER)
      REAL f3(MAXPER), f4(MAXPER), phi(MAXPER), tau(MAXPER), sig(MAXPER)
      real e1T, c1T, c2T, hT, c3T, b1T, b2T, SCacoefT, SCbcoefT, SCccoefT, SCdcoefT, SCecoefT
      real f1T, f2T, f3T, f4T, phiT, tauT, sigT
      real Rref, Mref, Mh, b3, termsof, termsite, R

      REAL M, jbDist, specT, sigma
      REAL period2, lnY, SCa, SCb, SCc, SCd, SCe, ftype

      integer iflag, count1, count2

      data period  /  0.0, -1.0, 0.01, 0.04, 0.07, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35,
     1       0.4, 0.45, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.25, 1.5, 1.75, 2.0 /
      data e1  /  3.672, 2.305, 3.672, 3.725, 3.906, 3.796, 3.799, 3.75, 3.699, 3.753,
     1       3.6, 3.549, 3.55, 3.526, 3.561, 3.485, 3.325, 3.318, 3.264, 2.896, 2.675,
     2       2.584, 2.537  /
      data c1  /  -1.94, -1.517, -1.94, -1.976, -2.05, -1.794, -1.521, -1.379, -1.34,
     1      -1.414, -1.32, -1.262, -1.261, -1.181, -1.23, -1.172, -1.115, -1.137, -1.114,
     2      -0.986, -0.96, -1.006, -1.009  /
      data c2  /  0.413, 0.326, 0.413, 0.422, 0.446, 0.415, 0.32, 0.28, 0.254, 0.255, 0.253,
     1       0.233, 0.223, 0.184, 0.178, 0.154, 0.163, 0.154, 0.14, 0.173, 0.192, 0.205, 0.193 /
      data h  /  10.322, 7.879, 10.322, 9.445, 9.81, 9.5, 9.163, 8.502, 7.912, 8.215, 7.507,
     1       6.76, 6.775, 5.992, 6.382, 5.574, 4.998, 5.231, 5.002, 4.34, 4.117, 4.505, 4.373  /
      data c3  /  0.000134, 0, 0.000134, 0.00027, 0.000758, 0.00255, 0.00372, 0.00384, 0.00326,
     1       0.00219, 0.00232, 0.00219, 0.00176, 0.00186, 0.00114, 0.000942, 0.000909, 0.000483,
     2       0.000254, 0.000783, 0.000802, 0.000427, 0.000164  /
      data b1  /  -0.262, 0.236, -0.262, -0.315, -0.375, -0.29, -0.0987, 0.0094, 0.086,
     1       0.124, 0.154, 0.225, 0.292, 0.384, 0.436, 0.529, 0.545, 0.563, 0.599, 0.579,
     2       0.575, 0.574, 0.597  /
      data b2  /  -0.0707, -0.00686, -0.0707, -0.0787, -0.0773, -0.0615, -0.0574, -0.0517,
     1      -0.0457, -0.0435, -0.0437, -0.0406, -0.0306, -0.025, -0.0227, -0.0185, -0.0215,
     2      -0.0263, -0.027, -0.0336, -0.0353, -0.0371, -0.0367  /
      data sCAcoef  /  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  /
      data sCBcoef  /  0.162, 0.205, 0.162, 0.161, 0.154, 0.178, 0.174, 0.156, 0.182, 0.201, 0.22,
     1       0.229, 0.226, 0.218, 0.219, 0.21, 0.21, 0.212, 0.221, 0.244, 0.251, 0.252, 0.245  /
      data sCCcoef  /  0.24, 0.269, 0.24, 0.24, 0.235, 0.247, 0.24, 0.234, 0.245, 0.244, 0.257,
     1       0.255, 0.271, 0.28, 0.296, 0.303, 0.304, 0.315, 0.332, 0.365, 0.375, 0.357, 0.352  /
      data sCDcoef  /  0.105, 0.321, 0.105, 0.06, 0.057, 0.037, 0.148, 0.115, 0.154, 0.213, 0.243,
     1       0.226, 0.237, 0.263, 0.355, 0.496, 0.621, 0.68, 0.707, 0.717, 0.667, 0.593, 0.54  /
      data sCEcoef  /  0.57, 0.428, 0.57, 0.614, 0.536, 0.599, 0.74, 0.556, 0.414, 0.301, 0.235,
     1       0.202, 0.181, 0.168, 0.142, 0.134, 0.15, 0.154, 0.152, 0.183, 0.203, 0.22, 0.226  /
      data f1  /  -0.0503, -0.0308, -0.0503, -0.0442, -0.0454, -0.0656, -0.0755, -0.0733,
     1      -0.0568, -0.0564, -0.0523, -0.0565, -0.0597, -0.0599, -0.0559, -0.0461, -0.0457,
     2      -0.0351, -0.0298, -0.0207, -0.014, 0.00154, 0.00512  /
      data f2  /  0.105, 0.0754, 0.105, 0.106, 0.103, 0.111, 0.123, 0.106, 0.11, 0.0877,
     1       0.0905, 0.0927, 0.0886, 0.085, 0.079, 0.0896, 0.0795, 0.0715, 0.066, 0.0614,
     2       0.0505, 0.037, 0.035  /
      data f3  /  -0.0544, -0.0446, -0.0544, -0.0615, -0.0576, -0.0451, -0.0477, -0.0328,
     1      -0.0534, -0.0313, -0.0382, -0.0363, -0.0289, -0.0252, -0.0231, -0.0435,
     2      -0.0338, -0.0364, -0.0362, -0.0407, -0.0365, -0.0385, -0.0401  /
      data f4  /  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  /
      data Tau  /  0.172, 0.194, 0.172, 0.154, 0.152, 0.154, 0.179, 0.209, 0.212,
     1       0.218, 0.221, 0.21, 0.204, 0.203, 0.203, 0.212, 0.213, 0.214, 0.222,
     2       0.227, 0.218, 0.219, 0.211  /
      data Phi  /  0.29, 0.27, 0.29, 0.307, 0.324, 0.328, 0.318, 0.32, 0.308, 0.29,
     1       0.283, 0.279, 0.284, 0.283, 0.283, 0.283, 0.284, 0.286, 0.283, 0.29,
     2       0.303, 0.305, 0.308  /
      data sig  /  0.337, 0.332, 0.337, 0.343, 0.358, 0.363, 0.365, 0.382, 0.374,
     1       0.363, 0.359, 0.349, 0.35, 0.349, 0.348, 0.354, 0.355, 0.357, 0.36,
     2       0.368, 0.373, 0.376, 0.373  /



C Find the requested spectral period and corresponding coefficients
      nPer = 23
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         e1T      = e1(1)
         c1T      = c1(1)
         c2T      = c2(1)
         hT       = h(1)
         c3T      = c3(1)
         b1T      = b1(1)
         b2T      = b2(1)
         ScAcoefT = SCacoef(1)
         ScBcoefT = SCbcoef(1)
         ScCcoefT = SCccoef(1)
         ScDcoefT = SCdcoef(1)
         ScEcoefT = SCecoef(1)
         f1T      = f1(1)
         f2T      = f2(1)
         f3T      = f3(1)
         f4T      = f4(1)
         phiT     = phi(1)
         tauT     = tau(1)
         sigT     = sig(1)
         goto 1011
C     PGV Case
      elseif (specT .eq. -1.0) then
         period1  = period(2)
         e1T      = e1(2)
         c1T      = c1(2)
         c2T      = c2(2)
         hT       = h(2)
         c3T      = c3(2)
         b1T      = b1(2)
         b2T      = b2(2)
         ScAcoefT = SCacoef(2)
         ScBcoefT = SCbcoef(2)
         ScCcoefT = SCccoef(2)
         ScDcoefT = SCdcoef(2)
         ScEcoefT = SCecoef(2)
         f1T      = f1(2)
         f2T      = f2(2)
         f3T      = f3(2)
         f4T      = f4(2)
         phiT     = phi(2)
         tauT     = tau(2)
         sigT     = sig(2)
        goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=3,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Bindi et al. (2011) Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),e1(count1),e1(count2),
     +             specT,e1T,iflag)
      call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),h(count1),h(count2),
     +             specT,hT,iflag)
      call interp (period(count1),period(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period(count1),period(count2),b1(count1),b1(count2),
     +             specT,b1T,iflag)
      call interp (period(count1),period(count2),b2(count1),b2(count2),
     +             specT,b2T,iflag)
      call interp (period(count1),period(count2),SCacoef(count1),SCacoef(count2),
     +             specT,SCacoefT,iflag)
      call interp (period(count1),period(count2),SCbcoef(count1),SCbcoef(count2),
     +             specT,SCbcoefT,iflag)
      call interp (period(count1),period(count2),SCccoef(count1),SCccoef(count2),
     +             specT,SCccoefT,iflag)
      call interp (period(count1),period(count2),SCdcoef(count1),SCdcoef(count2),
     +             specT,SCdcoefT,iflag)
      call interp (period(count1),period(count2),SCecoef(count1),SCecoef(count2),
     +             specT,SCecoefT,iflag)
      call interp (period(count1),period(count2),f1(count1),f1(count2),
     +             specT,f1T,iflag)
      call interp (period(count1),period(count2),f2(count1),f2(count2),
     +             specT,f2T,iflag)
      call interp (period(count1),period(count2),f3(count1),f3(count2),
     +             specT,f3T,iflag)
      call interp (period(count1),period(count2),f4(count1),f4(count2),
     +             specT,f4T,iflag)
      call interp (period(count1),period(count2),phi(count1),phi(count2),
     +             specT,phiT,iflag)
      call interp (period(count1),period(count2),tau(count1),tau(count2),
     +             specT,tauT,iflag)
      call interp (period(count1),period(count2),sig(count1),sig(count2),
     +             specT,sigT,iflag)

 1011 period1 = specT

C     Set Constant Terms
      Mref = 5.0
      Rref = 1.0
      Mh = 6.75
      b3 = 0.0

C     Set the mechanism term.
      if (ftype .eq. 0 ) then
         termsof = f3T
      elseif (ftype .ge. 0.5) then
         termsof = f2T
      elseif (ftype .le. -0.5) then
         termsof = f1T
      endif

C     Set the site term.
      termsite = SCA*scaCoefT + SCb*SCBcoefT + SCc*SCCcoefT + SCd*SCDcoefT + SCe*SCecoefT

      R = sqrt (jbdist**2 + hT**2)

C     Compute the ground motion for the given spectral period.
      if (M .le. Mh) then
         lnY = e1T + (c1T+c2T*(M-Mref))*log10(R/Rref) - c3T*(R-Rref) +
     1       b1T*(M-Mh) + b2T*(M-Mh)**2.0 + termsite + termsof
      else
         lnY = e1T + (c1T+c2T*(M-Mref))*log10(R/Rref) - c3T*(R-Rref) +
     1       b3*(M-Mh) + termsite + termsof
      endif
C     Set the sigma value and convert from log10 to Ln units
      phiT = phiT*alog(10.0)
      tauT = tauT*alog(10.0)
      sigma = sigT*alog(10.0)

C     Convert ground motion to units of gals in natural log units.
      lnY = lnY*alog(10.0)
      period2 = period1

      return
      end

c----------------------------------------------------------------------
      Subroutine Bindi_Hor_2013 ( m, jbDist, ftype, specT,
     1                     period2, lnY, sigma, iflag, vs, phiT, tauT )

      parameter (MAXPER=26)
      REAL Period(MAXPER), e1(MAXPER), c1(MAXPER), c2(MAXPER), h(MAXPER)
      REAL c3(MAXPER), b1(MAXPER), b2(MAXPER), b3(MAXPER), gamma(MAXPER)
      REAL sofN(MAXPER), sofR(MAXPER), sofS(MAXPER), phi(MAXPER), tau(MAXPER), sig(MAXPER), sigs2s(MAXPER)
      real e1T, c1T, c2T, hT, c3T, b1T, b2T, b3T, gammaT, sofNT, sofRT, sofST, sigs2sT
      real phiT, tauT, sigT
      real Rref, Mref, Mh, R, Vref, vs

      REAL M, jbDist, specT, sigma, termsof
      REAL period2, lnY, ftype

      integer iflag, count1, count2

      data period / 0.0, -1.0, 0.01, 0.02, 0.04, 0.07, 0.1, 0.15, 0.2, 0.26, 0.3,
     1              0.36, 0.4, 0.46, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.3, 1.5, 1.8,
     1              2.0, 2.6, 3.0  /
      data e1 / 3.32819, 2.26481, 3.37053, 3.37053, 3.43922, 3.59651, 3.68638, 3.68632,
     1          3.68262, 3.64314, 3.63985, 3.5748, 3.53006, 3.43387, 3.40554, 3.30442,
     1          3.23882, 3.1537, 3.13481, 3.12474, 2.89841, 2.84727, 2.68016, 2.60171,
     1          2.39067, 2.25399  /
      data c1 / -1.2398, -1.22408, -1.26358, -1.26358, -1.31025, -1.29051, -1.28178,
     1          -1.17697, -1.10301, -1.08527, -1.10591, -1.09955, -1.09538, -1.06586,
     1          -1.05767, -1.05014, -1.05021, -1.04654, -1.04612, -1.0527, -0.973828,
     1          -0.983388, -0.983082, -0.979215, -0.977532, -0.940373  /
      data c2 / 0.21732, 0.202085, 0.220527, 0.220527, 0.244676, 0.231878, 0.219406,
     1          0.182662, 0.133154, 0.115603, 0.108276, 0.103083, 0.101111, 0.109066,
     1          0.112197, 0.121734, 0.114674, 0.129522, 0.114536, 0.103471, 0.104898,
     1          0.109072, 0.164027, 0.163344, 0.211831, 0.227241  /
      data h / 5.26486, 5.06124, 5.20082, 5.20082, 4.91669, 5.35922, 6.12146, 5.74154,
     1         5.31998, 5.13455, 5.12846, 4.90557, 4.95386, 4.6599, 4.43205, 4.21657,
     1         4.17127, 4.20016, 4.48003, 4.41613, 4.25821, 4.56697, 4.68008, 4.58186,
     1         5.39517, 5.74173  /
      data c3 / 0.00118624, 0.0, 0.00111816, 0.00111816, 0.00109183, 0.00182094, 0.00211443,
     1          0.00254027, 0.00242089, 0.00196437, 0.00149922, 0.00104905, 0.000851474,
     1          0.000868165, 0.000788528, 0.000487285, 0.000159408, 0.0, 0.0, 0.0, 0.0,
     1          0.0, 0.0, 0.0, 0.0, 0.0  /
      data b1 / -0.0855045, 0.162802, -0.0890554, -0.0890554, -0.116919, -0.0850124,
     1          -0.11355, -0.0928726, 0.0100857, 0.0299397, 0.0391904, 0.052103, 0.0458464,
     1           0.0600838, 0.0883189, 0.120182, 0.166933, 0.193817, 0.247547, 0.306569,
     1           0.349119, 0.384546, 0.343663, 0.331747, 0.357514, 0.385526  /
      data b2 / -0.0925639, -0.0926324, -0.0916152, -0.0916152, -0.0783789, -0.0569968,
     1          -0.0753325, -0.102433, -0.105184, -0.127173, -0.138578, -0.151385, -0.16209,
     1          -0.165897, -0.164108, -0.163325, -0.161112, -0.156553, -0.153819, -0.147558,
     1          -0.149483, -0.139867, -0.135933, -0.148282, -0.122539, -0.111445  /
      data b3 / 0.0, 0.0440301, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0739042, 0.150461, 0.178899,
     1          0.189682, 0.216011, 0.224827, 0.197716, 0.15475, 0.117576, 0.112005,
     1          0.0517285, 0.0815754, 0.0928373, 0.108209, 0.0987372, 0.0, 0.0, 0.0, 0.0  /
      data gamma / -0.301899, -0.529443, -0.294021, -0.294021, -0.241765, -0.207629,
     1         -0.173237, -0.202492, -0.291228, -0.354425, -0.39306, -0.453905, -0.492063,
     1         -0.564463, -0.596196, -0.667824, -0.73839, -0.794076, -0.821699, -0.826584,
     1         -0.845047, -0.8232, -0.778657, -0.769243, -0.769609, -0.732072  /
      data sofN / -0.0397695, -0.00947675, -0.039236, -0.039236, -0.0377204, -0.0459437,
     1            -0.0380528, -0.0267293, -0.0326537, -0.0338438, -0.0372453, -0.0279067,
     1            -0.0256309, -0.0186635, -0.0174194, -0.000486417, 0.0112033, 0.0165258,
     1             0.0164493, 0.0263071, 0.0252339, 0.0186738, 0.0113713, 0.00553545,
     1             0.0087346, 0.0229893  /
      data sofR / 0.0775253, 0.0400574, 0.0810516, 0.0810516, 0.0797783, 0.0874968,
     1            0.0847103, 0.0678441, 0.0759769, 0.074982, 0.0767011, 0.0697898,
     1            0.0725668, 0.0645993, 0.0602826, 0.0449209, 0.0281506, 0.0203522,
     1            0.0212422, 0.0186043, 0.0223621, 0.0230894, 0.0166882, 0.0198566,
     1            0.0233142, -0.020662  /
      data sofS / -0.0377558, -0.0305805, -0.0418156, -0.0418156, -0.0420579, -0.041553,
     1            -0.0466585, -0.0411147, -0.0433232, -0.0411381, -0.0394559, -0.0418832,
     1            -0.046936, -0.0459358, -0.0428632, -0.0444345, -0.0393539, -0.0368783,
     1            -0.0376913, -0.0449111, -0.0475957, -0.041763, -0.0280594, -0.025392,
     1            -0.0320486, -0.00232715  /
      data tau / 0.149977, 0.156062, 0.15867, 0.15867, 0.154621, 0.172785, 0.169691,
     1           0.152902, 0.150055, 0.151209, 0.157946, 0.165436, 0.157728, 0.173005,
     1           0.18082, 0.182233, 0.189396, 0.189074, 0.191986, 0.195026, 0.181782,
     1           0.177752, 0.163242, 0.164958, 0.17028, 0.176546  /
      data phi / 0.282398, 0.277714, 0.282356, 0.282356, 0.291143, 0.291499, 0.301967,
     1           0.305804, 0.300109, 0.302419, 0.297402, 0.294395, 0.296992, 0.291868,
     1           0.289957, 0.292223, 0.289307, 0.288815, 0.293264, 0.297907, 0.306676,
     1           0.316312, 0.326484, 0.329916, 0.320626, 0.314165 /
      data sigs2s / 0.165611, 0.120398, 0.183959, 0.183959, 0.187409, 0.199913, 0.208178,
     1           0.212124, 0.190469, 0.187037, 0.174118, 0.175848, 0.169883, 0.164162,
     1           0.16509, 0.175634, 0.168617, 0.16817, 0.183719, 0.200775, 0.209625,
     1           0.218569, 0.221367, 0.22535, 0.210193, 0.207247  /
      data sig / 0.319753, 0.31856, 0.323885, 0.323885, 0.329654, 0.33886, 0.346379,
     1             0.3419, 0.335532, 0.338114, 0.336741, 0.337694, 0.336278, 0.33929,
     1             0.341717, 0.344388, 0.345788, 0.3452, 0.350517, 0.356067, 0.356504,
     1             0.362835, 0.36502, 0.368857, 0.363037, 0.360373  /

C Find the requested spectral period and corresponding coefficients
      nPer = 26
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         e1T      = e1(1)
         c1T      = c1(1)
         c2T      = c2(1)
         hT       = h(1)
         c3T      = c3(1)
         b1T      = b1(1)
         b2T      = b2(1)
         b3T      = b3(1)
         gammaT   = gamma(1)
         sofNT    = sofN(1)
         sofRT    = sofR(1)
         sofST    = sofS(1)
         sigs2sT  = sigs2s(1)
         phiT     = phi(1)
         tauT     = tau(1)
         sigT     = sig(1)
         goto 1011
C     PGV Case
      elseif (specT .eq. -1.0) then
         period1  = period(2)
         e1T      = e1(2)
         c1T      = c1(2)
         c2T      = c2(2)
         hT       = h(2)
         c3T      = c3(2)
         b1T      = b1(2)
         b2T      = b2(2)
         b3T      = b3(2)
         gammaT   = gamma(2)
         sofNT    = sofN(2)
         sofRT    = sofR(2)
         sofST    = sofS(2)
         sigs2sT  = sigs2s(2)
         phiT     = phi(2)
         tauT     = tau(2)
         sigT     = sig(2)
        goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=3,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Bindi et al. (2013) Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),e1(count1),e1(count2),
     +             specT,e1T,iflag)
      call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),h(count1),h(count2),
     +             specT,hT,iflag)
      call interp (period(count1),period(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period(count1),period(count2),b1(count1),b1(count2),
     +             specT,b1T,iflag)
      call interp (period(count1),period(count2),b2(count1),b2(count2),
     +             specT,b2T,iflag)
      call interp (period(count1),period(count2),b3(count1),b3(count2),
     +             specT,b3T,iflag)
      call interp (period(count1),period(count2),gamma(count1),gamma(count2),
     +             specT,gammaT,iflag)
      call interp (period(count1),period(count2),sofN(count1),sofN(count2),
     +             specT,sofNT,iflag)
      call interp (period(count1),period(count2),sofR(count1),sofR(count2),
     +             specT,sofRT,iflag)
      call interp (period(count1),period(count2),sofS(count1),sofS(count2),
     +             specT,sofST,iflag)
      call interp (period(count1),period(count2),sigs2s(count1),sigs2s(count2),
     +             specT,sigs2sT,iflag)
      call interp (period(count1),period(count2),phi(count1),phi(count2),
     +             specT,phiT,iflag)
      call interp (period(count1),period(count2),tau(count1),tau(count2),
     +             specT,tauT,iflag)
      call interp (period(count1),period(count2),sig(count1),sig(count2),
     +             specT,sigT,iflag)

 1011 period1 = specT

C     Set Constant Terms
      Mref = 5.5
      Rref = 1.0
      Mh = 6.75
      Vref = 800.0

C     Set the mechanism term.
      if (ftype .eq. 0 ) then
         termsof = sofST
      elseif (ftype .ge. 0.5) then
         termsof = sofRT
      elseif (ftype .le. -0.5) then
         termsof = sofNT
      endif

      R = sqrt (jbdist**2 + hT**2)

C     Compute the ground motion for the given spectral period.
      if (M .le. Mh) then
         lnY = e1T + (c1T+c2T*(M-Mref))*log10(R/Rref) - c3T*(R-Rref) +
     1       b1T*(M-Mh) + b2T*(M-Mh)**2.0 + gammaT*log10(vs/vref) + termsof
      else
         lnY = e1T + (c1T+c2T*(M-Mref))*log10(R/Rref) - c3T*(R-Rref) +
     1       b3T*(M-Mh) + gammaT*log10(vs/vref) + termsof
      endif

C     Set the sigma value and convert from log10 to Ln units
      phiT = phiT*alog(10.0)
      tauT = tauT*alog(10.0)
      sigma = sigT*alog(10.0)
      sigs2sT = sigs2sT*alog(10.0)

C     Convert ground motion to units of gals in natural log units.
      lnY = lnY*alog(10.0)
      period2 = period1

      return
      end











c----------------------------------------------------------------------
      Subroutine GK_Nov2012 ( m, Rrup, specT, ftype,
     1                     period2, lnY, sigma, iflag, vs, q0, depthvs15 )

      parameter (MAXPER=36)
      REAL Period(MAXPER), sig(MAXPER)
      REAL period1, sigT
      REAL M, Rrup, specT, sigma, q0, depthvs15
      REAL period2, lnY, ftype, Vs
      REAL c1, c2, c3, c4, c5, c6, c7, c8, c9, bv, Va, R1, c11, D1, sigpga
      REAL A, Y1, Frv, R0, D0, abdepth, slope, Y
      REAL e1, e2, e3, e4, a1, a2, a3, dsp, t1, t2, t3, t4, s1, s2, s3
      REAL mu, amp, si, tspo
      REAL SA, SA1, SA2, Pern, temp1, temp2

      integer iflag, count1, count2

      data Period / 0.0, 0.01, 0.02, 0.03, 0.04, 0.06, 0.08, 0.1, 0.12, 0.14, 0.16,
     1              0.18, 0.2, 0.22, 0.24, 0.27, 0.3, 0.33, 0.36, 0.4, 0.46, 0.5,
     2              0.6, 0.75, 0.85, 1.0, 1.5, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0 /
      data Sig / 0.5305557, 0.5305557, 0.533813492, 0.535719178, 0.537071284,
     1           0.53897697, 0.540329075, 0.54137785, 0.542234761, 0.548284191,
     2           0.554920701, 0.560774518, 0.566010936, 0.570747852, 0.575072317,
     3           0.580926134, 0.586162552, 0.590899468, 0.595223933, 0.600460351,
     4           0.607406519, 0.611550585, 0.620611966, 0.631702201, 0.637922809,
     5           0.646, 0.666151616, 0.680449415, 0.700601031, 0.71489883, 0.725989064,
     6           0.735050446, 0.742711734, 0.749348245, 0.755202061, 0.760438479 /

C Find the requested spectral period and corresponding coefficients
      nPer = 36
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         sigT     = sig(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Graizer and Kalkan et al. (Nov. 2011) Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),sig(count1),sig(count2),
     +             specT,sigT,iflag)

 1011 period1 = specT

C     Frist compute the PGA ground motion value.

C*********Coefficients file, July_2006 ***************
C     Revised values from email from V. Grazier (4/18/13)
         c1 =  0.140
         c2 = -6.250
         c3 =  0.370
         c4 =  2.237
         c5 = -7.542
         c6 = -0.125
         c7 =  1.190
         c8 = -6.150
c04/08/13         c9 =  0.525
         c9 =  0.6
         bv = -0.240
         Va = 484.5
         R1 = 100.0
         c11= 0.345
         D1 = 0.65
         sigpga = 0.550

C     Set Mech. term
C     Strike-slip and Normal are equal, Frv=1.0
C     Reverse, Frv=1.28
C     Oblique/Reverse, Frv=1.14
      IF (Ftype .eq. 0.5) THEN
         Frv = 1.14
      ELSEIF (Ftype .eq. 1.0) THEN
         Frv = 1.28
      ELSE
         Frv = 1.00
      ENDIF

      A = (c1*atan(M+c2)+c3)*Frv
      A = A/1.12
      Y1 = alog(A)

c********* Distance R0 Factor ********************
ccccc    Corner distance R0 depends upon magnitude
      R0 = c4 * M + c5

c********* Damping D0 Factor **************************
ccccc    Damping is magnitude dependent
      D0 = c6 * cos(c7*(M + c8)) + c9

c********* Basin Effect *******************************
c-------  Depth dependance ----------------------------
      Abdepth = 1.4 / sqrt((1-(1.5/(depthvs15+0.1))**2)**2
     1           + 1.96*(1.5/(depthvs15+0.1))**2)

c-------  Distance dependance -------------------------
      Abdist = 1. / sqrt((1-(40./(Rrup+0.1))**2)**2
     1           + 1.96*(40./(Rrup+0.1))**2)

c-------  Slope of SA at long-periods ----------------
      Slope = 1.763 - 0.25 * atan(1.4*(depthvs15-1.))

c*************** Calculating non-basin PGA *****************
c------- Vs30 site effect --------------------------
         Y1 = Y1 + bv * (alog(Vs/Va))

c-------- Core Filter and Anelastic ----------------
         x0 = Rrup/R0
         x1 = sqrt(rRup/R1)

         Y = Y1 - 0.5 * alog((1-x0)**2 + 4*D0**2*x0)
     1       - (c11 * rRup/Q0)

c------SA calculations ---------------------------------------
C     Revised values from email from V. Grazier (4/18/13)
          e1=-0.0012
c04/18/13          e2=-0.4085
          e2=-0.38
          e3= 0.0006
          e4= 3.9
cnjg          e4= 3.63
          a1= 0.01686
          a2= 1.2695
          a3= 0.0001
          Dsp=0.75
cnjg          t1= 0.0022
          t1= 0.001
cnjg          t2= 0.63
c04/18/13          t2= 0.60
          t2= 0.59
          t3=-0.0005
cnjg          t4=-2.65
c04/08/13          t4=-2.1
          t4=-2.3
          s1=0.00
          s2=0.077
          s3=0.3251

          Mu = e1*rRup+e2*M+e3*Vs+e4

          Amp = (a1*M+a2)*exp(a3*rRup)

          Si = s1*rRup-(s2*M+s3)

cnjg          Tspo = t1*rRup+t2*M+t3*Vs+t4
          Tspo = max(0.3,abs(t1*rRup+t2*M+t3*Vs+t4))


          Pern = (specT/Tspo)**Slope

          temp1 = (alog(specT)+Mu)/Si
          temp2 = temp1**2

          SA1 = Amp*exp(-0.5*temp2)
          SA2 = 1./sqrt((1-Pern)**2 + 4.*Dsp**2
     1               *Pern)

          SA = SA1 + SA2
          SA1 = SA*exp(Y)
     1              * (1.+ABdist*ABdepth/1.3)

C     Set the sigma value
      sigma = sigT

C     Convert ground motion to units of gals
      lnY = alog(SA1) + 6.89
      period2 = period1

      return
      end


c----------------------------------------------------------------------
      Subroutine DCPP_CommonASK ( m, Rrup, ztor, specT, lnY, sigma, iflag )

      parameter (MAXPER=5)

      REAL Period(MAXPER), a0(MAXPER), a1(MAXPER), a2(MAXPER), a3(MAXPER)
      REAL a4(MAXPER), a5(MAXPER), a6(MAXPER), a7(MAXPER), a8(MAXPER), a9(MAXPER)
      real Mref1, MRef2, Rrup, Ztor
      REAL M, specT, sigma
      REAL period2, lnY
      integer iflag, count1, count2

      data period / 0.01, 0.2, 0.5, 1.0, 2.0 /
      data a0 / 3.228898132, 4.140227065, 3.497359438, 2.932255747, 2.214950878  /
      data a1 / -0.517312078, -0.516978997, -0.516201808, -0.515202564, -0.514580812  /
      data a2 / 0.806396741, 0.903630388, 1.130508896, 1.422209834, 1.603712641  /
      data a3 / -0.623915278, -0.623578743, -0.622793495, -0.621783888, -0.621155689  /
      data a4 / 0.087051423, 0.101941601, 0.136685351, 0.181355886, 0.209150886  /
      data a5 / -0.892881506, -0.892888426, -0.892904571, -0.892925328, -0.892938242  /
      data a6 / 0.300392371, 0.300392601, 0.300393136, 0.300393824, 0.300394253  /
      data a7 / 4.735246955, 4.735308943, 4.735453571, 4.735639501, 4.735755179  /
      data a8 / -0.006747572, -0.008147393, -0.002746975, -0.002046439, -0.001446105  /
      data a9 / 1.099685561, 1.099686305, 0.839688042, 0.569690276, 0.309691666  /

C Find the requested spectral period and corresponding coefficients
      nPer = 5
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         a0T      = a0(1)
         a1T      = a1(1)
         a2T      = a2(1)
         a3T      = a3(1)
         a4T      = a4(1)
         a5T      = a5(1)
         a6T      = a6(1)
         a7T      = a7(1)
         a8T      = a8(1)
         a9T      = a9(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'DCPP Common Model ASK Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),a0(count1),a0(count2),
     +             specT,a0T,iflag)
      call interp (period(count1),period(count2),a1(count1),a1(count2),
     +             specT,a1T,iflag)
      call interp (period(count1),period(count2),a2(count1),a2(count2),
     +             specT,a2T,iflag)
      call interp (period(count1),period(count2),a3(count1),a3(count2),
     +             specT,a3T,iflag)
      call interp (period(count1),period(count2),a4(count1),a4(count2),
     +             specT,a4T,iflag)
      call interp (period(count1),period(count2),a5(count1),a5(count2),
     +             specT,a5T,iflag)
      call interp (period(count1),period(count2),a6(count1),a6(count2),
     +             specT,a6T,iflag)
      call interp (period(count1),period(count2),a7(count1),a7(count2),
     +             specT,a7T,iflag)
      call interp (period(count1),period(count2),a8(count1),a8(count2),
     +             specT,a8T,iflag)
      call interp (period(count1),period(count2),a9(count1),a9(count2),
     +             specT,a9T,iflag)

 1011 period1 = specT

C     Set Constant Terms
      Mref1 = 5.5
      Mref2 = 6.5

C     Compute the ground motion for the given spectral period.
      if (M .lt. Mref1) then
         lnY = a0T - a4T*(8.5-Mref1)**2.0 + a2T*(M-Mref1) + a1T*(Mref1-Mref2) + a8T*Rrup
     1             + (a5T+a6T*(Mref1-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      elseif (M .ge. Mref2) then
         lnY = a0T - a4T*(8.5-M)**2.0     + a3T*(M-Mref2)                     + a8T*Rrup
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      else
         lnY = a0T - a4T*(8.5-M)**2.0     + a1T*(M-Mref2)                     + a8T*Rrup
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      endif

C     Add Ztor term
      lnY = lnY + (a9T*ztor)/20.0

      sigma = 0.65

C     Convert ground motion to units of gals in natural log units.
      lnY = lnY + 4.6052

      period2 = period1

      return
      end

c----------------------------------------------------------------------
      Subroutine DCPP_CommonBSSA ( m, Rrup, ztor, specT, lnY, sigma, iflag )

      parameter (MAXPER=5)

      REAL Period(MAXPER), a0(MAXPER), a1(MAXPER), a2(MAXPER), a3(MAXPER)
      REAL a4(MAXPER), a5(MAXPER), a6(MAXPER), a7(MAXPER), a8(MAXPER), a9(MAXPER)
      real Mref1, MRef2, Rrup, Ztor
      REAL M, specT, sigma
      REAL period2, lnY
      integer iflag, count1, count2

      data period / 0.01, 0.2, 0.5, 1.0, 2.0 /
      data a0 / 3.413425074, 4.849580469, 4.390103785, 3.942432001, 3.024220488  /
      data a1 / -0.551112061, -0.621744043, 0.206539432, 0.506563439, 0.861514793  /
      data a2 / 1.936833928, 1.988360039, 2.024580267, 2.386046162, 2.643583984  /
      data a3 / -0.506733658, -0.86125683, -0.498585794, -0.388363, -0.10725144  /
      data a4 / 3.57565E-20, 0.11961464, 0.060269709, 0.072411094, 0.073811638  /
      data a5 / -1.079527243, -1.088092907, -1.230023896, -1.316150631, -1.332304596  /
      data a6 / 0.310213127, 0.251426485, 0.21890305, 0.197164553, 0.183088381  /
      data a7 / 5.896688573, 5.941120331, 6.4671715, 6.758038317, 7.438969466  /
      data a8 / -0.000684999, -0.000539904, 0.00403903, 0.006083088, 0.006726857  /
      data a9 / 0.475928436, 0.460260633, 0.452444602, 0.450795989, 0.416434239  /

C Find the requested spectral period and corresponding coefficients
      nPer = 5
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         a0T      = a0(1)
         a1T      = a1(1)
         a2T      = a2(1)
         a3T      = a3(1)
         a4T      = a4(1)
         a5T      = a5(1)
         a6T      = a6(1)
         a7T      = a7(1)
         a8T      = a8(1)
         a9T      = a9(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'DCPP Common Model BSSA Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),a0(count1),a0(count2),
     +             specT,a0T,iflag)
      call interp (period(count1),period(count2),a1(count1),a1(count2),
     +             specT,a1T,iflag)
      call interp (period(count1),period(count2),a2(count1),a2(count2),
     +             specT,a2T,iflag)
      call interp (period(count1),period(count2),a3(count1),a3(count2),
     +             specT,a3T,iflag)
      call interp (period(count1),period(count2),a4(count1),a4(count2),
     +             specT,a4T,iflag)
      call interp (period(count1),period(count2),a5(count1),a5(count2),
     +             specT,a5T,iflag)
      call interp (period(count1),period(count2),a6(count1),a6(count2),
     +             specT,a6T,iflag)
      call interp (period(count1),period(count2),a7(count1),a7(count2),
     +             specT,a7T,iflag)
      call interp (period(count1),period(count2),a8(count1),a8(count2),
     +             specT,a8T,iflag)
      call interp (period(count1),period(count2),a9(count1),a9(count2),
     +             specT,a9T,iflag)

 1011 period1 = specT

C     Set Constant Terms
      Mref1 = 5.5
      Mref2 = 6.5

C     Compute the ground motion for the given spectral period.
      if (M .lt. Mref1) then
         lnY = a0T - a4T*(8.5-Mref1)**2.0 + a2T*(M-Mref1) + a1T*(Mref1-Mref2) + a8T*Rrup
     1             + (a5T+a6T*(Mref1-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      elseif (M .ge. Mref2) then
         lnY = a0T - a4T*(8.5-M)**2.0     + a3T*(M-Mref2)                     + a8T*Rrup
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      else
         lnY = a0T - a4T*(8.5-M)**2.0     + a1T*(M-Mref2)                     + a8T*Rrup
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      endif

C     Add Ztor term
      lnY = lnY + (a9T*ztor)/20.0

      sigma = 0.65

C     Convert ground motion to units of gals in natural log units.
      lnY = lnY + 4.6052

      period2 = period1

      return
      end


c----------------------------------------------------------------------
      Subroutine DCPP_Common001 ( m, Rrup, ztor, specT, lnY, sigma, iflag )

      parameter (MAXPER=5)

      REAL Period(MAXPER), a0(MAXPER), a1(MAXPER), a2(MAXPER), a3(MAXPER)
      REAL a4(MAXPER), a5(MAXPER), a6(MAXPER), a7(MAXPER), a8(MAXPER), a9(MAXPER)
      real Mref1, MRef2, Rrup, Ztor
      REAL M, specT, sigma
      REAL period2, lnY
      integer iflag, count1, count2

      data period / 0.01, 0.2, 0.5, 1.0, 2.0 /
      data a0 / 4.153292577, 5.56843321, 4.499092916, 3.580962972, 2.483313462  /
      data a1 / -0.361676637, -0.315761961, -0.012742999, 0.35534841, 1.010158534  /
      data a2 / 1.900083399, 2.02460267, 1.890857041, 2.074235975, 2.241856312  /
      data a3 / -0.621300689, -0.791785486, -0.739262879, -0.569065001, -0.098960478  /
      data a4 / 0.027852946, 0.094607879, 0.099607707, 0.076998392, 0.011698198  /
      data a5 / -1.23462311, -1.334919221, -1.178173331, -1.132159433, -1.149259737  /
      data a6 / 0.26958419, 0.158147559, 0.218503106, 0.191236836, 0.181219265  /
      data a7 / 7.448181391, 8.773509011, 7.889588322, 7.044472113, 8.232700489  /
      data a8 / 0.004859145, 0.017747568, 0.008277642, -0.012910642, -0.00721013  /
      data a9 / 1.052689681, 0.887240265, 0.507748683, 0.351512826, 0.051133028  /

C Find the requested spectral period and corresponding coefficients
      nPer = 5
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         a0T      = a0(1)
         a1T      = a1(1)
         a2T      = a2(1)
         a3T      = a3(1)
         a4T      = a4(1)
         a5T      = a5(1)
         a6T      = a6(1)
         a7T      = a7(1)
         a8T      = a8(1)
         a9T      = a9(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'DCPP Common Model001 Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),a0(count1),a0(count2),
     +             specT,a0T,iflag)
      call interp (period(count1),period(count2),a1(count1),a1(count2),
     +             specT,a1T,iflag)
      call interp (period(count1),period(count2),a2(count1),a2(count2),
     +             specT,a2T,iflag)
      call interp (period(count1),period(count2),a3(count1),a3(count2),
     +             specT,a3T,iflag)
      call interp (period(count1),period(count2),a4(count1),a4(count2),
     +             specT,a4T,iflag)
      call interp (period(count1),period(count2),a5(count1),a5(count2),
     +             specT,a5T,iflag)
      call interp (period(count1),period(count2),a6(count1),a6(count2),
     +             specT,a6T,iflag)
      call interp (period(count1),period(count2),a7(count1),a7(count2),
     +             specT,a7T,iflag)
      call interp (period(count1),period(count2),a8(count1),a8(count2),
     +             specT,a8T,iflag)
      call interp (period(count1),period(count2),a9(count1),a9(count2),
     +             specT,a9T,iflag)

 1011 period1 = specT

C     Set Constant Terms
      Mref1 = 5.5
      Mref2 = 6.5

C     Compute the ground motion for the given spectral period.
      if (M .lt. Mref1) then
         lnY = a0T - a4T*(8.5-Mref1)**2.0 + a2T*(M-Mref1) + a1T*(Mref1-Mref2) + a8T*Rrup
     1             + (a5T+a6T*(Mref1-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      elseif (M .ge. Mref2) then
         lnY = a0T - a4T*(8.5-M)**2.0     + a3T*(M-Mref2)                     + a8T*Rrup
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      else
         lnY = a0T - a4T*(8.5-M)**2.0     + a1T*(M-Mref2)                     + a8T*Rrup
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      endif

C     Add Ztor term
      lnY = lnY + (a9T*ztor)/20.0

      sigma = 0.65

C     Convert ground motion to units of gals in natural log units.
      lnY = lnY + 4.6052

      period2 = period1

      return
      end

c----------------------------------------------------------------------
      Subroutine DCPP_Common002 ( m, Rrup, ztor, specT, lnY, sigma, iflag )

      parameter (MAXPER=5)

      REAL Period(MAXPER), a0(MAXPER), a1(MAXPER), a2(MAXPER), a3(MAXPER)
      REAL a4(MAXPER), a5(MAXPER), a6(MAXPER), a7(MAXPER), a8(MAXPER), a9(MAXPER)
      real Mref1, MRef2, Rrup, Ztor
      REAL M, specT, sigma
      REAL period2, lnY
      integer iflag, count1, count2

      data period / 0.01, 0.2, 0.5, 1.0, 2.0 /
      data a0 / 3.766432545, 4.850577559, 3.800480116, 2.899595843, 1.970732776  /
      data a1 / -0.171377798, -0.040258384, 0.065134369, 0.309695977, 0.716925763  /
      data a2 / 1.351297213, 1.497600289, 1.758946183, 1.996206128, 2.195655212  /
      data a3 / -0.497645143, -0.424851869, -0.351900164, -0.260247854, -0.058024023  /
      data a4 / 0.020942219, 0.045308538, 0.005369492, 0.00479552, -0.00048382  /
      data a5 / -1.169973398, -1.223878876, -1.083289517, -1.039042926, -1.042122377  /
      data a6 / 0.316104509, 0.246186297, 0.275665105, 0.265332113, 0.284686743  /
      data a7 / 6.732787449, 7.623418904, 6.722698608, 5.970442035, 6.614965298  /
      data a8 / 0.012477431, 0.004627569, 0.01006225, 0.000274254, 0.019123099  /
      data a9 / 1.377033057, 1.22846788, 0.757969632, 0.498036735, 0.195263348  /

C Find the requested spectral period and corresponding coefficients
      nPer = 5
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         a0T      = a0(1)
         a1T      = a1(1)
         a2T      = a2(1)
         a3T      = a3(1)
         a4T      = a4(1)
         a5T      = a5(1)
         a6T      = a6(1)
         a7T      = a7(1)
         a8T      = a8(1)
         a9T      = a9(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'DCPP Common Model002 Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),a0(count1),a0(count2),
     +             specT,a0T,iflag)
      call interp (period(count1),period(count2),a1(count1),a1(count2),
     +             specT,a1T,iflag)
      call interp (period(count1),period(count2),a2(count1),a2(count2),
     +             specT,a2T,iflag)
      call interp (period(count1),period(count2),a3(count1),a3(count2),
     +             specT,a3T,iflag)
      call interp (period(count1),period(count2),a4(count1),a4(count2),
     +             specT,a4T,iflag)
      call interp (period(count1),period(count2),a5(count1),a5(count2),
     +             specT,a5T,iflag)
      call interp (period(count1),period(count2),a6(count1),a6(count2),
     +             specT,a6T,iflag)
      call interp (period(count1),period(count2),a7(count1),a7(count2),
     +             specT,a7T,iflag)
      call interp (period(count1),period(count2),a8(count1),a8(count2),
     +             specT,a8T,iflag)
      call interp (period(count1),period(count2),a9(count1),a9(count2),
     +             specT,a9T,iflag)

 1011 period1 = specT

C     Set Constant Terms
      Mref1 = 5.5
      Mref2 = 6.5

C     Compute the ground motion for the given spectral period.
      if (M .lt. Mref1) then
         lnY = a0T - a4T*(8.5-Mref1)**2.0 + a2T*(M-Mref1) + a1T*(Mref1-Mref2) + a8T*Rrup
     1             + (a5T+a6T*(Mref1-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      elseif (M .ge. Mref2) then
         lnY = a0T - a4T*(8.5-M)**2.0     + a3T*(M-Mref2)                     + a8T*Rrup
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      else
         lnY = a0T - a4T*(8.5-M)**2.0     + a1T*(M-Mref2)                     + a8T*Rrup
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      endif

C     Add Ztor term
      lnY = lnY + (a9T*ztor)/20.0

      sigma = 0.65

C     Convert ground motion to units of gals in natural log units.
      lnY = lnY + 4.6052

      period2 = period1

      return
      end

c----------------------------------------------------------------------
      Subroutine DCPP_Common003 ( m, Rrup, ztor, specT, lnY, sigma, iflag )

      parameter (MAXPER=5)

      REAL Period(MAXPER), a0(MAXPER), a1(MAXPER), a2(MAXPER), a3(MAXPER)
      REAL a4(MAXPER), a5(MAXPER), a6(MAXPER), a7(MAXPER), a8(MAXPER), a9(MAXPER)
      real Mref1, MRef2, Rrup, Ztor
      REAL M, specT, sigma
      REAL period2, lnY
      integer iflag, count1, count2

      data period / 0.01, 0.2, 0.5, 1.0, 2.0 /
      data a0 / 4.26700257, 5.095267482, 5.118384786, 5.211651552, 4.753316415  /
      data a1 / -1.704621664, -1.521651883, -1.124676082, -1.008136391, -1.066098231  /
      data a2 / 1.667127313, 1.678459199, 2.142341158, 2.782649024, 3.084140079  /
      data a3 / -1.443434574, -1.316295438, -0.979791521, -1.025838031, -1.163722387  /
      data a4 / 0.314465134, 0.279948033, 0.308303208, 0.37704864, 0.468674542  /
      data a5 / -0.959040945, -0.928840584, -1.181350565, -1.346345473, -1.386584498  /
      data a6 / 0.313193998, 0.31169418, 0.225880131, 0.177047004, 0.177375041  /
      data a7 / 4.678293537, 4.795274716, 4.279893539, 3.987288865, 3.994487484  /
      data a8 / 0.002216998, 0.019973522, -0.002746898, 0.016238172, 0.011075769  /
      data a9 / 0.900833334, 0.843155253, 0.670101169, 0.60887657, 0.563006729  /

C Find the requested spectral period and corresponding coefficients
      nPer = 5
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         a0T      = a0(1)
         a1T      = a1(1)
         a2T      = a2(1)
         a3T      = a3(1)
         a4T      = a4(1)
         a5T      = a5(1)
         a6T      = a6(1)
         a7T      = a7(1)
         a8T      = a8(1)
         a9T      = a9(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'DCPP Common Model003 Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),a0(count1),a0(count2),
     +             specT,a0T,iflag)
      call interp (period(count1),period(count2),a1(count1),a1(count2),
     +             specT,a1T,iflag)
      call interp (period(count1),period(count2),a2(count1),a2(count2),
     +             specT,a2T,iflag)
      call interp (period(count1),period(count2),a3(count1),a3(count2),
     +             specT,a3T,iflag)
      call interp (period(count1),period(count2),a4(count1),a4(count2),
     +             specT,a4T,iflag)
      call interp (period(count1),period(count2),a5(count1),a5(count2),
     +             specT,a5T,iflag)
      call interp (period(count1),period(count2),a6(count1),a6(count2),
     +             specT,a6T,iflag)
      call interp (period(count1),period(count2),a7(count1),a7(count2),
     +             specT,a7T,iflag)
      call interp (period(count1),period(count2),a8(count1),a8(count2),
     +             specT,a8T,iflag)
      call interp (period(count1),period(count2),a9(count1),a9(count2),
     +             specT,a9T,iflag)

 1011 period1 = specT

C     Set Constant Terms
      Mref1 = 5.5
      Mref2 = 6.5

C     Compute the ground motion for the given spectral period.
      if (M .lt. Mref1) then
         lnY = a0T - a4T*(8.5-Mref1)**2.0 + a2T*(M-Mref1) + a1T*(Mref1-Mref2) + a8T*Rrup
     1             + (a5T+a6T*(Mref1-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      elseif (M .ge. Mref2) then
         lnY = a0T - a4T*(8.5-M)**2.0     + a3T*(M-Mref2)                     + a8T*Rrup
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      else
         lnY = a0T - a4T*(8.5-M)**2.0     + a1T*(M-Mref2)                     + a8T*Rrup
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      endif

C     Add Ztor term
      lnY = lnY + (a9T*ztor)/20.0

      sigma = 0.65

C     Convert ground motion to units of gals in natural log units.
      lnY = lnY + 4.6052

      period2 = period1

      return
      end

c----------------------------------------------------------------------
      Subroutine DCPP_Common004 ( m, Rrup, ztor, specT, lnY, sigma, iflag )

      parameter (MAXPER=5)

      REAL Period(MAXPER), a0(MAXPER), a1(MAXPER), a2(MAXPER), a3(MAXPER)
      REAL a4(MAXPER), a5(MAXPER), a6(MAXPER), a7(MAXPER), a8(MAXPER), a9(MAXPER)
      real Mref1, MRef2, Rrup, Ztor
      REAL M, specT, sigma
      REAL period2, lnY
      integer iflag, count1, count2

      data period / 0.01, 0.2, 0.5, 1.0, 2.0 /
      data a0 / 3.870448951, 4.887688516, 4.514455374, 3.759666642, 2.965961472  /
      data a1 / -0.51925764, -0.566344728, -0.598851191, -0.47011131, -0.380220056  /
      data a2 / 1.049735239, 1.176785404, 1.692430218, 1.998332708, 2.230755309  /
      data a3 / -0.56846325, -0.688829892, -0.761680651, -0.782804044, -0.842190919  /
      data a4 / 0.100423374, 0.119647883, 0.150583433, 0.175749332, 0.244812228  /
      data a5 / -1.144844546, -1.117581276, -1.135977587, -1.112790925, -1.12415614  /
      data a6 / 0.285692481, 0.243559626, 0.213316478, 0.200452585, 0.196677723  /
      data a7 / 6.479603934, 6.443720517, 6.325266942, 6.302213482, 6.465155083  /
      data a8 / -0.000334545, -0.006108207, -0.00544564, -0.001299281, 0.013815162  /
      data a9 / 0.754145633, 0.673525509, 0.51831709, 0.441346775, 0.394579793  /

C Find the requested spectral period and corresponding coefficients
      nPer = 5
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         a0T      = a0(1)
         a1T      = a1(1)
         a2T      = a2(1)
         a3T      = a3(1)
         a4T      = a4(1)
         a5T      = a5(1)
         a6T      = a6(1)
         a7T      = a7(1)
         a8T      = a8(1)
         a9T      = a9(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'DCPP Common Model004 Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),a0(count1),a0(count2),
     +             specT,a0T,iflag)
      call interp (period(count1),period(count2),a1(count1),a1(count2),
     +             specT,a1T,iflag)
      call interp (period(count1),period(count2),a2(count1),a2(count2),
     +             specT,a2T,iflag)
      call interp (period(count1),period(count2),a3(count1),a3(count2),
     +             specT,a3T,iflag)
      call interp (period(count1),period(count2),a4(count1),a4(count2),
     +             specT,a4T,iflag)
      call interp (period(count1),period(count2),a5(count1),a5(count2),
     +             specT,a5T,iflag)
      call interp (period(count1),period(count2),a6(count1),a6(count2),
     +             specT,a6T,iflag)
      call interp (period(count1),period(count2),a7(count1),a7(count2),
     +             specT,a7T,iflag)
      call interp (period(count1),period(count2),a8(count1),a8(count2),
     +             specT,a8T,iflag)
      call interp (period(count1),period(count2),a9(count1),a9(count2),
     +             specT,a9T,iflag)

 1011 period1 = specT

C     Set Constant Terms
      Mref1 = 5.5
      Mref2 = 6.5

C     Compute the ground motion for the given spectral period.
      if (M .lt. Mref1) then
         lnY = a0T - a4T*(8.5-Mref1)**2.0 + a2T*(M-Mref1) + a1T*(Mref1-Mref2) + a8T*Rrup
     1             + (a5T+a6T*(Mref1-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      elseif (M .ge. Mref2) then
         lnY = a0T - a4T*(8.5-M)**2.0     + a3T*(M-Mref2)                     + a8T*Rrup
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      else
         lnY = a0T - a4T*(8.5-M)**2.0     + a1T*(M-Mref2)                     + a8T*Rrup
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      endif

C     Add Ztor term
      lnY = lnY + (a9T*ztor)/20.0

      sigma = 0.65

C     Convert ground motion to units of gals in natural log units.
      lnY = lnY + 4.6052

      period2 = period1

      return
      end

c----------------------------------------------------------------------
      Subroutine DCPP_Common005 ( m, Rrup, ztor, specT, lnY, sigma, iflag )

      parameter (MAXPER=5)

      REAL Period(MAXPER), a0(MAXPER), a1(MAXPER), a2(MAXPER), a3(MAXPER)
      REAL a4(MAXPER), a5(MAXPER), a6(MAXPER), a7(MAXPER), a8(MAXPER), a9(MAXPER)
      real Mref1, MRef2, Rrup, Ztor
      REAL M, specT, sigma
      REAL period2, lnY
      integer iflag, count1, count2

      data period / 0.01, 0.2, 0.5, 1.0, 2.0 /
      data a0 / 3.493293094, 4.392226445, 3.95601353, 3.469189558, 2.770559363  /
      data a1 / -0.517413435, -0.538304154, -0.359381871, -0.29150999, -0.155053963  /
      data a2 / 1.16587349, 1.233499318, 1.462679511, 1.78422841, 2.068713002  /
      data a3 / -0.542730416, -0.627532626, -0.519420966, -0.525274929, -0.462301343  /
      data a4 / 0.107332105, 0.137442784, 0.15989904, 0.204782651, 0.241935468  /
      data a5 / -0.915960819, -0.900192462, -0.951585908, -0.971657293, -0.978575075  /
      data a6 / 0.251159906, 0.230060775, 0.205960024, 0.193677133, 0.184936972  /
      data a7 / 5.076184084, 5.414933339, 5.038544997, 4.787916605, 4.990588764  /
      data a8 / -0.006139721, -0.007045028, -0.003343442, -0.001995972, -0.001325647  /
      data a9 / 0.510976682, 0.462927961, 0.339345733, 0.262946907, 0.175755775  /

C Find the requested spectral period and corresponding coefficients
      nPer = 5
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         a0T      = a0(1)
         a1T      = a1(1)
         a2T      = a2(1)
         a3T      = a3(1)
         a4T      = a4(1)
         a5T      = a5(1)
         a6T      = a6(1)
         a7T      = a7(1)
         a8T      = a8(1)
         a9T      = a9(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'DCPP Common Model005 Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),a0(count1),a0(count2),
     +             specT,a0T,iflag)
      call interp (period(count1),period(count2),a1(count1),a1(count2),
     +             specT,a1T,iflag)
      call interp (period(count1),period(count2),a2(count1),a2(count2),
     +             specT,a2T,iflag)
      call interp (period(count1),period(count2),a3(count1),a3(count2),
     +             specT,a3T,iflag)
      call interp (period(count1),period(count2),a4(count1),a4(count2),
     +             specT,a4T,iflag)
      call interp (period(count1),period(count2),a5(count1),a5(count2),
     +             specT,a5T,iflag)
      call interp (period(count1),period(count2),a6(count1),a6(count2),
     +             specT,a6T,iflag)
      call interp (period(count1),period(count2),a7(count1),a7(count2),
     +             specT,a7T,iflag)
      call interp (period(count1),period(count2),a8(count1),a8(count2),
     +             specT,a8T,iflag)
      call interp (period(count1),period(count2),a9(count1),a9(count2),
     +             specT,a9T,iflag)

 1011 period1 = specT

C     Set Constant Terms
      Mref1 = 5.5
      Mref2 = 6.5

C     Compute the ground motion for the given spectral period.
      if (M .lt. Mref1) then
         lnY = a0T - a4T*(8.5-Mref1)**2.0 + a2T*(M-Mref1) + a1T*(Mref1-Mref2) + a8T*Rrup
     1             + (a5T+a6T*(Mref1-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      elseif (M .ge. Mref2) then
         lnY = a0T - a4T*(8.5-M)**2.0     + a3T*(M-Mref2)                     + a8T*Rrup
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      else
         lnY = a0T - a4T*(8.5-M)**2.0     + a1T*(M-Mref2)                     + a8T*Rrup
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      endif

C     Add Ztor term
      lnY = lnY + (a9T*ztor)/20.0

      sigma = 0.65

C     Convert ground motion to units of gals in natural log units.
      lnY = lnY + 4.6052

      period2 = period1

      return
      end

c----------------------------------------------------------------------
      Subroutine DCPP_Common006 ( m, Rrup, ztor, specT, lnY, sigma, iflag )

      parameter (MAXPER=5)

      REAL Period(MAXPER), a0(MAXPER), a1(MAXPER), a2(MAXPER), a3(MAXPER)
      REAL a4(MAXPER), a5(MAXPER), a6(MAXPER), a7(MAXPER), a8(MAXPER), a9(MAXPER)
      real Mref1, MRef2, Rrup, Ztor
      REAL M, specT, sigma
      REAL period2, lnY
      integer iflag, count1, count2

      data period / 0.01, 0.2, 0.5, 1.0, 2.0 /
      data a0 / 3.251986267, 3.79460145, 3.214007046, 3.209422039, 2.780584602  /
      data a1 / -0.721542295, -0.457987926, 0.020037702, 0.054457977, 0.18122608  /
      data a2 / 1.374150887, 1.392020089, 1.684354703, 2.200994674, 2.526765962  /
      data a3 / -0.807794369, -0.476751375, 0.070507552, 0.027081071, 0.095441379  /
      data a4 / 0.180764078, 0.089446403, 0.071159723, 0.149870046, 0.191762188  /
      data a5 / -0.707990675, -0.693619571, -0.844621479, -0.951687138, -1.00883522  /
      data a6 / 0.312388841, 0.29851607, 0.250933355, 0.222208685, 0.209970296  /
      data a7 / 3.449899465, 4.230785374, 3.077035349, 2.225207351, 2.277830296  /
      data a8 / 0.000738982, -0.016130082, 0.008913823, -0.009884652, -0.004823573  /
      data a9 / 0.867370117, 0.762878054, 0.489665039, 0.349411054, 0.166504883  /

C Find the requested spectral period and corresponding coefficients
      nPer = 5
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         a0T      = a0(1)
         a1T      = a1(1)
         a2T      = a2(1)
         a3T      = a3(1)
         a4T      = a4(1)
         a5T      = a5(1)
         a6T      = a6(1)
         a7T      = a7(1)
         a8T      = a8(1)
         a9T      = a9(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'DCPP Common Model006 Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),a0(count1),a0(count2),
     +             specT,a0T,iflag)
      call interp (period(count1),period(count2),a1(count1),a1(count2),
     +             specT,a1T,iflag)
      call interp (period(count1),period(count2),a2(count1),a2(count2),
     +             specT,a2T,iflag)
      call interp (period(count1),period(count2),a3(count1),a3(count2),
     +             specT,a3T,iflag)
      call interp (period(count1),period(count2),a4(count1),a4(count2),
     +             specT,a4T,iflag)
      call interp (period(count1),period(count2),a5(count1),a5(count2),
     +             specT,a5T,iflag)
      call interp (period(count1),period(count2),a6(count1),a6(count2),
     +             specT,a6T,iflag)
      call interp (period(count1),period(count2),a7(count1),a7(count2),
     +             specT,a7T,iflag)
      call interp (period(count1),period(count2),a8(count1),a8(count2),
     +             specT,a8T,iflag)
      call interp (period(count1),period(count2),a9(count1),a9(count2),
     +             specT,a9T,iflag)

 1011 period1 = specT

C     Set Constant Terms
      Mref1 = 5.5
      Mref2 = 6.5

C     Compute the ground motion for the given spectral period.
      if (M .lt. Mref1) then
         lnY = a0T - a4T*(8.5-Mref1)**2.0 + a2T*(M-Mref1) + a1T*(Mref1-Mref2) + a8T*Rrup
     1             + (a5T+a6T*(Mref1-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      elseif (M .ge. Mref2) then
         lnY = a0T - a4T*(8.5-M)**2.0     + a3T*(M-Mref2)                     + a8T*Rrup
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      else
         lnY = a0T - a4T*(8.5-M)**2.0     + a1T*(M-Mref2)                     + a8T*Rrup
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      endif

C     Add Ztor term
      lnY = lnY + (a9T*ztor)/20.0

      sigma = 0.65

C     Convert ground motion to units of gals in natural log units.
      lnY = lnY + 4.6052

      period2 = period1

      return
      end

c----------------------------------------------------------------------
      Subroutine DCPP_Common007 ( m, Rrup, ztor, specT, lnY, sigma, iflag )

      parameter (MAXPER=5)

      REAL Period(MAXPER), a0(MAXPER), a1(MAXPER), a2(MAXPER), a3(MAXPER)
      REAL a4(MAXPER), a5(MAXPER), a6(MAXPER), a7(MAXPER), a8(MAXPER), a9(MAXPER)
      real Mref1, MRef2, Rrup, Ztor
      REAL M, specT, sigma
      REAL period2, lnY
      integer iflag, count1, count2

      data period / 0.01, 0.2, 0.5, 1.0, 2.0 /
      data a0 / 3.522281793, 3.779815051, 3.790127509, 3.366254154, 2.993648492  /
      data a1 / -0.745505344, -0.802692452, -1.438293627, -1.680874156, -2.084533152  /
      data a2 / 0.04047644, 0.115820555, 0.731216267, 1.07504443, 1.388190912  /
      data a3 / -0.698386839, -0.543240211, -0.794857318, -1.012121099, -1.405991344  /
      data a4 / 0.241824727, 0.207003949, 0.333873833, 0.460081283, 0.575052544  /
      data a5 / -0.715813871, -0.609714344, -0.674005396, -0.652671853, -0.627627914  /
      data a6 / 0.202896307, 0.257134674, 0.198732616, 0.18934498, 0.221155607  /
      data a7 / 3.798280073, 3.661629505, 2.978961455, 2.769264077, 2.027250135  /
      data a8 / -0.02243076, -0.025143069, -0.013872542, -0.022910165, -0.012336009  /
      data a9 / 0.407627055, 0.395697911, 0.280057509, 0.164297046, 0.124698346  /

C Find the requested spectral period and corresponding coefficients
      nPer = 5
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         a0T      = a0(1)
         a1T      = a1(1)
         a2T      = a2(1)
         a3T      = a3(1)
         a4T      = a4(1)
         a5T      = a5(1)
         a6T      = a6(1)
         a7T      = a7(1)
         a8T      = a8(1)
         a9T      = a9(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'DCPP Common Model007 Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),a0(count1),a0(count2),
     +             specT,a0T,iflag)
      call interp (period(count1),period(count2),a1(count1),a1(count2),
     +             specT,a1T,iflag)
      call interp (period(count1),period(count2),a2(count1),a2(count2),
     +             specT,a2T,iflag)
      call interp (period(count1),period(count2),a3(count1),a3(count2),
     +             specT,a3T,iflag)
      call interp (period(count1),period(count2),a4(count1),a4(count2),
     +             specT,a4T,iflag)
      call interp (period(count1),period(count2),a5(count1),a5(count2),
     +             specT,a5T,iflag)
      call interp (period(count1),period(count2),a6(count1),a6(count2),
     +             specT,a6T,iflag)
      call interp (period(count1),period(count2),a7(count1),a7(count2),
     +             specT,a7T,iflag)
      call interp (period(count1),period(count2),a8(count1),a8(count2),
     +             specT,a8T,iflag)
      call interp (period(count1),period(count2),a9(count1),a9(count2),
     +             specT,a9T,iflag)

 1011 period1 = specT

C     Set Constant Terms
      Mref1 = 5.5
      Mref2 = 6.5

C     Compute the ground motion for the given spectral period.
      if (M .lt. Mref1) then
         lnY = a0T - a4T*(8.5-Mref1)**2.0 + a2T*(M-Mref1) + a1T*(Mref1-Mref2) + a8T*Rrup
     1             + (a5T+a6T*(Mref1-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      elseif (M .ge. Mref2) then
         lnY = a0T - a4T*(8.5-M)**2.0     + a3T*(M-Mref2)                     + a8T*Rrup
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      else
         lnY = a0T - a4T*(8.5-M)**2.0     + a1T*(M-Mref2)                     + a8T*Rrup
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      endif

C     Add Ztor term
      lnY = lnY + (a9T*ztor)/20.0

      sigma = 0.65

C     Convert ground motion to units of gals in natural log units.
      lnY = lnY + 4.6052

      period2 = period1

      return
      end

c----------------------------------------------------------------------
      Subroutine DCPP_Common008 ( m, Rrup, ztor, specT, lnY, sigma, iflag )

      parameter (MAXPER=5)

      REAL Period(MAXPER), a0(MAXPER), a1(MAXPER), a2(MAXPER), a3(MAXPER)
      REAL a4(MAXPER), a5(MAXPER), a6(MAXPER), a7(MAXPER), a8(MAXPER), a9(MAXPER)
      real Mref1, MRef2, Rrup, Ztor
      REAL M, specT, sigma
      REAL period2, lnY
      integer iflag, count1, count2

      data period / 0.01, 0.2, 0.5, 1.0, 2.0 /
      data a0 / 3.252954349, 3.26016395, 2.995497924, 2.902377492, 2.667079617  /
      data a1 / -0.667737691, -0.559316539, -0.921398892, -1.255008316, -1.437287148  /
      data a2 / 0.326501995, 0.355401061, 0.658464726, 1.036373301, 1.414567899  /
      data a3 / -0.659992815, -0.337970183, -0.276914155, -0.42718595, -0.626393327  /
      data a4 / 0.314873913, 0.197241241, 0.289814332, 0.419103558, 0.529254838  /
      data a5 / -0.456132241, -0.38443632, -0.4197599, -0.45562668, -0.46287412  /
      data a6 / 0.145043277, 0.178941179, 0.154732928, 0.149078213, 0.125423811  /
      data a7 / 2.266717573, 3.183447009, 1.416544689, 0.332686983, -0.208385792  /
      data a8 / -0.032599211, -0.005307832, -0.01490414, -0.01195826, -0.026117257  /
      data a9 / 0.163662802, 0.111881726, -0.051753846, -0.160656287, -0.253421932  /

C Find the requested spectral period and corresponding coefficients
      nPer = 5
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         a0T      = a0(1)
         a1T      = a1(1)
         a2T      = a2(1)
         a3T      = a3(1)
         a4T      = a4(1)
         a5T      = a5(1)
         a6T      = a6(1)
         a7T      = a7(1)
         a8T      = a8(1)
         a9T      = a9(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'DCPP Common Model008 Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),a0(count1),a0(count2),
     +             specT,a0T,iflag)
      call interp (period(count1),period(count2),a1(count1),a1(count2),
     +             specT,a1T,iflag)
      call interp (period(count1),period(count2),a2(count1),a2(count2),
     +             specT,a2T,iflag)
      call interp (period(count1),period(count2),a3(count1),a3(count2),
     +             specT,a3T,iflag)
      call interp (period(count1),period(count2),a4(count1),a4(count2),
     +             specT,a4T,iflag)
      call interp (period(count1),period(count2),a5(count1),a5(count2),
     +             specT,a5T,iflag)
      call interp (period(count1),period(count2),a6(count1),a6(count2),
     +             specT,a6T,iflag)
      call interp (period(count1),period(count2),a7(count1),a7(count2),
     +             specT,a7T,iflag)
      call interp (period(count1),period(count2),a8(count1),a8(count2),
     +             specT,a8T,iflag)
      call interp (period(count1),period(count2),a9(count1),a9(count2),
     +             specT,a9T,iflag)

 1011 period1 = specT

C     Set Constant Terms
      Mref1 = 5.5
      Mref2 = 6.5

C     Compute the ground motion for the given spectral period.
      if (M .lt. Mref1) then
         lnY = a0T - a4T*(8.5-Mref1)**2.0 + a2T*(M-Mref1) + a1T*(Mref1-Mref2) + a8T*Rrup
     1             + (a5T+a6T*(Mref1-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      elseif (M .ge. Mref2) then
         lnY = a0T - a4T*(8.5-M)**2.0     + a3T*(M-Mref2)                     + a8T*Rrup
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      else
         lnY = a0T - a4T*(8.5-M)**2.0     + a1T*(M-Mref2)                     + a8T*Rrup
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      endif

C     Add Ztor term
      lnY = lnY + (a9T*ztor)/20.0

      sigma = 0.65

C     Convert ground motion to units of gals in natural log units.
      lnY = lnY + 4.6052

      period2 = period1

      return
      end

c----------------------------------------------------------------------
      Subroutine DCPP_Common009 ( m, Rrup, ztor, specT, lnY, sigma, iflag )

      parameter (MAXPER=5)

      REAL Period(MAXPER), a0(MAXPER), a1(MAXPER), a2(MAXPER), a3(MAXPER)
      REAL a4(MAXPER), a5(MAXPER), a6(MAXPER), a7(MAXPER), a8(MAXPER), a9(MAXPER)
      real Mref1, MRef2, Rrup, Ztor
      REAL M, specT, sigma
      REAL period2, lnY
      integer iflag, count1, count2

      data period / 0.01, 0.2, 0.5, 1.0, 2.0 /
      data a0 / 2.87957963, 3.267451272, 2.934459189, 2.807261175, 2.375468933  /
      data a1 / -0.340091418, -0.264153471, 0.007822577, -0.055582518, -0.096382979  /
      data a2 / 0.877599706, 0.908074957, 1.278377881, 1.753596622, 2.11630298  /
      data a3 / -0.385424946, -0.240541882, 0.179140064, 0.081707406, 0.00501884  /
      data a4 / 0.132715693, 0.074441917, 0.072453275, 0.178176928, 0.250392558  /
      data a5 / -0.645626944, -0.585940757, -0.722451475, -0.790354398, -0.839573127  /
      data a6 / 0.257842701, 0.277186164, 0.230779667, 0.213220683, 0.185367497  /
      data a7 / 3.109921833, 3.427837094, 2.705180991, 2.239119649, 2.00539171  /
      data a8 / -0.005268259, -0.013346038, 2.40106E-05, -0.017669574, -0.01293008  /
      data a9 / 0.367840808, 0.329691579, 0.233494917, 0.151155273, 0.106584807  /

C Find the requested spectral period and corresponding coefficients
      nPer = 5
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         a0T      = a0(1)
         a1T      = a1(1)
         a2T      = a2(1)
         a3T      = a3(1)
         a4T      = a4(1)
         a5T      = a5(1)
         a6T      = a6(1)
         a7T      = a7(1)
         a8T      = a8(1)
         a9T      = a9(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'DCPP Common Model009 Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),a0(count1),a0(count2),
     +             specT,a0T,iflag)
      call interp (period(count1),period(count2),a1(count1),a1(count2),
     +             specT,a1T,iflag)
      call interp (period(count1),period(count2),a2(count1),a2(count2),
     +             specT,a2T,iflag)
      call interp (period(count1),period(count2),a3(count1),a3(count2),
     +             specT,a3T,iflag)
      call interp (period(count1),period(count2),a4(count1),a4(count2),
     +             specT,a4T,iflag)
      call interp (period(count1),period(count2),a5(count1),a5(count2),
     +             specT,a5T,iflag)
      call interp (period(count1),period(count2),a6(count1),a6(count2),
     +             specT,a6T,iflag)
      call interp (period(count1),period(count2),a7(count1),a7(count2),
     +             specT,a7T,iflag)
      call interp (period(count1),period(count2),a8(count1),a8(count2),
     +             specT,a8T,iflag)
      call interp (period(count1),period(count2),a9(count1),a9(count2),
     +             specT,a9T,iflag)

 1011 period1 = specT

C     Set Constant Terms
      Mref1 = 5.5
      Mref2 = 6.5

C     Compute the ground motion for the given spectral period.
      if (M .lt. Mref1) then
         lnY = a0T - a4T*(8.5-Mref1)**2.0 + a2T*(M-Mref1) + a1T*(Mref1-Mref2) + a8T*Rrup
     1             + (a5T+a6T*(Mref1-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      elseif (M .ge. Mref2) then
         lnY = a0T - a4T*(8.5-M)**2.0     + a3T*(M-Mref2)                     + a8T*Rrup
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      else
         lnY = a0T - a4T*(8.5-M)**2.0     + a1T*(M-Mref2)                     + a8T*Rrup
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rrup*Rrup))
      endif

C     Add Ztor term
      lnY = lnY + (a9T*ztor)/20.0

      sigma = 0.65

C     Convert ground motion to units of gals in natural log units.
      lnY = lnY + 4.6052

      period2 = period1

      return
      end







c----------------------------------------------------------------------
      Subroutine PVNGS_CommonASK ( m, Rjb, ztor, specT, lnY, sigma, iflag )

      parameter (MAXPER=5)

      REAL Period(MAXPER), a0(MAXPER), a1(MAXPER), a2(MAXPER), a3(MAXPER)
      REAL a4(MAXPER), a5(MAXPER), a6(MAXPER), a7(MAXPER), a8(MAXPER), a9(MAXPER)
      real Mref1, MRef2, Rjb, Ztor
      REAL M, specT, sigma
      REAL period2, lnY
      integer iflag, count1, count2

      data period / 0.01, 0.2, 0.5, 1.0, 2.0 /
      data a0 / 3.343907904, 4.252801795, 3.566737128, 2.938042573, 2.075468023  /
      data a1 / 0.080811823, 0.084210319, 0.073042473, 0.054685714, -0.009824295  /
      data a2 / 0.865947735, 0.963370266, 1.190967949, 1.48365227, 1.666544209  /
      data a3 / -0.095339756, -0.092834299, -0.104891355, -0.124136064, -0.185838727  /
      data a4 / 0.007702263, 0.021973272, 0.055388872, 0.098374638, 0.125433795  /
      data a5 / -1.0769308, -1.076935123, -1.063802868, -1.044096653, -0.994797979  /
      data a6 / 0.244690771, 0.244690839, 0.249686531, 0.257157478, 0.275708113  /
      data a7 / 5.086963275, 5.08699764, 5.066192565, 5.034072914, 4.948704972  /
      data a8 / -0.002933616, -0.004333507, 0.000807676, 0.001118967, 0.000744735  /
      data a9 / 1.080088531, 1.080087809, 0.821269279, 0.553048997, 0.297539821  /

C Find the requested spectral period and corresponding coefficients
      nPer = 5
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         a0T      = a0(1)
         a1T      = a1(1)
         a2T      = a2(1)
         a3T      = a3(1)
         a4T      = a4(1)
         a5T      = a5(1)
         a6T      = a6(1)
         a7T      = a7(1)
         a8T      = a8(1)
         a9T      = a9(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'PVNGS Common Model ASK Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),a0(count1),a0(count2),
     +             specT,a0T,iflag)
      call interp (period(count1),period(count2),a1(count1),a1(count2),
     +             specT,a1T,iflag)
      call interp (period(count1),period(count2),a2(count1),a2(count2),
     +             specT,a2T,iflag)
      call interp (period(count1),period(count2),a3(count1),a3(count2),
     +             specT,a3T,iflag)
      call interp (period(count1),period(count2),a4(count1),a4(count2),
     +             specT,a4T,iflag)
      call interp (period(count1),period(count2),a5(count1),a5(count2),
     +             specT,a5T,iflag)
      call interp (period(count1),period(count2),a6(count1),a6(count2),
     +             specT,a6T,iflag)
      call interp (period(count1),period(count2),a7(count1),a7(count2),
     +             specT,a7T,iflag)
      call interp (period(count1),period(count2),a8(count1),a8(count2),
     +             specT,a8T,iflag)
      call interp (period(count1),period(count2),a9(count1),a9(count2),
     +             specT,a9T,iflag)

 1011 period1 = specT

C     Set Constant Terms
      Mref1 = 5.5
      Mref2 = 6.5

C     Compute the ground motion for the given spectral period.
      if (M .lt. Mref1) then
         lnY = a0T - a4T*(8.5-Mref1)**2.0 + a2T*(M-Mref1) + a1T*(Mref1-Mref2) + a8T*Rjb
     1             + (a5T+a6T*(Mref1-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      elseif (M .ge. Mref2) then
         lnY = a0T - a4T*(8.5-M)**2.0     + a3T*(M-Mref2)                     + a8T*Rjb
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      else
         lnY = a0T - a4T*(8.5-M)**2.0     + a1T*(M-Mref2)                     + a8T*Rjb
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      endif

C     Add Ztor term
      lnY = lnY + (a9T*ztor)/20.0

      sigma = 0.65

C     Convert ground motion to units of gals in natural log units.
      lnY = lnY + 4.6052

      period2 = period1

      return
      end

c----------------------------------------------------------------------
      Subroutine PVNGS_CommonBindi ( m, Rjb, ztor, specT, lnY, sigma, iflag )

      parameter (MAXPER=5)

      REAL Period(MAXPER), a0(MAXPER), a1(MAXPER), a2(MAXPER), a3(MAXPER)
      REAL a4(MAXPER), a5(MAXPER), a6(MAXPER), a7(MAXPER), a8(MAXPER), a9(MAXPER)
      real Mref1, MRef2, Rjb, Ztor
      REAL M, specT, sigma
      REAL period2, lnY
      integer iflag, count1, count2

      data period / 0.01, 0.2, 0.5, 1.0, 2.0 /
      data a0 / 5.477789171, 6.506273744, 5.14623719, 3.78029147, 2.717755816  /
      data a1 / -0.232825243, -0.233689039, -0.207289509, -0.187375433, -0.172650217  /
      data a2 / 0.947285157, 0.993453424, 1.388735997, 1.706872295, 2.012465488  /
      data a3 / -0.472012097, -0.472300013, -0.454726948, -0.441602562, -0.431571518  /
      data a4 / 0.000692252, 0.007293516, 0.066040163, 0.113273155, 0.158347203  /
      data a5 / -1.94765912, -2.022422359, -1.632894927, -1.342400966, -1.200172069  /
      data a6 / 0.369759727, 0.370933284, 0.364894114, 0.360547331, 0.358487482  /
      data a7 / 8.119918051, 8.113741035, 8.150754423, 8.188080348, 8.210408959  /
      data a8 / 0.015925715, 0.016487051, 0.01355982, 0.011369528, 0.010293092  /
      data a9 / 0.622838681, 0.645423299, 0.527834946, 0.440359475, 0.397648621  /

C Find the requested spectral period and corresponding coefficients
      nPer = 5
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         a0T      = a0(1)
         a1T      = a1(1)
         a2T      = a2(1)
         a3T      = a3(1)
         a4T      = a4(1)
         a5T      = a5(1)
         a6T      = a6(1)
         a7T      = a7(1)
         a8T      = a8(1)
         a9T      = a9(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'PVNGS Common Model Bindi Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),a0(count1),a0(count2),
     +             specT,a0T,iflag)
      call interp (period(count1),period(count2),a1(count1),a1(count2),
     +             specT,a1T,iflag)
      call interp (period(count1),period(count2),a2(count1),a2(count2),
     +             specT,a2T,iflag)
      call interp (period(count1),period(count2),a3(count1),a3(count2),
     +             specT,a3T,iflag)
      call interp (period(count1),period(count2),a4(count1),a4(count2),
     +             specT,a4T,iflag)
      call interp (period(count1),period(count2),a5(count1),a5(count2),
     +             specT,a5T,iflag)
      call interp (period(count1),period(count2),a6(count1),a6(count2),
     +             specT,a6T,iflag)
      call interp (period(count1),period(count2),a7(count1),a7(count2),
     +             specT,a7T,iflag)
      call interp (period(count1),period(count2),a8(count1),a8(count2),
     +             specT,a8T,iflag)
      call interp (period(count1),period(count2),a9(count1),a9(count2),
     +             specT,a9T,iflag)

 1011 period1 = specT

C     Set Constant Terms
      Mref1 = 5.5
      Mref2 = 6.5

C     Compute the ground motion for the given spectral period.
      if (M .lt. Mref1) then
         lnY = a0T - a4T*(8.5-Mref1)**2.0 + a2T*(M-Mref1) + a1T*(Mref1-Mref2) + a8T*Rjb
     1             + (a5T+a6T*(Mref1-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      elseif (M .ge. Mref2) then
         lnY = a0T - a4T*(8.5-M)**2.0     + a3T*(M-Mref2)                     + a8T*Rjb
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      else
         lnY = a0T - a4T*(8.5-M)**2.0     + a1T*(M-Mref2)                     + a8T*Rjb
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      endif

C     Add Ztor term
      lnY = lnY + (a9T*ztor)/20.0

      sigma = 0.65

C     Convert ground motion to units of gals in natural log units.
      lnY = lnY + 4.6052

      period2 = period1

      return
      end

c----------------------------------------------------------------------
      Subroutine PVNGS_Common001 ( m, Rjb, ztor, specT, lnY, sigma, iflag )

      parameter (MAXPER=5)

      REAL Period(MAXPER), a0(MAXPER), a1(MAXPER), a2(MAXPER), a3(MAXPER)
      REAL a4(MAXPER), a5(MAXPER), a6(MAXPER), a7(MAXPER), a8(MAXPER), a9(MAXPER)
      real Mref1, MRef2, Rjb, Ztor
      REAL M, specT, sigma
      REAL period2, lnY
      integer iflag, count1, count2

      data period / 0.01, 0.2, 0.5, 1.0, 2.0 /
      data a0 / 3.359674285, 2.999532571, 2.513715574, 1.550253211, 0.481805389  /
      data a1 / 0.259051103, 1.806534394, 1.457260206, 2.145567828, 2.423955513  /
      data a2 / 1.29166876, 1.509755983, 1.5523006, 1.811610628, 2.00622729  /
      data a3 / -0.046432184, 1.164786842, 0.916676151, 1.378670837, 1.443426906  /
      data a4 / 0.051915891, -0.220276726, -0.156106833, -0.278186332, -0.324826277  /
      data a5 / -0.944987414, -0.916703744, -0.928962513, -0.99079302, -0.933204263  /
      data a6 / 0.157927576, 0.075356957, 0.114199324, 0.149706685, 0.176127245  /
      data a7 / 4.546890862, 5.237645969, 4.367579105, 3.897887087, 4.288293044  /
      data a8 / 0.00797077, -0.013157019, -0.013825852, 0.001092373, -0.017732395  /
      data a9 / 1.48171669, 1.324991739, 0.837728298, 0.463713454, 0.034077117  /

C Find the requested spectral period and corresponding coefficients
      nPer = 5
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         a0T      = a0(1)
         a1T      = a1(1)
         a2T      = a2(1)
         a3T      = a3(1)
         a4T      = a4(1)
         a5T      = a5(1)
         a6T      = a6(1)
         a7T      = a7(1)
         a8T      = a8(1)
         a9T      = a9(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'PVNGS Common Model001 Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),a0(count1),a0(count2),
     +             specT,a0T,iflag)
      call interp (period(count1),period(count2),a1(count1),a1(count2),
     +             specT,a1T,iflag)
      call interp (period(count1),period(count2),a2(count1),a2(count2),
     +             specT,a2T,iflag)
      call interp (period(count1),period(count2),a3(count1),a3(count2),
     +             specT,a3T,iflag)
      call interp (period(count1),period(count2),a4(count1),a4(count2),
     +             specT,a4T,iflag)
      call interp (period(count1),period(count2),a5(count1),a5(count2),
     +             specT,a5T,iflag)
      call interp (period(count1),period(count2),a6(count1),a6(count2),
     +             specT,a6T,iflag)
      call interp (period(count1),period(count2),a7(count1),a7(count2),
     +             specT,a7T,iflag)
      call interp (period(count1),period(count2),a8(count1),a8(count2),
     +             specT,a8T,iflag)
      call interp (period(count1),period(count2),a9(count1),a9(count2),
     +             specT,a9T,iflag)

 1011 period1 = specT

C     Set Constant Terms
      Mref1 = 5.5
      Mref2 = 6.5

C     Compute the ground motion for the given spectral period.
      if (M .lt. Mref1) then
         lnY = a0T - a4T*(8.5-Mref1)**2.0 + a2T*(M-Mref1) + a1T*(Mref1-Mref2) + a8T*Rjb
     1             + (a5T+a6T*(Mref1-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      elseif (M .ge. Mref2) then
         lnY = a0T - a4T*(8.5-M)**2.0     + a3T*(M-Mref2)                     + a8T*Rjb
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      else
         lnY = a0T - a4T*(8.5-M)**2.0     + a1T*(M-Mref2)                     + a8T*Rjb
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      endif

C     Add Ztor term
      lnY = lnY + (a9T*ztor)/20.0

      sigma = 0.65

C     Convert ground motion to units of gals in natural log units.
      lnY = lnY + 4.6052

      period2 = period1

      return
      end

c----------------------------------------------------------------------
      Subroutine PVNGS_Common002 ( m, Rjb, ztor, specT, lnY, sigma, iflag )

      parameter (MAXPER=5)

      REAL Period(MAXPER), a0(MAXPER), a1(MAXPER), a2(MAXPER), a3(MAXPER)
      REAL a4(MAXPER), a5(MAXPER), a6(MAXPER), a7(MAXPER), a8(MAXPER), a9(MAXPER)
      real Mref1, MRef2, Rjb, Ztor
      REAL M, specT, sigma
      REAL period2, lnY
      integer iflag, count1, count2

      data period / 0.01, 0.2, 0.5, 1.0, 2.0 /
      data a0 / 4.469511159, 4.669919592, 5.026559877, 4.778429922, 3.674178555  /
      data a1 / -1.016050665, -0.318336897, -0.908739603, -0.913573926, -1.233112887  /
      data a2 / 0.611821156, 0.695479803, 1.376384997, 1.736252026, 1.937118833  /
      data a3 / -0.846562333, -0.218552638, -0.695414516, -0.818961659, -1.177798878  /
      data a4 / 0.138947695, 0.0526643, 0.263814563, 0.347699478, 0.393435099  /
      data a5 / -1.393924555, -1.299071436, -1.390369351, -1.424281402, -1.253137814  /
      data a6 / 0.333692768, 0.259002892, 0.209262158, 0.210308355, 0.28659741  /
      data a7 / 5.411275966, 5.16809154, 4.78359839, 4.869260987, 4.582358809  /
      data a8 / 0.013271239, 0.009010653, 0.000198032, 0.012491114, -0.002793928  /
      data a9 / 0.728099195, 0.757419119, 0.75456221, 0.670391643, 0.585756882  /

C Find the requested spectral period and corresponding coefficients
      nPer = 5
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         a0T      = a0(1)
         a1T      = a1(1)
         a2T      = a2(1)
         a3T      = a3(1)
         a4T      = a4(1)
         a5T      = a5(1)
         a6T      = a6(1)
         a7T      = a7(1)
         a8T      = a8(1)
         a9T      = a9(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'PVNGS Common Model002 Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),a0(count1),a0(count2),
     +             specT,a0T,iflag)
      call interp (period(count1),period(count2),a1(count1),a1(count2),
     +             specT,a1T,iflag)
      call interp (period(count1),period(count2),a2(count1),a2(count2),
     +             specT,a2T,iflag)
      call interp (period(count1),period(count2),a3(count1),a3(count2),
     +             specT,a3T,iflag)
      call interp (period(count1),period(count2),a4(count1),a4(count2),
     +             specT,a4T,iflag)
      call interp (period(count1),period(count2),a5(count1),a5(count2),
     +             specT,a5T,iflag)
      call interp (period(count1),period(count2),a6(count1),a6(count2),
     +             specT,a6T,iflag)
      call interp (period(count1),period(count2),a7(count1),a7(count2),
     +             specT,a7T,iflag)
      call interp (period(count1),period(count2),a8(count1),a8(count2),
     +             specT,a8T,iflag)
      call interp (period(count1),period(count2),a9(count1),a9(count2),
     +             specT,a9T,iflag)

 1011 period1 = specT

C     Set Constant Terms
      Mref1 = 5.5
      Mref2 = 6.5

C     Compute the ground motion for the given spectral period.
      if (M .lt. Mref1) then
         lnY = a0T - a4T*(8.5-Mref1)**2.0 + a2T*(M-Mref1) + a1T*(Mref1-Mref2) + a8T*Rjb
     1             + (a5T+a6T*(Mref1-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      elseif (M .ge. Mref2) then
         lnY = a0T - a4T*(8.5-M)**2.0     + a3T*(M-Mref2)                     + a8T*Rjb
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      else
         lnY = a0T - a4T*(8.5-M)**2.0     + a1T*(M-Mref2)                     + a8T*Rjb
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      endif

C     Add Ztor term
      lnY = lnY + (a9T*ztor)/20.0

      sigma = 0.65

C     Convert ground motion to units of gals in natural log units.
      lnY = lnY + 4.6052

      period2 = period1

      return
      end

c----------------------------------------------------------------------
      Subroutine PVNGS_Common003 ( m, Rjb, ztor, specT, lnY, sigma, iflag )

      parameter (MAXPER=5)

      REAL Period(MAXPER), a0(MAXPER), a1(MAXPER), a2(MAXPER), a3(MAXPER)
      REAL a4(MAXPER), a5(MAXPER), a6(MAXPER), a7(MAXPER), a8(MAXPER), a9(MAXPER)
      real Mref1, MRef2, Rjb, Ztor
      REAL M, specT, sigma
      REAL period2, lnY
      integer iflag, count1, count2

      data period / 0.01, 0.2, 0.5, 1.0, 2.0 /
      data a0 / 3.875846016, 4.604039829, 5.09888582, 5.595457504, 4.923491709  /
      data a1 / -0.685741648, -0.282098998, -0.628985504, -1.142972715, -1.166258938  /
      data a2 / 1.777102049, 1.867105674, 2.267095367, 2.639663451, 2.958850385  /
      data a3 / -0.680100533, -0.339853919, -0.618838767, -1.181973274, -1.446096257  /
      data a4 / 0.162748119, 0.136429136, 0.247497324, 0.452750546, 0.503902043  /
      data a5 / -1.167243929, -1.100854485, -1.318943697, -1.464731932, -1.402028153  /
      data a6 / 0.23549403, 0.097212295, 0.063363647, 0.055289666, 0.08840652  /
      data a7 / 5.070646018, 5.620542857, 4.75940936, 4.41599181, 4.992410748  /
      data a8 / 0.005927228, -0.004610289, -0.006873191, -0.007525715, -0.007884014  /
      data a9 / 1.090435535, 0.865707921, 0.591183399, 0.492594083, 0.367542158  /

C Find the requested spectral period and corresponding coefficients
      nPer = 5
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         a0T      = a0(1)
         a1T      = a1(1)
         a2T      = a2(1)
         a3T      = a3(1)
         a4T      = a4(1)
         a5T      = a5(1)
         a6T      = a6(1)
         a7T      = a7(1)
         a8T      = a8(1)
         a9T      = a9(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'PVNGS Common Model003 Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),a0(count1),a0(count2),
     +             specT,a0T,iflag)
      call interp (period(count1),period(count2),a1(count1),a1(count2),
     +             specT,a1T,iflag)
      call interp (period(count1),period(count2),a2(count1),a2(count2),
     +             specT,a2T,iflag)
      call interp (period(count1),period(count2),a3(count1),a3(count2),
     +             specT,a3T,iflag)
      call interp (period(count1),period(count2),a4(count1),a4(count2),
     +             specT,a4T,iflag)
      call interp (period(count1),period(count2),a5(count1),a5(count2),
     +             specT,a5T,iflag)
      call interp (period(count1),period(count2),a6(count1),a6(count2),
     +             specT,a6T,iflag)
      call interp (period(count1),period(count2),a7(count1),a7(count2),
     +             specT,a7T,iflag)
      call interp (period(count1),period(count2),a8(count1),a8(count2),
     +             specT,a8T,iflag)
      call interp (period(count1),period(count2),a9(count1),a9(count2),
     +             specT,a9T,iflag)

 1011 period1 = specT

C     Set Constant Terms
      Mref1 = 5.5
      Mref2 = 6.5

C     Compute the ground motion for the given spectral period.
      if (M .lt. Mref1) then
         lnY = a0T - a4T*(8.5-Mref1)**2.0 + a2T*(M-Mref1) + a1T*(Mref1-Mref2) + a8T*Rjb
     1             + (a5T+a6T*(Mref1-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      elseif (M .ge. Mref2) then
         lnY = a0T - a4T*(8.5-M)**2.0     + a3T*(M-Mref2)                     + a8T*Rjb
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      else
         lnY = a0T - a4T*(8.5-M)**2.0     + a1T*(M-Mref2)                     + a8T*Rjb
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      endif

C     Add Ztor term
      lnY = lnY + (a9T*ztor)/20.0

      sigma = 0.65

C     Convert ground motion to units of gals in natural log units.
      lnY = lnY + 4.6052

      period2 = period1

      return
      end

c----------------------------------------------------------------------
      Subroutine PVNGS_Common004 ( m, Rjb, ztor, specT, lnY, sigma, iflag )

      parameter (MAXPER=5)

      REAL Period(MAXPER), a0(MAXPER), a1(MAXPER), a2(MAXPER), a3(MAXPER)
      REAL a4(MAXPER), a5(MAXPER), a6(MAXPER), a7(MAXPER), a8(MAXPER), a9(MAXPER)
      real Mref1, MRef2, Rjb, Ztor
      REAL M, specT, sigma
      REAL period2, lnY
      integer iflag, count1, count2

      data period / 0.01, 0.2, 0.5, 1.0, 2.0 /
      data a0 / 3.831573393, 2.035301483, 2.680210979, 2.127825912, 0.975642192  /
      data a1 / -0.505892635, 2.517527172, 1.235975612, 1.701487361, 1.527531384  /
      data a2 / 0.66723769, 0.95917924, 1.451925977, 1.791003984, 1.951961942  /
      data a3 / -0.527776405, 1.898778895, 0.992018092, 1.260611637, 0.908347556  /
      data a4 / 0.181773916, -0.422365062, -0.160859691, -0.190827403, -0.159870762  /
      data a5 / -1.055947659, -0.928049678, -1.026069961, -1.138189325, -0.96732317  /
      data a6 / 0.223345863, 0.11253287, 0.12542901, 0.13800759, 0.224458062  /
      data a7 / 4.239531292, 4.503190993, 3.46568974, 3.149501089, 3.044427493  /
      data a8 / -0.01950985, 0.00447459, -0.000860926, 0.003015036, -0.01290382  /
      data a9 / 1.300744622, 1.170906174, 0.870374403, 0.596846482, 0.300315471  /

C Find the requested spectral period and corresponding coefficients
      nPer = 5
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         a0T      = a0(1)
         a1T      = a1(1)
         a2T      = a2(1)
         a3T      = a3(1)
         a4T      = a4(1)
         a5T      = a5(1)
         a6T      = a6(1)
         a7T      = a7(1)
         a8T      = a8(1)
         a9T      = a9(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'PVNGS Common Model004 Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),a0(count1),a0(count2),
     +             specT,a0T,iflag)
      call interp (period(count1),period(count2),a1(count1),a1(count2),
     +             specT,a1T,iflag)
      call interp (period(count1),period(count2),a2(count1),a2(count2),
     +             specT,a2T,iflag)
      call interp (period(count1),period(count2),a3(count1),a3(count2),
     +             specT,a3T,iflag)
      call interp (period(count1),period(count2),a4(count1),a4(count2),
     +             specT,a4T,iflag)
      call interp (period(count1),period(count2),a5(count1),a5(count2),
     +             specT,a5T,iflag)
      call interp (period(count1),period(count2),a6(count1),a6(count2),
     +             specT,a6T,iflag)
      call interp (period(count1),period(count2),a7(count1),a7(count2),
     +             specT,a7T,iflag)
      call interp (period(count1),period(count2),a8(count1),a8(count2),
     +             specT,a8T,iflag)
      call interp (period(count1),period(count2),a9(count1),a9(count2),
     +             specT,a9T,iflag)

 1011 period1 = specT

C     Set Constant Terms
      Mref1 = 5.5
      Mref2 = 6.5

C     Compute the ground motion for the given spectral period.
      if (M .lt. Mref1) then
         lnY = a0T - a4T*(8.5-Mref1)**2.0 + a2T*(M-Mref1) + a1T*(Mref1-Mref2) + a8T*Rjb
     1             + (a5T+a6T*(Mref1-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      elseif (M .ge. Mref2) then
         lnY = a0T - a4T*(8.5-M)**2.0     + a3T*(M-Mref2)                     + a8T*Rjb
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      else
         lnY = a0T - a4T*(8.5-M)**2.0     + a1T*(M-Mref2)                     + a8T*Rjb
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      endif

C     Add Ztor term
      lnY = lnY + (a9T*ztor)/20.0

      sigma = 0.65

C     Convert ground motion to units of gals in natural log units.
      lnY = lnY + 4.6052

      period2 = period1

      return
      end

c----------------------------------------------------------------------
      Subroutine PVNGS_Common005 ( m, Rjb, ztor, specT, lnY, sigma, iflag )

      parameter (MAXPER=5)

      REAL Period(MAXPER), a0(MAXPER), a1(MAXPER), a2(MAXPER), a3(MAXPER)
      REAL a4(MAXPER), a5(MAXPER), a6(MAXPER), a7(MAXPER), a8(MAXPER), a9(MAXPER)
      real Mref1, MRef2, Rjb, Ztor
      REAL M, specT, sigma
      REAL period2, lnY
      integer iflag, count1, count2

      data period / 0.01, 0.2, 0.5, 1.0, 2.0 /
      data a0 / 4.305480459, 5.832489255, 5.193434708, 4.707772707, 3.781149495  /
      data a1 / -0.360669872, -0.954790898, -0.772192062, -0.878558604, -0.847823755  /
      data a2 / 1.316503941, 1.346260947, 1.643811116, 1.971809782, 2.231346853  /
      data a3 / -0.456399589, -0.898904451, -0.838833356, -0.988747707, -1.03656776  /
      data a4 / 0.050879024, 0.216757739, 0.23862625, 0.320862075, 0.359685226  /
      data a5 / -1.433196805, -1.43253025, -1.388659927, -1.351932734, -1.268368489  /
      data a6 / 0.287168587, 0.23487456, 0.220995941, 0.214671577, 0.232463154  /
      data a7 / 6.222079151, 6.393254173, 6.177291568, 6.114401188, 6.353461281  /
      data a8 / 0.006308985, 0.004963986, 0.007864319, 0.008599691, 0.007901766  /
      data a9 / 0.853827962, 0.791949454, 0.622792362, 0.509051162, 0.383062867  /

C Find the requested spectral period and corresponding coefficients
      nPer = 5
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         a0T      = a0(1)
         a1T      = a1(1)
         a2T      = a2(1)
         a3T      = a3(1)
         a4T      = a4(1)
         a5T      = a5(1)
         a6T      = a6(1)
         a7T      = a7(1)
         a8T      = a8(1)
         a9T      = a9(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'PVNGS Common Model005 Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),a0(count1),a0(count2),
     +             specT,a0T,iflag)
      call interp (period(count1),period(count2),a1(count1),a1(count2),
     +             specT,a1T,iflag)
      call interp (period(count1),period(count2),a2(count1),a2(count2),
     +             specT,a2T,iflag)
      call interp (period(count1),period(count2),a3(count1),a3(count2),
     +             specT,a3T,iflag)
      call interp (period(count1),period(count2),a4(count1),a4(count2),
     +             specT,a4T,iflag)
      call interp (period(count1),period(count2),a5(count1),a5(count2),
     +             specT,a5T,iflag)
      call interp (period(count1),period(count2),a6(count1),a6(count2),
     +             specT,a6T,iflag)
      call interp (period(count1),period(count2),a7(count1),a7(count2),
     +             specT,a7T,iflag)
      call interp (period(count1),period(count2),a8(count1),a8(count2),
     +             specT,a8T,iflag)
      call interp (period(count1),period(count2),a9(count1),a9(count2),
     +             specT,a9T,iflag)

 1011 period1 = specT

C     Set Constant Terms
      Mref1 = 5.5
      Mref2 = 6.5

C     Compute the ground motion for the given spectral period.
      if (M .lt. Mref1) then
         lnY = a0T - a4T*(8.5-Mref1)**2.0 + a2T*(M-Mref1) + a1T*(Mref1-Mref2) + a8T*Rjb
     1             + (a5T+a6T*(Mref1-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      elseif (M .ge. Mref2) then
         lnY = a0T - a4T*(8.5-M)**2.0     + a3T*(M-Mref2)                     + a8T*Rjb
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      else
         lnY = a0T - a4T*(8.5-M)**2.0     + a1T*(M-Mref2)                     + a8T*Rjb
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      endif

C     Add Ztor term
      lnY = lnY + (a9T*ztor)/20.0

      sigma = 0.65

C     Convert ground motion to units of gals in natural log units.
      lnY = lnY + 4.6052

      period2 = period1

      return
      end

c----------------------------------------------------------------------
      Subroutine PVNGS_Common006 ( m, Rjb, ztor, specT, lnY, sigma, iflag )

      parameter (MAXPER=5)

      REAL Period(MAXPER), a0(MAXPER), a1(MAXPER), a2(MAXPER), a3(MAXPER)
      REAL a4(MAXPER), a5(MAXPER), a6(MAXPER), a7(MAXPER), a8(MAXPER), a9(MAXPER)
      real Mref1, MRef2, Rjb, Ztor
      REAL M, specT, sigma
      REAL period2, lnY
      integer iflag, count1, count2

      data period / 0.01, 0.2, 0.5, 1.0, 2.0 /
      data a0 / 4.86597378, 6.144703681, 5.121782642, 4.387039752, 3.546300844  /
      data a1 / -0.273088209, -0.63407702, -0.57547517, -1.041151272, -1.146959743  /
      data a2 / 0.933580946, 0.971192248, 1.407326375, 1.760001089, 2.024389433  /
      data a3 / -0.432606019, -0.69651455, -0.686341995, -1.028830191, -1.126268348  /
      data a4 / 0.003161612, 0.078029949, 0.139172231, 0.295446332, 0.373856164  /
      data a5 / -1.72560986, -1.804855901, -1.538783528, -1.317089532, -1.217781747  /
      data a6 / 0.337828643, 0.376147478, 0.342958148, 0.345931625, 0.334376914  /
      data a7 / 7.371186735, 7.239836089, 7.415332136, 7.5134082, 7.43850092  /
      data a8 / 0.018197929, 0.005151621, 0.003784379, 0.006872836, 0.008972623  /
      data a9 / 0.659007193, 0.658493883, 0.564530063, 0.481921424, 0.45283348  /

C Find the requested spectral period and corresponding coefficients
      nPer = 5
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         a0T      = a0(1)
         a1T      = a1(1)
         a2T      = a2(1)
         a3T      = a3(1)
         a4T      = a4(1)
         a5T      = a5(1)
         a6T      = a6(1)
         a7T      = a7(1)
         a8T      = a8(1)
         a9T      = a9(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'PVNGS Common Model006 Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),a0(count1),a0(count2),
     +             specT,a0T,iflag)
      call interp (period(count1),period(count2),a1(count1),a1(count2),
     +             specT,a1T,iflag)
      call interp (period(count1),period(count2),a2(count1),a2(count2),
     +             specT,a2T,iflag)
      call interp (period(count1),period(count2),a3(count1),a3(count2),
     +             specT,a3T,iflag)
      call interp (period(count1),period(count2),a4(count1),a4(count2),
     +             specT,a4T,iflag)
      call interp (period(count1),period(count2),a5(count1),a5(count2),
     +             specT,a5T,iflag)
      call interp (period(count1),period(count2),a6(count1),a6(count2),
     +             specT,a6T,iflag)
      call interp (period(count1),period(count2),a7(count1),a7(count2),
     +             specT,a7T,iflag)
      call interp (period(count1),period(count2),a8(count1),a8(count2),
     +             specT,a8T,iflag)
      call interp (period(count1),period(count2),a9(count1),a9(count2),
     +             specT,a9T,iflag)

 1011 period1 = specT

C     Set Constant Terms
      Mref1 = 5.5
      Mref2 = 6.5

C     Compute the ground motion for the given spectral period.
      if (M .lt. Mref1) then
         lnY = a0T - a4T*(8.5-Mref1)**2.0 + a2T*(M-Mref1) + a1T*(Mref1-Mref2) + a8T*Rjb
     1             + (a5T+a6T*(Mref1-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      elseif (M .ge. Mref2) then
         lnY = a0T - a4T*(8.5-M)**2.0     + a3T*(M-Mref2)                     + a8T*Rjb
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      else
         lnY = a0T - a4T*(8.5-M)**2.0     + a1T*(M-Mref2)                     + a8T*Rjb
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      endif

C     Add Ztor term
      lnY = lnY + (a9T*ztor)/20.0

      sigma = 0.65

C     Convert ground motion to units of gals in natural log units.
      lnY = lnY + 4.6052

      period2 = period1

      return
      end

c----------------------------------------------------------------------
      Subroutine PVNGS_Common007 ( m, Rjb, ztor, specT, lnY, sigma, iflag )

      parameter (MAXPER=5)

      REAL Period(MAXPER), a0(MAXPER), a1(MAXPER), a2(MAXPER), a3(MAXPER)
      REAL a4(MAXPER), a5(MAXPER), a6(MAXPER), a7(MAXPER), a8(MAXPER), a9(MAXPER)
      real Mref1, MRef2, Rjb, Ztor
      REAL M, specT, sigma
      REAL period2, lnY
      integer iflag, count1, count2

      data period / 0.01, 0.2, 0.5, 1.0, 2.0 /
      data a0 / 4.844064933, 4.219255167, 3.534385513, 2.390354801, 1.425024701  /
      data a1 / -0.013603504, 1.979574394, 1.30292675, 1.497138325, 1.614937219  /
      data a2 / 1.202808487, 1.433566727, 1.740947454, 2.051187409, 2.385760131  /
      data a3 / -0.35672112, 1.183323761, 0.799970466, 0.870581461, 0.817881028  /
      data a4 / 0.062790933, -0.323330263, -0.2067445, -0.202118326, -0.156815452  /
      data a5 / -1.583046448, -1.617499558, -1.355705253, -1.187049421, -1.075971196  /
      data a6 / 0.265085563, 0.209670811, 0.240965815, 0.247088498, 0.284635387  /
      data a7 / 6.825562193, 7.368990249, 6.643172818, 6.268347176, 6.622314026  /
      data a8 / 0.02113002, 0.013027428, 0.016359414, 0.005601114, 0.022644438  /
      data a9 / 1.120855977, 0.984636607, 0.582038379, 0.381242215, 0.172633025  /

C Find the requested spectral period and corresponding coefficients
      nPer = 5
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         a0T      = a0(1)
         a1T      = a1(1)
         a2T      = a2(1)
         a3T      = a3(1)
         a4T      = a4(1)
         a5T      = a5(1)
         a6T      = a6(1)
         a7T      = a7(1)
         a8T      = a8(1)
         a9T      = a9(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'PVNGS Common Model007 Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),a0(count1),a0(count2),
     +             specT,a0T,iflag)
      call interp (period(count1),period(count2),a1(count1),a1(count2),
     +             specT,a1T,iflag)
      call interp (period(count1),period(count2),a2(count1),a2(count2),
     +             specT,a2T,iflag)
      call interp (period(count1),period(count2),a3(count1),a3(count2),
     +             specT,a3T,iflag)
      call interp (period(count1),period(count2),a4(count1),a4(count2),
     +             specT,a4T,iflag)
      call interp (period(count1),period(count2),a5(count1),a5(count2),
     +             specT,a5T,iflag)
      call interp (period(count1),period(count2),a6(count1),a6(count2),
     +             specT,a6T,iflag)
      call interp (period(count1),period(count2),a7(count1),a7(count2),
     +             specT,a7T,iflag)
      call interp (period(count1),period(count2),a8(count1),a8(count2),
     +             specT,a8T,iflag)
      call interp (period(count1),period(count2),a9(count1),a9(count2),
     +             specT,a9T,iflag)

 1011 period1 = specT

C     Set Constant Terms
      Mref1 = 5.5
      Mref2 = 6.5

C     Compute the ground motion for the given spectral period.
      if (M .lt. Mref1) then
         lnY = a0T - a4T*(8.5-Mref1)**2.0 + a2T*(M-Mref1) + a1T*(Mref1-Mref2) + a8T*Rjb
     1             + (a5T+a6T*(Mref1-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      elseif (M .ge. Mref2) then
         lnY = a0T - a4T*(8.5-M)**2.0     + a3T*(M-Mref2)                     + a8T*Rjb
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      else
         lnY = a0T - a4T*(8.5-M)**2.0     + a1T*(M-Mref2)                     + a8T*Rjb
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      endif

C     Add Ztor term
      lnY = lnY + (a9T*ztor)/20.0

      sigma = 0.65

C     Convert ground motion to units of gals in natural log units.
      lnY = lnY + 4.6052

      period2 = period1

      return
      end

c----------------------------------------------------------------------
      Subroutine PVNGS_Common008 ( m, Rjb, ztor, specT, lnY, sigma, iflag )

      parameter (MAXPER=5)

      REAL Period(MAXPER), a0(MAXPER), a1(MAXPER), a2(MAXPER), a3(MAXPER)
      REAL a4(MAXPER), a5(MAXPER), a6(MAXPER), a7(MAXPER), a8(MAXPER), a9(MAXPER)
      real Mref1, MRef2, Rjb, Ztor
      REAL M, specT, sigma
      REAL period2, lnY
      integer iflag, count1, count2

      data period / 0.01, 0.2, 0.5, 1.0, 2.0 /
      data a0 / 5.196560414, 6.3779206, 6.168012597, 5.517927695, 4.200672553  /
      data a1 / -0.958403233, -1.190198693, -1.180296464, -0.679274321, -0.548498253  /
      data a2 / 1.443974775, 1.496178834, 1.850791466, 2.233309216, 2.488066584  /
      data a3 / -0.916984325, -1.007081241, -1.132443605, -0.927758145, -0.977157301  /
      data a4 / 0.144335529, 0.282672806, 0.362298721, 0.349558379, 0.330438663  /
      data a5 / -1.653295478, -1.560264395, -1.579320126, -1.609819791, -1.421728556  /
      data a6 / 0.295382242, 0.176595264, 0.160706414, 0.134372763, 0.184743563  /
      data a7 / 6.458555302, 6.77949456, 6.042271361, 5.885029003, 6.302790569  /
      data a8 / 0.011468897, 0.004122242, 0.01291962, 0.022350743, 0.024469094  /
      data a9 / 0.742172335, 0.639057402, 0.56151272, 0.548360683, 0.431827383  /

C Find the requested spectral period and corresponding coefficients
      nPer = 5
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         a0T      = a0(1)
         a1T      = a1(1)
         a2T      = a2(1)
         a3T      = a3(1)
         a4T      = a4(1)
         a5T      = a5(1)
         a6T      = a6(1)
         a7T      = a7(1)
         a8T      = a8(1)
         a9T      = a9(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'PVNGS Common Model008 Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),a0(count1),a0(count2),
     +             specT,a0T,iflag)
      call interp (period(count1),period(count2),a1(count1),a1(count2),
     +             specT,a1T,iflag)
      call interp (period(count1),period(count2),a2(count1),a2(count2),
     +             specT,a2T,iflag)
      call interp (period(count1),period(count2),a3(count1),a3(count2),
     +             specT,a3T,iflag)
      call interp (period(count1),period(count2),a4(count1),a4(count2),
     +             specT,a4T,iflag)
      call interp (period(count1),period(count2),a5(count1),a5(count2),
     +             specT,a5T,iflag)
      call interp (period(count1),period(count2),a6(count1),a6(count2),
     +             specT,a6T,iflag)
      call interp (period(count1),period(count2),a7(count1),a7(count2),
     +             specT,a7T,iflag)
      call interp (period(count1),period(count2),a8(count1),a8(count2),
     +             specT,a8T,iflag)
      call interp (period(count1),period(count2),a9(count1),a9(count2),
     +             specT,a9T,iflag)

 1011 period1 = specT

C     Set Constant Terms
      Mref1 = 5.5
      Mref2 = 6.5

C     Compute the ground motion for the given spectral period.
      if (M .lt. Mref1) then
         lnY = a0T - a4T*(8.5-Mref1)**2.0 + a2T*(M-Mref1) + a1T*(Mref1-Mref2) + a8T*Rjb
     1             + (a5T+a6T*(Mref1-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      elseif (M .ge. Mref2) then
         lnY = a0T - a4T*(8.5-M)**2.0     + a3T*(M-Mref2)                     + a8T*Rjb
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      else
         lnY = a0T - a4T*(8.5-M)**2.0     + a1T*(M-Mref2)                     + a8T*Rjb
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      endif

C     Add Ztor term
      lnY = lnY + (a9T*ztor)/20.0

      sigma = 0.65

C     Convert ground motion to units of gals in natural log units.
      lnY = lnY + 4.6052

      period2 = period1

      return
      end

c----------------------------------------------------------------------
      Subroutine PVNGS_Common009 ( m, Rjb, ztor, specT, lnY, sigma, iflag )

      parameter (MAXPER=5)

      REAL Period(MAXPER), a0(MAXPER), a1(MAXPER), a2(MAXPER), a3(MAXPER)
      REAL a4(MAXPER), a5(MAXPER), a6(MAXPER), a7(MAXPER), a8(MAXPER), a9(MAXPER)
      real Mref1, MRef2, Rjb, Ztor
      REAL M, specT, sigma
      REAL period2, lnY
      integer iflag, count1, count2

      data period / 0.01, 0.2, 0.5, 1.0, 2.0 /
      data a0 / 5.049167566, 6.676980195, 5.593480621, 4.911257887, 4.152761337  /
      data a1 / -0.379786019, -1.051580715, -0.963016583, -1.687190866, -1.897015157  /
      data a2 / 0.872279072, 0.878938183, 1.402118772, 1.766470995, 2.062788978  /
      data a3 / -0.515217831, -1.07005441, -0.961301327, -1.502136917, -1.645952495  /
      data a4 / 0.016302262, 0.133263985, 0.178512293, 0.384619868, 0.508737639  /
      data a5 / -1.835895612, -1.910217102, -1.627402821, -1.36275724, -1.297798013  /
      data a6 / 0.399850156, 0.419788271, 0.373119179, 0.357938274, 0.332741067  /
      data a7 / 7.807505344, 7.524346005, 7.897750626, 8.092374624, 7.952854135  /
      data a8 / 0.016429565, 0.01295455, 0.008712308, 0.010008655, 0.023976474  /
      data a9 / 0.48894144, 0.554127648, 0.526560212, 0.495922051, 0.562533157  /
C Find the requested spectral period and corresponding coefficients
      nPer = 5
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         a0T      = a0(1)
         a1T      = a1(1)
         a2T      = a2(1)
         a3T      = a3(1)
         a4T      = a4(1)
         a5T      = a5(1)
         a6T      = a6(1)
         a7T      = a7(1)
         a8T      = a8(1)
         a9T      = a9(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'PVNGS Common Model009 Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),a0(count1),a0(count2),
     +             specT,a0T,iflag)
      call interp (period(count1),period(count2),a1(count1),a1(count2),
     +             specT,a1T,iflag)
      call interp (period(count1),period(count2),a2(count1),a2(count2),
     +             specT,a2T,iflag)
      call interp (period(count1),period(count2),a3(count1),a3(count2),
     +             specT,a3T,iflag)
      call interp (period(count1),period(count2),a4(count1),a4(count2),
     +             specT,a4T,iflag)
      call interp (period(count1),period(count2),a5(count1),a5(count2),
     +             specT,a5T,iflag)
      call interp (period(count1),period(count2),a6(count1),a6(count2),
     +             specT,a6T,iflag)
      call interp (period(count1),period(count2),a7(count1),a7(count2),
     +             specT,a7T,iflag)
      call interp (period(count1),period(count2),a8(count1),a8(count2),
     +             specT,a8T,iflag)
      call interp (period(count1),period(count2),a9(count1),a9(count2),
     +             specT,a9T,iflag)

 1011 period1 = specT

C     Set Constant Terms
      Mref1 = 5.5
      Mref2 = 6.5

C     Compute the ground motion for the given spectral period.
      if (M .lt. Mref1) then
         lnY = a0T - a4T*(8.5-Mref1)**2.0 + a2T*(M-Mref1) + a1T*(Mref1-Mref2) + a8T*Rjb
     1             + (a5T+a6T*(Mref1-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      elseif (M .ge. Mref2) then
         lnY = a0T - a4T*(8.5-M)**2.0     + a3T*(M-Mref2)                     + a8T*Rjb
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      else
         lnY = a0T - a4T*(8.5-M)**2.0     + a1T*(M-Mref2)                     + a8T*Rjb
     1             + (a5T+a6T*(M-Mref2))*alog(sqrt(a7T*a7T+Rjb*Rjb))
      endif

C     Add Ztor term
      lnY = lnY + (a9T*ztor)/20.0

      sigma = 0.65

C     Convert ground motion to units of gals in natural log units.
      lnY = lnY + 4.6052

      period2 = period1

      return
      end



c----------------------------------------------------------------------
C     SWUS Common Functional Model as a function of Rrup distance.
C     Coefficients are passed from input file and are only applicable for
C     the spectral period specified in the input file.

      Subroutine SWUS_CFRrup ( m, Rrup, Rjb, ztor, ftype, dip, Width, Rx, HWFlag,
     1                   specT, lnY, sigma, iflag, cfcoefrrup, coefcountRrup, phi, tau )

      include 'pfrisk.h'

      REAL a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10
      real cfcoefRrup(MAX_Atten,11)
      REAL M, specT, sigma, Rrup, Ztor, lnY, termmag, ftype
      real Rjb, dip, Width, Rx, HWFactor, phi, tau
      integer iflag, coefcountRrup, HWFlag

C     Set the Coefficients.
      a0 = cfcoefRrup(coefcountRrup,1)
      a1 = cfcoefRrup(coefcountRrup,2)
      a2 = cfcoefRrup(coefcountRrup,3)
      a3 = cfcoefRrup(coefcountRrup,4)
      a4 = cfcoefRrup(coefcountRrup,5)
      a5 = cfcoefRrup(coefcountRrup,6)
      a6 = cfcoefRrup(coefcountRrup,7)
      a7 = cfcoefRrup(coefcountRrup,8)
      a8 = cfcoefRrup(coefcountRrup,9)
      a9 = cfcoefRrup(coefcountRrup,10)
      a10 = cfcoefRrup(coefcountRrup,11)

C     Compute the ground motion.
C     First compute magnitude scaling.
      if (m .lt. 5.5) then
         termmag = a1*(5.5-6.5) + a2*(m-5.5)
      elseif (m .ge. 6.5) then
         termmag = a3*(m-6.5)
      else
         termmag = a1*(m-6.5)
      endif

C     Compute the Hanging Wall term if needed.
      if (HWFlag .eq. 1) then
         call SWUS_HWModel (M, Rrup, Rjb, Rx, Dip, Width, a10, ztor, specT, HWfactor)
      else
         HWFactor = 0.0
      endif

      lnY = a0 - a7*a7*Rrup + a8*a8*Ztor + a9*a9*ftype + (a4 + a5*(m-5.0))*alog(sqrt(Rrup*Rrup+a6*a6)) +
     1       termmag + HWFactor

C     Fixed assigned sigma values.
      phi = 0.54
      tau = 0.36
      sigma = 0.65

C     Convert ground motion to units of gals in natural log units.
      lnY = lnY + 6.89
      iflag = 0

      return
      end


c----------------------------------------------------------------------
C     SWUS Common Functional Model as a function of Rjb distance.
C     Coefficients are passed from input file and are only applicable for
C     the spectral period specified in the input file.

      Subroutine SWUS_CFRjb ( m, Rrup, Rjb, ztor, ftype, dip, Width, Rx, HWFlag,
     1                   specT, lnY, sigma, iflag, cfcoefrjb, coefcountRjb, phi, tau )

      include 'pfrisk.h'

      REAL a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10
      real cfcoefRjb(MAX_ATTEN,11)
      REAL M, specT, sigma, Rrup, Ztor, lnY, termmag, ftype
      real Rjb, dip, Width, Rx, HWFactor
      integer iflag, coefcountRjb, HWFlag

C     Set the Coefficients.
      a0 = cfcoefRjb(coefcountRjb,1)
      a1 = cfcoefRjb(coefcountRjb,2)
      a2 = cfcoefRjb(coefcountRjb,3)
      a3 = cfcoefRjb(coefcountRjb,4)
      a4 = cfcoefRjb(coefcountRjb,5)
      a5 = cfcoefRjb(coefcountRjb,6)
      a6 = cfcoefRjb(coefcountRjb,7)
      a7 = cfcoefRjb(coefcountRjb,8)
      a8 = cfcoefRjb(coefcountRjb,9)
      a9 = cfcoefRjb(coefcountRjb,10)
      a10 = cfcoefRjb(coefcountRjb,11)

C     Compute the ground motion.
C     First compute magnitude scaling.
      if (m .lt. 5.5) then
         termmag = a1*(5.5-6.5) + a2*(m-5.5)
      elseif (m .ge. 6.5) then
         termmag = a3*(m-6.5)
      else
         termmag = a1*(m-6.5)
      endif

C     Compute the Hanging Wall term if needed.
      if (HWFlag .eq. 1) then
         call SWUS_HWModel (M, Rrup, Rjb, Rx, Dip, Width, a10, ztor, specT, HWfactor)
      else
         HWFactor = 0.0
      endif

      lnY = a0 - a7*a7*Rjb + a8*a8*Ztor + a9*a9*ftype + (a4 + a5*(m-5.0))*alog(sqrt(Rjb*Rjb+a6*a6)) +
     1       termmag + HWFactor
C     Fixed assigned sigma value.
      phi = 0.54
      tau = 0.36
      sigma = 0.65

C     Convert ground motion to units of gals in natural log units.
      lnY = lnY + 6.89
      iflag = 0

      return
      end

c----------------------------------------------------------------------
      Subroutine SWUS_HWModel ( m, Rrup, Rjb, Rx, Dip, Width, a10, ztor, specT, HWFactor )

      parameter (MAXPER=22)

      REAL Period(MAXPER), c11(MAXPER), c12(MAXPER), c13(MAXPER), c14(MAXPER), c15(MAXPER)
      REAL c2(MAXPER), c3(MAXPER), c4(MAXPER)
      real M, Rrup, Rjb, Rx, Dip, Width, specT, HWFactor, period1, ztor
      real c11T, c12T, c13T, c14T, c15T, c2T, c3T, c4T, a10, magtaper, disttaper, ztorTaper
      integer count1, count2

      data Period  /  0, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25, 0.3, 0.4,
     1         0.5, 0.75, 1, 1.5, 2, 3, 4, 5, 7.5, 10  /
      data c11  /  0.868, 0.868, 0.867, 0.856, 0.84, 0.857, 0.848, 0.868, 0.85, 0.868, 0.839,
     1         0.78, 0.741, 0.613, 0.621, 0.506, 0.391, 0.128, 0, 0, 0, 0  /
      data c12  /  0.982, 0.982, 0.987, 0.997, 1.027, 1.041, 1.04, 1.009, 1.005, 0.985, 0.974,
     1         0.934, 0.902, 0.869, 0.788, 0.662, 0.537, 0.245, 0.034, 0, 0, 0  /
      data c13  /  1.038, 1.038, 1.046, 1.067, 1.121, 1.133, 1.135, 1.08, 1.082, 1.044, 1.041,
     1         1.011, 0.982, 0.997, 0.872, 0.74, 0.609, 0.304, 0.088, 0, 0, 0  /
      data c14  /  1.095, 1.095, 1.106, 1.138, 1.215, 1.226, 1.231, 1.15, 1.16, 1.102, 1.108,
     1         1.089, 1.063, 1.125, 0.955, 0.818, 0.682, 0.362, 0.138, 0, 0, 0  /
      data c15  /  1.209, 1.209, 1.226, 1.278, 1.402, 1.41, 1.422, 1.292, 1.315, 1.219, 1.242,
     1         1.243, 1.223, 1.38, 1.123, 0.974, 0.828, 0.48, 0.231, 0.04, 0, 0  /
      data c2  /  0.216, 0.216, 0.2172, 0.2178, 0.2199, 0.2218, 0.2213, 0.2169, 0.2131, 0.1988,
     1         0.2019, 0.209, 0.2053, 0.1713, 0.1571, 0.1559, 0.1559, 0.1616, 0.1616, 0.1616,
     1         0.1616, 0.1616  /
      data c3  /  2.0289, 2.0289, 2.026, 2.0163, 1.987, 1.9906, 1.9974, 2.0162, 1.9746, 1.9931,
     1         2.0179, 2.0249, 2.0041, 1.8697, 1.8526, 1.8336, 1.7996, 1.674, 1.674, 1.674,
     1         1.674, 1.674  /
      data c4  /  0.1675, 0.1675, 0.1666, 0.167, 0.1699, 0.1817, 0.1717, 0.1814, 0.1834,
     1         0.1767, 0.1658, 0.1624, 0.1719, 0.1866, 0.3143, 0.3195, 0.3246, 0.3314, 0.3314,
     1         0.3314, 0.3314, 0.3314  /

C Find the requested spectral period and corresponding coefficients
      nPer = 22
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         c11T      = c11(1)
         c12T      = c12(1)
         c13T      = c13(1)
         c14T      = c14(1)
         c15T      = c15(1)
         c2T       = c2(1)
         c3T       = c3(1)
         c4T       = c4(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the SWUS Hanging Wall Model.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'SWUS Hanging Wall Model'
C      write (*,*) 'is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c11(count1),c11(count2),
     +             specT,c11T,iflag)
      call interp (period(count1),period(count2),c12(count1),c12(count2),
     +             specT,c12T,iflag)
      call interp (period(count1),period(count2),c13(count1),c13(count2),
     +             specT,c13T,iflag)
      call interp (period(count1),period(count2),c14(count1),c14(count2),
     +             specT,c14T,iflag)
      call interp (period(count1),period(count2),c14(count1),c15(count2),
     +             specT,c15T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)

 1011 period1 = specT

C     Compute the Hanging Wall Factor.
C     First set the C1 term based on the a10 coefficient
      if (a10 .eq. 1.0) then
         c1 = c11T
      elseif (a10 .eq. 2.0) then
         c1 = c12T
      elseif (a10 .eq. 3.0) then
         c1 = c13T
      elseif (a10 .eq. 4.0) then
         c1 = c14T
      elseif (a10 .eq. 5.0) then
         c1 = c15T
      else
         HWFactor = 0.0
         return
      endif

C     Compute HW Factor.
      magtaper = (1.0 + c4T*(M-7.0))
      disttaper = (1.0 - Rjb/(Rrup+0.1))
      ztortaper = max(0.0,1.0-ztor/12.0)

      HWFactor = c1*cos(dip*3.14159/180.0) * (c2T + (1.0 - c2T)*tanh(c3T*Rx/(width*cos(dip*3.14159/180.0)))) *
     1        magtaper * disttaper * ztorTaper

      return
      end
















C Spectral Attenuation Model Period Subroutine
C     This subroutine will return the array of
C     spectral periods fo the computation of
C     deterministic spectra.

      subroutine attenper ( jcalc, anper, minaper, maxaper )

      include 'pfrisk.h'
      real minaper, maxaper
      integer jcalc, anper

c     Set number of attenuation spectral periods to -99 for
c     checking of valid jcalc values.
      anper = -99

C ******* PEER NGA West 2 GMPE Models *********

c ******* Idriss (NGA West2 2013) *********
C     Idriss (NGA West2 2013) - Horizontal
C     Model Number = 2910
      if ( jcalc .eq. 2910 ) then
         anper = 23
         minaper = 0.01
         maxaper = 10.0
       endif

c ******* BSSA (NGA West2 2013) *********
C     Boore, Stewart, Seyhan and Atkinson (NGA West2 2013) - Horizontal
C        DeltaC3 Global adjustment model, No Basin Adjustment
C     Model Number = 2922
      if ( jcalc .eq. 2922 ) then
         anper = 107
         minaper = 0.01
         maxaper = 10.0
       endif

c ******* BSSA (NGA West2 2013) *********
C     Boore, Stewart, Seyhan and Atkinson (NGA West2 2013) - Horizontal
C        DeltaC3 China-Turkey adjustment model, No Basin Adjustment
C     Model Number = 2923
      if ( jcalc .eq. 2923 ) then
         anper = 107
         minaper = 0.01
         maxaper = 10.0
       endif

c ******* BSSA (NGA West2 2013) *********
C     Boore, Stewart, Seyhan and Atkinson (NGA West2 2013) - Horizontal
C        DeltaC3 Itatly-Japan adjustment model, No Basin Adjustment
C     Model Number = 2924
      if ( jcalc .eq. 2924 ) then
         anper = 107
         minaper = 0.01
         maxaper = 10.0
       endif
c ******* BSSA (NGA West2 2013) *********
C     Boore, Stewart, Seyhan and Atkinson (NGA West2 2013) - Horizontal
C        DeltaC3 Global adjustment model, Basin Adjustment
C     Model Number = 2925
      if ( jcalc .eq. 2925 ) then
         anper = 107
         minaper = 0.01
         maxaper = 10.0
       endif

c ******* BSSA (NGA West2 2013) *********
C     Boore, Stewart, Seyhan and Atkinson (NGA West2 2013) - Horizontal
C        DeltaC3 China-Turkey adjustment model, Basin Adjustment
C     Model Number = 2926
      if ( jcalc .eq. 2926 ) then
         anper = 107
         minaper = 0.01
         maxaper = 10.0
       endif

c ******* BSSA (NGA West2 2013) *********
C     Boore, Stewart, Seyhan and Atkinson (NGA West2 2013) - Horizontal
C        DeltaC3 Itatly-Japan adjustment model, Basin Adjustment
C     Model Number = 2927
      if ( jcalc .eq. 2927 ) then
         anper = 107
         minaper = 0.01
         maxaper = 10.0
       endif

c ******* Abrahamson, Silva, and Kamai (NGA West2 2013) *********
C     Abrahamson, Silva, and Kamai (NGA West2 2013) - Horizontal
C        Same spectral periods for all variations of the GMPE model
C     Model Number = 2787 - 2794
      if ( jcalc .ge. 2787 .and. jcalc .le. 2794 ) then
         anper = 24
         minaper = 0.01
         maxaper = 10.0
       endif
C     Model Number = 3787 - 3794
      if ( jcalc .ge. 3787 .and. jcalc .le. 3794 ) then
         anper = 24
         minaper = 0.01
         maxaper = 10.0
       endif

c ******* Campbell and Bozorgnia (NGA West2 2013) *********
C     Campbell and Bozorgnia (NGA West2 2013) - Horizontal, California
C     Model Number = 2836
      if ( jcalc .eq. 2836 ) then
         anper = 23
         minaper = 0.01
         maxaper = 10.0
       endif

c ******* Campbell and Bozorgnia (NGA West2 2013) *********
C     Campbell and Bozorgnia (NGA West2 2013) - Horizontal, Japan
C     Model Number = 2837
      if ( jcalc .eq. 2837 ) then
         anper = 23
         minaper = 0.01
         maxaper = 10.0
       endif
c ******* Campbell and Bozorgnia (NGA West2 2013) *********
C     Campbell and Bozorgnia (NGA West2 2013) - Horizontal, China
C     Model Number = 2838
      if ( jcalc .eq. 2838 ) then
         anper = 23
         minaper = 0.01
         maxaper = 10.0
       endif
c ******* Campbell and Bozorgnia (NGA West2 2013) *********
C     Campbell and Bozorgnia (NGA West2 2013) - Horizontal, Italy
C     Model Number = 2839
      if ( jcalc .eq. 2839 ) then
         anper = 23
         minaper = 0.01
         maxaper = 10.0
       endif

c ******* Chiou and Youngs (NGA West2 2013) *********
C     Chiou and Youngs (NGA West2 2013) - Horizontal
C     Model Number = 2797
      if ( jcalc .eq. 2797 ) then
         anper = 25
         minaper = 0.01
         maxaper = 10.0
       endif
C     Model Number = 2798
      if ( jcalc .eq. 2798 ) then
         anper = 25
         minaper = 0.01
         maxaper = 10.0
       endif

C     Chiou and Youngs (NGA West2 2013) - Horizontal, Japan/Italy Adjustment
C     Model Number = 2799
      if ( jcalc .eq. 2799 ) then
         anper = 25
         minaper = 0.01
         maxaper = 10.0
       endif
C     Model Number = 2800
      if ( jcalc .eq. 2800 ) then
         anper = 25
         minaper = 0.01
         maxaper = 10.0
       endif

C     Chiou and Youngs (NGA West2 2013) - Horizontal, Wenchaun Adjustment
C     Model Number = 2801
      if ( jcalc .eq. 2801 ) then
         anper = 25
         minaper = 0.01
         maxaper = 10.0
       endif
C     Model Number = 2802
      if ( jcalc .eq. 2802 ) then
         anper = 25
         minaper = 0.01
         maxaper = 10.0
       endif


C *** NGA West2 Vertical GMPEs *****
c ******* Gulrce, Kamai, Abrahamson and Silva (NGA West2 2013) *********
C     Gulrce, Kamai, Abrahamson and Silva (NGA West2 2013) - Vertical
C        Same spectral periods for all variations of the GMPE model
C     Model Number = 4787
      if ( jcalc .ge. 4787 ) then
         anper = 24
         minaper = 0.01
         maxaper = 10.0
       endif
C     Model Number = 4788
      if ( jcalc .ge. 4788 ) then
         anper = 24
         minaper = 0.01
         maxaper = 10.0
       endif

c ******* Gulrce, Kamai, Abrahamson and Silva (NGA West2 2013) *********
C     Gulrce, Kamai, Abrahamson and Silva (NGA West2 2013) - V/H Ratip
C        Same spectral periods for all variations of the GMPE model
C     Model Number = 6787
      if ( jcalc .ge. 6787 ) then
         anper = 24
         minaper = 0.01
         maxaper = 10.0
       endif
C     Model Number = 6788
      if ( jcalc .ge. 6788 ) then
         anper = 24
         minaper = 0.01
         maxaper = 10.0
       endif


c ******* SSBA (NGA West2 2013) *********
C     Stewart, Seyhan, Boore, and Atkinson (NGA West2 2013) - Vertical
C        DeltaC3 Global adjustment model, No Basin Adjustment
C     Model Number = 4922
      if ( jcalc .eq. 4922 ) then
         anper = 107
         minaper = 0.01
         maxaper = 10.0
       endif

c ******* SSBA (NGA West2 2013) *********
C     Stewart, Seyhan, Boore, and Atkinson (NGA West2 2013) - V/H Ratio
C        DeltaC3 Global adjustment model, No Basin Adjustment
C     Model Number = 6922
      if ( jcalc .eq. 6922 ) then
         anper = 107
         minaper = 0.01
         maxaper = 10.0
       endif



c ******* Bozorgnia and Campbell (NGA West2 2013) *********
C     Bozorgnia and Campbell (NGA West2 2013) - Vertical, California
C     Model Number = 4836
      if ( jcalc .eq. 4836 ) then
         anper = 23
         minaper = 0.01
         maxaper = 10.0
       endif
C     Model Number = 4837
      if ( jcalc .eq. 4837 ) then
         anper = 19
         minaper = 0.01
         maxaper = 3.0
       endif

C     Bozorgnia and Campbell (NGA West2 2013) - V/H Ratio, California
C     Model Number = 6836
      if ( jcalc .eq. 6836 ) then
         anper = 23
         minaper = 0.01
         maxaper = 10.0
       endif
C     Model Number = 6837
      if ( jcalc .eq. 6837 ) then
         anper = 23
         minaper = 0.01
         maxaper = 10.0
       endif

c ******* Chiou and Youngs (NGA West2 2013) *********
C     Chiou and Youngs (NGA West2 2013) - Vertical
C     Model Number = 4797
      if ( jcalc .eq. 4797 ) then
         anper = 25
         minaper = 0.01
         maxaper = 10.0
       endif
C     Model Number = 4798
      if ( jcalc .eq. 4798 ) then
         anper = 25
         minaper = 0.01
         maxaper = 10.0
       endif

c ******* Chiou and Youngs (NGA West2 2013) *********
C     Chiou and Youngs (NGA West2 2013) - V/H Ratio
C     Model Number = 6797
      if ( jcalc .eq. 6797 ) then
         anper = 25
         minaper = 0.01
         maxaper = 10.0
       endif
C     Model Number = 6798
      if ( jcalc .eq. 6798 ) then
         anper = 25
         minaper = 0.01
         maxaper = 10.0
       endif







C ******* PEER NGA 2008 Attenuation Models ****
c ******* Abrahamson and Silva Models *********
C     Abrahamson&Silva 072007 Model - horizontal, No Soil Depth, Estimated Vs30m
C     Model Number = 787
      if ( jcalc .eq. 787 ) then
         anper = 105
         minaper = 0.01
         maxaper = 10.0
c         call AS_NGA_2008 ( mag, dip, ftype, AR, rupDist, jbdist,
c     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag, vs30_Class, srcSiteA  )
      endif

C     Abrahamson&Silva 072007 Model - horizontal, No Soil Depth, Measured Vs30m
C     Model Number = 788
      if ( jcalc .eq. 788 ) then
         anper = 105
         minaper = 0.01
         maxaper = 10.0
c         call AS_NGA_2008 ( mag, dip, ftype, AR, rupDist, jbdist,
c     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag, vs30_Class, srcSiteA  )
      endif

c ******* Chiou and Youngs Model *********
C     Chiou and Youngs November 2007 - Horizontal, estimated Vs30m
C     Model Number = 797
c
      if ( jcalc .eq. 797 ) then
          anper = 105
          minaper = 0.01
          maxaper = 10.0
c         vs30_class = 0
c         call CY_NGA_2008 ( mag, rupDist, jbdist, specT,
c     1                     period2, lnY, sigma, iflag,
c     2                     vs, dip1(1), Depthtop, Ftype,
c     3                     depthvs10, vs30_class, hwflag, srcsiteA )
c         attenname1 = 'Chiou&Youngs(11-07)-Hor,Estimated Vs30m'
       endif

c ******* Chiou and Youngs Model *********
C     Chiou and Youngs November 2007 - Horizontal, measured Vs30m
C     Model Number = 798
c
      if ( jcalc .eq. 798 ) then
          anper = 105
          minaper = 0.01
          maxaper = 10.0
c         vs30_class = 1
c         call CY_NGA_2008 ( mag, rupDist, jbdist, specT,
c     1                     period2, lnY, sigma, iflag,
c     2                     vs, dip1(1), Depthtop, Ftype,
c     3                     depthvs10, vs30_class, hwflag, srcsiteA )
c         attenname1 = 'Chiou&Youngs(11-07)-Hor,Measured Vs30m'
       endif

c ******* Chiou and Youngs Model *********
C     Chiou and Youngs November 2007 - Horizontal, estimated Vs30m
C     Southern California Small Magnitude Model
C     Model Number = 799
c
      if ( jcalc .eq. 799 ) then
          anper = 105
          minaper = 0.01
          maxaper = 10.0
c         vs30_class = 0
c         call CY_NGA_2008SC ( mag, rupDist, jbdist, specT,
c     1                     period2, lnY, sigma, iflag,
c     2                     vs, dip1(1), Depthtop, Ftype,
c     3                     depthvs10, vs30_class, hwflag, srcsiteA )
c         attenname1 = 'Chiou&Youngs(11-07)-Hor,Estimated Vs30m,SCal SMM'
       endif

c ******* Chiou and Youngs Model *********
C     Chiou and Youngs November 2007 - Horizontal, measured Vs30m
C     Southern California Small Magnitude Model
C     Model Number = 800
c
      if ( jcalc .eq. 800 ) then
          anper = 105
          minaper = 0.01
          maxaper = 10.0
c         vs30_class = 1
c         call CY_NGA_2008SC ( mag, rupDist, jbdist, specT,
c     1                     period2, lnY, sigma, iflag,
c     2                     vs, dip1(1), Depthtop, Ftype,
c     3                     depthvs10, vs30_class, hwflag, srcsiteA )
c         attenname1 = 'Chiou&Youngs(11-07)-Hor,Measured Vs30m,SCal SMM'
       endif

c ******* Chiou and Youngs Model *********
C     Chiou and Youngs November 2007 - Horizontal, estimated Vs30m
C     Central California Small Magnitude Model
C     Model Number = 801
c
      if ( jcalc .eq. 801 ) then
          anper = 105
          minaper = 0.01
          maxaper = 10.0
c         vs30_class = 0
c         call CY_NGA_2008CC ( mag, rupDist, jbdist, specT,
c     1                     period2, lnY, sigma, iflag,
c     2                     vs, dip1(1), Depthtop, Ftype,
c     3                     depthvs10, vs30_class, hwflag, srcsiteA )
c         attenname1 = 'Chiou&Youngs(11-07)-Hor,Estimated Vs30m,CCal SMM'
       endif

c ******* Chiou and Youngs Model *********
C     Chiou and Youngs November 2007 - Horizontal, measured Vs30m
C     Central California Small Magnitude Model
C     Model Number = 802
c
      if ( jcalc .eq. 802 ) then
          anper = 105
          minaper = 0.01
          maxaper = 10.0
c         vs30_class = 1
c         call CY_NGA_2008CC ( mag, rupDist, jbdist, specT,
c     1                     period2, lnY, sigma, iflag,
c     2                     vs, dip1(1), Depthtop, Ftype,
c     3                     depthvs10, vs30_class, hwflag, srcsiteA )
c         attenname1 = 'Chiou&Youngs(11-07)-Hor,Measured Vs30m,CCal SMM'
       endif


C     Campbell and Bozorgnia May 2007 - horizontal
C     Model Number = 836
      if ( jcalc .eq. 836 ) then
         anper = 21
         minaper = 0.01
         maxaper = 10.0
c         call CB_NGA_2008 ( mag, rupdist, jbdist, ftype, specT,
c     1                    period2, lnY, sigma, iflag, vs,
c     2                    depthTop, D25, dip1(1) )
       endif

c ******* Idriss (June 2010) *********
C     Idriss June 2010 - Horizontal, Vs=540-900 m/sec and Vs>900m/sec
C     Model Number = 910
      if ( jcalc .eq. 910 ) then
         anper = 32
         minaper = 0.01
         maxaper = 10.0
       endif

c ******* Boore and Atkinson (July 2007) *********
C     Boore and Atkinson July 2007 - horizontal
C     Model Number = 922
      if ( jcalc .eq. 922 ) then
         anper = 21
         minaper = 0.01
         maxaper = 10.0
c         call BA_NGA_2008 ( mag, jbdist, specT,
c     1                    period2, lnY, sigma, iflag, vs, ftype, pga4nl )
       endif

c ******* Boore and Atkinson (July 2007/2010) *********
C     Boore and Atkinson July 2007 - horizontal with small magnitude adjustment (Atkinson, 2010)
C     Model Number = 923
      if ( jcalc .eq. 923 ) then
         anper = 21
         minaper = 0.01
         maxaper = 10.0
c         call BA_NGA_2008 ( mag, jbdist, specT,
c     1                    period2, lnY, sigma, iflag, vs, ftype, pga4nl )
       endif

C ******* End of PEER NGA 2008 Attenuation Models ****

C     Campbell and Bozorgnia (2003), Horizontal, Firm Soil, SS and Reverse
C     Model Number = 070
      if ( jcalc .eq. 70 ) then
         anper = 15
         minaper = 0.05
         maxaper = 4.0
c         call Camp03_H ( mag, seismoDist, jbDist, lnY, sigma,
c     1        specT, period2, s03vfs, s03sr, s03fr, frv, fth, hwflag,
c     2        iflag)
      endif

C     Campbell and Bozorgnia (2003), Horizontal, Very Firm Soil, SS and Reverse
C     Model Number = 071
      if ( jcalc .eq. 71 ) then
         anper = 15
         minaper = 0.05
         maxaper = 4.0
c         call Camp03_H ( mag, seismoDist, jbDist, lnY, sigma,
c     1        specT, period2, s03vfs, s03sr, s03fr, frv, fth, hwflag,
c     2        iflag)
      endif

C     Campbell and Bozorgnia (2003), Horizontal, Soft Rock, SS and Reverse
C     Model Number = 072
      if ( jcalc .eq. 72 ) then
         anper = 15
         minaper = 0.05
         maxaper = 4.0
c         call Camp03_H ( mag, seismoDist, jbDist, lnY, sigma,
c     1        specT, period2, s03vfs, s03sr, s03fr, frv, fth, hwflag,
c     2        iflag)
      endif

C     Campbell and Bozorgnia (2003), Horizontal, Firm Rock, SS and Reverse
C     Model Number = 073
      if ( jcalc .eq. 73 ) then
         anper = 15
         minaper = 0.05
         maxaper = 4.0
c         call Camp03_H ( mag, seismoDist, jbDist, lnY, sigma,
c     1        specT, period2, s03vfs, s03sr, s03fr, frv, fth, hwflag,
c     2        iflag)
      endif

C     Campbell and Bozorgnia (2003), Horizontal, Generic Rock, SS and Reverse
C     Model Number = 074
      if ( jcalc .eq. 74 ) then
         anper = 15
         minaper = 0.05
         maxaper = 4.0
c         call Camp03_H ( mag, seismoDist, jbDist, lnY, sigma,
c     1        specT, period2, s03vfs, s03sr, s03fr, frv, fth, hwflag,
c     2        iflag)
      endif

C     Campbell and Bozorgnia (2003), Horizontal, Generic Soil, SS and Reverse
C     Model Number = 075
      if ( jcalc .eq. 75 ) then
         anper = 15
         minaper = 0.05
         maxaper = 4.0
c         call Camp03_H ( mag, seismoDist, jbDist, lnY, sigma,
c     1        specT, period2, s03vfs, s03sr, s03fr, frv, fth, hwflag,
c     2        iflag)
      endif

C     Campbell and Bozorgnia (2003), Vertical, Firm Soil, SS and Reverse
C     Model Number = 076
      if ( jcalc .eq. 76 ) then
         anper = 15
         minaper = 0.05
         maxaper = 4.0
c         call Camp03_V ( mag, seismoDist, jbDist, lnY, sigma,
c     1        specT, period2, s03vfs, s03sr, s03fr, frv, fth, hwflag,
c     2        iflag)
      endif

C     Campbell and Bozorgnia (2003), Vertical, Very Firm Soil, SS and Reverse
C     Model Number = 077
      if ( jcalc .eq. 77 ) then
         anper = 15
         minaper = 0.05
         maxaper = 4.0
c         call Camp03_V ( mag, seismoDist, jbDist, lnY, sigma,
c     1        specT, period2, s03vfs, s03sr, s03fr, frv, fth, hwflag,
c     2        iflag)
      endif

C     Campbell and Bozorgnia (2003), Vertical, Soft Rock, SS and Reverse
C     Model Number = 078
      if ( jcalc .eq. 78 ) then
         anper = 15
         minaper = 0.05
         maxaper = 4.0
c         call Camp03_V ( mag, seismoDist, jbDist, lnY, sigma,
c     1        specT, period2, s03vfs, s03sr, s03fr, frv, fth, hwflag,
c     2        iflag)
      endif

C     Campbell and Bozorgnia (2003), Vertical, Firm Rock, SS and Reverse
C     Model Number = 079
      if ( jcalc .eq. 79 ) then
         anper = 15
         minaper = 0.05
         maxaper = 4.0
c         call Camp03_V ( mag, seismoDist, jbDist, lnY, sigma,
c     1        specT, period2, s03vfs, s03sr, s03fr, frv, fth, hwflag,
c     2        iflag)
      endif

C     Campbell and Bozorgnia (2003), Vertical, Generic Rock, SS and Reverse
C     Model Number = 080
      if ( jcalc .eq. 80 ) then
         anper = 15
         minaper = 0.05
         maxaper = 4.0
c         call Camp03_V ( mag, seismoDist, jbDist, lnY, sigma,
c     1        specT, period2, s03vfs, s03sr, s03fr, frv, fth, hwflag,
c     2        iflag)
      endif

C     Campbell and Bozorgnia (2003), Vertical, Generic Soil, SS and Reverse
C     Model Number = 081
      if ( jcalc .eq. 81 ) then
         anper = 15
         minaper = 0.05
         maxaper = 4.0
c         call Camp03_V ( mag, seismoDist, jbDist, lnY, sigma,
c     1        specT, period2, s03vfs, s03sr, s03fr, frv, fth, hwflag,
c     2        iflag)
      endif

c ******* Abrahamson and Silva Models *********
C     Abrahamson&Silva 1997 (Rock) - horizontal
C     Model Number = 001
      if ( jcalc .eq. 1 ) then
         anper = 27
         minaper = 0.03
         maxaper = 5.0
c         call AS_97_H ( mag, rupDist, ftype, soil, hwflag, specT,
c     1                     period2, lnY, sigma,iflag )
       endif

C     Abrahamson&Silva 1997 (Rock) - vertical
C     Model Number = 002
      if ( jcalc .eq. 2 ) then
         anper = 27
         minaper = 0.03
         maxaper = 5.0
c         call AS_97_V ( mag, rupDist, ftype, soil, hwflag, specT,
c     1                     period2, lnY, sigma,iflag )
       endif

C     Abrahamson&Silva 1997 (Soil) - horizontal
C     Model Number = 003
      if ( jcalc .eq. 3 ) then
         anper = 27
         minaper = 0.03
         maxaper = 5.0
c         call AS_97_H ( mag, rupDist, ftype, soil, hwflag, specT,
c     1                     period2, lnY, sigma,iflag )
       endif

C     Abrahamson&Silva 1995 (Soil) - vertical
C     Model Number = 004
      if ( jcalc .eq. 4 ) then
         anper = 27
         minaper = 0.03
         maxaper = 5.0
c         call AS_97_V ( mag, rupDist, ftype, soil, hwflag, specT,
c     1                     period2, lnY, sigma,iflag )
       endif

C     Abrahamson&Silva 1997 (Rock) - horizontal with Normal Faulting factors.
C     Model Number = 005
      if ( jcalc .eq. 5 ) then
         anper = 27
         minaper = 0.03
         maxaper = 5.0
c         call AS_97_H_NF ( mag, rupDist, ftype, soil, hwflag, specT,
c     1                     period2, lnY, sigma,iflag )
       endif

C     Abrahamson&Silva 1997 (Rock) - vertical
C     Model Number = 006
      if ( jcalc .eq. 6 ) then
         anper = 27
         minaper = 0.03
         maxaper = 5.0
c         call AS_97_V_NF ( mag, rupDist, ftype, soil, hwflag, specT,
c     1                     period2, lnY, sigma,iflag )
       endif

C     Abrahamson&Silva 1997 (Soil) - horizontal with Normal faulting factors.
C     Model Number = 007
      if ( jcalc .eq. 7 ) then
         anper = 27
         minaper = 0.03
         maxaper = 5.0
c         call AS_97_H_NF ( mag, rupDist, ftype, soil, hwflag, specT,
c     1                     period2, lnY, sigma,iflag )
       endif

C     Abrahamson&Silva 1997 (Soil) - vertical with Normal faulting factors
C     Model Number = 008
      if ( jcalc .eq. 8 ) then
         anper = 27
         minaper = 0.03
         maxaper = 5.0
c         call AS_97_V_NF ( mag, rupDist, ftype, soil, hwflag, specT,
c     1                     period2, lnY, sigma,iflag )
       endif

C     Abrahamson&Silva 1997 (Rock) - horizontal with Normal Faulting factors scaled
C           by 1.0/1.67 factor.
C     Model Number = 2005
      if ( jcalc .eq. 2005 ) then
         anper = 27
         minaper = 0.03
         maxaper = 5.0
c         call AS_97_H_NF ( mag, rupDist, ftype, soil, hwflag, specT,
c     1                     period2, lnY, sigma,iflag )
       endif

C     Abrahamson&Silva 1997 (Rock) - horizontal with Normal Faulting factors scaled
C           by 1.67 factor.
C     Model Number = 3005
      if ( jcalc .eq. 3005 ) then
         anper = 27
         minaper = 0.03
         maxaper = 5.0
c         call AS_97_H_NF ( mag, rupDist, ftype, soil, hwflag, specT,
c     1                     period2, lnY, sigma,iflag )
       endif

c ********* Boore, Joyner and Fumal Models ******************
c     BJF94, Horizontal, Class A
C     Model Number = 010
      if ( jcalc .eq. 10 ) then
         anper = 11
         minaper = 0.1
         maxaper = 2.0
c         call bjf94 ( mag, jbDist, ftype, lnY, sigma, GB, GC, specT,
c     1            attenName1, period2,iflag )

c     BJF94, Horizontal, Class B
C     Model Number = 011
      elseif ( jcalc .eq. 11 ) then
         anper = 11
         minaper = 0.1
         maxaper = 2.0
c         call bjf94 ( mag, jbDist, ftype, lnY, sigma, GB, GC, specT,
c     1            attenName1, period2,iflag )

c     BJF94, Horizontal, Class c
C     Model Number = 012
      elseif ( jcalc .eq. 12 ) then
         anper = 11
         minaper = 0.1
         maxaper = 2.0
c         call bjf94 ( mag, jbDist, ftype, lnY, sigma, GB, GC, specT,
c     1            attenName1, period2,iflag )
      endif

c     BJF97, Horizontal, Vs top 30 meters
C     Model Number = 013
      if ( jcalc .eq. 13 ) then
         anper = 12
         minaper = 0.1
         maxaper = 2.0
c         call bjf97 ( mag, jbDist, ftype, lnY, sigma, specT,
c     1            attenName1, period2, vs,iflag )
      endif

c     BJF97, Horizontal, Vs top 30 meters scaled by factor 1.0/1.67
C     Model Number = 2013
      if ( jcalc .eq. 2013 ) then
         anper = 12
         minaper = 0.1
         maxaper = 2.0
c         call bjf97 ( mag, jbDist, ftype, lnY, sigma, specT,
c     1            attenName1, period2, vs,iflag )
      endif

c     BJF97, Horizontal, Vs top 30 meters scaled by factor 1.67
C     Model Number = 3013
      if ( jcalc .eq. 3013 ) then
         anper = 12
         minaper = 0.1
         maxaper = 2.0
c         call bjf97 ( mag, jbDist, ftype, lnY, sigma, specT,
c     1            attenName1, period2, vs,iflag )
      endif

c ******** Campbell Models ******
c     Campbell (1990), Horizontal, Rock
C     Model Number = 020
      if ( jcalc .eq. 20 ) then
         anper = 16
         minaper = 0.04
         maxaper = 4.0
c         call Camp90 ( mag, seismoDist, ftype, lnY, sigma, baseDepth,
c     1            specT, attenName1, period2,iflag )
      endif

c     Campbell (1990) - vertical, Rock
C     Model Number = 021
      if ( jcalc .eq. 21 ) then
         anper = 16
         minaper = 0.04
         maxaper = 4.0
c         call Camp90v ( mag, seismoDist, ftype, lnY, sigma, baseDepth,
c     1            specT, attenName1, period2,iflag )
      endif

c     Campbell (1990/1994), Horizontal, Rock
C     Model Number = 022
      if ( jcalc .eq. 22 ) then
         anper = 16
         minaper = 0.04
         maxaper = 4.0
c         call Camp90_94 ( mag, seismoDist, ftype, lnY, sigma, baseDepth,
c     1             specT, attenName1, period2,iflag )
      endif

c     Campbell (1993-1994), Horizontal Soil
C     Model Number = 023
      if ( jcalc .eq. 23 ) then
         anper = 16
         minaper = 0.04
         maxaper = 4.0
c         call Campbell_94 ( mag, seismoDist, ftype, lnY, sigma, specT,
c     1                soilFlag, softRock, hardRock, baseDepth,
c     1                attenName1, period2,iflag )

c     Campbell (1993-1994), Horizontal Soft Rock
C     Model Number = 024
      elseif ( jcalc .eq. 24 ) then
         anper = 16
         minaper = 0.04
         maxaper = 4.0
c         call Campbell_94 ( mag, seismoDist, ftype, lnY, sigma, specT,
c     1                soilFlag, softRock, hardRock, baseDepth,
c     1                attenName1, period2,iflag )

c     Campbell (1993-1994), Horizontal Hard Rock
C     Model Number = 025
      elseif ( jcalc .eq. 25 ) then
         anper = 16
         minaper = 0.04
         maxaper = 4.0
c         call Campbell_94 ( mag, seismoDist, ftype, lnY, sigma, specT,
c     1                soilFlag, softRock, hardRock, baseDepth,
c     1                attenName1, period2,iflag )
      endif

c     Campbell (1997), Horizontal, Soil
C     Model Number = 026
      if ( jcalc .eq. 26 ) then
         anper = 14
         minaper = 0.05
         maxaper = 4.0
c         call Camp97_H ( mag, seismoDist, ftype, lnY, sigma,
c     1                baseDepth, specT,
c     1                attenName1, period2, softrock, hardRock,iflag )

c     Campbell (1997), Horizontal, Soft Rock
C     Model Number = 027
      elseif ( jcalc .eq. 27 ) then
         anper = 14
         minaper = 0.05
         maxaper = 4.0
c         call Camp97_H ( mag, seismoDist, ftype, lnY, sigma,
c     1                baseDepth, specT,
c     1                attenName1, period2, softrock, hardRock,iflag )

c     Campbell (1997), Horizontal, Hard Rock
C     Model Number = 028
      elseif ( jcalc .eq. 28 ) then
         anper = 14
         minaper = 0.05
         maxaper = 4.0
c         call Camp97_H ( mag, seismoDist, ftype, lnY, sigma,
c     1                baseDepth, specT,
c     1                attenName1, period2, softrock, hardRock,iflag )
      endif

c     Campbell (1997)  vertical, Soil
C     Model Number = 029
      if ( jcalc .eq. 29 ) then
         anper = 14
         minaper = 0.05
         maxaper = 4.0
c         call Camp97_Z ( mag, seismoDist, ftype, lnY, sigma,
c     1                baseDepth, specT,
c     1                attenName1, period2, softrock, hardRock,iflag )

c     Campbell (1997)  vertical, Soft Rock
C     Model Number = 030
      elseif ( jcalc .eq. 30 ) then
         anper = 14
         minaper = 0.05
         maxaper = 4.0
c         call Camp97_Z ( mag, seismoDist, ftype, lnY, sigma,
c     1                baseDepth, specT,
c     1                attenName1, period2, softrock, hardRock,iflag )

c     Campbell (1997)  vertical, Hard Rock
C     Model Number = 031
      elseif ( jcalc .eq. 31 ) then
         anper = 14
         minaper = 0.05
         maxaper = 4.0
c         call Camp97_Z ( mag, seismoDist, ftype, lnY, sigma,
c     1                baseDepth, specT,
c     1                attenName1, period2, softrock, hardRock,iflag )
      endif

c ******** Idriss Models *******
c     Idriss (1991), Horizontal, Rock
C     Model Number = 040
      if ( jcalc .eq. 40 ) then
         anper = 24
         minaper = 0.03
         maxaper = 5.0
c         call Idriss91_rock (mag, rupDist, ftype, lnY, sigma, specT,
c     1            attenName1, period2,iflag )
      endif

C     Idriss (1991), Horizontal, Soft-soil, PGA
C     Model Number = 041
      if ( jcalc .eq. 41 .and. specT .eq. 0.0 ) then
         anper = 1
         minaper = 0.0
         maxaper = 0.0
c         call Idriss91_soft (mag, rupDist, ftype, lnY, sigma,
c     1            attenName1, period2 )
      endif

c     Idriss 1997 Horizontal, soft-soil, PGA
C     Model Number = 042
      if ( jcalc .eq. 42 .and. specT .eq. 0.0 ) then
         anper = 1
         minaper = 0.0
         maxaper = 0.0
c         call Idriss97_soft (mag, rupDist, ftype, lnY, sigma,
c     1            attenName1, period2 )
      endif

c     Idriss (1991:1995), Horizontal, Rock
C     Model Number = 043
      if ( jcalc .eq. 43 ) then
         anper = 24
         minaper = 0.03
         maxaper = 5.0
c         call Idriss91_95_rock (mag, rupDist, ftype, lnY, sigma, specT,
c     1            attenName1, period2,iflag )
      endif

c     Idriss (1991:1995), Horizontal, Rock scaled by factor 1.0/1.67
C     Model Number = 2043
      if ( jcalc .eq. 2043 ) then
         anper = 24
         minaper = 0.03
         maxaper = 5.0
c         call Idriss91_95_rock (mag, rupDist, ftype, lnY, sigma, specT,
c     1            attenName1, period2,iflag )
      endif

c     Idriss (1991:1995), Horizontal, Rock scaled by factor 1.67
C     Model Number = 3043
      if ( jcalc .eq. 3043 ) then
         anper = 24
         minaper = 0.03
         maxaper = 5.0
c         call Idriss91_95_rock (mag, rupDist, ftype, lnY, sigma, specT,
c     1            attenName1, period2,iflag )
      endif

c  ******* Sadigh/Geomatrix Models *******
c     Geomatrix 93 (rock) vertical
C     Model Number = 050
      if ( jcalc .eq. 50 ) then
         anper = 22
         minaper = 0.04
         maxaper = 3.0
c         call Geomatrix93_V_rock ( mag, rupDist, ftype, lnY, sigma,
c     1             specT, attenName1, period2,iflag )
      endif

c     Sadigh et al. 97 (rock) Horizontal
C     Model Number = 051
      if ( jcalc .eq. 51 ) then
         anper = 22
         minaper = 0.04
         maxaper = 7.5
c         call Geomatrix93_H_rock ( mag, rupDist, ftype, lnY, sigma,
c     1             specT, attenName1, period2,iflag )
      endif

c     Sadigh et al. 97 (rock) Horizontal scaled by factor 1.0/1.67
C     Model Number = 2051
      if ( jcalc .eq. 2051 ) then
         anper = 22
         minaper = 0.04
         maxaper = 7.5
c         call Geomatrix93_H_rock ( mag, rupDist, ftype, lnY, sigma,
c     1             specT, attenName1, period2,iflag )
      endif

c     Sadigh et al. 97 (rock) Horizontal scaled by factor 1.67
C     Model Number = 3051
      if ( jcalc .eq. 3051 ) then
         anper = 22
         minaper = 0.04
         maxaper = 7.5
c         call Geomatrix93_H_rock ( mag, rupDist, ftype, lnY, sigma,
c     1             specT, attenName1, period2,iflag )
      endif

c     Sadigh et al. 97 (soil) horizontal
C     Model Number = 052
      if ( jcalc .eq. 52 ) then
         anper = 13
         minaper = 0.075
         maxaper = 4.0
c         call Sadigh97_H_soil ( mag, rupDist, ftype, lnY, sigma,
c     1             specT, attenName1, period2,iflag )
      endif

c     Sadigh et al. 97 (rock) Horizontal - Sigma = 0.0
C     Model Number = 053
      if ( jcalc .eq. 53 ) then
         anper = 22
         minaper = 0.04
         maxaper = 7.5
c         call Geomatrix93_H_rock ( mag, rupDist, ftype, lnY, sigma,
c     1             specT, attenName1, period2,iflag )
      endif

c ******** Spudich et al. (1997) Models *******
C     Spudich et al. (1997), Horizontal, Rock, Extensional Regimes
C     Model Number = 060
      if (jcalc .eq. 60) then
         anper = 11
         minaper = 0.1
         maxaper = 2.0
c         call Spudich96 ( mag, JBdist, lnY, sigma, 0, specT,
c     1                   attenName, period1,iflag )
      endif

C     Spudich et al. (1997), Horizontal, Rock, Extensional Regimes
C     Model Number = 061
      if (jcalc .eq. 61) then
         anper = 11
         minaper = 0.1
         maxaper = 2.0
c         call Spudich96 ( mag, JBdist, lnY, sigma, 1, specT,
c     1                   attenName, period1,iflag )
      endif

c ******** Youngs Models *******
c     Youngs et al (1993) Horizontal, subduction, Rock
C     Model Number = 200
      if ( jcalc .eq. 200 ) then
         anper = 10
         minaper = 0.067
         maxaper = 3.0
c         call youngs93 ( mag, rupDist, lnY, sigma, attenName1,
c     1       period2, specT, ftype,iflag )
      endif

c     Youngs et al (1997) Horizontal, subduction, rock
C     Model Number = 201
      if ( jcalc .eq. 201 ) then
         anper = 12
         minaper = 0.075
         maxaper = 3.0
c         call youngs97_rock ( mag, rupDist, lnY, sigma, attenName1,
c     1       period2, specT, ftype, depth,iflag )
      endif

c     Youngs et al (1997) Horizontal, subduction, soil
C     Model Number = 202
      if ( jcalc .eq. 202 ) then
         anper = 13
         minaper = 0.075
         maxaper = 4.0
c         call youngs97_soil ( mag, rupDist, lnY, sigma, attenName1,
c     1       period2, specT, ftype, depth,iflag )
      endif

c ***** Synchronous Rupture Ground Motion Models for HBIP *****
c       Model consists of the SRSS from the Subduction GM
c       and the Crustal GM.

c     This first suite of synchronous ruptures is for seismic source
c          Model A (Geomatrix). Fault parameters for crustal event are:
c          M =7.4, D=1.0 km, Ftype=1 (reverse).

C     Now call the synchronous rupture cases for rock ground motions
c     (i.e., no HBIP amp factors applied).
c     Set the crustal earthquake parameters
      if (jcalc .eq. 7201001 .or. jcalc .eq. 7201043 .or. jcalc .eq.
     1      7201051) then
C     Now call the specific Subduction and Crustal Attenuation Model.

c     Youngs et al (1997) Horizontal, subduction, Rock
c     with Abrahamson&Silva (1997) Horizontal Crustal
C     Model Number = 7201001
         if (jcalc .eq. 7201001) then
         anper = 12
         minaper = 0.075
         maxaper = 3.0
c            call youngs97_rock ( mag, rupDist, lnY, sigma, attenName1,
c     1          period2, specT, ftype, depth,iflag )
c            call AS_97_H ( magc, rupDistc, ftypec, soil, hwflag, specT,
c     1                     period2, lnYc, sigmac,iflag )

c     Youngs et al (1997) Horizontal, subduction, Rock
c     with Idriss (1991:1995) Horizontal Crustal
C     Model Number = 7201043
         elseif ( jcalc .eq. 7201043 ) then
         anper = 12
         minaper = 0.075
         maxaper = 3.0
c            call youngs97_rock ( mag, rupDist, lnY, sigma, attenName1,
c     1          period2, specT, ftype, depth,iflag )
c            call Idriss91_95_rock (magc, rupDistc, ftypec, lnYc, sigmac, specT,
c     1            attenName1, period2,iflag )

c     Youngs et al (1997) Horizontal, subduction, Rock
c     with Sadigh et al. (1997) Horizontal Crustal
C     Model Number = 7201051
         elseif ( jcalc .eq. 7201051 ) then
         anper = 12
         minaper = 0.075
         maxaper = 3.0
c            call youngs97_rock ( mag, rupDist, lnY, sigma, attenName1,
c     1          period2, specT, ftype, depth,iflag )
c            call Geomatrix93_H_rock ( magc, rupDistc, ftypec, lnYc, sigmac,
c     1             specT, attenName1, period2,iflag )
         endif
      endif

c     The second suite of synchronous ruptures is for seismic source
c          Model B (Carver). Fault parameters for crustal event are:
c          M =7.7, D=1.0 km, Ftype=1 (reverse)

C     Now call the synchronous rupture cases for rock ground motions
c     (i.e., no HBIP amp factors applied).
c     Set the crustal earthquake parameters
      if (jcalc .eq. 8201001 .or. jcalc .eq. 8201043 .or. jcalc .eq.
     1      8201051) then
C     Now call the specific Subduction and Crustal Attenuation Model.

c     Youngs et al (1997) Horizontal, subduction, Rock
c     with Abrahamson&Silva (1997) Horizontal Crustal
C     Model Number = 8201001
         if (jcalc .eq. 8201001) then
         anper = 12
         minaper = 0.075
         maxaper = 3.0
c            call youngs97_rock ( mag, rupDist, lnY, sigma, attenName1,
c     1          period2, specT, ftype, depth,iflag )
c            call AS_97_H ( magc, rupDistc, ftypec, soil, hwflag, specT,
c     1                     period2, lnYc, sigmac,iflag )

c     Youngs et al (1997) Horizontal, subduction, Rock
c     with Idriss (1991:1995) Horizontal Crustal
C     Model Number = 8201043
         elseif ( jcalc .eq. 8201043 ) then
         anper = 12
         minaper = 0.075
         maxaper = 3.0
c            call youngs97_rock ( mag, rupDist, lnY, sigma, attenName1,
c     1          period2, specT, ftype, depth,iflag )
c            call Idriss91_95_rock (magc, rupDistc, ftypec, lnYc, sigmac, specT,
c     1            attenName1, period2,iflag )

c     Youngs et al (1997) Horizontal, subduction, Rock
c     with Sadigh et al. (1997) Horizontal Crustal
C     Model Number = 8201051
         elseif ( jcalc .eq. 8201051 ) then
         anper = 12
         minaper = 0.075
         maxaper = 3.0
c            call youngs97_rock ( mag, rupDist, lnY, sigma, attenName1,
c     1          period2, specT, ftype, depth,iflag )
c            call Geomatrix93_H_rock ( magc, rupDistc, ftypec, lnYc, sigmac,
c     1             specT, attenName1, period2,iflag )
         endif
      endif

c ***** Atkinson and Boore Subduction Models *****
c     Atkinson and Boore (2003) - Horizontal, NEHRP-B, Subduction
C     Model Number = 210
      if (jcalc .eq. 210) then
         anper = 8
         minaper = 0.04
         maxaper = 3.0
c         call AB03 ( mag, rupdist, lnY, sigma, specT,
c     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-C, Subduction
C     Model Number = 211
      if (jcalc .eq. 211) then
         anper = 8
         minaper = 0.04
         maxaper = 3.0
c         call AB03 ( mag, rupdist, lnY, sigma, specT,
c     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-D, Subduction
C     Model Number = 212
      if (jcalc .eq. 212) then
         anper = 8
         minaper = 0.04
         maxaper = 3.0
c         call AB03 ( mag, rupdist, lnY, sigma, specT,
c     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-E, Subduction
C     Model Number = 213
      if (jcalc .eq. 213) then
         anper = 8
         minaper = 0.04
         maxaper = 3.0
c         call AB03 ( mag, rupdist, lnY, sigma, specT,
c     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-B, Subduction
C     Model Number = 220
      if (jcalc .eq. 220) then
         anper = 8
         minaper = 0.04
         maxaper = 3.0
c         call AB03Cas ( mag, rupdist, lnY, sigma, specT,
c     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-C, Subduction
C     Model Number = 221
      if (jcalc .eq. 221) then
         anper = 8
         minaper = 0.04
         maxaper = 3.0
c         call AB03Cas ( mag, rupdist, lnY, sigma, specT,
c     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-D, Subduction
C     Model Number = 222
      if (jcalc .eq. 222) then
         anper = 8
         minaper = 0.04
         maxaper = 3.0
c         call AB03Cas ( mag, rupdist, lnY, sigma, specT,
c     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-E, Subduction
C     Model Number = 223
      if (jcalc .eq. 223) then
         anper = 8
         minaper = 0.04
         maxaper = 3.0
c         call AB03Cas ( mag, rupdist, lnY, sigma, specT,
c     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-B, Subduction
C     Model Number = 230
      if (jcalc .eq. 230) then
         anper = 8
         minaper = 0.04
         maxaper = 3.0
c         call AB03Jap ( mag, rupdist, lnY, sigma, specT,
c     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-C, Subduction
C     Model Number = 231
      if (jcalc .eq. 231) then
         anper = 8
         minaper = 0.04
         maxaper = 3.0
c         call AB03Jap ( mag, rupdist, lnY, sigma, specT,
c     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-D, Subduction
C     Model Number = 232
      if (jcalc .eq. 232) then
         anper = 8
         minaper = 0.04
         maxaper = 3.0
c         call AB03Jap ( mag, rupdist, lnY, sigma, specT,
c     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-E, Subduction
C     Model Number = 233
      if (jcalc .eq. 233) then
         anper = 8
         minaper = 0.04
         maxaper = 3.0
c         call AB03Jap ( mag, rupdist, lnY, sigma, specT,
c     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
      endif

c ***** Atkinson and Boore Subduction Models with Errata Correction *****
c     Atkinson and Boore (2003) - Horizontal, NEHRP-B, Subduction
C     Model Number = 310
      if (jcalc .eq. 310) then
         anper = 8
         minaper = 0.04
         maxaper = 3.0
c         call AB03 ( mag, rupdist, lnY, sigma, specT,
c     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-C, Subduction
C     Model Number = 311
      if (jcalc .eq. 311) then
         anper = 8
         minaper = 0.04
         maxaper = 3.0
c         call AB03 ( mag, rupdist, lnY, sigma, specT,
c     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-D, Subduction
C     Model Number = 312
      if (jcalc .eq. 312) then
         anper = 8
         minaper = 0.04
         maxaper = 3.0
c         call AB03 ( mag, rupdist, lnY, sigma, specT,
c     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-E, Subduction
C     Model Number = 313
      if (jcalc .eq. 313) then
         anper = 8
         minaper = 0.04
         maxaper = 3.0
c         call AB03 ( mag, rupdist, lnY, sigma, specT,
c     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-B, Subduction
C     Model Number = 320
      if (jcalc .eq. 320) then
         anper = 8
         minaper = 0.04
         maxaper = 3.0
c         call AB03Cas ( mag, rupdist, lnY, sigma, specT,
c     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-C, Subduction
C     Model Number = 321
      if (jcalc .eq. 321) then
         anper = 8
         minaper = 0.04
         maxaper = 3.0
c         call AB03Cas ( mag, rupdist, lnY, sigma, specT,
c     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-D, Subduction
C     Model Number = 322
      if (jcalc .eq. 322) then
         anper = 8
         minaper = 0.04
         maxaper = 3.0
c         call AB03Cas ( mag, rupdist, lnY, sigma, specT,
c     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-E, Subduction
C     Model Number = 323
      if (jcalc .eq. 323) then
         anper = 8
         minaper = 0.04
         maxaper = 3.0
c         call AB03Cas ( mag, rupdist, lnY, sigma, specT,
c     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-B, Subduction
C     Model Number = 330
      if (jcalc .eq. 330) then
         anper = 8
         minaper = 0.04
         maxaper = 3.0
c         call AB03Jap ( mag, rupdist, lnY, sigma, specT,
c     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-C, Subduction
C     Model Number = 331
      if (jcalc .eq. 331) then
         anper = 8
         minaper = 0.04
         maxaper = 3.0
c         call AB03Jap ( mag, rupdist, lnY, sigma, specT,
c     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-D, Subduction
C     Model Number = 332
      if (jcalc .eq. 332) then
         anper = 8
         minaper = 0.04
         maxaper = 3.0
c         call AB03Jap ( mag, rupdist, lnY, sigma, specT,
c     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-E, Subduction
C     Model Number = 333
      if (jcalc .eq. 333) then
         anper = 8
         minaper = 0.04
         maxaper = 3.0
c         call AB03Jap ( mag, rupdist, lnY, sigma, specT,
c     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
      endif

c ***** Gregor et al. Cascadia Subduction Model *****
c     Gregor et al. (2002) - Horizontal, Rock, Cascadia Subduction
C     Model Number = 240
      if (jcalc .eq. 240) then
         anper = 25
         minaper = 0.02
         maxaper = 5.0
c         call Gregor02CasR ( mag, rupdist, lnY, sigma, specT,
c     1            attenName1, period2,iflag)
      endif

c     Gregor et al. (2002) - Horizontal, Soil, Cascadia Subduction
C     Model Number = 241
      if (jcalc .eq. 241) then
         anper = 25
         minaper = 0.02
         maxaper = 5.0
c         call Gregor02CasS ( mag, rupdist, lnY, sigma, specT,
c     1            attenName1, period2,iflag)
      endif

c ***** Gregor et al. Cascadia Subduction Model *****
c     Gregor et al. (2006) - Horizontal, Cascadia Subduction
C     Model Number = 242
      if (jcalc .eq. 242) then
         anper = 25
         minaper = 0.02
         maxaper = 5.0
c         call Gregor06Cas ( mag, rupdist, lnY, sigma, specT,
c     1            attenName1, vs, period2, iflag)
      endif

c     Zhao et al. (2006), Horizontal, Subduction, Hard Rock
C     Model Number = 250
      if ( jcalc .eq. 250 ) then
         anper = 22
         minaper = 0.01
         maxaper = 5.0
      endif

c     Zhao et al. (2006), Horizontal, Subduction, Rock
C     Model Number = 251
      if ( jcalc .eq. 251 ) then
         anper = 22
         minaper = 0.01
         maxaper = 5.0
      endif

c     Zhao et al. (2006), Horizontal, Subduction, Hard Soil
C     Model Number = 252
      if ( jcalc .eq. 252 ) then
         anper = 22
         minaper = 0.01
         maxaper = 5.0
      endif

c     Zhao et al. (2006), Horizontal, Subduction, Medium Soil
C     Model Number = 253
      if ( jcalc .eq. 253 ) then
         anper = 22
         minaper = 0.01
         maxaper = 5.0
      endif

c     Zhao et al. (2006), Horizontal, Subduction, Soft Soil
C     Model Number = 254
      if ( jcalc .eq. 254 ) then
         anper = 22
         minaper = 0.01
         maxaper = 5.0
      endif

c     Zhao et al. (2006), Horizontal, Crustal, Hard Rock
C     Model Number = 255
      if ( jcalc .eq. 255 ) then
         anper = 22
         minaper = 0.01
         maxaper = 5.0
      endif

c     Zhao et al. (2006), Horizontal, Crustal, Rock
C     Model Number = 256
      if ( jcalc .eq. 256 ) then
         anper = 22
         minaper = 0.01
         maxaper = 5.0
      endif

c     Zhao-Lu (2011), Horizontal, Crustal, Rock
C     Modified (2006) model with Magnitude>=7.1 capped at M=7.1
C     Model Number = 2256
      if ( jcalc .eq. 2256 ) then
         anper = 22
         minaper = 0.01
         maxaper = 5.0
      endif

c     Zhao et al. (2006), Horizontal, Crustal, Hard Soil
C     Model Number = 257
      if ( jcalc .eq. 257 ) then
         anper = 22
         minaper = 0.01
         maxaper = 5.0
      endif

c     Zhao et al. (2006), Horizontal, Crustal, Medium Soil
C     Model Number = 258
      if ( jcalc .eq. 258 ) then
         anper = 22
         minaper = 0.01
         maxaper = 5.0
      endif

c     Zhao et al. (2006), Horizontal, Crustal, Soft Soil
C     Model Number = 259
      if ( jcalc .eq. 259 ) then
         anper = 22
         minaper = 0.01
         maxaper = 5.0
      endif

c     Kanno et al. (2006), Horizontal, Subduction, Vs30m
C     Model Number = 260
      if ( jcalc .eq. 260 ) then
         anper = 38
         minaper = 0.01
         maxaper = 5.0
      endif

c     Garcia et al. (2005), Horizontal, Subduction(intraslab), Rock
C     Model Number = 270
      if ( jcalc .eq. 270 ) then
         anper = 16
         minaper = 0.04
         maxaper = 5.0
      endif

c     Garcia et al. (2005), Vertical, Subduction(intraslab), Rock
C     Model Number = 271
      if ( jcalc .eq. 271 ) then
         anper = 16
         minaper = 0.04
         maxaper = 5.0
      endif

c     Lin and Lee (2008), Horizontal, Subduction, Rock
C     Model Number = 280
      if ( jcalc .eq. 280 ) then
         anper = 28
         minaper = 0.01
         maxaper = 5.0
      endif

c     Lin and Lee (2008), Horizontal, Subduction, Soil
C     Model Number = 281
      if ( jcalc .eq. 281 ) then
         anper = 28
         minaper = 0.01
         maxaper = 5.0
      endif

C  **** BCSubduction Models *******
C     Model Number = 350
      if (jcalc .eq. 350) then
         anper = 22
         minaper = 0.05
         maxaper = 10.0
      endif
C     Model Numbers = 351-365
      if (jcalc .ge. 351 .and. jcalc .le. 365) then
         anper = 23
         minaper = 0.02
         maxaper = 10.0
      endif

C  **** Atkinson&Macias (2009), Cascadia, NEHRP B/C *******
C     Model Number = 370
      if (jcalc .eq. 370) then
         anper = 24
         minaper = 0.05
         maxaper = 10.0
      endif

c ***** Atkinson and Boore Models *****
c     Atkinson and Boore (1994) - Horizontal, EUS Hard Rock
C     Model Number = 100
      if ( jcalc .eq. 100 ) then
         anper = 12
         minaper = 0.05
         maxaper = 2.0
c         call AB95 ( mag, rupdist, lnY, sigma, specT,
c     1            attenName1, period2,iflag )
      endif

c     Atkinson and Boore (1994), Horizontal, EUS Hard Rock, magnitude Nuttli
C     Model Number = 101
      if ( jcalc .eq. 101 ) then
         anper = 12
         minaper = 0.05
         maxaper = 2.0
c          call AB95Mn ( mag1, rupdist, lnY, sigma, specT,
c     1            attenName1, period2,iflag )
      endif

c     Atkinson and Boore (2006), Horizontal, CEUS Hard Rock
C     Model Number = 102
      if ( jcalc .eq. 102 ) then
         anper = 25
         minaper = 0.025
         maxaper = 5.0
      endif

c     Atkinson and Boore (2006), Horizontal, CEUS, Vs=760m/sec
C     Model Number = 103
      if ( jcalc .eq. 103 ) then
         anper = 25
         minaper = 0.025
         maxaper = 5.0
      endif

c     Atkinson (2008 wt C0), Horizontal, CEUS, Vs=760m/sec
C     Model Number = 104
      if ( jcalc .eq. 104 ) then
         anper = 7
         minaper = 0.10
         maxaper = 5.0
      endif

c     Atkinson and Boore (2006) with Atkinson (2010) magnitude stress drop adjustment, Horizontal, CEUS Hard Rock
C     Model Number = 105
      if ( jcalc .eq. 105 ) then
         anper = 25
         minaper = 0.025
         maxaper = 5.0
      endif

c     Atkinson and Boore (2006) with Atkinson (2010) magnitude stress drop adjustment, Horizontal, CEUS, Vs=760m/sec
C     Model Number = 106
      if ( jcalc .eq. 106 ) then
         anper = 26
         minaper = 0.01
         maxaper = 5.0
      endif

c     Atkinson (2010), Horizontal, CEUS, based on NGA BA08
C     Model Number = 107
      if (jcalc .eq. 107) then
         anper = 21
         minaper = 0.01
         maxaper = 10.0
      endif

c     Atkinson (2008 avg C0), Horizontal, CEUS, Vs=760m/sec
C     Model Number = 108
      if ( jcalc .eq. 108 ) then
         anper = 7
         minaper = 0.10
         maxaper = 5.0
      endif

c     Atkinson and Boore (2006) with (2x) stressDrop (280bars), Horizontal, CEUS Hard Rock
C     Model Number = 130
      if ( jcalc .eq. 130 ) then
         anper = 25
         minaper = 0.025
         maxaper = 5.0
      endif

c     Atkinson and Boore (2006) with (0.5x) stressDrop (70bars), Horizontal, CEUS Hard Rock
C     Model Number = 131
      if ( jcalc .eq. 131 ) then
         anper = 25
         minaper = 0.025
         maxaper = 5.0
      endif

c ******* Toro et al. Models *******
C Toro et al. (1996) MidCon., Horizontal, Rock
C     Model Number = 110
      if (jcalc .eq. 110) then
         anper = 8
         minaper = 0.029
         maxaper = 2.0
c         call TAS96 ( mag, jbdist, lnY, sigma, specT,
c     1                  attenName, period1,iflag )
      endif

C Toro et al. (1996) MidCon., Horizontal, Rock, MLg magnitude
C     Model Number = 111
      if (jcalc .eq. 111) then
         anper = 8
         minaper = 0.029
         maxaper = 2.0
c         call TAS96MLg ( mag, jbdist, lnY, sigma, specT,
c     1                  attenName, period1,iflag)
      endif

C Toro et al. (1996) Gulf, Horizontal, Rock
C     Model Number = 112
      if (jcalc .eq. 112) then
         anper = 8
         minaper = 0.029
         maxaper = 2.0
c         call TAS96Gulf ( mag, jbdist, lnY, sigma, specT,
c     1                  attenName, period1,iflag )
      endif

C Toro et al. (1996) Gulf, Horizontal, Rock, MLg magnitude
C     Model Number = 113
      if (jcalc .eq. 113) then
         anper = 8
         minaper = 0.029
         maxaper = 2.0
c         call TAS96GulfMLg ( mag, jbdist, lnY, sigma, specT,
c     1                  attenName, period1,iflag )
      endif

c     Campbell Hybrid (2003), Horizontal, CEUS Hard Rock
C     Model Number = 120
      if ( jcalc .eq. 120 ) then
         anper = 18
         minaper = 0.01
         maxaper = 5.0
      endif

c     Campbell Hybrid (2003) - SigmaEps, Horizontal, CEUS Hard Rock
C     Model Number = 121
      if ( jcalc .eq. 121 ) then
         anper = 18
         minaper = 0.01
         maxaper = 5.0
      endif

c     Campbell Hybrid (2003) + SigmaEps, Horizontal, CEUS Hard Rock
C     Model Number = 122
      if ( jcalc .eq. 122 ) then
         anper = 18
         minaper = 0.01
         maxaper = 5.0
      endif

c     Silva et al. (2002) - Horizontal, CEUS-Midcont, 2Corner
C     Model Number = 401
      if (jcalc .eq. 401) then
         anper = 26
         minaper = 0.02
         maxaper = 10.0
      endif

c     Silva et al. (2002) - Horizontal, CEUS-Midcont, 2Corner with Saturation
C     Model Number = 402
      if (jcalc .eq. 402) then
         anper = 26
         minaper = 0.02
         maxaper = 10.0
      endif

c     Silva et al. (2002) - Horizontal, CEUS-Midcont, 1Corner Variable-High
C     Model Number = 403
      if (jcalc .eq. 403) then
         anper = 26
         minaper = 0.02
         maxaper = 10.0
      endif

c     Silva et al. (2002) - Horizontal, CEUS-Midcont, 1Corner Variable-Med
C     Model Number = 404
      if (jcalc .eq. 404) then
         anper = 26
         minaper = 0.02
         maxaper = 10.0
      endif

c     Silva et al. (2002) - Horizontal, CEUS-Midcont, 1Corner Variable-Low
C     Model Number = 405
      if (jcalc .eq. 405) then
         anper = 26
         minaper = 0.02
         maxaper = 10.0
      endif

c     Silva et al. (2002) - Horizontal, CEUS-Midcont, 1Corner Const-High
C     Model Number = 406
      if (jcalc .eq. 406) then
         anper = 26
         minaper = 0.02
         maxaper = 10.0
      endif

c     Silva et al. (2002) - Horizontal, CEUS-Midcont, 1Corner Const-Med
C     Model Number = 407
      if (jcalc .eq. 407) then
         anper = 26
         minaper = 0.02
         maxaper = 10.0
      endif

c     Silva et al. (2002) - Horizontal, CEUS-Midcont, 1Corner Const-Low
C     Model Number = 408
      if (jcalc .eq. 408) then
         anper = 26
         minaper = 0.02
         maxaper = 10.0
      endif

c     Silva et al. (2002) - Horizontal, CEUS-Midcont, 1Corner Const-High with Sat.
C     Model Number = 409
      if (jcalc .eq. 409) then
         anper = 26
         minaper = 0.02
         maxaper = 10.0
      endif

c     Silva et al. (2002) - Horizontal, CEUS-Midcont, 1Corner Const-Med with Sat.
C     Model Number = 410
      if (jcalc .eq. 410) then
         anper = 26
         minaper = 0.02
         maxaper = 10.0
      endif

c     Silva et al. (2002) - Horizontal, CEUS-Midcont, 1Corner Const-Low with Sat.
C     Model Number = 411
      if (jcalc .eq. 411) then
         anper = 26
         minaper = 0.02
         maxaper = 10.0
      endif

c     Silva et al. (2002) - Horizontal, CEUS-Gulf, 2Corner
C     Model Number = 501
      if (jcalc .eq. 501) then
         anper = 26
         minaper = 0.02
         maxaper = 10.0
      endif

c     Silva et al. (2002) - Horizontal, CEUS-Gulf, 2Corner with Saturation
C     Model Number = 502
      if (jcalc .eq. 502) then
         anper = 26
         minaper = 0.02
         maxaper = 10.0
      endif

c     Silva et al. (2002) - Horizontal, CEUS-Gulf, 1Corner Variable-High
C     Model Number = 503
      if (jcalc .eq. 503) then
         anper = 26
         minaper = 0.02
         maxaper = 10.0
      endif

c     Silva et al. (2002) - Horizontal, CEUS-Gulf, 1Corner Variable-Med
C     Model Number = 504
      if (jcalc .eq. 504) then
         anper = 26
         minaper = 0.02
         maxaper = 10.0
      endif

c     Silva et al. (2002) - Horizontal, CEUS-Gulf, 1Corner Variable-Low
C     Model Number = 505
      if (jcalc .eq. 505) then
         anper = 26
         minaper = 0.02
         maxaper = 10.0
      endif

c     Silva et al. (2002) - Horizontal, CEUS-Gulf, 1Corner Const-High
C     Model Number = 506
      if (jcalc .eq. 506) then
         anper = 26
         minaper = 0.02
         maxaper = 10.0
      endif

c     Silva et al. (2002) - Horizontal, CEUS-Gulf, 1Corner Const-Med
C     Model Number = 507
      if (jcalc .eq. 507) then
         anper = 26
         minaper = 0.02
         maxaper = 10.0
      endif

c     Silva et al. (2002) - Horizontal, CEUS-Gulf, 1Corner Const-Low
C     Model Number = 508
      if (jcalc .eq. 508) then
         anper = 26
         minaper = 0.02
         maxaper = 10.0
      endif

c     Silva et al. (2002) - Horizontal, CEUS-Gulf, 1Corner Const-High with Sat.
C     Model Number = 509
      if (jcalc .eq. 509) then
         anper = 26
         minaper = 0.02
         maxaper = 10.0
      endif

c     Silva et al. (2002) - Horizontal, CEUS-Gulf, 1Corner Const-Med with Sat.
C     Model Number = 510
      if (jcalc .eq. 510) then
         anper = 26
         minaper = 0.02
         maxaper = 10.0
      endif

c     Silva et al. (2002) - Horizontal, CEUS-Gulf, 1Corner Const-Low with Sat.
C     Model Number = 511
      if (jcalc .eq. 511) then
         anper = 26
         minaper = 0.02
         maxaper = 10.0
      endif

c *****  Misc Models ******
c     McVerry et al (1993) new zealand
C     Model Number = 300
      if ( jcalc .eq. 300 ) then
         anper = 1
         minaper = 0.0
         maxaper = 0.0
c        call mcverry93 ( mag, rupDist, lnY, sigma, attenName1,
c     1       ftype )
      endif

c     fukushima (1990) rock
C     Model Number = 301
      if ( jcalc .eq. 301 ) then
         anper = 1
         minaper = 0.0
         maxaper = 0.0
c          call fukushima90 ( mag, rupDist, lnY, sigma, attenName1)
      endif

c     Loh high speed rail (New Joyner-Boore form)
C     Model Number = 302
      if ( jcalc .eq. 302 ) then
         anper = 1
         minaper = 0.0
         maxaper = 0.0
c         call HighSpeedRail ( mag, rupDist, lnY, sigma,
c     1                      attenName1, period2 )
      endif

c     New Loh (1996) model (unpublished)
C     Model Number = 303
      if ( jcalc .eq. 303 ) then
         anper = 1
         minaper = 0.0
         maxaper = 0.0
c         call Loh96 ( mag, rupDist, lnY, sigma, attenName1, period2)
      endif

c ******* Ambraseys et al 2005 Model *********
C     Model Number = 601
      if ( jcalc .eq. 601 ) then
          anper = 62
          minaper = 0.05
          maxaper = 2.50
c         call Ambraseys_2005 ( mag, jbDist, ftype, specT,
c     1                     period2, lnY, sigma, iflag )
      endif


C     **** BCHydro SCR attenuation models adjusted for Vs=760m/sec ****
c     Atkinson and Boore (2006), Horizontal, CEUS with BC Hydro Amps for Vs=760m/s
C     Model Number = 1020
      if ( jcalc .eq. 1020 ) then
         anper = 25
         minaper = 0.025
         maxaper = 5.0
      endif

c     Atkinson and Boore (2006) with Atkinson (2010) magnitude stress drop adjustment, Horizontal with BC Hydro Amps for Vs=760m/s
C     Model Number = 1050
      if ( jcalc .eq. 1050 ) then
         anper = 25
         minaper = 0.025
         maxaper = 5.0
      endif

c     Atkinson and Boore (2006), Horizontal (2x) stressDrop (140), CEUS with BC Hydro Amps for Vs=760m/s
C     Model Number = 1300
      if ( jcalc .eq. 1300 ) then
         anper = 25
         minaper = 0.025
         maxaper = 5.0
      endif

c     Atkinson and Boore (2006), Horizontal (0.5x) stressDrop (70), CEUS with BC Hydro Amps for Vs=760m/s
C     Model Number = 1310
      if ( jcalc .eq. 1310 ) then
         anper = 25
         minaper = 0.025
         maxaper = 5.0
      endif

c     Campbell Hybrid (2003), Horizontal, CEUS with BC Hydro Amps for Vs=760m/s
C     Model Number = 1200
      if ( jcalc .eq. 1200 ) then
         anper = 18
         minaper = 0.01
         maxaper = 5.0
      endif

c     Campbell Hybrid (2003) minus Espistemic, Horizontal, CEUS with BC Hydro Amps for Vs=760m/s
C     Model Number = 1210
      if ( jcalc .eq. 1210 ) then
         anper = 18
         minaper = 0.01
         maxaper = 5.0
      endif

c     Campbell Hybrid (2003) plus Espistemic, Horizontal, CEUS with BC Hydro Amps for Vs=760m/s
C     Model Number = 1220
      if ( jcalc .eq. 1220 ) then
         anper = 18
         minaper = 0.01
         maxaper = 5.0
      endif

c     Silva et al. (2002) - Horizontal, CEUS-Midcont, 1Corner Variable-High with BC Hydro Amps for Vs=760m/s
C     Model Number = 4030
      if (jcalc .eq. 4030) then
         anper = 26
         minaper = 0.02
         maxaper = 10.0
      endif

c     Silva et al. (2002) - Horizontal, CEUS-Midcont, 1Corner Variable-Med with BC Hydro Amps for Vs=760m/s
C     Model Number = 4040
      if (jcalc .eq. 4040) then
         anper = 27
         minaper = 0.01
         maxaper = 10.0
      endif

c     Silva et al. (2002) - Horizontal, CEUS-Midcont, 1Corner Variable-Low with BC Hydro Amps for Vs=760m/s
C     Model Number = 4050
      if (jcalc .eq. 4050) then
         anper = 26
         minaper = 0.02
         maxaper = 10.0
      endif

C     **** End of BCHydro SCR attenuation models adjusted for Vs=760m/sec ****

c     Akkar and Cagan (2010) - Horizontal, Turkey Crustal
C     Model Number = 150
      if (jcalc .eq. 150) then
         anper = 17
         minaper = 0.01
         maxaper = 2.0
      endif

c     Akkar and Bommer (2010) - Horizontal, Rock (Vs>750m/s)
C     Model Number = 151
      if (jcalc .eq. 151) then
         anper = 63
         minaper = 0.01
         maxaper = 3.0
      endif

c     Akkar and Bommer (2010) - Horizontal, Stiff Soil (360<Vs<750m/s)
C     Model Number = 152
      if (jcalc .eq. 152) then
         anper = 63
         minaper = 0.01
         maxaper = 3.0
      endif

c     Akkar and Bommer (2010) - Horizontal, Soft Soil (Vs<360m/s)
C     Model Number = 153
      if (jcalc .eq. 153) then
         anper = 63
         minaper = 0.01
         maxaper = 3.0
      endif

c     Akkar, Sandikkaya, and Bommer (2013) - Horizontal
C     Model Number = 154
      if (jcalc .eq. 154) then
         anper = 20
         minaper = 0.01
         maxaper = 4.0
      endif

c     Bradley (2010) - Horizontal
C     Model Number = 160
      if (jcalc .eq. 160) then
         anper = 23
         minaper = 0.01
         maxaper = 10.0
      endif

c     McVerry et al. (2006) - Crustal, Horizontal
C     Model Number = 140, Site Class A/B
      if (jcalc .eq. 140) then
         anper = 14
         minaper = 0.01
         maxaper = 3.0
      endif
C     Model Number = 141, Site Class C
      if (jcalc .eq. 141) then
         anper = 14
         minaper = 0.01
         maxaper = 3.0
      endif
C     Model Number = 142, Site Class D
      if (jcalc .eq. 142) then
         anper = 14
         minaper = 0.01
         maxaper = 3.0
      endif

c     Bindi et al. (2009) - Crustal, Horizontal
C     Model Number = 95, Hor, Rock
      if (jcalc .eq. 95) then
         anper = 23
         minaper = 0.01
         maxaper = 2.0
      endif
C     Model Number = 96, Hor, Shallow alluvioum
      if (jcalc .eq. 96) then
         anper = 23
         minaper = 0.01
         maxaper = 2.0
      endif
C     Model Number = 97, Hor, Deep alluvium
      if (jcalc .eq. 97) then
         anper = 23
         minaper = 0.01
         maxaper = 2.0
      endif

c     Bindi et al. (2011) - Crustal, Horizontal, Class A
C     Model Number = 195, Hor, Class A
      if (jcalc .eq. 195) then
         anper = 23
         minaper = 0.01
         maxaper = 2.0
      endif
C     Model Number = 196, Hor, Class B
      if (jcalc .eq. 196) then
         anper = 23
         minaper = 0.01
         maxaper = 2.0
      endif
C     Model Number = 197, Hor, Class C
      if (jcalc .eq. 197) then
         anper = 23
         minaper = 0.01
         maxaper = 2.0
      endif
C     Model Number = 198, Hor, Class D
      if (jcalc .eq. 198) then
         anper = 23
         minaper = 0.01
         maxaper = 2.0
      endif
C     Model Number = 199, Hor, Class E
      if (jcalc .eq. 199) then
         anper = 23
         minaper = 0.01
         maxaper = 2.0
      endif

c     Bindi et al. (2013) - Crustal, Horizontal, Rjb, Vs
C     Model Number = 295, Hor, Class A
      if (jcalc .eq. 295) then
         anper = 26
         minaper = 0.01
         maxaper = 3.0
      endif

c     Grazier and Kalkan (Nov. 2012) Currently Unpublished Update
c         to Jan/Feb. 2011 SRL model
C     Model Number = 90, Hor
      if (jcalc .eq. 90) then
         anper = 36
         minaper = 0.01
         maxaper = 10.0
      endif

C     Model Number = 91, Hor
      if (jcalc .eq. 91) then
         anper = 36
         minaper = 0.01
         maxaper = 10.0
      endif

C     Model Number = 92, Hor
      if (jcalc .eq. 92) then
         anper = 36
         minaper = 0.01
         maxaper = 10.0
      endif


C     DCPP Common Model Forms
C     ASK model
C     Model Number = 8001, Hor
      if (jcalc .eq. 8001) then
         anper = 5
         minaper = 0.01
         maxaper = 2.0
      endif

C     BSSA model
C     Model Number = 8002, Hor
      if (jcalc .eq. 8002) then
         anper = 5
         minaper = 0.01
         maxaper = 2.0
      endif

C     Common model 001
C     Model Number = 8003, Hor
      if (jcalc .eq. 8003) then
         anper = 5
         minaper = 0.01
         maxaper = 2.0
      endif

C     Common model 002
C     Model Number = 8004, Hor
      if (jcalc .eq. 8004) then
         anper = 5
         minaper = 0.01
         maxaper = 2.0
      endif

C     Common model 003
C     Model Number = 8005, Hor
      if (jcalc .eq. 8005) then
         anper = 5
         minaper = 0.01
         maxaper = 2.0
      endif

C     Common model 004
C     Model Number = 8006, Hor
      if (jcalc .eq. 8006) then
         anper = 5
         minaper = 0.01
         maxaper = 2.0
      endif

C     Common model 005
C     Model Number = 8007, Hor
      if (jcalc .eq. 8007) then
         anper = 5
         minaper = 0.01
         maxaper = 2.0
      endif

C     Common model 006
C     Model Number = 8008, Hor
      if (jcalc .eq. 8008) then
         anper = 5
         minaper = 0.01
         maxaper = 2.0
      endif

C     Common model 007
C     Model Number = 8009, Hor
      if (jcalc .eq. 8009) then
         anper = 5
         minaper = 0.01
         maxaper = 2.0
      endif

C     Common model 008
C     Model Number = 8010, Hor
      if (jcalc .eq. 8010) then
         anper = 5
         minaper = 0.01
         maxaper = 2.0
      endif

C     Common model 009
C     Model Number = 8011, Hor
      if (jcalc .eq. 8011) then
         anper = 5
         minaper = 0.01
         maxaper = 2.0
      endif


C     PVNGS Common Model Forms
C     ASK model
C     Model Number = 9001, Hor
      if (jcalc .eq. 9001) then
         anper = 5
         minaper = 0.01
         maxaper = 2.0
      endif
C     Bindi model
C     Model Number = 9002, Hor
      if (jcalc .eq. 9002) then
         anper = 5
         minaper = 0.01
         maxaper = 2.0
      endif
C     001 model
C     Model Number = 9003, Hor
      if (jcalc .eq. 9003) then
         anper = 5
         minaper = 0.01
         maxaper = 2.0
      endif
C     002 model
C     Model Number = 9004, Hor
      if (jcalc .eq. 9004) then
         anper = 5
         minaper = 0.01
         maxaper = 2.0
      endif
C     003 model
C     Model Number = 9005, Hor
      if (jcalc .eq. 9005) then
         anper = 5
         minaper = 0.01
         maxaper = 2.0
      endif
C     004 model
C     Model Number = 9006, Hor
      if (jcalc .eq. 9006) then
         anper = 5
         minaper = 0.01
         maxaper = 2.0
      endif
C     005 model
C     Model Number = 9007, Hor
      if (jcalc .eq. 9007) then
         anper = 5
         minaper = 0.01
         maxaper = 2.0
      endif
C     006 model
C     Model Number = 9008, Hor
      if (jcalc .eq. 9008) then
         anper = 5
         minaper = 0.01
         maxaper = 2.0
      endif
C     007 model
C     Model Number = 9009, Hor
      if (jcalc .eq. 9009) then
         anper = 5
         minaper = 0.01
         maxaper = 2.0
      endif
C     008 model
C     Model Number = 9010, Hor
      if (jcalc .eq. 9010) then
         anper = 5
         minaper = 0.01
         maxaper = 2.0
      endif
C     009 model
C     Model Number = 9011, Hor
      if (jcalc .eq. 9011) then
         anper = 5
         minaper = 0.01
         maxaper = 2.0
      endif





c     Check for valid jcalc
      if ( anper .lt. 0 ) then
C         write (*,*)') jcalc
         return
      endif

      return
      end
!DEC$ FIXEDFORMLINESIZE:132
C Empirical Attenuation Models
C Last Modified: 7/17/2015
C with haz43b
c ------------------------------------------------------------
C *** New Lin et al. (2011) Taiwan crustal hangingwall model SOIL (jClac=316)************
c ------------------------------------------------------------
      subroutine Lin_hw_soil(mag, rupDist, specT, period1, lnY, sigma, iflag )

      parameter (MAXPER=16)
      REAL Period(MAXPER), C1(MAXPER), C2(MAXPER), C3(MAXPER), C4(MAXPER), C5(MAXPER)
      real mag, rupDist, lnY, sigma, period1, sig(MAXPER)
      real specT, c1T,  c2T,  c3T, c4T,  c5T
      integer nper, count1, count2,iflag

C.....MODEL COEFFICIENTS.....................
      data C1  / -3.248,-3.008,-1.994,-1.408, -1.508, -3.226, -4.050, -5.293,
     +           -6.307,-7.209,-8.309,-9.868,-11.216,-12.806,-13.886,-14.606/

      data  C2 /  0.943,0.905,0.809,0.765,0.785,0.870,0.999,1.165,
     +            1.291,1.395,1.509,1.691,1.798,2.005,2.099,2.160/

      data  C3 /  -1.471,-1.451,-1.500,-1.551,-1.551,-1.211,-1.205,-1.167,
     +            -1.134,-1.099,-1.044,-1.004,-0.965,-0.975,-1.007,-1.114/

      data  C4 /  0.1000,0.1100,0.2510,0.2800,0.2800,0.0450,0.0300,0.0110,
     +            0.0042,0.0016,0.0006,0.0004,0.0003,0.0005,0.0004,0.0004/

      data  C5 /  0.648,0.638,0.518,0.510,0.500,0.708,0.788,0.958,
     +            1.118,1.258,1.408,1.485,1.522,1.528,1.548,1.562/

      data  sig / 0.627, 0.622, 0.686, 0.709, 0.713, 0.686, 0.656, 0.655,
     +            0.653, 0.642, 0.650, 0.676, 0.721, 0.759, 0.787, 0.820/

      data  period/   .00, .01, .06,  .09,  .10,  .20,  .30,  .40,
     +                .50, .60, .75, 1.00, 1.50, 2.00, 3.00, 5.00/
C Find the requested spectral period and corresponding coefficients
      nPer = 16

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c3T     = c3(1)
         c4T     = c4(1)
         c5T     = c5(1)
         sigT    = sig(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) )
     +         then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Lin (2011) crustal atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2)
     +             ,specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2)
     +             ,specT,c2T,iflag)
      call interp (period(count1),period(count2),c3(count1),c3(count2)
     +             ,specT,c3T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2)
     +             ,specT,c4T,iflag)
      call interp (period(count1),period(count2),c5(count1),c5(count2)
     +             ,specT,c5T,iflag)
      call interp (period(count1),period(count2),sig(count1),
     +             sig(count2), specT,sigT,iflag)

 1011 period1 = specT

      lnY = C1T + C2T*mag +
     1      C3T*alog(rupdist+C4T*exp(C5T*mag))

      sigma = sigT

c     Convert units to spectral acceleration in gal
      lnY = lnY + 6.89

      return
      end

c ------------------------------------------------------------
C *** New Lin et al. (2011) Taiwan crustal hangingwall model ROCK (jClac=317)************
c ------------------------------------------------------------
      subroutine Lin_hw_rock(mag, rupDist, specT, period1, lnY, sigma, iflag )

      parameter (MAXPER=16)
      REAL Period(MAXPER), C1(MAXPER), C2(MAXPER), C3(MAXPER), C4(MAXPER), C5(MAXPER)
      real mag, rupDist, lnY, sigma, period1, sig(MAXPER)
      real specT, c1T,  c2T,  c3T, c4T,  c5T
      integer nper, count1, count2,iflag

C.....MODEL COEFFICIENTS.....................
      data C1  / -3.279,-3.253,-1.738,-1.237, -1.103, -2.767, -4.440, -5.630,
     +           -6.746,-7.637,-8.641,-9.978,-11.617,-12.611,-13.303,-13.914/

      data  C2 /  1.035,1.018,0.908,0.841,0.841,0.980,1.186,1.335,
     +            1.456,1.557,1.653,1.800,1.976,2.058,2.036,1.958/

      data  C3 /  -1.651,-1.629,-1.769,-1.750,-1.765,-1.522,-1.438,-1.414,
     +            -1.365,-1.348,-1.313,-1.286,-1.284,-1.261,-1.234,-1.156/

      data  C4 /  0.1520,0.1596,0.3270,0.4780,0.4550,0.0970,0.0275,0.0140,
     +            0.0060,0.0033,0.0015,0.0008,0.0004,0.0005,0.0013,0.0012/

      data  C5 /  0.623,0.612,0.502,0.402,0.417,0.627,0.823,0.932,
     +            1.057,1.147,1.257,1.377,1.508,1.497,1.302,1.241/

      data  sig / 0.651, 0.647, 0.701, 0.747, 0.750, 0.696, 0.685, 0.682,
     +            0.678, 0.666, 0.652, 0.670, 0.682, 0.706, 0.702, 0.725/

      data  period/   .00, .01, .06,  .09,  .10,  .20,  .30,  .40,
     +                .50, .60, .75, 1.00, 1.50, 2.00, 3.00, 5.00/
C Find the requested spectral period and corresponding coefficients
      nPer = 16

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c3T     = c3(1)
         c4T     = c4(1)
         c5T     = c5(1)
         sigT    = sig(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) )
     +         then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Lin (2011) crustal atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2)
     +             ,specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2)
     +             ,specT,c2T,iflag)
      call interp (period(count1),period(count2),c3(count1),c3(count2)
     +             ,specT,c3T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2)
     +             ,specT,c4T,iflag)
      call interp (period(count1),period(count2),c5(count1),c5(count2)
     +             ,specT,c5T,iflag)
      call interp (period(count1),period(count2),sig(count1),
     +             sig(count2), specT,sigT,iflag)

 1011 period1 = specT

      lnY = C1T + C2T*mag +
     1      C3T*alog(rupdist+C4T*exp(C5T*mag))

      sigma = sigT

c     Convert units to spectral acceleration in gal
      lnY = lnY + 6.89

      return
      end

c ------------------------------------------------------------
C *** New Lin et al. (2011) Taiwan crustal footwall model SOIL (jClac=316)************
c ------------------------------------------------------------
      subroutine Lin_fw_soil(mag, rupDist, specT, period1, lnY, sigma, iflag )

      parameter (MAXPER=16)
      REAL Period(MAXPER), C1(MAXPER), C2(MAXPER), C3(MAXPER), C4(MAXPER), C5(MAXPER)
      real mag, rupDist, lnY, sigma, period1, sig(MAXPER)
      real specT, c1T,  c2T,  c3T, c4T,  c5T
      integer nper, count1, count2,iflag

C.....MODEL COEFFICIENTS.....................
      data C1  / -3.218,-3.306,-1.896,-1.256, -1.306, -3.310, -4.880, -5.628,
     +           -6.284,-7.252,-8.355,-9.860,-11.750,-12.827,-13.795,-14.256/

      data  C2 /  0.935,0.937,0.977,0.907,0.907,0.957,1.219,1.239,
     +            1.311,1.429,1.536,1.692,1.919,2.025,2.036,2.120/

      data  C3 /  -1.464,-1.454,-1.744,-1.754,-1.734,-1.291,-1.294,-1.181,
     +            -1.160,-1.128,-1.065,-0.995,-0.997,-0.996,-0.989,-1.144/

      data  C4 /  0.1250,0.1000,0.1400,0.1510,0.1510,0.1000,0.0310,0.0122,
     +            0.0057,0.0025,0.0008,0.0005,0.0005,0.0005,0.0005,0.0007/

      data  C5 /  0.650,0.670,0.720,0.720,0.710,0.700,0.910,1.020,
     +            1.130,1.260,1.420,1.504,1.544,1.536,1.490,1.480/

      data  sig / 0.630, 0.624, 0.690, 0.723, 0.726, 0.690, 0.663, 0.654,
     +            0.651, 0.640, 0.648, 0.673, 0.713, 0.756, 0.784, 0.822/

      data  period/   .00, .01, .06,  .09,  .10,  .20,  .30,  .40,
     +                .50, .60, .75, 1.00, 1.50, 2.00, 3.00, 5.00/
C Find the requested spectral period and corresponding coefficients
      nPer = 16

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c3T     = c3(1)
         c4T     = c4(1)
         c5T     = c5(1)
         sigT    = sig(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) )
     +         then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Lin (2011) crustal atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2)
     +             ,specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2)
     +             ,specT,c2T,iflag)
      call interp (period(count1),period(count2),c3(count1),c3(count2)
     +             ,specT,c3T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2)
     +             ,specT,c4T,iflag)
      call interp (period(count1),period(count2),c5(count1),c5(count2)
     +             ,specT,c5T,iflag)
      call interp (period(count1),period(count2),sig(count1),
     +             sig(count2), specT,sigT,iflag)

 1011 period1 = specT

      lnY = C1T + C2T*mag +
     1      C3T*alog(rupdist+C4T*exp(C5T*mag))

      sigma = sigT

c     Convert units to spectral acceleration in gal
      lnY = lnY + 6.89

      return
      end

c ------------------------------------------------------------
C *** New Lin et al. (2011) Taiwan crustal footwall model ROCK (jClac=317)************
c ------------------------------------------------------------
      subroutine Lin_fw_rock(mag, rupDist, specT, period1, lnY, sigma, iflag )

      parameter (MAXPER=16)
      REAL Period(MAXPER), C1(MAXPER), C2(MAXPER), C3(MAXPER), C4(MAXPER), C5(MAXPER)
      real mag, rupDist, lnY, sigma, period1, sig(MAXPER)
      real specT, c1T,  c2T,  c3T, c4T,  c5T
      integer nper, count1, count2,iflag

C.....MODEL COEFFICIENTS.....................
      data C1  / -3.232,-3.193,-2.643, -2.093, -1.993, -2.659, -4.387, -5.634,
     +           -6.391,-7.217,-8.646,-10.031,-11.633,-12.599,-13.311,-13.957/

      data  C2 /  1.047,1.017,0.937,0.907,0.907,0.960,1.169,1.328,
     +            1.410,1.507,1.684,1.777,1.930,1.989,1.971,1.981/

      data  C3 /  -1.662,-1.612,-1.602,-1.642,-1.652,-1.512,-1.422,-1.399,
     +            -1.347,-1.315,-1.304,-1.240,-1.219,-1.174,-1.140,-1.183/

      data  C4 /  0.1950,0.2100,0.2300,0.2300,0.1900,0.1482,0.0440,0.0220,
     +            0.0180,0.0080,0.0028,0.0007,0.0005,0.0005,0.0009,0.0049/

      data  C5 /  0.630,0.590,0.550,0.550,0.590,0.610,0.790,0.900,
     +            0.950,1.081,1.237,1.416,1.463,1.464,1.306,1.011/

      data  sig / 0.654, 0.649, 0.710, 0.756, 0.756, 0.699, 0.686, 0.682,
     +            0.734, 0.726, 0.707, 0.717, 0.678, 0.703, 0.700, 0.725/

      data  period/   .00, .01, .06,  .09,  .10,  .20,  .30,  .40,
     +                .50, .60, .75, 1.00, 1.50, 2.00, 3.00, 5.00/
C Find the requested spectral period and corresponding coefficients
      nPer = 16

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c3T     = c3(1)
         c4T     = c4(1)
         c5T     = c5(1)
         sigT    = sig(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) )
     +         then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Lin (2011) crustal atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2)
     +             ,specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2)
     +             ,specT,c2T,iflag)
      call interp (period(count1),period(count2),c3(count1),c3(count2)
     +             ,specT,c3T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2)
     +             ,specT,c4T,iflag)
      call interp (period(count1),period(count2),c5(count1),c5(count2)
     +             ,specT,c5T,iflag)
      call interp (period(count1),period(count2),sig(count1),
     +             sig(count2), specT,sigT,iflag)

 1011 period1 = specT

      lnY = C1T + C2T*mag +
     1      C3T*alog(rupdist+C4T*exp(C5T*mag))

      sigma = sigT

c     Convert units to spectral acceleration in gal
      lnY = lnY + 6.89

      return
      end

c ------------------------------------------------------------
C *** Lin (2009) Doctoral thesis ******************
c ------------------------------------------------------------
      subroutine Lin2009(mag, rupDist, specT, period1, lnY, sigma, vs,
     + iflag, ftype )

      parameter (MAXPER=32)
      REAL Period(MAXPER), C1(MAXPER), C3(MAXPER), C4(MAXPER)
      REAL C6(MAXPER), C7(MAXPER), Phi1(MAXPER), sig(MAXPER)
      real mag, rupDist, lnY, sigma  , VS ,c2 ,c5 ,c8
      real ftype , F_RV, F_NM, period1
      real specT, c1T,  c3T, c4T,  c6T, c7T, phi1T
      integer nper, count1, count2,iflag


C.....MODEL COEFFICIENTS.....................
      data Period / 0.0, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08,
     +0.09 , 0.10, 0.15, 0.20, 0.25, 0.30, 0.35, 0.40, 0.45, 0.50, 0.60,
     + 0.70, 0.80, 0.90, 1.00, 1.50, 2.00, 2.50, 3.00, 3.50, 4.00,
     + 4.40, 5.00 /

      data c1  / 1.0109, 1.0209, 1.0416, 1.1961, 1.3834, 1.5612, 1.6907,
     + 1.7673, 1.8689, 1.9430, 2.0218, 2.0521, 2.0333, 1.9887, 1.8827,
     + 1.7459, 1.6821, 1.6139, 1.5288, 1.3081, 1.1383, 1.0757, 0.9935,
     + 0.8642, 0.3150, -0.1760, -0.4103, -0.5019, -0.7206, -0.9383,
     + -1.0405, -1.3694  /

      data c3  / 0.0000, -0.0003, 0.0017, 0.0038, 0.0087, 0.0153, 0.0210
     + , 0.0261, 0.0273, 0.0276, 0.0254, 0.0100, -0.0091, -0.0293,
     + -0.0459, -0.0600, -0.0737, -0.0861, -0.0960, -0.1133, -0.1292,
     + -0.1442, -0.1577, -0.1687, -0.2006, -0.2190, -0.2319, -0.2431,
     + -0.2479, -0.2493, -0.2559, -0.2535 /

      data c4  / -1.1634, -1.1633, -1.1668, -1.2028, -1.2499, -1.2957,
     + -1.3218, -1.3336, -1.3440, -1.3435, -1.3409, -1.2578, -1.1769,
     + -1.1153, -1.0726, -1.0307, -1.0116, -0.9939, -0.9755, -0.9407,
     + -0.9193, -0.9167, -0.9104, -0.9001, -0.8696, -0.8328, -0.8415,
     + -0.8684, -0.8689, -0.8618, -0.8472, -0.8287 /

      data c6  / -0.1907, -0.1922, -0.1942, -0.1990, -0.1959, -0.1922,
     + -0.1984, -0.2011, -0.1947, -0.2011, -0.1817, -0.1851, -0.2265,
     + -0.2355, -0.2163, -0.1949, -0.1955, -0.2011, -0.2089, -0.2212,
     + -0.1900, -0.1865, -0.1643, -0.1505, -0.0377, 0.0780, 0.0907,
     +  0.1195, 0.1206, 0.1267, 0.1655, 0.2208 /

      data c7  / 0.1322, 0.1314, 0.1311, 0.1314, 0.1362, 0.1417, 0.1500,
     + 0.1557, 0.1627, 0.1589, 0.1607, 0.1212, 0.0999, 0.0994, 0.1036,
     + 0.1029, 0.1099, 0.1178, 0.1142, 0.1016, 0.1036, 0.1058, 0.1165,
     + 0.1372, 0.1572, 0.1660, 0.1648, 0.1790, 0.1629, 0.1262, 0.1486,
     + 0.1648 /

      data phi1  / -0.4741, -0.4738, -0.4700, -0.4741, -0.4806, -0.4911,
     + -0.4900, -0.4920, -0.4944, -0.4910, -0.4825, -0.4804, -0.4350,
     + -0.4101, -0.4361, -0.4507, -0.4734, -0.4927, -0.5035, -0.5546,
     + -0.6037, -0.6319, -0.6577, -0.6916, -0.7582, -0.7863, -0.7939,
     + -0.7754, -0.7673, -0.7457, -0.7042, -0.6955 / !Phi1


      data sig / 0.5363, 0.5360, 0.5349, 0.5419, 0.5506, 0.5607, 0.5718,
     + 0.5800, 0.5887, 0.5894, 0.5911, 0.5812, 0.5715, 0.5715, 0.5768,
     + 0.5739, 0.5696, 0.5699, 0.5681, 0.5731, 0.5703, 0.5723, 0.5736,
     + 0.5741, 0.5743, 0.5696, 0.5521, 0.5296, 0.5256, 0.5285, 0.5239,
     + 0.5240 /

C Find the requested spectral period and corresponding coefficients
      nPer = 32

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         c1T     = c1(1)
         c3T     = c3(1)
         c4T     = c4(1)
         c6T     = c6(1)
         c7T     = c7(1)
         phi1T   = phi1(1)
         sigT    = sig(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) )
     +         then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Lin (2009) Horizontal atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2)
     +             ,specT,c1T,iflag)
      call interp (period(count1),period(count2),c3(count1),c3(count2)
     +             ,specT,c3T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2)
     +             ,specT,c4T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2)
     +             ,specT,c6T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2)
     +             ,specT,c7T,iflag)
      call interp (period(count1),period(count2),phi1(count1)
     +             ,phi1(count2),specT,phi1T,iflag)
      call interp (period(count1),period(count2),sig(count1),
     +             sig(count2), specT,sigT,iflag)

 1011 period1 = specT

c     Set the fault mechanism term.
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C      -1       Normal                   -120 < Rake < -60.0
C     1, 0.5    Reverse and Rev/Obl        30 < Rake < 150.0
C     0,-0.5    Strike-Slip and NMl/Obl        Otherwise
         if (ftype .eq. -1) then
            F_RV = 0.0
            F_NM = 1.0
         elseif (ftype .ge. 0.5) then
            F_RV = 1.0
            F_NM = 0.0
         else
            F_RV = 0.0
            F_NM = 0.0
         endif

C     Compute the ground motions.
      c2 = 0.3822
      c5 = 0.1722
      c8 = 1.5184 !H

c Magnitude scaling
        if (Mag .le. 6.3) then
           r1 = c2 * (Mag-6.3)
         else
           r1 = (-c8*c5)*(Mag-6.3)
        endif

      lnY = r1 + c1T + c3T*((8.5-Mag)**2)
     +     + (c4T+c5*(Mag-6.3))*alog(sqrt(Rupdist**2 + (exp(c8))**2))
     +     +  c6T*F_NM  + c7T*F_RV  + phi1T*alog(Vs/1130)

      sigma = sigT

c     Convert units to spectral acceleration in gal
      lnY = lnY + 6.89

      return
      end

c ------------------------------------------------------------
C *** TG09221 (2012) Report: TNGA ATTEN ******************
c ------------------------------------------------------------
      subroutine TG09221_2012(mag, rupDist, specT, period1, lnY, sigma,
     +vs, iflag, ftype )

      parameter (MAXPER=106)
      REAL Period(MAXPER), C1(MAXPER), C3(MAXPER), C4(MAXPER)
      REAL C6(MAXPER), C7(MAXPER), Phi1(MAXPER), sig(MAXPER)
      real mag, rupDist, lnY, sigma  , VS ,c2 ,c5 ,c8
      real ftype , F_RV, F_NM
      real specT, c1T,  c3T, c4T,  c6T, c7T, phi1T
      integer nper, count1, count2,iflag



C.....MODEL COEFFICIENTS.....................
      data period / 0.0, 0.01, 0.02, 0.022, 0.025, 0.029, 0.03, 0.032,
     +0.035, 0.036, 0.04, 0.042, 0.044, 0.045, 0.046, 0.048, 0.05, 0.055
     +,0.06, 0.065, 0.067, 0.07, 0.075, 0.08, 0.085, 0.09, 0.095, 0.1,
     +0.11, 0.12, 0.13, 0.133, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.2,
     +0.22, 0.24, 0.25, 0.26, 0.28, 0.29, 0.3, 0.32, 0.34, 0.35, 0.36,
     +0.38, 0.4, 0.42, 0.44, 0.45, 0.46, 0.48, 0.5, 0.55, 0.6, 0.65,
     +0.667, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1, 1.1, 1.2, 1.3, 1.4, 1.5
     +, 1.6, 1.7, 1.8, 1.9, 2, 2.2, 2.4, 2.5, 2.6, 2.8, 3, 3.2, 3.4, 3.5
     +, 3.6, 3.8, 4, 4.2, 4.4, 4.6, 4.8, 5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5,
     + 9, 9.5, 10 /

      data c1  /  1.3979, 1.4069, 1.4159, 1.4491, 1.4955, 1.5804, 1.6016
     +, 1.6423, 1.7017, 1.7272, 1.8259, 1.8686, 1.9111, 1.9345, 1.9566,
     +1.9999,2.0390, 2.1336, 2.2167, 2.2760, 2.2949, 2.3191, 2.3688,
     +2.4204,2.4539, 2.4822, 2.5116, 2.5394, 2.5675, 2.5749, 2.5519,
     +2.5388,2.5060, 2.4755, 2.4498, 2.4090, 2.3590, 2.3267, 2.3015,
     +2.2307,2.1619, 2.1322, 2.0926, 2.0320, 2.0119, 1.9988, 1.9627,
     +1.9283,1.9069, 1.8812, 1.8405, 1.8006, 1.7530, 1.7102, 1.6983,
     +1.6824,1.6374, 1.5897, 1.4532, 1.3448, 1.2526, 1.2301, 1.1925,
     +1.1277,1.0771, 1.0178, 0.9502, 0.8649, 0.7693, 0.6114, 0.4751,
     +0.3619,0.2645, 0.1667, 0.0782, -0.0145, -0.1075, -0.2007, -0.2795,
     +-0.4395, -0.5726, -0.6316, -0.6953, -0.8150, -0.9282, -1.0357,
     +-1.1346, -1.1780, -1.2245, -1.3238, -1.4226, -1.5270, -1.6251,
     +-1.7127, -1.8017, -1.8939, -2.1013, -2.3053, -2.4776, -2.6386,
     +-2.7980, -2.9512, -3.0910, -3.2297, -3.3597, -3.4859 /

      data c3  /  0.0, -0.0006, 0.0015, 0.0016, 0.0023, 0.0032, 0.0035,
     +0.0042, 0.0053, 0.0056, 0.0074, 0.0083, 0.0094, 0.0099, 0.0104,
     +0.0116,0.0128, 0.0155, 0.0175, 0.0197, 0.0207, 0.0220, 0.0229,
     +0.0223,0.0221, 0.0215, 0.0203, 0.0190, 0.0162, 0.0136, 0.0104,
     +0.0096,0.0079, 0.0044, 0.0014, -0.0008, -0.0032, -0.0068, -0.0105,
     +-0.0176, -0.0237, -0.0266, -0.0295, -0.0355, -0.0390, -0.0424,
     +-0.0485, -0.0546, -0.0571, -0.0592, -0.0634, -0.0676, -0.0717,
     +-0.0756, -0.0777, -0.0797, -0.0831, -0.0862, -0.0937, -0.1012,
     +-0.1083, -0.1107, -0.1150, -0.1214, -0.1272, -0.1322, -0.1374,
     +-0.1417, -0.1453, -0.1528, -0.1586, -0.1640, -0.1687, -0.1723,
     +-0.1759, -0.1787, -0.1808, -0.1833, -0.1861, -0.1894, -0.1914,
     +-0.1922, -0.1927, -0.1932, -0.1940, -0.1945, -0.1950, -0.1952,
     +-0.1953, -0.1948, -0.1942, -0.1936, -0.1934, -0.1933, -0.1930,
     +-0.1923, -0.1914, -0.1902, -0.1891, -0.1876, -0.1864, -0.1849,
     +-0.1838, -0.1829, -0.1822, -0.1811 /

      data c4  / -1.2273,-1.2261,-1.2265, -1.2340, -1.2448, -1.2648,
     +-1.2698,-1.2796, -1.2938, -1.2998, -1.3230, -1.3325, -1.3431,
     +-1.3486,-1.3539, -1.3647, -1.3743, -1.3935, -1.4078, -1.4180,
     +-1.4208,-1.4237, -1.4299, -1.4326, -1.4315, -1.4270, -1.4219,
     +-1.4169,-1.4039, -1.3861, -1.3626, -1.3552, -1.3379, -1.3149,
     +-1.2949,-1.2752, -1.2545, -1.2364, -1.2201, -1.1845, -1.1554,
     +-1.1419,-1.1276, -1.1038, -1.0955, -1.0885, -1.0739, -1.0605,
     +-1.0543,-1.0482, -1.0390, -1.0312, -1.0232, -1.0161, -1.0138,
     +-1.0110,-1.0030, -0.9958, -0.9767, -0.9667, -0.9595, -0.9591,
     +-0.9593,-0.9560, -0.9561, -0.9546, -0.9499, -0.9426, -0.9347,
     +-0.9239,-0.9200, -0.9183, -0.9197, -0.9204, -0.9218, -0.9229,
     +-0.9231,-0.9223, -0.9216, -0.9212, -0.9283, -0.9326, -0.9361,
     +-0.9449,-0.9507, -0.9559, -0.9608, -0.9644, -0.9667, -0.9693,
     +-0.9703,-0.9706, -0.9708, -0.9718, -0.9710, -0.9701, -0.9712,
     +-0.9698,-0.9717, -0.9733, -0.9723, -0.9712, -0.9702, -0.9674,
     +-0.9647,-0.9634 /

      data c6  / -0.1934,-0.1921, -0.1782, -0.1773, -0.1767, -0.1684,
     +-0.1714,-0.1701, -0.1539, -0.1474, -0.1347, -0.1382, -0.1354,
     +-0.1350,-0.1361, -0.1351, -0.1347, -0.1282, -0.1351, -0.1263,
     +-0.1275,-0.1270, -0.1330, -0.1321, -0.1338, -0.1407, -0.1445,
     +-0.1479,-0.1382, -0.1483, -0.1692, -0.1757, -0.1847, -0.2013,
     +-0.2270,-0.2293, -0.2238, -0.2241, -0.2180, -0.2181, -0.2132,
     +-0.2203,-0.2245, -0.2371, -0.2378, -0.2422, -0.2473, -0.2513,
     +-0.2548,-0.2567, -0.2564, -0.2484, -0.2437, -0.2478, -0.2448,
     +-0.2410,-0.2307, -0.2215, -0.2286, -0.2231, -0.2189, -0.2139,
     +-0.2001,-0.1919, -0.1789, -0.1703, -0.1666, -0.1705, -0.1746,
     +-0.1839,-0.2018, -0.2127, -0.2170, -0.2209, -0.2225, -0.2233,
     +-0.2190,-0.2098, -0.2003, -0.2123, -0.2298, -0.2352, -0.2368,
     +-0.2322,-0.2395, -0.2443, -0.2344, -0.2297, -0.2253, -0.2187,
     +-0.2138,-0.2100, -0.2080, -0.2106, -0.2173, -0.2269, -0.2400,
     +-0.2517,-0.2558, -0.2511, -0.2471, -0.2378, -0.2231, -0.2134,
     +-0.2082,-0.1998 /

      data c7  /  0.1122,0.1117, 0.1129, 0.1128, 0.1118, 0.1126, 0.1131,
     +0.1148, 0.1183, 0.1200, 0.1233, 0.1251, 0.1287, 0.1299, 0.1311,
     +0.1348,0.1372, 0.1421, 0.1449, 0.1513, 0.1547, 0.1564, 0.1666,
     +0.1759,0.1815, 0.1824, 0.1832, 0.1856, 0.1887, 0.1764, 0.1641,
     +0.1639,0.1605, 0.1492, 0.1391, 0.1345, 0.1326, 0.1351, 0.1367,
     +0.1304,0.1281, 0.1217, 0.1157, 0.1015, 0.0975, 0.0939, 0.0824,
     +0.0759,0.0751, 0.0728, 0.0670, 0.0620, 0.0636, 0.0654, 0.0655,
     +0.0663,0.0614, 0.0540, 0.0411, 0.0336, 0.0255, 0.0255, 0.0275,
     +0.0294,0.0335, 0.0373, 0.0383, 0.0379, 0.0403, 0.0350, 0.0320,
     +0.0320,0.0337, 0.0315, 0.0325, 0.0329, 0.0299, 0.0305, 0.0270,
     +0.0200,0.0149, 0.0120, 0.0092, 0.0040, 0.0005, -0.0070, -0.0175,
     +-0.0208,-0.0239, -0.0356, -0.0477, -0.0506, -0.0533, -0.0599,
     +-0.0694,-0.0772, -0.0830, -0.0848, -0.0864, -0.0852, -0.0819,
     +-0.0786,-0.0770, -0.0747, -0.0717, -0.0665 /

      data phi1	 /  -0.4359,-0.4344, -0.4306, -0.4312, -0.4325, -0.4351,
     +-0.4355, -0.4354, -0.4370, -0.4375, -0.4397, -0.4408, -0.4429,
     +-0.4445,-0.4458, -0.4476, -0.4488, -0.4462, -0.4435, -0.4435,
     +-0.4431,-0.4440, -0.4444, -0.4440, -0.4455, -0.4415, -0.4368,
     +-0.4324,-0.4293, -0.4309, -0.4341, -0.4339, -0.4326, -0.4301,
     +-0.4254,-0.4201, -0.4168, -0.4149, -0.4101, -0.4000, -0.3927,
     +-0.3907,-0.3924, -0.3971, -0.4030, -0.4067, -0.4130, -0.4200,
     +-0.4217, -0.4246, -0.4316, -0.4405, -0.4508, -0.4593, -0.4627,
     +-0.4645,-0.4689, -0.4766, -0.5058, -0.5398, -0.5696, -0.5789,
     +-0.5936,-0.6099, -0.6196, -0.6296, -0.6419, -0.6554, -0.6709,
     +-0.6998,-0.7255, -0.7423, -0.7573, -0.7676, -0.7786, -0.7875,
     +-0.7946,-0.8052, -0.8126, -0.8251, -0.8350, -0.8357, -0.8386,
     +-0.8458,-0.8472, -0.8491, -0.8519, -0.8527, -0.8524, -0.8505,
     +-0.8457,-0.8431, -0.8420, -0.8407, -0.8380, -0.8367, -0.8383,
     +-0.8371,-0.8306, -0.8189, -0.8085, -0.7991, -0.7900, -0.7823,
     +-0.7744,-0.7684 /

      data sig / 0.6740, 0.6734, 0.6729, 0.6753, 0.6790, 0.6856,
     +0.6872, 0.6904, 0.6953, 0.6967, 0.7044, 0.7077, 0.7112, 0.7127,
     +0.7145, 0.7178, 0.7218, 0.7302, 0.7378, 0.7433, 0.7459, 0.7488,
     +0.7537, 0.7573, 0.7593, 0.7606, 0.7639, 0.7658, 0.7623, 0.7585,
     +0.7504, 0.7475, 0.7432, 0.7369, 0.7315, 0.7237, 0.7163, 0.7105,
     +0.7048, 0.6993, 0.6973, 0.6946, 0.6934, 0.6906, 0.6901, 0.6901,
     +0.6906, 0.6916, 0.6918, 0.6917, 0.6905, 0.6886, 0.6890, 0.6900,
     +0.6910, 0.6912, 0.6902, 0.6889, 0.6908, 0.6930, 0.6933, 0.6944,
     +0.6960, 0.6985, 0.7011, 0.7026, 0.7050, 0.7071, 0.7090, 0.7164,
     +0.7237, 0.7302, 0.7331, 0.7362, 0.7406, 0.7432, 0.7456, 0.7488,
     +0.7517, 0.7564, 0.7629, 0.7664, 0.7704, 0.7775, 0.7841, 0.7917,
     +0.7965, 0.7988, 0.8015, 0.8064, 0.8111, 0.8168, 0.8215, 0.8248,
     +0.8280, 0.8308, 0.8343, 0.8345, 0.8330, 0.8301, 0.8264, 0.8219,
     +0.8173, 0.8130, 0.8087, 0.8046     /

C Find the requested spectral period and corresponding coefficients
      nPer = 106

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         c1T     = c1(1)
         c3T     = c3(1)
         c4T     = c4(1)
         c6T     = c6(1)
         c7T     = c7(1)
         phi1T   = phi1(1)
         sigT    = sig(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) )
     +         then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif
c      C      write(*,*) 'specT = ', specT

C      write (*,*)
C      write (*,*) 'TG09221 (2012) Horizontal atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2)
     +             ,specT,c1T,iflag)
      call interp (period(count1),period(count2),c3(count1),c3(count2)
     +             ,specT,c3T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2)
     +             ,specT,c4T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2)
     +             ,specT,c6T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2)
     +             ,specT,c7T,iflag)
      call interp (period(count1),period(count2),phi1(count1)
     +             ,phi1(count2),specT,phi1T,iflag)
      call interp (period(count1),period(count2),sig(count1),
     +             sig(count2), specT,sigT,iflag)

 1011 period1 = specT

c     Set the fault mechanism term.
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C      -1       Normal                   -120 < Rake < -60.0
C     1, 0.5    Reverse and Rev/Obl        30 < Rake < 150.0
C     0,-0.5    Strike-Slip and NMl/Obl        Otherwise
         if (ftype .eq. -1) then
            F_RV = 0.0
            F_NM = 1.0
         elseif (ftype .ge. 0.5) then
            F_RV = 1.0
            F_NM = 0.0
         else
            F_RV = 0.0
            F_NM = 0.0
         endif

C     Compute the ground motions.
      c2 = 0.3700
      c5 = 0.2086
      c8 = 1.4877 !H

c Magnitude scaling
        if (Mag .le. 6.3) then
           r1 = c2 * (Mag-6.3)
        else
           r1 = (-c8*c5)*(Mag-6.3)
        endif

      lnY = r1 + c1T + c3T*(8.5-Mag)**2 + (c4T+c5*(Mag-6.3))*
     +      alog(sqrt(Rupdist**2 + (exp(c8))**2)) + c6T*F_NM + c7T*F_RV +
     +      phi1T*alog(Vs/1130)

      sigma = sigT

c     Convert units to spectral acceleration in gal
      lnY = lnY + 6.89

      return
      end

c ------------------------------------------------------------
C *** NCREE (2011)  Vs30>=360m/sec  ******************
c ------------------------------------------------------------
      subroutine NCREE_2011(mag, rupDist, specT, period1, lnY, sigma )

      parameter (MAXPER=30)
      REAL Period(MAXPER), C1(MAXPER), C3(MAXPER), C4(MAXPER)
      REAL sig(MAXPER)
      real mag, rupDist, lnY, sigma   ,c2(MAXPER) ,c5(MAXPER)
      real specT, c1T, c2T,  c3T, c4T,  c5T
      integer nper, count1, count2,iflag


C.....MODEL COEFFICIENTS.....................
      data Period / 0.01, 0.02, 0.03, 0.04, 0.05, 0.07, 0.1, 0.15, 0.2,
     + 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8,
     + 1, 1.5, 2, 3, 4, 5, 6, 8, 10 /

      data C1      / 0.0052, 0.0053, 0.0055, 0.0058, 0.0062, 0.0077,
     +0.0086, 0.0095, 0.0094, 0.0092, 0.0086, 0.0080, 0.0073, 0.0068,
     +0.0063, 0.0058, 0.0054, 0.0050, 0.0046, 0.0044, 0.0041, 0.0033,
     +0.0023, 0.0016, 0.0010, 0.0007, 0.0006, 0.0004, 0.0003, 0.0002 /

      data C2      / 1.7295, 1.7298, 1.7299, 1.7301, 1.7303, 1.7305,
     +1.7308, 1.7313, 1.7308, 1.7303, 1.7302, 1.7300, 1.7299, 1.7298,
     +1.7297, 1.7296, 1.7295, 1.7294, 1.7294, 1.7293, 1.7293, 1.7292,
     +1.7292, 1.7293, 1.7293, 1.7293, 1.7293, 1.7293, 1.7293, 1.7293 /

      data C3      / 2.0655, 2.0653, 2.0653, 2.0652, 2.0651, 2.0649,
     +2.0648, 2.0645, 2.0648, 2.0650, 2.0651, 2.0652, 2.0653, 2.0653,
     +2.0654, 2.0655, 2.0655, 2.0656, 2.0656, 2.0656, 2.0657, 2.0657,
     +2.0657, 2.0655, 2.0654, 2.0654, 2.0654, 2.0654, 2.0654, 2.0654 /

      data C4      / 0.1207, 0.1203, 0.1202, 0.1200, 0.1197, 0.1194,
     +0.1185, 0.1179, 0.1187, 0.1194, 0.1195, 0.1197, 0.1198, 0.1200,
     +0.1201, 0.1201, 0.1202, 0.1203, 0.1203, 0.1204, 0.1204, 0.1205,
     +0.1205, 0.1209, 0.1210, 0.1211, 0.1211, 0.1211, 0.1210, 0.1210 /

      data C5      / 0.7968, 0.7960, 0.7958, 0.7954, 0.7949, 0.7944,
     +0.7933, 0.7923, 0.7936, 0.7947, 0.7949, 0.7951, 0.7953, 0.7954,
     +0.7955, 0.7956, 0.7956, 0.7957, 0.7957, 0.7958, 0.7958, 0.7959,
     +0.7959, 0.7961, 0.7962, 0.7962, 0.7962, 0.7962, 0.7962, 0.7962 /

      data sig / 0.7477, 0.7604, 0.7745, 0.7962, 0.8280, 0.8828,
     +0.9078, 0.8531, 0.7823, 0.7342, 0.7231, 0.7267, 0.7356, 0.7384,
     +0.7437, 0.7528, 0.7553, 0.7620, 0.7740, 0.7906, 0.8123, 0.8654,
     +0.9011, 0.9166, 0.9241, 0.9404, 0.9681, 0.9807, 0.9708, 0.9820 /


C Find the requested spectral period and corresponding coefficients
      nPer = 30

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c3T     = c3(1)
         c4T     = c4(1)
         c5T     = c5(1)
         sigT    = sig(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=1,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) )
     +         then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif
cC      write(*,*) 'specT = ', specT

C      write (*,*)
C      write (*,*) 'NCREE (2011) Horizontal atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2)
     +             ,specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2)
     +             ,specT,c2T,iflag)
      call interp (period(count1),period(count2),c3(count1),c3(count2)
     +             ,specT,c3T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2)
     +             ,specT,c4T,iflag)
      call interp (period(count1),period(count2),c5(count1),c5(count2)
     +             ,specT,c5T,iflag)
      call interp (period(count1),period(count2),sig(count1),
     +             sig(count2), specT,sigT,iflag)

 1011 period1 = specT

      lnY = alog(c1T) + c2T*Mag + (-c3T)*alog(Rupdist + c4T*exp(c5T*mag)
     + )

      sigma = sigT

c     Convert units to spectral acceleration in gal
      lnY = lnY + 6.89

      return
      end
C     Various Attenuation Models
c ---------------------------------------------------------------------
      Subroutine Ambraseys_2005 ( m, dist, ftype, specT,
     1                     period2, lnY, sigma, iflag )

      parameter (MAXPER=62)
      REAL Period(MAXPER)
      REAL a1(MAXPER), a2(MAXPER), a3(MAXPER), a4(MAXPER),  a5(MAXPER),
     1      a6(MAXPER), a7(MAXPER), a8(MAXPER), a9(MAXPER), a10(MAXPER)
      real sig1_a(MAXPER), sig1_b(MAXPER), sig2_a(MAXPER), sig2_b(MAXPER)

      REAL M, Dist
      REAL period2, ftype, SS, SA
      real Fn, Ft, Fo, logY, sig1, sig2, lnY, sigma

      real a1T, a2T, a3T, a4T, a5T, a6T, a7T, a8T, a9T, a10T
      real sig1_aT,  sig1_bT, sig2_aT, sig2_bT
      integer iflag, count1, count2

      data period / 0.000, 0.050, 0.055, 0.060, 0.065, 0.070, 0.075, 0.080,
     1           0.085, 0.090, 0.095, 0.100, 0.110, 0.120, 0.130, 0.140,
     2           0.150, 0.160, 0.170, 0.180, 0.190, 0.200, 0.220, 0.240,
     3           0.260, 0.280, 0.300, 0.320, 0.340, 0.360, 0.380, 0.400,
     4           0.420, 0.440, 0.460, 0.480, 0.500, 0.550, 0.600, 0.650,
     5           0.700, 0.750, 0.800, 0.850, 0.900, 0.950, 1.000, 1.100,
     6           1.200, 1.300, 1.400, 1.500, 1.600, 1.700, 1.800, 1.900,
     7           2.000, 2.100, 2.200, 2.300, 2.400, 2.500 /
      data a1  / 2.522, 3.247, 3.125, 3.202, 3.442, 3.504, 3.472, 3.526,
     1           3.320, 3.309, 3.479, 3.596, 3.453, 3.330, 3.249, 2.993,
     2           2.725, 2.738, 2.692, 2.665, 2.713, 2.632, 2.483, 2.212,
     3           2.058, 1.896, 1.739, 1.728, 1.598, 1.477, 1.236, 1.070,
     4           0.998, 1.045, 0.980, 0.874, 0.624, 0.377, 0.359, 0.130,
     5          -0.014, -0.307, -0.567, -0.519, -0.485, -1.133, -1.359, -1.675,
     6          -1.982, -2.226, -2.419, -2.639, -2.900, -2.695, -3.209, -3.313,
     7          -3.063, -3.043, -3.068, -3.996, -4.108, -4.203 /

      data a2 / -0.142, -0.225, -0.206, -0.212, -0.242, -0.249, -0.240, -0.248,
     1          -0.215, -0.211, -0.240, -0.258, -0.239, -0.214, -0.195, -0.154,
     2          -0.111, -0.120, -0.114, -0.110, -0.118, -0.109, -0.088, -0.051,
     3          -0.036, -0.010, 0.009, 0.001, 0.020, 0.034, 0.071, 0.091,
     4           0.096, 0.085, 0.093, 0.103, 0.139, 0.174, 0.158, 0.182,
     5           0.198, 0.236, 0.279, 0.262, 0.249, 0.369, 0.403, 0.437,
     6           0.477, 0.511, 0.533, 0.550, 0.587, 0.564, 0.630, 0.647,
     7           0.586, 0.578, 0.575, 0.740, 0.758, 0.768 /

      data a3 / -3.184, -3.525, -3.418, -3.444, -3.571, -3.576, -3.521, -3.520,
     1          -3.381, -3.353, -3.420, -3.511, -3.398, -3.300, -3.254, -3.088,
     2          -2.909, -2.912, -2.907, -2.907, -2.989, -2.990, -2.941, -2.823,
     3          -2.878, -2.732, -2.667, -2.688, -2.667, -2.641, -2.534, -2.474,
     4          -2.469, -2.540, -2.564, -2.530, -2.410, -2.317, -2.343, -2.294,
     5          -2.305, -2.201, -2.083, -2.177, -2.246, -1.957, -1.848, -1.711,
     6          -1.636, -1.605, -1.541, -1.443, -1.351, -1.564, -1.410, -1.424,
     7          -1.372, -1.435, -1.448, -0.829, -0.755, -0.714 /

      data a4 /  0.314, 0.359, 0.345, 0.347, 0.365, 0.367, 0.358, 0.358,
     1           0.336, 0.332, 0.345, 0.360, 0.345, 0.329, 0.321, 0.297,
     2           0.270, 0.274, 0.275, 0.276, 0.288, 0.289, 0.281, 0.265,
     3           0.263, 0.251, 0.244, 0.251, 0.246, 0.244, 0.227, 0.219,
     4           0.220, 0.231, 0.234, 0.231, 0.212, 0.196, 0.206, 0.202,
     5           0.205, 0.191, 0.170, 0.186, 0.199, 0.143, 0.124, 0.108,
     6           0.095, 0.089, 0.080, 0.074, 0.060, 0.086, 0.069, 0.067,
     7           0.070, 0.080, 0.083, -0.025, -0.038, -0.044 /

      data a5 /  7.6, 7.4, 7.1, 7.4, 7.7, 7.9, 8.0, 8.1, 8.0, 7.9, 7.8,
     1           7.9, 7.9, 8.0, 8.2, 8.2, 8.3, 8.2, 8.2, 8.1, 8.1, 8.1,
     2           7.9, 7.6, 7.3, 7.5, 7.1, 7.1, 7.2, 6.9, 6.7, 6.3, 5.9,
     3           6.3, 6.3, 6.2, 6.1, 6.1, 5.4, 5.0, 4.8, 4.7, 5.2, 4.9,
     4           4.5, 5.5, 6.0, 5.5, 5.4, 5.5, 6.0, 4.9, 5.2, 6.5, 5.4,
     5           5.9, 4.2, 4.3, 4.2, 5.1, 5.3, 5.1 /

      data a6 /  0.137, 0.098, 0.085, 0.079, 0.069, 0.064, 0.064, 0.069,
     1           0.067, 0.064, 0.062, 0.065, 0.077, 0.070, 0.069, 0.065,
     2           0.067, 0.085, 0.091, 0.098, 0.112, 0.124, 0.136, 0.156,
     3           0.179, 0.193, 0.192, 0.207, 0.216, 0.230, 0.247, 0.256,
     4           0.259, 0.269, 0.278, 0.286, 0.289, 0.293, 0.311, 0.318,
     5           0.327, 0.318, 0.332, 0.341, 0.354, 0.353, 0.357, 0.373,
     6           0.389, 0.395, 0.408, 0.405, 0.387, 0.380, 0.391, 0.386,
     7           0.421, 0.404, 0.394, 0.349, 0.338, 0.325 /

      data a7 /  0.050, 0.005, 0.004, 0.002, 0.001, -0.002, -0.003, -0.002,
     1           0.010, 0.014, 0.014, 0.025, 0.041, 0.045, 0.043, 0.042,
     2           0.044, 0.049, 0.053, 0.049, 0.059, 0.070, 0.078, 0.087,
     3           0.077, 0.074, 0.069, 0.073, 0.078, 0.091, 0.100, 0.097,
     4           0.100, 0.114, 0.122, 0.130, 0.133, 0.137, 0.136, 0.149,
     5           0.154, 0.148, 0.178, 0.183, 0.191, 0.204, 0.211, 0.213,
     6           0.226, 0.215, 0.237, 0.229, 0.216, 0.212, 0.174, 0.175,
     7           0.177, 0.171, 0.160, 0.135, 0.119, 0.103 /

      data  a8 / -0.084, -0.096, -0.096, -0.103, -0.104, -0.114, -0.121, -0.116,
     1           -0.116, -0.119, -0.107, -0.095, -0.082, -0.081, -0.084, -0.074,
     2           -0.074, -0.069, -0.059, -0.057, -0.050, -0.033, -0.033, -0.037,
     3           -0.024, -0.023, -0.034, -0.021, -0.010, -0.013, -0.010, -0.013,
     4           -0.021, -0.016, -0.011, 0.001, 0.004, -0.004, 0.008, 0.005,
     5           -0.011, -0.001, -0.003, 0.005, -0.003, -0.025, -0.013, -0.029,
     6           -0.014, -0.004, 0.028, 0.020, 0.019, 0.001, 0.012, 0.030,
     7            0.008, 0.002, -0.007, -0.010, -0.024, -0.026 /

      data  a9 /  0.062, 0.078, 0.072, 0.073, 0.076, 0.068, 0.063, 0.074,
     1            0.075, 0.065, 0.073, 0.076, 0.072, 0.065, 0.056, 0.053,
     2            0.067, 0.090, 0.087, 0.087, 0.090, 0.090, 0.086, 0.090,
     3            0.120, 0.112, 0.104, 0.118, 0.118, 0.107, 0.106, 0.115,
     4            0.116, 0.114, 0.108, 0.118, 0.126, 0.118, 0.118, 0.107,
     5            0.105, 0.114, 0.083, 0.085, 0.072, 0.024, 0.024, -0.007,
     6           -0.017, -0.025, -0.040, -0.053, -0.056, -0.081, -0.035, -0.033,
     7           -0.019, -0.026, -0.034, -0.031, -0.050, -0.063 /

      data a10 / -0.044, -0.048, -0.050, -0.047, -0.035, -0.043, -0.046, -0.040,
     1           -0.039, -0.048, -0.051, -0.047, -0.052, -0.046, -0.059, -0.067,
     2           -0.060, -0.061, -0.055, -0.054, -0.054, -0.039, -0.024, -0.020,
     3            0.010, 0.027, 0.012, 0.008, 0.005, -0.011, -0.018, -0.020,
     4           -0.024, -0.028, -0.029, -0.024, -0.026, -0.035, -0.028, -0.031,
     5           -0.032, -0.032, -0.062, -0.070, -0.082, -0.109, -0.101, -0.108,
     6           -0.095, -0.085, -0.091, -0.113, -0.131, -0.141, -0.154, -0.145,
     7           -0.174, -0.164, -0.169, -0.125, -0.147, -0.155 /

      data sig1_a / 0.665, 0.708, 0.672, 0.687, 0.693, 0.647, 0.674, 0.756,
     1              0.750, 0.727, 0.772, 0.747, 0.810, 0.753, 0.712, 0.650,
     2              0.634, 0.724, 0.760, 0.736, 0.752, 0.784, 0.778, 0.770,
     3              0.917, 0.947, 0.890, 0.917, 0.896, 0.846, 0.803, 0.793,
     4              0.757, 0.787, 0.766, 0.778, 0.798, 0.841, 0.919, 0.867,
     5              0.803, 0.774, 0.661, 0.694, 0.714, 0.309, 0.305, 0.306,
     6              0.297, 0.296, 0.290, 0.292, 0.296, 0.302, 0.291, 0.290,
     7              0.282, 0.281, 0.283, 0.282, 0.284, 0.285 /

      data sig1_b / -0.065, -0.069, -0.063, -0.065, -0.067, -0.059, -0.063, -0.076,
     1              -0.076, -0.072, -0.079, -0.075, -0.084, -0.075, -0.068, -0.059,
     2              -0.057, -0.072, -0.077, -0.073, -0.076, -0.080, -0.079, -0.077,
     3              -0.101, -0.104, -0.095, -0.098, -0.095, -0.087, -0.080, -0.078,
     4              -0.072, -0.077, -0.074, -0.076, -0.079, -0.085, -0.099, -0.090,
     5              -0.080, -0.076, -0.059, -0.064, -0.067, 0.000, 0.000, 0.000,
     6               0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000,
     7               0.000, 0.000, 0.000, 0.000, 0.000, 0.000 /

      data sig2_a /  0.222, 0.249, 0.235, 0.237, 0.241, 0.225, 0.227, 0.252,
     1               0.258, 0.249, 0.262, 0.249, 0.256, 0.240, 0.236, 0.218,
     2               0.223, 0.251, 0.257, 0.251, 0.250, 0.251, 0.244, 0.235,
     3               0.278, 0.285, 0.267, 0.273, 0.261, 0.254, 0.250, 0.244,
     4               0.233, 0.241, 0.238, 0.240, 0.246, 0.268, 0.308, 0.301,
     5               0.298, 0.278, 0.240, 0.253, 0.263, 0.121, 0.120, 0.118,
     6               0.120, 0.119, 0.115, 0.111, 0.114, 0.117, 0.128, 0.133,
     7               0.134, 0.134, 0.136, 0.137, 0.137, 0.137 /

      data sig2_b / -0.022, -0.024, -0.022, -0.023, -0.023, -0.021, -0.021, -0.025,
     1              -0.026, -0.025, -0.027, -0.025, -0.027, -0.024, -0.023, -0.020,
     2              -0.020, -0.025, -0.026, -0.025, -0.025, -0.026, -0.025, -0.024,
     3              -0.030, -0.031, -0.028, -0.029, -0.028, -0.026, -0.025, -0.024,
     4              -0.022, -0.024, -0.023, -0.023, -0.024, -0.027, -0.033, -0.031,
     5              -0.030, -0.027, -0.021, -0.023, -0.025, 0.000, 0.000, 0.000,
     6               0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000,
     7               0.000, 0.000, 0.000, 0.000, 0.000, 0.000 /

C Find the requested spectral period and corresponding coefficients
      nPer = 62
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         a1T     = a1(1)
         a2T     = a2(1)
         a3T     = a3(1)
         a4T     = a4(1)
         a5T     = a5(1)
         a6T     = a6(1)
         a7T     = a7(1)
         a8T     = a8(1)
         a9T     = a9(1)
         a10T    = a10(1)
         sig1_aT = sig1_a(1)
         sig1_bT = sig1_b(1)
         sig2_aT = sig2_a(1)
         sig2_bT = sig2_b(1)
         goto 1011

      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Ambreseys et al 2005 Horizontal '
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),a1(count1),a1(count2),
     +                   specT,a1T,iflag)
            call interp (period(count1),period(count2),a2(count1),a2(count2),
     +                   specT,a2T,iflag)
            call interp (period(count1),period(count2),a3(count1),a3(count2),
     +                   specT,a3T,iflag)
            call interp (period(count1),period(count2),a4(count1),a4(count2),
     +                   specT,a4T,iflag)
            call interp (period(count1),period(count2),a5(count1),a5(count2),
     +                   specT,a5T,iflag)
            call interp (period(count1),period(count2),a6(count1),a6(count2),
     +                   specT,a6T,iflag)
            call interp (period(count1),period(count2),a7(count1),a7(count2),
     +                   specT,a7T,iflag)
            call interp (period(count1),period(count2),a8(count1),a8(count2),
     +                   specT,a8T,iflag)
            call interp (period(count1),period(count2),a9(count1),a9(count2),
     +                   specT,a9T,iflag)
            call interp (period(count1),period(count2),a10(count1),a10(count2),
     +                   specT,a10T,iflag)
            call interp (period(count1),period(count2),sig1_a(count1),sig1_a(count2),
     +                   specT,sig1_aT,iflag)
            call interp (period(count1),period(count2),sig1_b(count1),sig1_b(count2),
     +                   specT,sig1_bT,iflag)
            call interp (period(count1),period(count2),sig2_a(count1),sig2_a(count2),
     +                   specT,sig2_aT,iflag)
            call interp (period(count1),period(count2),sig2_b(count1),sig2_b(count2),
     +                   specT,sig2_bT,iflag)

 1011 period1 = specT

C.....Compute the Ground motion.......

C.....Set the mechanism term.....................
c     Fo is for "odd"
c     Don't know what to do with that.
      if (ftype .eq. 1.0) then
        Fn = 0.
        Fo = 0
        Ft = 1.
       elseif ( ftype .eq. -1. ) then
        Fn = 1.
        Fo = 0
        Ft = 0.
       else
        Fn = 0.
        Fo = 0
        Ft = 0.
       endif

      ss = 0.0
      sa = 0.0

      logY = a1T + a2T*m +(a3T+a4T*m)*alog10(sqrt(dist**2+a5T**2))
     1       + a6T*Ss + a7T*Sa + a8T*Fn + a9T*Ft + a10T*Fo

C     Convert from m/s^2 to units of gals.
      logY = logY + 2.

c     Convert median to natural log units
      lnY = logY*alog(10.0)

C     Compute Sigma
      sig1 = sig1_aT + sig1_bT*m
      sig2 = sig2_aT + sig2_bT*m
      sigma = sqrt( sig1**2 + sig2**2)

c     Convert sigma to ln units
      sigma = sigma * alog(10.)

      period2 = period1

      return
      end




c ------------------------------------------------------------------
C *** BCHydro Subduction (03/06/2009 - Model) Horizontal ***********
c ------------------------------------------------------------------
      subroutine BCHydroSub_V2 ( mag, fType, rRup, vs30, lnSa, sigma1,
     2           specT, period1, iflag, forearc, depth )

      real mag, fType, rRup, vs30, pgaRock,
     1       lnSa, sigma, tau, period1, sigma1
      integer iflag, forearc

c     Ftype defines an interface event or intraslab events
C     fType    Event Type
C     -------------------
C      0       Interface
C      1       Intraslab
C
C     faba     Note
C     -------------------------
C      0       Non-Backarc site
C      1       Backarc site
C
c     compute pga on rock
      period0 = 0.0
      pgaRock = 0.0
      vs30_rock = 1100.
      faba = real(forearc)

C     Compute Rock PGA
c      call BCHydroSub2008_model ( mag, rRup, vs30_rock, pgaRock, lnSa, sigma, tau,
c     2                     period0, Ftype, iflag, faba, depth )
c      pgaRock = exp(lnSa)

C     Compute regular ground motions.
      call BCHydroSub2008_model ( mag, rRup, vs30, pgaRock, lnSa, sigma, tau,
     2                     specT, Ftype, iflag, faba, depth )

c     compute Sa (given the PGA rock value)
      sigma1 = sqrt( sigma**2 + tau**2 )
      period1 = specT

c     Convert units spectral acceleration in gal
      lnSa = lnSa + 6.89
      return
      end
c ----------------------------------------------------------------------

      subroutine BCHydroSub2008_model ( mag, rRup, vs30, pgaRock, lnSa, sigma, tau,
     2                     specT, Ftype, iflag, faba, depth )

      parameter (MAXPER=22)
      real a1(MAXPER), a2(MAXPER), a3(MAXPER), a5(MAXPER),
     1     a6(MAXPER), a7(MAXPER), a8(MAXPER), a10(MAXPER), a11(MAXPER),
     1     a12(MAXPER), a13(MAXPER), a14(MAXPER)
      real period(MAXPER), b_soil(MAXPER), vLin(MAXPER), sigs(MAXPER), sigt(MAXPER)
      real sigma, lnSa, pgaRock, vs30, rRup,
     1     mag, a4, a9
      real a1T, a3T, a5T, a6T, a8T
      real a10T, a11T, a12T, a13T, a14T, sigsT, sigtT
      real vLinT, b_soilT, sum, Ftype, rhypo
      integer count1, count2, iflag
      real n, c

      data vLin / 1000., 1000., 1000., 1000., 1000., 1000., 1000.,
     1            1000., 1000., 1000., 1000., 1000., 1000., 1000.,
     2            1000., 1000., 1000., 1000., 1000., 1000., 1000., 1000./
      data b_soil /  0.000,  0.000,  0.000,  0.000,  0.000,  0.000, 0.000,
     1               0.000,  0.000,  0.000,  0.000,  0.000,  0.000, 0.000,
     2               0.000,  0.000,  0.000,  0.000,  0.000,  0.000,  0.000, 0.000 /
      data period /  0.00, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25, 0.3, 0.4, 0.5,
     1               0.6,  0.75, 1.00,  1.5, 2.00, 2.5, 3.00, 4.0, 5.0,
     2               6.0, 7.5, 10.00  /

      data a1 / 2.6644, 2.8484, 3.1579, 3.3794, 3.5007, 3.452, 3.2724, 3.1639,
     1          2.9919, 2.6301, 2.3927, 2.1078, 2.2869, 1.497, 1.476,  0.8737,
     2          0.9018, 0.3009, 0.0672, -0.1194, -0.3091, -1.3966 /
      data a2 / -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0,
     1          -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0 /
      data a3 / 1.1521, 1.2787, 1.5491, 1.4819, 1.3539, 1.1972, 1.0734, 0.9436,
     1          0.7281, 0.5553, 0.4292, 0.2757, 0.0205,-0.2536,-0.4601,-0.5586,
     2         -0.6034,-0.6309,-0.5559,-0.4668,-0.3206,-0.2402 /

      data a5 / -0.0071, -0.0076, -0.0079, -0.0082, -0.0082, -0.008,  -0.0078,
     1          -0.0073, -0.0065, -0.0062, -0.0062, -0.0059, -0.0049, -0.0054,
     2          -0.0041, -0.0041, -0.0035, -0.004,  -0.0034, -0.0032, -0.0036, 0.0043 /
      data a6 / 1.6525, 1.993,  2.2121, 2.2901, 2.4929, 2.3676, 2.2501, 2.1631,
     1          1.9101, 1.7412, 1.5027, 1.2842, 0.9797, 0.3446,-0.105, -0.5123,
     2         -0.7693,-1.1911,-1.6938,-2.1727,-2.7298,-3.5885 /
      data a7 / -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0,
     1          -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0 /
      data a8 / -1.2978, -1.4614, -1.6816, -1.6447, -1.4951, -1.3442, -1.2068,
     1          -1.0841, -0.8765, -0.708,  -0.5685, -0.3989, -0.1883,  0.077,
     2           0.2301,  0.3218, 0.3756,   0.4152,  0.3542,  0.24,    0.124, 0.0 /
      data a10 / -0.0071, -0.0071, -0.0066, -0.0066, -0.0071, -0.0073, -0.0069,
     1           -0.007,  -0.007,  -0.007,  -0.0069, -0.0072, -0.007,  -0.0061,
     2           -0.0053, -0.0045, -0.0042, -0.0041, -0.0032, -0.0017, -0.0007, 0.0014 /
      data a11 / 0.0092, 0.009,  0.0092, 0.0103, 0.0098, 0.0102, 0.0101, 0.01,
     1           0.0085, 0.0104, 0.011,  0.0106, 0.0085, 0.0098, 0.0064, 0.0047,
     2           0.0023, 0.0007,-0.0004,-0.0035,-0.0048,-0.0086 /
      data a12 / -0.3887, -0.2674, -0.2095, -0.2302, -0.3215, -0.4166, -0.4824,
     1           -0.5463, -0.6388, -0.6778, -0.7366, -0.794,  -0.8085, -0.791,
     2           -0.7707, -0.7469, -0.7054, -0.6446, -0.6081, -0.5817, -0.5324, -0.4974 /
      data a13 / -0.0076, -0.0043, -0.0114, -0.0074, -0.0156, -0.0078, -0.0034,
     1           -0.003,  -0.0071,  0.0124,  0.0222,  0.025,  -0.0322,  0.0031,
     2           -0.052,  -0.0143, -0.0518, -0.0263, -0.0472, -0.0688, -0.0828, -0.0908 /
      data a14 / 0.0074, 0.0147, 0.0234, 0.0364, 0.0153, 0.0196, 0.0043, -0.0073,
     1          -0.014, -0.0393,-0.0484,-0.0663,-0.0893,-0.1271,-0.1515, -0.1682,
     2          -0.1828,-0.2032,-0.2066,-0.2036,-0.1925,-0.1537 /

      data sigs / 0.61, 0.61, 0.61, 0.61, 0.61, 0.61, 0.61, 0.61, 0.61, 0.61,
     1            0.61, 0.61, 0.61, 0.61, 0.61, 0.61, 0.61, 0.61, 0.61, 0.61,
     2            0.61, 0.61 /
      data sigt /0.42, 0.42, 0.42, 0.42, 0.42, 0.42, 0.42, 0.42, 0.42, 0.42, 0.42,
     1           0.42, 0.42, 0.42, 0.42, 0.42, 0.42, 0.42, 0.42, 0.42, 0.42, 0.42 /

C Constant parameters
      n = 1.18
      c = 1.88
      a4 = 1.73
      a9 = 1.45
      a18 = 0.77

C Find the requested spectral period and corresponding coefficients
      nPer = 22

C First check for the PGA case
      if (specT .eq. 0.0) then
         i1=1
         period1 = period(i1)
         a1T = a1(i1)
         a2T = a2(i1)
         a3T = a3(i1)
         a5T = a5(i1)
         a6T = a6(i1)
         a7T = a7(i1)
         a8T = a8(i1)
         a10T = a10(i1)
         a11T = a11(i1)
         a12T = a12(i1)
         a13T = a13(i1)
         a14T = a14(i1)
         b_soilT = b_soil(i1)
         vLinT   = vLin(i1)
         sigtT = sigt(i1)
         sigsT = sigs(i1)
         goto 1011
      endif

C   For other periods, loop over the spectral period range of the attenuation relationship.
      do i=2,nper-1+3
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'BCHydro Sub (3/2009 Model) Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),a1(count1),a1(count2),
     +                   specT,a1T,iflag)
            call interp (period(count1),period(count2),a2(count1),a2(count2),
     +                   specT,a2T,iflag)
            call interp (period(count1),period(count2),a3(count1),a3(count2),
     +                   specT,a3T,iflag)
            call interp (period(count1),period(count2),a5(count1),a5(count2),
     +                   specT,a5T,iflag)
            call interp (period(count1),period(count2),a6(count1),a6(count2),
     +                   specT,a6T,iflag)
            call interp (period(count1),period(count2),a7(count1),a7(count2),
     +                   specT,a7T,iflag)
            call interp (period(count1),period(count2),a8(count1),a8(count2),
     +                   specT,a8T,iflag)
            call interp (period(count1),period(count2),a10(count1),a10(count2),
     +                   specT,a10T,iflag)
            call interp (period(count1),period(count2),a11(count1),a11(count2),
     +                   specT,a11T,iflag)
            call interp (period(count1),period(count2),a12(count1),a12(count2),
     +                   specT,a12T,iflag)
            call interp (period(count1),period(count2),a13(count1),a13(count2),
     +                   specT,a13T,iflag)
            call interp (period(count1),period(count2),a14(count1),a14(count2),
     +                   specT,a14T,iflag)
            call interp (period(count1),period(count2),b_soil(count1),b_soil(count2),
     +                   specT,b_soilT,iflag)
            call interp (period(count1),period(count2),vLin(count1),vLin(count2),
     +                   specT,vLinT,iflag)
            call interp (period(count1),period(count2),sigs(count1),sigs(count2),
     +                   specT,sigsT,iflag)
            call interp (period(count1),period(count2),sigt(count1),sigt(count2),
     +                   specT,sigtT,iflag)

 1011 period1 = specT

c     Compute distances R1 or R2 depending on Event Type.
      R1 = rRup + 15.0*exp(0.7*(mag-6.0))

C Currently the rRup is set equal to Rhypo for Intraslab events.
      rhypo = rRup
      R2 = rhypo + 15.0*exp(0.0*(mag-6.0))

C Compute the Base Model
C  Interface events
      if (fType .eq. 0) then
          if (mag .lt. 7.25) then
             sum = a1T + a4*(mag-7.25) + a13T*(10.0-mag)**2.0 + a2T * alog(R1) +
     1                  a5T*rRup + a12T*alog(vs30/1000)
          else
             sum = a1T + a18*(mag-7.25) + a13T*(10.0-mag)**2.0 + a2T * alog(R1) +
     1                  a5T*rRup + a12T*alog(vs30/1000)
          endif

C  Intraslab events
      elseif (fType .eq. 1) then
          sum = a6T + a9*(mag-6.0) + a14T*(8.0-mag)**2.0 + a7T * alog(R2) + a10T*rhypo +
     1             a11T*(depth - 60.0) + faba*(a3T + a8T*alog(R2/40.0)) + a12T*alog(vs30/1000)

      else
C         write (*,*) 'Undefined Mechanism for BC Hydro Subduction Attenuation Model.'
C         write (*,*) 'Ftype = ', ftype
C         write (*,*) 'Check input fault file.'
         return
      endif

C     Set sigma values to return
      sigma = sigsT
      tau = sigtT

c     Set SA to return
      lnSa = sum

      return
      end

c ----------------------------------------------------------------------

      subroutine BCHydroSub2008_modelsm ( mag, rRup, vs30, pgaRock, lnSa, sigma, tau,
     2                     specT, Ftype, iflag, faba, depth )

      parameter (MAXPER=22)
      real a1(MAXPER), a2(MAXPER), a3(MAXPER), a4(MAXPER), a5(MAXPER),
     1     a6(MAXPER), a7(MAXPER), a8(MAXPER), a9(MAXPER), a10(MAXPER), a11(MAXPER),
     1     a12(MAXPER), a13(MAXPER), a14(MAXPER), a15(MAXPER), a16(MAXPER)
      real period(MAXPER), b_soil(MAXPER), vLin(MAXPER), sigs(MAXPER), sigt(MAXPER)
      real sigma, lnSa, pgaRock, vs30, rRup, depth,
     1     mag
      real a1T, a2T, a3T, a4T, a5T, a6T, a7T, a8T, a9T
      real a10T, a11T, a12T, a13T, a14T, a15T, a16T, sigsT, sigtT
      real vLinT, b_soilT, sum, Ftype, rhypo
      integer count1, count2, iflag
      real n, c

      data vLin / 1000., 1000., 1000., 1000., 1000., 1000., 1000.,
     1            1000., 1000., 1000., 1000., 1000., 1000., 1000.,
     2            1000., 1000., 1000., 1000., 1000., 1000., 1000., 1000./
      data b_soil /  0.000,  0.000,  0.000,  0.000,  0.000,  0.000, 0.000,
     1               0.000,  0.000,  0.000,  0.000,  0.000,  0.000, 0.000,
     2               0.000,  0.000,  0.000,  0.000,  0.000,  0.000,  0.000, 0.000 /
      data period /  0.00, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25, 0.3, 0.4, 0.5,
     1               0.6,  0.75, 1.00,  1.5, 2.00, 2.5, 3.00, 4.0, 5.0,
     2               6.0, 7.5, 10.00  /

      data a1 / 2.549, 2.771, 2.96, 3.148, 3.222, 3.178, 3.074, 2.996, 2.779, 2.623, 2.449,
     1          2.163, 1.783, 1.302, 0.876, 0.719, 0.399, 0.095, -0.246, -0.583, -0.917, -1.291 /
      data a2 / 2.213, 2.58, 2.88, 3.013, 3.072, 2.962, 2.822, 2.747, 2.583, 2.375, 2.177,
     1          1.907, 1.622, 0.882, 0.402, -0.006, -0.287, -0.819, -1.248, -1.621, -2.134, -2.669 /
      data a3 / -1.54, -1.54, -1.54, -1.54, -1.54, -1.54, -1.54, -1.54, -1.54, -1.54, -1.54,
     1          -1.54, -1.54, -1.54, -1.54, -1.54, -1.54, -1.54, -1.54, -1.54, -1.54, -1.54 /
      data a4 / -0.66, -0.66, -0.66, -0.66, -0.66, -0.66, -0.66, -0.66, -0.66, -0.66, -0.66,
     1          -0.66, -0.66, -0.66, -0.66, -0.66, -0.66, -0.66, -0.66, -0.66, -0.66, -0.66 /
      data a5 / -2.24, -2.24, -2.24, -2.24, -2.24, -2.24, -2.24, -2.24, -2.24, -2.24, -2.24,
     1          -2.24, -2.24, -2.24, -2.24, -2.24, -2.24, -2.24, -2.24, -2.24, -2.24, -2.24 /
      data a6 / -1.4, -1.4, -1.4, -1.4, -1.4, -1.4, -1.4, -1.4, -1.4, -1.4, -1.4, -1.4,
     1          -1.4, -1.4, -1.4, -1.4, -1.4, -1.4, -1.4, -1.4, -1.4, -1.4 /
      data a7 / 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56,
     1          0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56 /
      data a8 / -0.004, -0.004, -0.004, -0.004, -0.0037, -0.0032, -0.0028, -0.0024, -0.0019,
     1         -0.0014, -0.0011, -0.0007, -0.0001, 0.0007, 0.0012, 0.0019, 0.0024, 0.0033,
     2          0.0039, 0.0045, 0.0051, 0.006 /
      data a9 / -0.003, -0.003, -0.003, -0.003, -0.003, -0.003, -0.003, -0.003, -0.003,
     1          -0.003, -0.003, -0.003, -0.003, -0.0016, -0.0006, 0.0002, 0.0008, 0.0018,
     2          0.0026, 0.0032, 0.004, 0.005 /
      data a10 / 1.03, 0.971, 0.993, 0.972, 1.023, 1.033, 0.988, 0.922, 0.851, 0.797,
     1          0.756, 0.707, 0.583, 0.459, 0.316, 0.221, 0.151, 0.065, -0.01, -0.093, -0.143, -0.238 /
      data a11 / -1.2, -1.2, -1.2, -1.2, -1.2, -1.2, -1.132, -1.076, -0.987, -0.919, -0.863,
     1         -0.795, -0.706, -0.582, -0.494, -0.425, -0.369, -0.281, -0.213, -0.157, -0.088, 0.0 /
      data a12 / 0.0108, 0.0108, 0.0114, 0.0122, 0.0112, 0.0113, 0.0116, 0.0113, 0.0093, 0.0114,
     1           0.0122, 0.0118, 0.0097, 0.0112, 0.0079, 0.0061, 0.0037, 0.0025, 0.0015, -0.0009,
     2          -0.0013, -0.0031 /
      data a13 / 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.006,
     1       -0.0179, -0.0272, -0.0348, -0.0468, -0.0561, -0.0637, -0.073, -0.085 /
      data a14 / 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0145, -0.0373, -0.055, -0.0695,
     1        -0.0872, -0.11, -0.1402, -0.1617, -0.1783, -0.1919, -0.2134, -0.23, -0.23,
     1          -0.23, -0.23 /
      data a15 / -0.3727, -0.2656, -0.2236, -0.2405, -0.3219, -0.4054, -0.4618, -0.5079,
     1           -0.5921, -0.6325, -0.6964, -0.7709, -0.787, -0.7901, -0.7687, -0.7518,
     2           -0.6965, -0.644, -0.606, -0.5716, -0.5295, -0.4905 /
      data a16 / -1.4, -1.4, -1.4, -1.4, -1.4, -1.4, -1.4, -1.4, -1.4, -1.4, -1.4, -1.4,
     1           -1.4, -1.4, -1.4, -1.4, -1.4, -1.4, -1.4, -1.4, -1.4, -1.4 /

      data sigs / 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6,
     1            0.6, 0.6, 0.6, 0.576, 0.54, 0.514, 0.493, 0.469, 0.44 /
      data sigt / 0.41, 0.41, 0.41, 0.41, 0.41, 0.41, 0.41, 0.41, 0.41, 0.41, 0.41,
     1            0.41, 0.41, 0.41, 0.41, 0.41, 0.41, 0.41, 0.41, 0.41, 0.41, 0.41 /

C Constant parameters
      n = 1.18
      c = 1.88

C Find the requested spectral period and corresponding coefficients
      nPer = 22

C First check for the PGA case
      if (specT .eq. 0.0) then
         i1=1
         period1 = period(i1)
         a1T = a1(i1)
         a2T = a2(i1)
         a3T = a3(i1)
         a4T = a4(i1)
         a5T = a5(i1)
         a6T = a6(i1)
         a7T = a7(i1)
         a8T = a8(i1)
         a9T = a9(i1)
         a10T = a10(i1)
         a11T = a11(i1)
         a12T = a12(i1)
         a13T = a13(i1)
         a14T = a14(i1)
         a15T = a15(i1)
         a16T = a16(i1)
         b_soilT = b_soil(i1)
         vLinT   = vLin(i1)
         sigtT = sigt(i1)
         sigsT = sigs(i1)
         goto 1011
      endif

C   For other periods, loop over the spectral period range of the attenuation relationship.
      do i=2,nper-1+3
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'BCHydro Sub (3/2009 Model) Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),a1(count1),a1(count2),
     +                   specT,a1T,iflag)
            call interp (period(count1),period(count2),a2(count1),a2(count2),
     +                   specT,a2T,iflag)
            call interp (period(count1),period(count2),a3(count1),a3(count2),
     +                   specT,a3T,iflag)
            call interp (period(count1),period(count2),a4(count1),a4(count2),
     +                   specT,a4T,iflag)
            call interp (period(count1),period(count2),a5(count1),a5(count2),
     +                   specT,a5T,iflag)
            call interp (period(count1),period(count2),a6(count1),a6(count2),
     +                   specT,a6T,iflag)
            call interp (period(count1),period(count2),a7(count1),a7(count2),
     +                   specT,a7T,iflag)
            call interp (period(count1),period(count2),a8(count1),a8(count2),
     +                   specT,a8T,iflag)
            call interp (period(count1),period(count2),a9(count1),a9(count2),
     +                   specT,a9T,iflag)
            call interp (period(count1),period(count2),a10(count1),a10(count2),
     +                   specT,a10T,iflag)
            call interp (period(count1),period(count2),a11(count1),a11(count2),
     +                   specT,a11T,iflag)
            call interp (period(count1),period(count2),a12(count1),a12(count2),
     +                   specT,a12T,iflag)
            call interp (period(count1),period(count2),a13(count1),a13(count2),
     +                   specT,a13T,iflag)
            call interp (period(count1),period(count2),a14(count1),a14(count2),
     +                   specT,a14T,iflag)
            call interp (period(count1),period(count2),a15(count1),a15(count2),
     +                   specT,a15T,iflag)
            call interp (period(count1),period(count2),a16(count1),a16(count2),
     +                   specT,a16T,iflag)
            call interp (period(count1),period(count2),b_soil(count1),b_soil(count2),
     +                   specT,b_soilT,iflag)
            call interp (period(count1),period(count2),vLin(count1),vLin(count2),
     +                   specT,vLinT,iflag)
            call interp (period(count1),period(count2),sigs(count1),sigs(count2),
     +                   specT,sigsT,iflag)
            call interp (period(count1),period(count2),sigt(count1),sigt(count2),
     +                   specT,sigtT,iflag)

 1011 period1 = specT


C     Term needs to be set.
      c4 = 0.0

C Compute the Base Model
C  Interface events
      if (fType .eq. 0) then
          if (mag .lt. 6.5) then
             sum = a1T + a3T*(mag-6.5) + a13T*(10.0-mag)**2.0 +
     1             (a6T + a7T*(mag-6.5)) * alog(Rrup + c4) +
     1                  a8T*Rrup + a15T*alog(vs30/1000.0)
          elseif (mag .le. 7.25) then
             sum = a1T + a4T*(mag-6.5) + a13T*(10.0-mag)**2.0 +
     1             (a6T + a7T*(mag-6.5)) * alog(Rrup + c4) +
     1                  a8T*Rrup + a15T*alog(vs30/1000.0)
          else
             sum = a1T + 0.75*a4T + a5T*(mag-7.25) + a13T*(10.0-mag)**2.0 +
     1             (a6T + a7T*(mag-6.5)) * alog(Rrup + c4) +
     1                  a8T*Rrup + a15T*alog(vs30/1000.0)
          endif

C  Intraslab events
      elseif (fType .eq. 1) then
          if (mag .lt. 6.5) then
             sum = a2T + a3T*(mag-6.5) + a14T*(8.0-mag)**2.0 +
     1             a7T*(mag-6.0)*alog(100.0 + c4) + a16T*alog(rHypo + c4) +
     1             a9T*rHypo + a12T*(depth - 60.0) +
     1             faba*(a10T + a11T*alog((rHypo + c4)/40.0) ) +
     1             a15T*alog(vs30/1000.0)
          elseif (mag .le. 7.25) then
             sum = a2T + a4T*(mag-6.5) + a14T*(8.0-mag)**2.0 +
     1             a7T*(mag-6.0)*alog(100.0 + c4) + a16T*alog(rHypo + c4) +
     1             a9T*rHypo + a12T*(depth - 60.0) +
     1             faba*(a10T + a11T*alog((rHypo + c4)/40.0) ) +
     1             a15T*alog(vs30/1000.0)
          else
             sum = a2T + 0.75*a4T + a5T*(mag-7.25) + a14T*(8.0-mag)**2.0 +
     1             a7T*(mag-6.0)*alog(100.0 + c4) + a16T*alog(rHypo + c4) +
     1             a9T*rHypo + a12T*(depth - 60.0) +
     1             faba*(a10T + a11T*alog((rHypo + c4)/40.0) ) +
     1             a15T*alog(vs30/1000.0)
          endif
      else
C         write (*,*) 'Undefined Mechanism for BC Hydro Subduction Attenuation Model.'
C         write (*,*) 'Ftype = ', ftype
C         write (*,*) 'Check input fault file.'
         return
      endif

C     Set sigma values to return
      sigma = sigsT
      tau = sigtT

c     Set SA to return
      lnSa = sum

      return
      end

c ------------------------------------------------------------------
C *** BCHydro Subduction (06/2010 - Model) Horizontal ***********
c ------------------------------------------------------------------
      subroutine BCHydroSub_V3 ( mag, fType, rRup, vs30, lnSa, sigma1,
     2           specT, period1, iflag, forearc, depth, disthypo, deltac1 )

      real mag, fType, rRup, vs30, pgaRock,
     1       lnSa, sigma, tau, period1, sigma1, disthypo, deltac1
      integer iflag, forearc

c     Ftype defines an interface event or intraslab events
C     fType    Event Type
C     -------------------
C      0       Interface  - use rupture distance
C      1       Intraslab  - use hypocentral distance
C
C     faba     Note
C     -------------------------
C      0       Forearc site
C      1       Backarc site
C

c     compute pga on rock
      period0 = 0.0
      pgaRock = 0.0
      vs30_rock = 1000.
      faba = real(forearc)

C     Compute Rock PGA
      call BCHydroSub2010_model ( mag, rRup, vs30_rock, pgaRock, lnSa, sigma, tau,
     2                     period0, Ftype, iflag, faba, depth, disthypo, deltac1 )
      pgaRock = exp(lnSa)

C     Compute regular ground motions.
      call BCHydroSub2010_model ( mag, rRup, vs30, pgaRock, lnSa, sigma, tau,
     2                     specT, Ftype, iflag, faba, depth, disthypo, deltac1 )

c     compute Sa (given the PGA rock value)
      sigma1 = sqrt( sigma**2 + tau**2 )
      period1 = specT

c     Convert units spectral acceleration in gal
      lnSa = lnSa + 6.89
      return
      end
c ----------------------------------------------------------------------
      subroutine BCHydroSub2010_model ( mag, rRup, vs30, pgaRock, lnSa, sigma, tau,
     2                     specT, Ftype, iflag, faba, depth, disthypo, deltac1 )

      parameter (MAXPER=23)
      real a1(MAXPER), a2(MAXPER),
     1     a6(MAXPER), a7(MAXPER), a8(MAXPER), a10(MAXPER), a11(MAXPER),
     1     a12(MAXPER), a13(MAXPER), a14(MAXPER), a15(MAXPER), a16(MAXPER)
      real period(MAXPER), b_soil(MAXPER), vLin(MAXPER), sigs(MAXPER), sigt(MAXPER)
      real sigma, lnSa, pgaRock, vs30, rRup, disthypo,
     1     mag, a3, a4, a5, a9
      real a1T, a2T, a6T, a7T, a8T
      real a10T, a11T, a12T, a13T, a14T, a15T, a16T, sigsT, sigtT
      real vLinT, b_soilT, sumgm, Ftype
      integer count1, count2, iflag
      real n, c, c4, c1, deltac1, faba

      data period /  0.00, 0.02, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25, 0.3, 0.4, 0.5,
     1               0.6,  0.75, 1.00,  1.5, 2.00, 2.5, 3.00, 4.0, 5.0,
     2               6.0, 7.5, 10.00  /
      data vLin / 865.1, 865.1, 1053.5, 1085.7, 1032.5, 877.6, 748.2, 654.3, 587.1,
     1            503.0,  456.6,  430.3,  410.5, 400.0, 400.0, 400.0, 400.0,
     2            400.0,  400.0,  400.0,  400.0, 400.0, 400.0 /
      data b_soil / -1.186,-1.186, -1.346, -1.471, -1.624, -1.931, -2.188, -2.381, -2.518,
     1               -2.657, -2.669, -2.599, -2.401, -1.955, -1.025, -0.299, 0, 0, 0, 0, 0, 0, 0 /
      data a1 / 4.2203,4.2203, 4.5371, 5.0733, 5.2892, 5.4563, 5.2684, 5.0594, 4.7945,
     1          4.4644, 4.0181, 3.6055, 3.2174, 2.7981, 2.0123, 1.4128, 0.9976,
     2          0.6443, 0.0657, -0.4624, -0.9809, -1.6017, -2.2937 /
      data a2 / -1.35,-1.35, -1.4, -1.45, -1.45, -1.45, -1.4, -1.35, -1.28, -1.18, -1.08, -0.99,
     1          -0.91, -0.85, -0.77, -0.71, -0.67, -0.64, -0.58, -0.54, -0.5, -0.46, -0.4 /
      data a6 / -0.0012,-0.0012, -0.0012, -0.0012, -0.0012, -0.0014, -0.0018, -0.0023, -0.0027,
     1          -0.0035, -0.0044, -0.0050, -0.0058, -0.0062, -0.0064, -0.0064, -0.0064,
     2          -0.0064, -0.0064, -0.0064, -0.0064, -0.0064, -0.0064 /
      data a7 / 1.0988,1.0988, 1.2536, 1.4175, 1.3997, 1.3582, 1.1648, 0.994, 0.8821,
     1          0.7046, 0.5799, 0.5021, 0.3687, 0.1746, -0.082, -0.2821, -0.4108,
     2         -0.4466, -0.4344, -0.4368, -0.4586, -0.4433, -0.4828 /
      data a8 / -1.42,-1.42, -1.65, -1.80, -1.80, -1.69, -1.49, -1.30, -1.18, -0.98, -0.82,
     1          -0.70, -0.54, -0.34, -0.05, 0.12, 0.25, 0.30, 0.30, 0.30, 0.30, 0.30, 0.30 /
      data a10 / 3.12,3.12, 3.37, 3.37, 3.33, 3.25, 3.03, 2.8, 2.59, 2.2, 1.92,
     1            1.7, 1.42, 1.1, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7 /
      data a11 / 0.0130,0.0130, 0.0130, 0.0130, 0.0130, 0.0130, 0.0129, 0.0129,
     1           0.0128, 0.0127, 0.0125, 0.0124, 0.0120, 0.0114, 0.0100,
     2           0.0085, 0.0069, 0.0054, 0.0027, 0.0005, -0.0013, -0.0033, -0.0060 /
      data a12 / 0.980,0.980, 1.288, 1.483, 1.613, 1.882, 2.076, 2.248, 2.348, 2.427,
     1           2.399, 2.273, 1.993, 1.470, 0.408, -0.401, -0.723, -0.673, -0.627,
     2          -0.596, -0.566, -0.528, -0.504 /
      data a13 / -0.0135,-0.0135, -0.0138, -0.0142, -0.0145, -0.0153, -0.0162, -0.0172, -0.0183,
     1           -0.0206, -0.0231, -0.0256, -0.0296, -0.0363, -0.0493, -0.0610, -0.0711,
     2           -0.0798, -0.0935, -0.0980, -0.0980, -0.0980, -0.0980 /
      data a14 / -0.40,-0.40, -0.40, -0.40, -0.40, -0.40, -0.35, -0.31, -0.28, -0.23, -0.19,
     1           -0.16, -0.12, -0.07, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00 /
      data a15 / 0.9969,0.9969, 1.1030, 1.2732, 1.3042, 1.2600, 1.2230, 1.1600, 1.0500,
     1           0.8000, 0.6620, 0.5800, 0.4800, 0.3300, 0.3100, 0.3000, 0.3000,
     2           0.3000, 0.3000, 0.3000, 0.3000, 0.3000, 0.3000 /
      data a16 / -1.00,-1.00, -1.18, -1.36, -1.36, -1.30, -1.25, -1.17, -1.06, -0.78, -0.62,
     1           -0.50, -0.34, -0.14, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00 /
C     Changed sigs=0.60 and tau=0.43 (January 17, 2014). Also changed SSS=0.60
C      data sigs /  0.603,0.603, 0.603, 0.603, 0.603, 0.603, 0.603, 0.603, 0.603, 0.603, 0.603, 0.603, 0.603,
c     1            0.603, 0.603, 0.603, 0.603, 0.603, 0.603, 0.603, 0.603, 0.603, 0.603 /
c      data sigt /  0.482,0.482, 0.482, 0.482, 0.482, 0.482, 0.482, 0.482, 0.482, 0.482, 0.482,
c     1            0.482, 0.482, 0.482, 0.482, 0.482, 0.482, 0.482, 0.482, 0.482, 0.482, 0.482, 0.482 /
      data sigs /  0.60,0.60, 0.60, 0.60, 0.60, 0.60, 0.60, 0.60, 0.60, 0.60, 0.60, 0.60, 0.60,
     1            0.60, 0.60, 0.60, 0.60, 0.60, 0.60, 0.60, 0.60, 0.60, 0.60 /
      data sigt /  0.43,0.43, 0.43, 0.43, 0.43, 0.43, 0.43, 0.43, 0.43, 0.43, 0.43,
     1            0.43, 0.43, 0.43, 0.43, 0.43, 0.43, 0.43, 0.43, 0.43, 0.43, 0.43, 0.43 /

C Constant parameters
      n = 1.18
      c = 1.88
      a3 = 0.1
      a4 = 0.9
      a5 = 0.0
      a9 = 0.4
      c4 = 10.0
      c1 = 7.8

C Find the requested spectral period and corresponding coefficients
      nPer = 23

C First check for the PGA case
      if (specT .eq. 0.0) then
         i1=1
         period1 = period(i1)
         a1T = a1(i1)
         a2T = a2(i1)
         a6T = a6(i1)
         a7T = a7(i1)
         a8T = a8(i1)
         a10T = a10(i1)
         a11T = a11(i1)
         a12T = a12(i1)
         a13T = a13(i1)
         a14T = a14(i1)
         a15T = a15(i1)
         a16T = a16(i1)
         b_soilT = b_soil(i1)
         vLinT   = vLin(i1)
         sigtT = sigt(i1)
         sigsT = sigs(i1)
         goto 1011
      endif

C   For other periods, loop over the spectral period range of the attenuation relationship.
      do i=2,nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'BCHydro Sub (6/2010 Model) Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),a1(count1),a1(count2),
     +                   specT,a1T,iflag)
            call interp (period(count1),period(count2),a2(count1),a2(count2),
     +                   specT,a2T,iflag)
            call interp (period(count1),period(count2),a6(count1),a6(count2),
     +                   specT,a6T,iflag)
            call interp (period(count1),period(count2),a7(count1),a7(count2),
     +                   specT,a7T,iflag)
            call interp (period(count1),period(count2),a8(count1),a8(count2),
     +                   specT,a8T,iflag)
            call interp (period(count1),period(count2),a10(count1),a10(count2),
     +                   specT,a10T,iflag)
            call interp (period(count1),period(count2),a11(count1),a11(count2),
     +                   specT,a11T,iflag)
            call interp (period(count1),period(count2),a12(count1),a12(count2),
     +                   specT,a12T,iflag)
            call interp (period(count1),period(count2),a13(count1),a13(count2),
     +                   specT,a13T,iflag)
            call interp (period(count1),period(count2),a14(count1),a14(count2),
     +                   specT,a14T,iflag)
            call interp (period(count1),period(count2),a15(count1),a15(count2),
     +                   specT,a15T,iflag)
            call interp (period(count1),period(count2),a16(count1),a16(count2),
     +                   specT,a16T,iflag)
            call interp (period(count1),period(count2),b_soil(count1),b_soil(count2),
     +                   specT,b_soilT,iflag)
            call interp (period(count1),period(count2),vLin(count1),vLin(count2),
     +                   specT,vLinT,iflag)
            call interp (period(count1),period(count2),sigs(count1),sigs(count2),
     +                   specT,sigsT,iflag)
            call interp (period(count1),period(count2),sigt(count1),sigt(count2),
     +                   specT,sigtT,iflag)

 1011 period1 = specT

C     Compute the R term and base model based on either Rupture Distance
c         (Interface events) of Hypocentral distance (Intraslab events).
      if (ftype .eq. 0) then
         R = rRup + c4*exp( (mag-6.0)*a9 )
         sumgm = a1T + a4*deltaC1 + (a2T + a14T*ftype + a3*(mag - 7.8))*alog(R) + a6T*rRup + a10T*ftype
      elseif (ftype .eq. 1) then
         R = disthypo + c4*exp( (mag-6.0)*a9 )
         sumgm = a1T + a4*deltaC1 + (a2T + a14T*ftype + a3*(mag - 7.8))*alog(R) + a6T*disthypo + a10T*ftype
      else
C         write (*,*) 'BC Hydro V3 Model not defined for Ftype'
C         write (*,*) 'other than 0 (interface) or 1 (intraslab)'
         return
      endif

C     Base model for Magnitude scaling.
      testmag = (7.8 + deltaC1)
      if (mag .le. testmag ) then
         sumgm = sumgm + a4*(mag-testmag) + a13T*(10.0-mag)**2.0
      else
         sumgm = sumgm + a5*(mag-testmag) + a13T*(10.0-mag)**2.0
      endif

C     Depth Scaling
      sumgm = sumgm + a11T*(depth - 60.0)*ftype

C     Forearc/Backarc scaling
      if (ftype .eq. 1) then
         sumgm = sumgm + (a7T +a8T*alog(max(disthypo,85.0)/40.0))*faba
      elseif (ftype .eq. 0) then
         sumgm = sumgm + (a15T +a16T*alog(max(rRup,100.0)/40.0))*faba
      endif

C     Site Response
      if (vs30 .ge. 1000.0) then
          VsStar = 1000.0
      else
          VsStar = vs30
      endif

      if (vs30 .ge. VlinT) then
         sumgm = sumgm + a12T*alog(VsStar/vLinT) + b_soilT*n*alog(VsStar/vLinT)
      else
         sumgm = sumgm + a12T*alog(VsStar/vLinT) - b_soilT*alog(pgarock + c) +
     1          b_soilT*alog(pgarock + c*(VsStar/vlinT)**n)
      endif

C     Set sigma values to return
      sigma = sigsT
      tau = sigtT

c     Set SA to return
      lnSa = sumgm

      return
      end

c ----------------------------------------------------------------------
      subroutine BCHHR2Vs760 ( saRock, specT, lnSa )

      parameter (MAXPER=16)
      real b1(MAXPER), b2(MAXPER), b3(MAXPER)
      real c1(MAXPER), c2(MAXPER), period(MAXPER)
      real saRock, lnSa, specT
      real b1T, b2T, b3T, c1T, c2T, LsaRock, ampfac
      integer count1, count2, iflag

      data period /  0.00, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 0.15, 0.2, 0.3, 0.5,
     1               1.00, 2.00, 3.3,  5.0, 10.00  /
      data b1 / 0.044, 0.044, -0.219, -0.434, -0.424, -0.267, -0.102, 0.237, 0.29,
     1          0.333, 0.379, 0.481, 0.418, 0.37, 0.307, 0.241 /
      data b2 / -0.16, -0.16, -0.354, -0.273, -0.126, -0.031, 0.015, -0.006, 0.0,
     1          -0.006, 0.019, 0.018, -0.002, 0.0, 0.0, 0.0 /
      data b3 / 0.0072, 0.0072, 0.031, 0.0179, -0.0042, -0.0238, -0.0294,
     1     -0.0333, -0.0384, -0.0289, 0.00 ,0.0174, 0.011, 0.0054, 0.0028, 0.0042 /
      data c1 / -3.0, -3.0, -2.5, -2.5, -2.5, -2.0, -2.0, -1.5, -1.0, -0.5, -2.0, -2.0, -2.5, -3.0, -4.0, -5.0 /
      data c2 / 1.0, 1.0, 1.8, 2.0, 1.9, 1.7, 1.6, 1.4, 1.3, 1.2, 0.9, 0.4, -0.2, -0.8, -1.4, -2.9 /

C Find the requested spectral period and corresponding coefficients
      nPer = 16

C First check for the PGA case
      if (specT .eq. 0.0) then
         i1=1
         period1 = period(i1)
         b1T = b1(i1)
         b2T = b2(i1)
         b3T = b3(i1)
         c1T = c1(i1)
         c2T = c2(i1)
         goto 1011
      endif

C   For other periods, loop over the spectral period range of the attenuation relationship.
      do i=2,nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'BCHydro Hard Rock to Vs760 Amp Factors'
C      write (*,*) 'model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),b1(count1),b1(count2),
     +                   specT,b1T,iflag)
            call interp (period(count1),period(count2),b2(count1),b2(count2),
     +                   specT,b2T,iflag)
            call interp (period(count1),period(count2),b3(count1),b3(count2),
     +                   specT,b3T,iflag)
            call interp (period(count1),period(count2),c1(count1),c1(count2),
     +                   specT,c1T,iflag)
            call interp (period(count1),period(count2),c2(count1),c2(count2),
     +                   specT,c2T,iflag)
 1011 period1 = specT

C     Now compute the amp factor based on the given hard rock spectral acceleration.
C     Convert Hard Rock SA from Gals to G
      LsaRock = saRock - 6.89
C     Check for LsaRock value between bounding values C1 and C2
      if (LsaRock .le. c1T) then
         ampfac = b1T
      elseif (lsaRock .gt. c2T) then
         ampfac = b1T + b2T*(c2T-c1T) + b3T*(c2T-c1T)*(c2T-c1T)
      else
         ampfac = b1T + b2T*(LsaRock-c1T) + b3T*(LsaRock-c1T)*(LsaRock-c1T)
      endif

C     Adjust ground motions and convert back to gals
      lnSa = LsaRock + ampfac + 6.89

      return
      end


C     Various CEUS attenuation Models

c -------------------------------------------------------------------
C *** Silva et al. (2002) 2-Corner, Horizontal *************
c -------------------------------------------------------------------

      subroutine PEA2C ( m, dist, lnY, sig, specT,
     1                  attenName, period1,iflag )

      real lnY, m, dist, sigT, sig, period1
      real specT, c1T, c2T, c4T, c6T, c7T, c10T
      integer nper, count1, count2, iflag
      character*80 attenName

      parameter (MAXPER=26)
      real c1(MAXPER), c2(MAXPER), c4(MAXPER), sigma(MAXPER)
      real c6(MAXPER), c7(MAXPER), c10(MAXPER), period(MAXPER)

      data period / 0.00, 0.02, 0.025, 0.0323, 0.04, 0.05, 0.055, 0.06, 0.07,
     1              0.08, 0.1, 0.12, 0.15, 0.16, 0.2, 0.24, 0.3, 0.4,
     1              0.5, 0.75, 1, 1.6, 2, 3.000, 5, 10 /
      data C1 / 3.54103, 5.06834, 5.03119, 4.86717, 4.69293, 4.0767, 3.99907, 3.92454, 3.7751,
     1          3.624, 3.30684, 2.60454, 2.14018, 1.99361, 1.42831, 0.86777, 0.1092, -0.96872,
     1         -1.95968, -3.77355, -5.47019, -7.68301, -8.7688, -11.04809, -13.88893, -17.74463 /
      data C2 / 0.18904, 0.14806, 0.15779, 0.17018, 0.18262, 0.22547, 0.23357, 0.24169, 0.25773,
     1          0.27369, 0.30373, 0.35667, 0.39715, 0.41219, 0.46988, 0.52085, 0.59537, 0.7137,
     1          0.8081, 0.98718, 1.1259, 1.34978, 1.452, 1.64665, 1.89859, 2.22485 /
      data C4 / 2.7, 2.8, 2.8, 2.8, 2.8, 2.7, 2.7, 2.7, 2.7,
     1          2.7, 2.7, 2.6, 2.6, 2.6, 2.6, 2.6, 2.6, 2.6,
     1          2.6, 2.6, 2.5, 2.5, 2.5, 2.4, 2.3, 2.1 /
      data C6 / -2.97418, -3.08409, -3.06134, -3.03252, -3.00672, -2.9004, -2.88734, -2.87495, -2.85226,
     1          -2.83163, -2.79751, -2.69927, -2.66676, -2.6551, -2.6138, -2.58506, -2.5412, -2.465,
     1          -2.41132, -2.28113, -2.13473, -1.94573, -1.86494, -1.7001, -1.54772, -1.40084 /
      data C7 / 0.19819, 0.19935, 0.19746, 0.1956, 0.19396, 0.1872, 0.18619, 0.18521, 0.18339,
     1          0.1817, 0.17893, 0.17238, 0.16973, 0.16868, 0.16486, 0.16235, 0.15808, 0.15003,
     1          0.14449, 0.13007, 0.1171, 0.09603, 0.08722, 0.07272, 0.06068, 0.05305 /
      data C10 / -0.05814, -0.05361, -0.05377, -0.05434, -0.0552, -0.05647, -0.05717, -0.05791, -0.05952,
     1          -0.06128, -0.06512, -0.06929, -0.07573, -0.07801, -0.08671, -0.09484, -0.10506, -0.11749,
     1          -0.12529, -0.13323, -0.1383, -0.16127, -0.18125, -0.22943, -0.2896, -0.31641 /
c      data sigma / 0.84, 0.8939, 0.8902, 0.8869, 0.8795, 0.8675, 0.8604, 0.8602, 0.8521,
c     1          0.8476, 0.8468, 0.8485, 0.8339, 0.829, 0.826, 0.8272, 0.8358, 0.832,
c     1          0.8426, 0.8815, 0.8739, 0.945, 1.0095, 1.0871, 1.2228, 1.3429 /
      data sigma / 0.7353, 0.7776, 0.7823, 0.7858, 0.7817, 0.7711, 0.7644, 0.7656, 0.7585,
     1       0.7534, 0.7507, 0.7503, 0.7328, 0.7271, 0.7247, 0.7274, 0.7395, 0.7396,
     1       0.7551, 0.805, 0.8021, 0.8874, 0.9591, 1.0462, 1.1933, 1.3243 /

C Find the requested spectral period and corresponding coefficients
      nPer = 26

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c4T     = c4(1)
         c6T     = c6(1)
         c7T     = c7(1)
         c10T     = c10(1)
         sigT     = sigma(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Silva et al. (2002) 2 Corner atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),c10(count1),c10(count2),
     +             specT,c10T,iflag)
      call interp (period(count1),period(count2),sigma(count1),sigma(count2),
     +             specT,sigT,iflag)
 1011 period1 = specT

c     Set atten name
      attenName = 'Silva et al. (2002) 2-Corner'

      lnY = c1T + c2T*M + (c6T+c7T*M)*alog(dist+exp(c4T)) + c10t*(M-6)*(M-6)

c     Convert to spectral acceleration in gal
      lnY = lnY + 6.89

      sig = sigT

      return
      end

c -------------------------------------------------------------------
C *** Silva et al. (2002) 2-Corner-Saturation, Horizontal *************
c -------------------------------------------------------------------

      subroutine PEA2CS ( m, dist, lnY, sig, specT,
     1                  attenName, period1,iflag )

      real lnY, m, dist, sigT, sig, period1
      real specT, c1T, c2T, c4T, c6T, c7T, c10T
      integer nper, count1, count2, iflag
      character*80 attenName

      parameter (MAXPER=26)
      real c1(MAXPER), c2(MAXPER), c4(MAXPER), sigma(MAXPER)
      real c6(MAXPER), c7(MAXPER), c10(MAXPER), period(MAXPER)

      data period /0.00, 0.02, 0.025, 0.0323, 0.04, 0.05, 0.055, 0.06, 0.07,
     1       0.08, 0.1, 0.12, 0.15, 0.16, 0.2, 0.24, 0.3, 0.4,
     1       0.5, 0.75, 1, 1.6, 2, 3.000, 5, 10 /
      data C1 / 5.91196, 7.55648, 7.51145, 7.33736, 6.61204, 6.42423, 6.34238, 6.26384, 6.10708,
     1       5.94942, 5.13706, 4.81663, 4.34277, 4.19281, 3.61568, 3.04705, 2.27626, 1.17695,
     1       0.17104, -1.6801, -3.10841, -5.75016, -6.86049, -9.24347, -12.1791, -16.16329 /
      data C2 / -0.15727, -0.20898, -0.19862, -0.18563, -0.1337, -0.11726, -0.10886, -0.10044, -0.08387,
     1       -0.06741, -0.00173, 0.02793, 0.06911, 0.08441, 0.14311, 0.19471, 0.27031, 0.39078,
     1       0.48663, 0.66971, 0.79561, 1.05061, 1.15548, 1.36201, 1.62451, 1.96535 /
      data C4 / 2.9, 3, 3, 3, 2.9, 2.9, 2.9, 2.9, 2.9,
     1       2.9, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8,
     1       2.8, 2.8, 2.8, 2.7, 2.7, 2.6, 2.5, 2.3 /
      data C6 / -3.42401, -3.55306, -3.52888, -3.49824, -3.37593, -3.34604, -3.33222, -3.31911, -3.29509,
     1       -3.27328, -3.15185, -3.12224, -3.08805, -3.07579, -3.03239, -3.00223, -2.95623, -2.87626,
     1       -2.81997, -2.68318, -2.58562, -2.32003, -2.23472, -2.05193, -1.88291, -1.71374 /
      data C7 / 0.26564, 0.26853, 0.26652, 0.26456, 0.25613, 0.25401, 0.25295, 0.25192, 0.25,
     1       0.24822, 0.23929, 0.23686, 0.23409, 0.233, 0.229, 0.22639, 0.22193, 0.21352,
     1       0.20773, 0.19261, 0.18195, 0.1554, 0.1461, 0.12954, 0.11564, 0.10547 /
      data C10 / -0.07004, -0.06551, -0.06568, -0.06625, -0.06711, -0.06838, -0.06908, -0.06982, -0.07142,
     1       -0.07318, -0.07703, -0.08119, -0.08764, -0.08991, -0.09861, -0.10675, -0.11697, -0.1294,
     1       -0.13719, -0.14513, -0.1502, -0.17317, -0.19315, -0.24133, -0.3015, -0.32832 /
c      data sigma / 0.84, 0.8939, 0.8902, 0.8869, 0.8795, 0.8675, 0.8604, 0.8602, 0.8521,
c     1       0.8476, 0.8468, 0.8485, 0.8339, 0.829, 0.826, 0.8272, 0.8358, 0.832,
c     1       0.8426, 0.8815, 0.8739, 0.945, 1.0095, 1.0871, 1.2228, 1.3429 /
      data sigma / 0.7353, 0.7776, 0.7823, 0.7858, 0.7817, 0.7711, 0.7644, 0.7656, 0.7585,
     1       0.7534, 0.7507, 0.7503, 0.7328, 0.7271, 0.7247, 0.7274, 0.7395, 0.7396,
     1       0.7551, 0.805, 0.8021, 0.8874, 0.9591, 1.0462, 1.1933, 1.3243 /

C Find the requested spectral period and corresponding coefficients
      nPer = 26

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c4T     = c4(1)
         c6T     = c6(1)
         c7T     = c7(1)
         c10T     = c10(1)
         sigT     = sigma(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Silva et al. (2002) 2 Corner-Sat atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),c10(count1),c10(count2),
     +             specT,c10T,iflag)
      call interp (period(count1),period(count2),sigma(count1),sigma(count2),
     +             specT,sigT,iflag)
 1011 period1 = specT

c     Set atten name
      attenName = 'Silva et al. (2002) 2-Corner-Sat'

      lnY = c1T + c2T*M + (c6T+c7T*M)*alog(dist+exp(c4T)) + c10t*(M-6)*(M-6)

c     Convert to spectral acceleration in gal
      lnY = lnY + 6.89

      sig = sigT

      return
      end

c -------------------------------------------------------------------
C *** Silva et al. (2002) 1-Corner-Variable-High, Horizontal *************
c -------------------------------------------------------------------

      subroutine PEA1CVH ( m, dist, lnY, sig, specT,
     1                  attenName, period1,iflag )

      real lnY, m, dist, sigT, sig, period1
      real specT, c1T, c2T, c4T, c6T, c7T, c10T
      integer nper, count1, count2, iflag
      character*80 attenName

      parameter (MAXPER=26)
      real c1(MAXPER), c2(MAXPER), c4(MAXPER), sigma(MAXPER)
      real c6(MAXPER), c7(MAXPER), c10(MAXPER), period(MAXPER)

      data period / 0.00, 0.02, 0.025, 0.0323, 0.04, 0.05, 0.055, 0.06, 0.07,
     1       0.08, 0.1, 0.12, 0.15, 0.16, 0.2, 0.24, 0.3, 0.4,
     1       0.5, 0.75, 1, 1.6, 2, 3.000, 5, 10 /
      data C1 / 5.19757, 7.3541, 6.75933, 6.5773, 6.39121, 6.20019, 6.11753, 6.03843, 5.41104,
     1       5.25826, 4.94207, 4.63032, 4.17095, 4.02502, 3.46126, 2.49641, 1.72806, 0.58917,
     1       -0.51056, -2.67167, -4.46472, -7.70148, -9.12315, -11.97362, -15.20886, -18.80138 /
      data C2 / 0.07129, -0.00721, 0.03739, 0.05102, 0.06416, 0.08062, 0.08905, 0.09752, 0.14236,
     1       0.15855, 0.18877, 0.21818, 0.25933, 0.27487, 0.33544, 0.41405, 0.49782, 0.63923,
     1       0.76645, 1.03112, 1.24156, 1.62326, 1.78482, 2.06358, 2.3499, 2.59958 /
      data C4 / 2.8, 3, 2.9, 2.9, 2.9, 2.9, 2.9, 2.9, 2.8,
     1       2.8, 2.8, 2.8, 2.8, 2.8, 2.8, 2.7, 2.7, 2.7,
     1       2.7, 2.7, 2.7, 2.6, 2.6, 2.5, 2.4, 2.3 /
      data C6 / -3.13247, -3.35245, -3.23117, -3.1992, -3.17073, -3.13898, -3.12417, -3.11001, -3.0004,
     1       -2.97721, -2.93847, -2.90541, -2.86633, -2.85216, -2.80186, -2.69325, -2.64087, -2.5519,
     1       -2.48971, -2.34731, -2.25138, -2.01584, -1.94059, -1.77626, -1.62679, -1.51629 /
      data C7 / 0.20485, 0.21111, 0.203, 0.20091, 0.19905, 0.19672, 0.19554, 0.19437, 0.18726,
     1       0.18528, 0.18204, 0.17924, 0.17597, 0.17467, 0.16992, 0.16254, 0.1574, 0.14804,
     1       0.14173, 0.12639, 0.11635, 0.0946, 0.08684, 0.07329, 0.0623, 0.05717 /
      data C10 / -0.07375, -0.06367, -0.06354, -0.06426, -0.06525, -0.06658, -0.06731, -0.06812, -0.06993,
     1       -0.072, -0.07672, -0.08205, -0.09083, -0.09403, -0.10713, -0.12105, -0.1416, -0.17378,
     1       -0.20549, -0.26186, -0.30377, -0.357, -0.37239, -0.38117, -0.35359, -0.25763 /
      data sigma / 0.7405, 0.7829, 0.7873, 0.7907, 0.7866, 0.7758, 0.7691, 0.7703, 0.7629,
     1       0.7578, 0.7549, 0.7543, 0.7369, 0.7311, 0.7289, 0.7317, 0.7441, 0.7445,
     1       0.7601, 0.8085, 0.8032, 0.8847, 0.9557, 1.0436, 1.1928, 1.325 /

C Find the requested spectral period and corresponding coefficients
      nPer = 26

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c4T     = c4(1)
         c6T     = c6(1)
         c7T     = c7(1)
         c10T     = c10(1)
         sigT     = sigma(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Silva et al. (2002) 1 Corner-Var-High atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),c10(count1),c10(count2),
     +             specT,c10T,iflag)
      call interp (period(count1),period(count2),sigma(count1),sigma(count2),
     +             specT,sigT,iflag)
 1011 period1 = specT

c     Set atten name
      attenName = 'Silva et al. (2002) 1-Corner-Var-High'

      lnY = c1T + c2T*M + (c6T+c7T*M)*alog(dist+exp(c4T)) + c10t*(M-6)*(M-6)

c     Convert to spectral acceleration in gal
      lnY = lnY + 6.89

      sig = sigT

      return
      end

c -------------------------------------------------------------------
C *** Silva et al. (2002) 1-Corner-Variable-Med, Horizontal *************
c -------------------------------------------------------------------

      subroutine PEA1CVM ( m, dist, lnY, sig, specT,
     1                  attenName, period1,iflag )

      real lnY, m, dist, sigT, sig, period1
      real specT, c1T, c2T, c4T, c6T, c7T, c10T
      integer nper, count1, count2, iflag
      character*80 attenName

      parameter (MAXPER=27)
      real c1(MAXPER), c2(MAXPER), c4(MAXPER), sigma(MAXPER)
      real c6(MAXPER), c7(MAXPER), c10(MAXPER), period(MAXPER)

      data period / 0.00, 0.01, 0.02, 0.025, 0.0323, 0.04, 0.05, 0.055, 0.06, 0.07,
     1       0.08, 0.1, 0.12, 0.15, 0.16, 0.2, 0.24, 0.3, 0.4,
     1       0.5, 0.75, 1, 1.6, 2, 3.000, 5, 10 /
      data C1 / 4.0393, 4.0393, 6.07941, 6.02744, 5.37895, 5.2089, 5.03867, 4.96669, 4.89845, 4.33334,
     1       4.20238, 3.92885, 3.65946, 3.26041, 3.13556, 2.27495, 1.79388, 1.12628, 0.13162,
     1       -0.84738, -2.82095, -4.51914, -7.60788, -9.00041, -11.84462, -15.15004, -19.07223 /
      data C2 / 0.10412, 0.10412, 0.03289, 0.04417, 0.08559, 0.09698, 0.11102, 0.11815, 0.12529, 0.16542,
     1       0.17878, 0.20331, 0.22693, 0.25961, 0.2722, 0.344, 0.38804, 0.45746, 0.5789,
     1       0.6896, 0.93101, 1.1322, 1.50586, 1.66899, 1.96, 2.27308, 2.57205 /
      data C4 / 2.7, 2.7, 2.9, 2.9, 2.8, 2.8, 2.8, 2.8, 2.8, 2.7,
     1       2.7, 2.7, 2.7, 2.7, 2.7, 2.6, 2.6, 2.6, 2.6,
     1       2.6, 2.6, 2.6, 2.5, 2.5, 2.4, 2.3, 2.1 /
      data C6 / -2.97465, -2.97465, -3.18403, -3.15877, -3.04366, -3.01742, -2.98849, -2.97508, -2.9623, -2.86188,
     1       -2.84105, -2.8063, -2.7766, -2.74131, -2.72838, -2.61448, -2.58195, -2.53338, -2.45001,
     1       -2.39187, -2.25774, -2.16445, -1.94031, -1.86794, -1.70638, -1.55609, -1.41166 /
      data C7 / 0.19631, 0.19631, 0.20265, 0.20038, 0.19337, 0.19172, 0.18968, 0.18865, 0.18763, 0.1811,
     1       0.17938, 0.17658, 0.17414, 0.17129, 0.17012, 0.16182, 0.15895, 0.1542, 0.14539,
     1       0.13949, 0.12494, 0.11502, 0.09384, 0.08623, 0.07232, 0.06043, 0.05292 /
      data C10 / -0.08874, -0.08874, -0.08044, -0.08027, -0.08079, -0.0815, -0.08242, -0.08293, -0.08349, -0.08477,
     1       -0.08624, -0.08961, -0.09345, -0.09985, -0.10222, -0.11211, -0.12283, -0.1393, -0.16638,
     1       -0.19435, -0.24823, -0.29235, -0.35415, -0.37576, -0.39806, -0.38898, -0.31205 /
      data sigma / 0.7353, 0.7353, 0.7776, 0.7823, 0.7858, 0.7817, 0.7711, 0.7644, 0.7656, 0.7585,
     1       0.7534, 0.7507, 0.7503, 0.7328, 0.7271, 0.7247, 0.7274, 0.7395, 0.7396,
     1       0.7551, 0.805, 0.8021, 0.8874, 0.9591, 1.0462, 1.1933, 1.3243 /

C Find the requested spectral period and corresponding coefficients
      nPer = 27

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c4T     = c4(1)
         c6T     = c6(1)
         c7T     = c7(1)
         c10T     = c10(1)
         sigT     = sigma(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Silva et al. (2002) 1 Corner-Var-Med atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),c10(count1),c10(count2),
     +             specT,c10T,iflag)
      call interp (period(count1),period(count2),sigma(count1),sigma(count2),
     +             specT,sigT,iflag)
 1011 period1 = specT

c     Set atten name
      attenName = 'Silva et al. (2002) 1-Corner-Var-Med'

      lnY = c1T + c2T*M + (c6T+c7T*M)*alog(dist+exp(c4T)) + c10t*(M-6)*(M-6)

c     Convert to spectral acceleration in gal
      lnY = lnY + 6.89

      sig = sigT

      return
      end

c -------------------------------------------------------------------
C *** Silva et al. (2002) 1-Corner-Variable-Low, Horizontal *************
c -------------------------------------------------------------------

      subroutine PEA1CVL ( m, dist, lnY, sig, specT,
     1                  attenName, period1,iflag )

      real lnY, m, dist, sigT, sig, period1
      real specT, c1T, c2T, c4T, c6T, c7T, c10T
      integer nper, count1, count2, iflag
      character*80 attenName

      parameter (MAXPER=26)
      real c1(MAXPER), c2(MAXPER), c4(MAXPER), sigma(MAXPER)
      real c6(MAXPER), c7(MAXPER), c10(MAXPER), period(MAXPER)

      data period / 0.00, 0.02, 0.025, 0.0323, 0.04, 0.05, 0.055, 0.06, 0.07,
     1       0.08, 0.1, 0.12, 0.15, 0.16, 0.2, 0.24, 0.3, 0.4,
     1       0.5, 0.75, 1, 1.6, 2, 3.000, 5, 10 /
      data C1 / 3.42714, 5.43661, 5.39249, 4.76103, 4.60063, 4.44314, 4.37793, 4.31663, 3.7718,
     1       3.65547, 3.41148, 3.1727, 2.81889, 2.71047, 1.91753, 1.4958, 0.91358, 0.04301,
     1       -0.82196, -2.60545, -4.48436, -7.14902, -8.74448, -11.5582, -14.90966, -18.82818 /
      data C2 / 0.10323, 0.03559, 0.04598, 0.08583, 0.09599, 0.1084, 0.11466, 0.12089, 0.15884,
     1       0.17022, 0.19064, 0.2099, 0.23601, 0.24622, 0.30871, 0.34395, 0.40083, 0.50444,
     1       0.59874, 0.81461, 1.01787, 1.36498, 1.53854, 1.83734, 2.17243, 2.50853 /
      data C4 / 2.7, 2.9, 2.9, 2.8, 2.8, 2.8, 2.8, 2.8, 2.7,
     1       2.7, 2.7, 2.7, 2.7, 2.7, 2.6, 2.6, 2.6, 2.6,
     1       2.6, 2.6, 2.5, 2.5, 2.4, 2.3, 2.2, 2.1 /
      data C6 / -2.91721, -3.12848, -3.10501, -2.99272, -2.96783, -2.94065, -2.92815, -2.91626, -2.81861,
     1       -2.79941, -2.76748, -2.74034, -2.70814, -2.69634, -2.58706, -2.55688, -2.51171, -2.43239,
     1       -2.37729, -2.24962, -2.10529, -1.93736, -1.82313, -1.66484, -1.51375, -1.39437 /
      data C7 / 0.19218, 0.19893, 0.19687, 0.19011, 0.18862, 0.18679, 0.18586, 0.18495, 0.17867,
     1       0.17715, 0.17469, 0.17258, 0.17011, 0.16908, 0.16126, 0.15868, 0.15434, 0.14596,
     1       0.1404, 0.12651, 0.11396, 0.09559, 0.08612, 0.07203, 0.05943, 0.05155 /
      data C10 / -0.09443, -0.0876, -0.08744, -0.08783, -0.08835, -0.08901, -0.08938, -0.08978, -0.0907,
     1       -0.09175, -0.09418, -0.09693, -0.10154, -0.10327, -0.11059, -0.11864, -0.13143, -0.15344,
     1       -0.17695, -0.22591, -0.26954, -0.33624, -0.36309, -0.39809, -0.40726, -0.35284 /
      data sigma / 0.7366, 0.779, 0.7837, 0.7873, 0.7833, 0.7729, 0.7662, 0.7676, 0.7605,
     1       0.7556, 0.7531, 0.7529, 0.7357, 0.73, 0.7278, 0.7305, 0.7425, 0.7423,
     1       0.7574, 0.8073, 0.8056, 0.8932, 0.9656, 1.0524, 1.1969, 1.3261 /

C Find the requested spectral period and corresponding coefficients
      nPer = 26

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c4T     = c4(1)
         c6T     = c6(1)
         c7T     = c7(1)
         c10T     = c10(1)
         sigT     = sigma(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Silva et al. (2002) 1 Corner-Var-Low atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),c10(count1),c10(count2),
     +             specT,c10T,iflag)
      call interp (period(count1),period(count2),sigma(count1),sigma(count2),
     +             specT,sigT,iflag)
 1011 period1 = specT

c     Set atten name
      attenName = 'Silva et al. (2002) 1-Corner-Var-Low'

      lnY = c1T + c2T*M + (c6T+c7T*M)*alog(dist+exp(c4T)) + c10t*(M-6)*(M-6)

c     Convert to spectral acceleration in gal
      lnY = lnY + 6.89

      sig = sigT

      return
      end

c -------------------------------------------------------------------
C *** Silva et al. (2002) 1-Corner-Constant-High, Horizontal *************
c -------------------------------------------------------------------

      subroutine PEA1CCH ( m, dist, lnY, sig, specT,
     1                  attenName, period1,iflag )

      real lnY, m, dist, sigT, sig, period1
      real specT, c1T, c2T, c4T, c6T, c7T, c10T
      integer nper, count1, count2, iflag
      character*80 attenName

      parameter (MAXPER=26)
      real c1(MAXPER), c2(MAXPER), c4(MAXPER), sigma(MAXPER)
      real c6(MAXPER), c7(MAXPER), c10(MAXPER), period(MAXPER)

      data period / 0.00, 0.02, 0.025, 0.0323, 0.04, 0.05, 0.055, 0.06, 0.07,
     1       0.08, 0.1, 0.12, 0.15, 0.16, 0.2, 0.24, 0.3, 0.4,
     1       0.5, 0.75, 1, 1.6, 2, 3.000, 5, 10 /
      data C1 / 3.52033, 5.57118, 5.51533, 4.86194, 4.68655, 4.50882, 4.43278, 4.36033, 4.21631,
     1       3.64678, 3.35414, 3.06506, 2.63659, 2.50153, 1.97802, 1.08397, 0.36441, -0.70305,
     1       -1.74607, -3.81429, -5.55701, -8.68001, -10.06892, -12.85572, -16.02752, -19.70343 /
      data C2 / 0.27213, 0.19995, 0.21155, 0.25301, 0.26499, 0.2799, 0.28752, 0.29517, 0.31022,
     1       0.35047, 0.37757, 0.40391, 0.44078, 0.4548, 0.5097, 0.58122, 0.65805, 0.78942,
     1       0.90876, 1.16106, 1.36536, 1.73516, 1.8928, 2.16545, 2.44418, 2.68814 /
      data C4 / 2.7, 2.9, 2.9, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8,
     1       2.7, 2.7, 2.7, 2.7, 2.7, 2.7, 2.6, 2.6, 2.6,
     1       2.6, 2.6, 2.6, 2.5, 2.5, 2.4, 2.3, 2.1 /
      data C6 / -2.98288, -3.18948, -3.16325, -3.04739, -3.02045, -2.99056, -2.97664, -2.96337, -2.93884,
     1       -2.84039, -2.80403, -2.77296, -2.73607, -2.72265, -2.67484, -2.57366, -2.52362, -2.4384,
     1       -2.37871, -2.24164, -2.14802, -1.92392, -1.85191, -1.69535, -1.55334, -1.41959 /
      data C7 / 0.19476, 0.20062, 0.19826, 0.19126, 0.18954, 0.18741, 0.18632, 0.18525, 0.18324,
     1       0.17689, 0.17391, 0.17133, 0.16829, 0.16707, 0.16259, 0.15569, 0.1508, 0.14185,
     1       0.13582, 0.12109, 0.11128, 0.0906, 0.08324, 0.07035, 0.06006, 0.05456 /
      data C10 / -0.05886, -0.04972, -0.04959, -0.05023, -0.05109, -0.05224, -0.05287, -0.05357, -0.05514,
     1       -0.05692, -0.06102, -0.06565, -0.07333, -0.07615, -0.08779, -0.10026, -0.11897, -0.14883,
     1       -0.17883, -0.23358, -0.27558, -0.32977, -0.34592, -0.35582, -0.32899, -0.23554 /
      data sigma / 0.714, 0.7757, 0.7803, 0.7837, 0.7795, 0.7687, 0.7619, 0.763, 0.7556,
     1       0.7505, 0.7474, 0.7468, 0.7288, 0.7228, 0.72, 0.7223, 0.734, 0.7332,
     1       0.7482, 0.7972, 0.7931, 0.8786, 0.9514, 1.0412, 1.1907, 1.3212 /

C Find the requested spectral period and corresponding coefficients
      nPer = 26

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c4T     = c4(1)
         c6T     = c6(1)
         c7T     = c7(1)
         c10T     = c10(1)
         sigT     = sigma(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Silva et al. (2002) 1 Corner-Const-High atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),c10(count1),c10(count2),
     +             specT,c10T,iflag)
      call interp (period(count1),period(count2),sigma(count1),sigma(count2),
     +             specT,sigT,iflag)
 1011 period1 = specT

c     Set atten name
      attenName = 'Silva et al. (2002) 1-Corner-Const-High'

      lnY = c1T + c2T*M + (c6T+c7T*M)*alog(dist+exp(c4T)) + c10t*(M-6)*(M-6)

c     Convert to spectral acceleration in gal
      lnY = lnY + 6.89

      sig = sigT

      return
      end

c -------------------------------------------------------------------
C *** Silva et al. (2002) 1-Corner-Constant-Medium, Horizontal *************
c -------------------------------------------------------------------

      subroutine PEA1CCM ( m, dist, lnY, sig, specT,
     1                  attenName, period1,iflag )

      real lnY, m, dist, sigT, sig, period1
      real specT, c1T, c2T, c4T, c6T, c7T, c10T
      integer nper, count1, count2, iflag
      character*80 attenName

      parameter (MAXPER=26)
      real c1(MAXPER), c2(MAXPER), c4(MAXPER), sigma(MAXPER)
      real c6(MAXPER), c7(MAXPER), c10(MAXPER), period(MAXPER)
      data period / 0.00, 0.02, 0.025, 0.0323, 0.04, 0.05, 0.055, 0.06, 0.07,
     1        0.08, 0.1, 0.12, 0.15, 0.16, 0.2, 0.24, 0.3, 0.4,
     1        0.5, 0.75, 1, 1.6, 2, 3.000, 5, 10 /
      data C1 / 3.0073, 5.0311, 4.9836, 4.34502, 4.18017, 4.01659, 3.94814, 3.88344, 3.75552,
     1        3.20588, 2.9469, 2.69216, 2.31425, 2.19706, 1.74233, 0.91433, 0.2849, -0.65379,
     1        -1.58285, -3.4733, -5.12369, -8.14308, -9.51015, -12.32672, -15.60343, -19.48096 /
      data C2 / 0.25858, 0.19, 0.20066, 0.24062, 0.25125, 0.26433, 0.27096, 0.27758, 0.29046,
     1        0.32832, 0.35069, 0.37212, 0.40161, 0.41304, 0.45792, 0.51993, 0.58358, 0.69665,
     1        0.79993, 1.02939, 1.22405, 1.58833, 1.74832, 2.03581, 2.34394, 2.63369 /
      data C4 / 2.7, 2.9, 2.9, 2.8, 2.8, 2.8, 2.8, 2.8, 2.8,
     1        2.7, 2.7, 2.7, 2.7, 2.7, 2.7, 2.6, 2.6, 2.6,
     1        2.6, 2.6, 2.6, 2.5, 2.5, 2.4, 2.3, 2.1 /
      data C6 / -2.94208, -3.15204, -3.12766, -3.01413, -2.98855, -2.96045, -2.94748, -2.93512, -2.91238,
     1        -2.81616, -2.78273, -2.75418, -2.72023, -2.70779, -2.66338, -2.56449, -2.5173, -2.4357,
     1        -2.37885, -2.24741, -2.15471, -1.93245, -1.86136, -1.70046, -1.55118, -1.40816 /
      data C7 / 0.19152, 0.1979, 0.19576, 0.18897, 0.18741, 0.18549, 0.18451, 0.18355, 0.18175,
     1        0.17563, 0.173, 0.17072, 0.16804, 0.16694, 0.16286, 0.15619, 0.15162, 0.14303,
     1        0.13729, 0.12308, 0.11324, 0.09238, 0.08496, 0.07122, 0.0596, 0.05251 /
      data C10 / -0.05571, -0.04818, -0.04804, -0.0485, -0.04913, -0.04994, -0.05038, -0.05087, -0.05199,
     1        -0.05326, -0.05619, -0.05952, -0.06508, -0.06715, -0.07586, -0.08536, -0.10016, -0.12494,
     1        -0.1509, -0.20234, -0.24573, -0.30768, -0.33001, -0.35378, -0.3457, -0.27037 /
      data sigma / 0.7329, 0.7754, 0.7802, 0.7837, 0.7797, 0.7691, 0.7624, 0.7636, 0.7565,
     1        0.7515, 0.7487, 0.7483, 0.7308, 0.7249, 0.7224, 0.7248, 0.7365, 0.7357,
     1        0.7506, 0.8, 0.7972, 0.8842, 0.957, 1.0451, 1.1924, 1.3226 /

C Find the requested spectral period and corresponding coefficients
      nPer = 26

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c4T     = c4(1)
         c6T     = c6(1)
         c7T     = c7(1)
         c10T     = c10(1)
         sigT     = sigma(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Silva et al. (2002) 1 Corner-Const-Med atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),c10(count1),c10(count2),
     +             specT,c10T,iflag)
      call interp (period(count1),period(count2),sigma(count1),sigma(count2),
     +             specT,sigT,iflag)
 1011 period1 = specT

c     Set atten name
      attenName = 'Silva et al. (2002) 1-Corner-Const-Med'

      lnY = c1T + c2T*M + (c6T+c7T*M)*alog(dist+exp(c4T)) + c10t*(M-6)*(M-6)

c     Convert to spectral acceleration in gal
      lnY = lnY + 6.89

      sig = sigT

      return
      end

c -------------------------------------------------------------------
C *** Silva et al. (2002) 1-Corner-Constant-Low, Horizontal *************
c -------------------------------------------------------------------

      subroutine PEA1CCL ( m, dist, lnY, sig, specT,
     1                  attenName, period1,iflag )

      real lnY, m, dist, sigT, sig, period1
      real specT, c1T, c2T, c4T, c6T, c7T, c10T
      integer nper, count1, count2, iflag
      character*80 attenName

      parameter (MAXPER=26)
      real c1(MAXPER), c2(MAXPER), c4(MAXPER), sigma(MAXPER)
      real c6(MAXPER), c7(MAXPER), c10(MAXPER), period(MAXPER)
      data period / 0.00, 0.02, 0.025, 0.0323, 0.04, 0.05, 0.055, 0.06, 0.07,
     1       0.08, 0.1, 0.12, 0.15, 0.16, 0.2, 0.24, 0.3, 0.4,
     1       0.5, 0.75, 1, 1.6, 2, 3.000, 5, 10 /
      data C1 / 2.57877, 4.54101, 4.50286, 3.90146, 3.74605, 3.59389, 3.53102, 3.47181, 2.95159,
     1       2.83795, 2.59748, 2.36108, 2.00886, 1.90139, 1.13055, 0.71018, 0.13269, -0.72368,
     1       -1.58102, -3.33687, -4.89906, -7.79761, -9.12644, -11.90955, -15.22296, -19.09237 /
      data C2 / 0.20187, 0.13536, 0.14513, 0.18325, 0.19303, 0.205, 0.21106, 0.21711, 0.25367,
     1       0.26482, 0.28497, 0.30408, 0.33012, 0.34023, 0.40133, 0.43636, 0.49251, 0.59402,
     1       0.68709, 0.89916, 1.0839, 1.44039, 1.60015, 1.89523, 2.22463, 2.55127 /
      data C4 / 2.6, 2.8, 2.8, 2.7, 2.7, 2.7, 2.7, 2.7, 2.6,
     1       2.6, 2.6, 2.6, 2.6, 2.6, 2.5, 2.5, 2.5, 2.5,
     1       2.5, 2.5, 2.5, 2.4, 2.4, 2.3, 2.2, 2.1 /
      data C6 / -2.92333, -3.12969, -3.10735, -2.99999, -2.97578, -2.94929, -2.93706, -2.92538, -2.83154,
     1       -2.81238, -2.78005, -2.75216, -2.71828, -2.70593, -2.59747, -2.56429, -2.51516, -2.43076,
     1       -2.36933, -2.23329, -2.13693, -1.91307, -1.8433, -1.68527, -1.53646, -1.41992 /
      data C7 / 0.1963, 0.20328, 0.20134, 0.19487, 0.19341, 0.19162, 0.19071, 0.1898, 0.18373,
     1       0.18218, 0.17962, 0.17736, 0.17461, 0.17349, 0.16549, 0.16246, 0.15754, 0.1484,
     1       0.14193, 0.12682, 0.11627, 0.0945, 0.08701, 0.07303, 0.06087, 0.05359 /
      data C10 / -0.04493, -0.03854, -0.03842, -0.03882, -0.03934, -0.03999, -0.04035, -0.04075, -0.04164,
     1       -0.04266, -0.04496, -0.04754, -0.05184, -0.05345, -0.06026, -0.0677, -0.07959, -0.10021,
     1       -0.12239, -0.1695, -0.21228, -0.27892, -0.30641, -0.34299, -0.35343, -0.29994 /
      data sigma / 0.738, 0.7809, 0.7856, 0.7891, 0.785, 0.7745, 0.7678, 0.7691, 0.7619,
     1       0.757, 0.7541, 0.7536, 0.7359, 0.7301, 0.7272, 0.7292, 0.7405, 0.7391,
     1       0.7532, 0.8022, 0.8, 0.8885, 0.9618, 1.0496, 1.1946, 1.3239 /

C Find the requested spectral period and corresponding coefficients
      nPer = 26

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c4T     = c4(1)
         c6T     = c6(1)
         c7T     = c7(1)
         c10T     = c10(1)
         sigT     = sigma(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Silva et al. (2002) 1 Corner-Const-Low atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),c10(count1),c10(count2),
     +             specT,c10T,iflag)
      call interp (period(count1),period(count2),sigma(count1),sigma(count2),
     +             specT,sigT,iflag)
 1011 period1 = specT

c     Set atten name
      attenName = 'Silva et al. (2002) 1-Corner-Const-Low'

      lnY = c1T + c2T*M + (c6T+c7T*M)*alog(dist+exp(c4T)) + c10t*(M-6)*(M-6)

c     Convert to spectral acceleration in gal
      lnY = lnY + 6.89

      sig = sigT

      return
      end

c -------------------------------------------------------------------
C *** Silva et al. (2002) 1-Corner-Constant-High-Sat, Horizontal *************
c -------------------------------------------------------------------

      subroutine PEA1CCHS ( m, dist, lnY, sig, specT,
     1                  attenName, period1,iflag )

      real lnY, m, dist, sigT, sig, period1
      real specT, c1T, c2T, c4T, c6T, c7T, c10T
      integer nper, count1, count2, iflag
      character*80 attenName

      parameter (MAXPER=26)
      real c1(MAXPER), c2(MAXPER), c4(MAXPER), sigma(MAXPER)
      real c6(MAXPER), c7(MAXPER), c10(MAXPER), period(MAXPER)
      data period / 0.00, 0.02, 0.025, 0.0323, 0.04, 0.05, 0.055, 0.06, 0.07,
     1       0.08, 0.1, 0.12, 0.15, 0.16, 0.2, 0.24, 0.3, 0.4,
     1       0.5, 0.75, 1, 1.6, 2, 3.000, 5, 10 /
      data C1 / 5.87466, 8.16024, 7.49863, 7.31723, 7.13246, 6.94435, 6.86357, 6.25069, 6.10266,
     1       5.95548, 5.65135, 5.35255, 4.91274, 4.77362, 3.76921, 3.241, 2.50733, 1.41567,
     1       0.35595, -1.75176, -3.52171, -6.43297, -8.18384, -11.07071, -14.33292, -17.92122 /
      data C2 / -0.06918, -0.16443, -0.11031, -0.09725, -0.08472, -0.06911, -0.06114, -0.01554, -0.00018,
     1       0.01492, 0.04288, 0.06996, 0.10766, 0.12203, 0.21066, 0.26094, 0.33905, 0.47284,
     1       0.59376, 0.85016, 1.0572, 1.42055, 1.60124, 1.88506, 2.17359, 2.41939 /
      data C4 / 2.9, 3.1, 3, 3, 3, 3, 3, 2.9, 2.9,
     1       2.9, 2.9, 2.9, 2.9, 2.9, 2.8, 2.8, 2.8, 2.8,
     1       2.8, 2.8, 2.8, 2.8, 2.7, 2.6, 2.5, 2.4 /
      data C6 / -3.42987, -3.67439, -3.5427, -3.51057, -3.48193, -3.45017, -3.4354, -3.32741, -3.30216,
     1       -3.27916, -3.24075, -3.20795, -3.16905, -3.15491, -3.02221, -2.98696, -2.93443, -2.84495,
     1       -2.78233, -2.63826, -2.53979, -2.35414, -2.21757, -2.04376, -1.88598, -1.76932 /
      data C7 / 0.26131, 0.27088, 0.26124, 0.25921, 0.2574, 0.25514, 0.25399, 0.24639, 0.24432,
     1       0.24241, 0.23928, 0.23656, 0.23338, 0.23211, 0.22178, 0.21867, 0.21356, 0.20419,
     1       0.19789, 0.18244, 0.17215, 0.15261, 0.14122, 0.12639, 0.11439, 0.10861 /
      data C10 / -0.07032, -0.06117, -0.06105, -0.06168, -0.06255, -0.06369, -0.06433, -0.06502, -0.06659,
     1       -0.06838, -0.07247, -0.07711, -0.08479, -0.08761, -0.09924, -0.11171, -0.13042, -0.16028,
     1       -0.19028, -0.24504, -0.28704, -0.34123, -0.35737, -0.36727, -0.34044, -0.247 /
      data sigma / 0.7433, 0.7859, 0.7906, 0.7938, 0.7897, 0.779, 0.7723, 0.7734, 0.7659,
     1       0.7606, 0.7575, 0.7567, 0.7389, 0.7331, 0.7302, 0.7324, 0.7439, 0.7431,
     1       0.7578, 0.806, 0.8016, 0.8859, 0.9578, 1.0463, 1.1943, 1.3238 /

C Find the requested spectral period and corresponding coefficients
      nPer = 26

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c4T     = c4(1)
         c6T     = c6(1)
         c7T     = c7(1)
         c10T     = c10(1)
         sigT     = sigma(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Silva et al. (2002) 1 Corner-Const-High-Sat atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),c10(count1),c10(count2),
     +             specT,c10T,iflag)
      call interp (period(count1),period(count2),sigma(count1),sigma(count2),
     +             specT,sigT,iflag)
 1011 period1 = specT

c     Set atten name
      attenName = 'Silva et al. (2002) 1-Corner-Const-High-Sat'

      lnY = c1T + c2T*M + (c6T+c7T*M)*alog(dist+exp(c4T)) + c10t*(M-6)*(M-6)

c     Convert to spectral acceleration in gal
      lnY = lnY + 6.89

      sig = sigT

      return
      end

c -------------------------------------------------------------------
C *** Silva et al. (2002) 1-Corner-Constant-Med-Sat, Horizontal *************
c -------------------------------------------------------------------

      subroutine PEA1CCMS ( m, dist, lnY, sig, specT,
     1                  attenName, period1,iflag )

      real lnY, m, dist, sigT, sig, period1
      real specT, c1T, c2T, c4T, c6T, c7T, c10T
      integer nper, count1, count2, iflag
      character*80 attenName

      parameter (MAXPER=26)
      real c1(MAXPER), c2(MAXPER), c4(MAXPER), sigma(MAXPER)
      real c6(MAXPER), c7(MAXPER), c10(MAXPER), period(MAXPER)
      data period / 0.00, 0.02, 0.025, 0.0323, 0.04, 0.05, 0.055, 0.06, 0.07,
     1       0.08, 0.1, 0.12, 0.15, 0.16, 0.2, 0.24, 0.3, 0.4,
     1       0.5, 0.75, 1, 1.6, 2, 3.000, 5, 10 /
      data C1 / 5.35011, 7.60902, 6.96175, 6.79091, 6.61705, 6.44374, 6.37083, 6.30181, 5.63835,
     1       5.50813, 5.23836, 4.97456, 4.58602, 4.46498, 3.53193, 3.06862, 2.42583, 1.46377,
     1       0.51857, -1.41, -3.08744, -6.23481, -7.62375, -10.54155, -13.9107, -17.91423 /
      data C2 / -0.08193, -0.17372, -0.1209, -0.10914, -0.09799, -0.08429, -0.07735, -0.0704, -0.01981,
     1       -0.00703, 0.01612, 0.03821, 0.06845, 0.08019, 0.1588, 0.19946, 0.2643, 0.37971,
     1       0.48452, 0.71797, 0.91539, 1.29417, 1.45642, 1.75532, 2.07364, 2.37754 /
      data C4 / 2.9, 3.1, 3, 3, 3, 3, 3, 3, 2.9,
     1       2.9, 2.9, 2.9, 2.9, 2.9, 2.8, 2.8, 2.8, 2.8,
     1       2.8, 2.8, 2.8, 2.7, 2.7, 2.6, 2.5, 2.3 /
      data C6 / -3.38707, -3.63508, -3.50625, -3.47572, -3.44851, -3.41866, -3.40488, -3.39174, -3.27511,
     1       -3.25386, -3.21848, -3.1883, -3.15246, -3.13934, -3.01048, -2.9773, -2.92775, -2.84201,
     1       -2.78232, -2.6441, -2.54658, -2.30231, -2.22717, -2.04882, -1.8834, -1.71861 /
      data C7 / 0.25794, 0.26806, 0.2587, 0.25685, 0.2552, 0.25316, 0.25213, 0.25111, 0.24282,
     1       0.24112, 0.23835, 0.23596, 0.23315, 0.232, 0.22207, 0.2192, 0.21443, 0.20543,
     1       0.19943, 0.18452, 0.17419, 0.15083, 0.14299, 0.12727, 0.11388, 0.10433 /
      data C10 / -0.06717, -0.05964, -0.05949, -0.05996, -0.06059, -0.06139, -0.06184, -0.06233, -0.06344,
     1       -0.06471, -0.06764, -0.07097, -0.07654, -0.07861, -0.08732, -0.09681, -0.11161, -0.13639,
     1       -0.16236, -0.21379, -0.25719, -0.31913, -0.34147, -0.36524, -0.35716, -0.28182 /
      data sigma / 0.7427, 0.7853, 0.7901, 0.7934, 0.7894, 0.779, 0.7724, 0.7736, 0.7664,
     1       0.7612, 0.7585, 0.758, 0.7405, 0.7348, 0.7322, 0.7345, 0.7461, 0.7453,
     1       0.7599, 0.8087, 0.8057, 0.8917, 0.9637, 1.0506, 1.1963, 1.3253 /

C Find the requested spectral period and corresponding coefficients
      nPer = 26

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c4T     = c4(1)
         c6T     = c6(1)
         c7T     = c7(1)
         c10T     = c10(1)
         sigT     = sigma(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Silva et al. (2002) 1 Corner-Const-Med-Sat atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),c10(count1),c10(count2),
     +             specT,c10T,iflag)
      call interp (period(count1),period(count2),sigma(count1),sigma(count2),
     +             specT,sigT,iflag)
 1011 period1 = specT

c     Set atten name
      attenName = 'Silva et al. (2002) 1-Corner-Const-Med-Sat'

      lnY = c1T + c2T*M + (c6T+c7T*M)*alog(dist+exp(c4T)) + c10t*(M-6)*(M-6)

c     Convert to spectral acceleration in gal
      lnY = lnY + 6.89

      sig = sigT

      return
      end

c -------------------------------------------------------------------
C *** Silva et al. (2002) 1-Corner-Constant-Low-Sat, Horizontal *************
c -------------------------------------------------------------------

      subroutine PEA1CCLS ( m, dist, lnY, sig, specT,
     1                  attenName, period1,iflag )

      real lnY, m, dist, sigT, sig, period1
      real specT, c1T, c2T, c4T, c6T, c7T, c10T
      integer nper, count1, count2, iflag
      character*80 attenName

      parameter (MAXPER=26)
      real c1(MAXPER), c2(MAXPER), c4(MAXPER), sigma(MAXPER)
      real c6(MAXPER), c7(MAXPER), c10(MAXPER), period(MAXPER)
      data period / 0.00, 0.02, 0.025, 0.0323, 0.04, 0.05, 0.055, 0.06, 0.07,
     1        0.08, 0.1, 0.12, 0.15, 0.16, 0.2, 0.24, 0.3, 0.4,
     1        0.5, 0.75, 1, 1.6, 2, 3.000, 5, 10 /
      data C1 / 4.83071, 7.01484, 6.4123, 6.25258, 6.08901, 5.92808, 5.35709, 5.29605, 5.17534,
     1        5.05581, 4.8055, 4.56076, 3.75047, 3.64126, 3.21855, 2.78943, 2.19908, 1.32039,
     1        0.44711, -1.3454, -2.93381, -5.63265, -7.30278, -9.90982, -13.58249, -17.52612 /
      data C2 / -0.12898, -0.21767, -0.16752, -0.15669, -0.14646, -0.13394, -0.09141, -0.08523, -0.07324,
     1        -0.06166, -0.04079, -0.02108, 0.03785, 0.04811, 0.08824, 0.12398, 0.1813, 0.2851,
     1        0.37973, 0.59571, 0.78321, 1.13348, 1.31553, 1.60565, 1.96072, 2.29529 /
      data C4 / 2.8, 3, 2.9, 2.9, 2.9, 2.9, 2.8, 2.8, 2.8,
     1        2.8, 2.8, 2.8, 2.7, 2.7, 2.7, 2.7, 2.7, 2.7,
     1        2.7, 2.7, 2.7, 2.7, 2.6, 2.6, 2.4, 2.3 /
      data C6 / -3.35311, -3.59567, -3.47458, -3.44589, -3.4202, -3.39211, -3.2904, -3.2784, -3.2562,
     1        -3.23598, -3.20187, -3.17249, -3.05739, -3.04474, -2.99921, -2.96449, -2.91311, -2.82477,
     1        -2.76056, -2.61803, -2.51701, -2.32961, -2.19863, -2.0728, -1.85975, -1.73008 /
      data C7 / 0.26108, 0.27165, 0.26279, 0.26109, 0.25956, 0.25767, 0.25047, 0.24954, 0.24779,
     1        0.24617, 0.24348, 0.24111, 0.23266, 0.23151, 0.22724, 0.22409, 0.21897, 0.20944,
     1        0.20271, 0.18691, 0.17588, 0.15521, 0.14381, 0.13069, 0.11403, 0.10536 /
      data C10 / -0.05639, -0.04999, -0.04987, -0.05027, -0.0508, -0.05145, -0.05181, -0.0522, -0.0531,
     1        -0.05411, -0.05641, -0.059, -0.0633, -0.0649, -0.07171, -0.07915, -0.09104, -0.11167,
     1        -0.13385, -0.18095, -0.22374, -0.29038, -0.31786, -0.35444, -0.36489, -0.31139 /
      data sigma / 0.7477, 0.7908, 0.7956, 0.7989, 0.7949, 0.7844, 0.7779, 0.7791, 0.7718,
     1        0.7668, 0.7638, 0.7632, 0.7456, 0.7398, 0.7369, 0.7389, 0.7499, 0.7485,
     1        0.7625, 0.8109, 0.8086, 0.8961, 0.9688, 1.0556, 1.199, 1.3269 /

C Find the requested spectral period and corresponding coefficients
      nPer = 26

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c4T     = c4(1)
         c6T     = c6(1)
         c7T     = c7(1)
         c10T     = c10(1)
         sigT     = sigma(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Silva et al. (2002) 1 Corner-Const-Low-Sat atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),c10(count1),c10(count2),
     +             specT,c10T,iflag)
      call interp (period(count1),period(count2),sigma(count1),sigma(count2),
     +             specT,sigT,iflag)
 1011 period1 = specT

c     Set atten name
      attenName = 'Silva et al. (2002) 1-Corner-Const-Low-Sat'

      lnY = c1T + c2T*M + (c6T+c7T*M)*alog(dist+exp(c4T)) + c10t*(M-6)*(M-6)

c     Convert to spectral acceleration in gal
      lnY = lnY + 6.89

      sig = sigT

      return
      end

c -------------------------------------------------------------------
C *** Silva et al. (2002) 2-Corner, Horizontal Gulf *************
c -------------------------------------------------------------------

      subroutine PEAG2C ( m, dist, lnY, sig, specT,
     1                  attenName, period1,iflag )

      real lnY, m, dist, sigT, sig, period1
      real specT, c1T, c2T, c4T, c6T, c7T, c10T
      integer nper, count1, count2, iflag
      character*80 attenName

      parameter (MAXPER=26)
      real c1(MAXPER), c2(MAXPER), c4(MAXPER), sigma(MAXPER)
      real c6(MAXPER), c7(MAXPER), c10(MAXPER), period(MAXPER)
      data period / 0.00, 0.02, 0.025, 0.0323, 0.04, 0.05, 0.055, 0.06, 0.07,
     1        0.08, 0.1, 0.12, 0.15, 0.16, 0.2, 0.24, 0.3, 0.4,
     1        0.5, 0.75, 1, 1.6, 2, 3.000, 5, 10 /
      data C1 / 9.90148, 14.33926, 14.14384, 13.81046, 12.42738, 12.02874, 11.85646, 11.69837, 10.51625,
     1        10.26367, 9.7961, 9.36118, 7.97786, 7.79199, 7.09082, 5.74732, 4.8783, 2.9958,
     1        1.93674, -0.12511, -2.15831, -5.10947, -6.28665, -8.83853, -12.20468, -16.41379 /
      data C2 / -0.12757, -0.28175, -0.25488, -0.22653, -0.15043, -0.12544, -0.11325, -0.10103, -0.03055,
     1        -0.00857, 0.03112, 0.06628, 0.15425, 0.16914, 0.2271, 0.31977, 0.39924, 0.55002,
     1        0.64984, 0.8388, 0.99778, 1.24004, 1.33826, 1.54958, 1.83553, 2.20767 /
      data C4 / 3.4, 3.7, 3.7, 3.7, 3.6, 3.6, 3.6, 3.6, 3.5,
     1        3.5, 3.5, 3.5, 3.4, 3.4, 3.4, 3.3, 3.3, 3.2,
     1        3.2, 3.2, 3.1, 3, 3, 2.9, 2.7, 2.5 /
      data C6 / -4.30771, -4.93249, -4.87587, -4.80279, -4.56505, -4.49489, -4.46406, -4.43516, -4.23161,
     1        -4.18673, -4.11197, -4.0525, -3.85005, -3.8308, -3.76365, -3.58708, -3.51506, -3.30621,
     1        -3.22152, -3.0503, -2.82918, -2.53021, -2.43987, -2.21747, -1.95111, -1.74567 /
      data C7 / 0.25806, 0.27571, 0.26995, 0.26447, 0.25176, 0.24783, 0.24596, 0.2441, 0.23289,
     1        0.22992, 0.22526, 0.22188, 0.21146, 0.21046, 0.20689, 0.19746, 0.19281, 0.17993,
     1        0.17312, 0.15823, 0.14191, 0.11775, 0.10973, 0.09356, 0.07737, 0.06829 /
      data C10 / -0.05882, -0.05331, -0.05318, -0.0537, -0.05445, -0.05578, -0.0565, -0.05724, -0.05885,
     1        -0.06062, -0.06459, -0.06891, -0.07567, -0.07794, -0.0868, -0.09504, -0.10565, -0.11838,
     1        -0.12608, -0.13454, -0.13999, -0.16323, -0.18303, -0.23217, -0.29415, -0.33131 /
      data sigma / 0.9031, 0.9685, 0.9722, 0.9821, 0.9842, 0.9799, 0.9733, 0.973, 0.9664,
     1        0.9628, 0.9596, 0.9587, 0.9369, 0.9306, 0.9177, 0.9111, 0.9109, 0.8991,
     1        0.904, 0.9349, 0.9271, 0.9956, 1.0612, 1.1393, 1.2665, 1.3791 /

C Find the requested spectral period and corresponding coefficients
      nPer = 26

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c4T     = c4(1)
         c6T     = c6(1)
         c7T     = c7(1)
         c10T     = c10(1)
         sigT     = sigma(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Silva et al. (2002) 2 Corner atttenuation Gulf model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),c10(count1),c10(count2),
     +             specT,c10T,iflag)
      call interp (period(count1),period(count2),sigma(count1),sigma(count2),
     +             specT,sigT,iflag)
 1011 period1 = specT

c     Set atten name
      attenName = 'Silva et al. Gulf(2002) 2-Corner'

      lnY = c1T + c2T*M + (c6T+c7T*M)*alog(dist+exp(c4T)) + c10t*(M-6)*(M-6)

c     Convert to spectral acceleration in gal
      lnY = lnY + 6.89

      sig = sigT

      return
      end

c -------------------------------------------------------------------
C *** Silva et al. (2002) 2-Corner-Saturation, Horizontal Gulf *************
c -------------------------------------------------------------------

      subroutine PEAG2CS ( m, dist, lnY, sig, specT,
     1                  attenName, period1,iflag )

      real lnY, m, dist, sigT, sig, period1
      real specT, c1T, c2T, c4T, c6T, c7T, c10T
      integer nper, count1, count2, iflag
      character*80 attenName

      parameter (MAXPER=26)
      real c1(MAXPER), c2(MAXPER), c4(MAXPER), sigma(MAXPER)
      real c6(MAXPER), c7(MAXPER), c10(MAXPER), period(MAXPER)
      data period / 0.00, 0.02, 0.025, 0.0323, 0.04, 0.05, 0.055, 0.06, 0.07,
     1       0.08, 0.1, 0.12, 0.15, 0.16, 0.2, 0.24, 0.3, 0.4,
     1       0.5, 0.75, 1, 1.6, 2, 3.000, 5, 10 /
      data C1 / 13.52127, 17.40998, 17.2009, 16.84962, 16.45698, 16.02362, 15.83611, 14.53975, 14.23988,
     1       13.96635, 13.46434, 12.01553, 11.39716, 11.20299, 9.5919, 8.93501, 8.03762, 5.96206,
     1       4.87153, 2.74561, 0.53026, -2.0663, -3.8314, -6.54516, -9.76826, -14.54243 /
      data C2 / -0.58872, -0.72596, -0.69766, -0.66794, -0.64342, -0.61652, -0.60342, -0.52162, -0.49678,
     1       -0.47347, -0.43179, -0.33472, -0.28656, -0.27131, -0.15735, -0.10061, -0.01963, 0.14984,
     1       0.25189, 0.44592, 0.62351, 0.85356, 0.9871, 1.21492, 1.50496, 1.91703 /
      data C4 / 3.6, 3.8, 3.8, 3.8, 3.8, 3.8, 3.8, 3.7, 3.7,
     1       3.7, 3.7, 3.6, 3.6, 3.6, 3.5, 3.5, 3.5, 3.4,
     1       3.4, 3.4, 3.3, 3.3, 3.2, 3.1, 3, 2.7 /
      data C6 / -4.95888, -5.48554, -5.42663, -5.35052, -5.27833, -5.20228, -5.16886, -4.95186, -4.89689,
     1       -4.84844, -4.76782, -4.53955, -4.46693, -4.44627, -4.22645, -4.1674, -4.09059, -3.85124,
     1       -3.76122, -3.57911, -3.32873, -3.0922, -2.90058, -2.65122, -2.41187, -2.10859 /
      data C7 / 0.34391, 0.3583, 0.35229, 0.34658, 0.34234, 0.33809, 0.33606, 0.32294, 0.31927,
     1       0.31607, 0.31108, 0.29762, 0.29383, 0.29278, 0.28002, 0.27663, 0.27175, 0.25592,
     1       0.24875, 0.23302, 0.2137, 0.19167, 0.17769, 0.15876, 0.14194, 0.12608 /
      data C10 / -0.07073, -0.06521, -0.06508, -0.06561, -0.06636, -0.06769, -0.0684, -0.06914, -0.07075,
     1       -0.07252, -0.07649, -0.08082, -0.08758, -0.08984, -0.09871, -0.10695, -0.11756, -0.13028,
     1       -0.13799, -0.14644, -0.1519, -0.17514, -0.19493, -0.24408, -0.30605, -0.34322 /
      data sigma / 0.9031, 0.9685, 0.9722, 0.9821, 0.9842, 0.9799, 0.9733, 0.973, 0.9664,
     1       0.9628, 0.9596, 0.9587, 0.9369, 0.9306, 0.9177, 0.9111, 0.9109, 0.8991,
     1       0.904, 0.9349, 0.9271, 0.9956, 1.0612, 1.1393, 1.2665, 1.3791 /

C Find the requested spectral period and corresponding coefficients
      nPer = 26

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c4T     = c4(1)
         c6T     = c6(1)
         c7T     = c7(1)
         c10T     = c10(1)
         sigT     = sigma(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Silva et al. (2002) 2 Corner-Sat atttenuation Gulf model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),c10(count1),c10(count2),
     +             specT,c10T,iflag)
      call interp (period(count1),period(count2),sigma(count1),sigma(count2),
     +             specT,sigT,iflag)
 1011 period1 = specT

c     Set atten name
      attenName = 'Silva et al. Gulf(2002) 2-Corner-Sat'

      lnY = c1T + c2T*M + (c6T+c7T*M)*alog(dist+exp(c4T)) + c10t*(M-6)*(M-6)

c     Convert to spectral acceleration in gal
      lnY = lnY + 6.89

      sig = sigT

      return
      end

c -------------------------------------------------------------------
C *** Silva et al. (2002) 1-Corner-Variable-High, Horizontal Gulf *************
c -------------------------------------------------------------------

      subroutine PEAG1CVH ( m, dist, lnY, sig, specT,
     1                  attenName, period1,iflag )

      real lnY, m, dist, sigT, sig, period1
      real specT, c1T, c2T, c4T, c6T, c7T, c10T
      integer nper, count1, count2, iflag
      character*80 attenName

      parameter (MAXPER=26)
      real c1(MAXPER), c2(MAXPER), c4(MAXPER), sigma(MAXPER)
      real c6(MAXPER), c7(MAXPER), c10(MAXPER), period(MAXPER)
      data period / 0.00, 0.02, 0.025, 0.0323, 0.04, 0.05, 0.055, 0.06, 0.07,
     1       0.08, 0.1, 0.12, 0.15, 0.16, 0.2, 0.24, 0.3, 0.4,
     1       0.5, 0.75, 1, 1.6, 2, 3.000, 5, 10 /
      data C1 / 17.56501, 22.54184, 22.40623, 22.02865, 21.61053, 21.11875, 20.91108, 20.72257, 20.37544,
     1       20.04863, 19.43335, 18.86865, 16.81254, 16.59083, 15.77669, 15.04806, 12.94874, 11.55566,
     1       10.33931, 6.90409, 4.94057, 0.72588, -1.56307, -5.06249, -9.02136, -13.91863 /
      data C2 / -0.73081, -0.94055, -0.91637, -0.88044, -0.8526, -0.81789, -0.80174, -0.78585, -0.75402,
     1       -0.72294, -0.66605, -0.61723, -0.48116, -0.46325, -0.39607, -0.33259, -0.17886, -0.03985,
     1       0.08773, 0.41108, 0.63072, 1.0561, 1.26035, 1.59204, 1.95631, 2.33294 /
      data C4 / 3.7, 3.9, 3.9, 3.9, 3.9, 3.9, 3.9, 3.9, 3.9,
     1       3.9, 3.9, 3.9, 3.8, 3.8, 3.8, 3.8, 3.7, 3.7,
     1       3.7, 3.6, 3.6, 3.5, 3.4, 3.3, 3.2, 3 /
      data C6 / -5.65962, -6.41953, -6.37768, -6.29329, -6.21225, -6.11772, -6.07691, -6.039, -5.96788,
     1       -5.9014, -5.78203, -5.68075, -5.34165, -5.30738, -5.1878, -5.08734, -4.77368, -4.60821,
     1       -4.47467, -4.06719, -3.88811, -3.47121, -3.23534, -2.93546, -2.64856, -2.33817 /
      data C7 / 0.36566, 0.39634, 0.39115, 0.38353, 0.37806, 0.37124, 0.36809, 0.36501, 0.35891,
     1       0.35305, 0.34275, 0.33451, 0.31279, 0.31025, 0.30141, 0.29385, 0.27355, 0.2601,
     1       0.24889, 0.21878, 0.20282, 0.17081, 0.15492, 0.13367, 0.11437, 0.09908 /
      data C10 / -0.07661, -0.06885, -0.06821, -0.06773, -0.06793, -0.06833, -0.06854, -0.06877, -0.06938,
     1       -0.07023, -0.07256, -0.07559, -0.08098, -0.08296, -0.09155, -0.10095, -0.11589, -0.14124,
     1       -0.16562, -0.21837, -0.25891, -0.32004, -0.34181, -0.365, -0.3607, -0.29154 /
      data sigma / 0.91, 0.9758, 0.9794, 0.9892, 0.9912, 0.9866, 0.98, 0.9795, 0.9726,
     1       0.9687, 0.9649, 0.9635, 0.9412, 0.9348, 0.9217, 0.9152, 0.915, 0.9039,
     1       0.9093, 0.9403, 0.9321, 0.9978, 1.0621, 1.139, 1.2674, 1.3821 /

C Find the requested spectral period and corresponding coefficients
      nPer = 26

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c4T     = c4(1)
         c6T     = c6(1)
         c7T     = c7(1)
         c10T     = c10(1)
         sigT     = sigma(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Silva et al. (2002) 1 Corner-Var-High atttenuation Gulf model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),c10(count1),c10(count2),
     +             specT,c10T,iflag)
      call interp (period(count1),period(count2),sigma(count1),sigma(count2),
     +             specT,sigT,iflag)
 1011 period1 = specT

c     Set atten name
      attenName = 'Silva et al. Gulf(2002) 1-Corner-Var-High'

      lnY = c1T + c2T*M + (c6T+c7T*M)*alog(dist+exp(c4T)) + c10t*(M-6)*(M-6)

c     Convert to spectral acceleration in gal
      lnY = lnY + 6.89

      sig = sigT

      return
      end

c -------------------------------------------------------------------
C *** Silva et al. (2002) 1-Corner-Variable-Med, Horizontal Gulf *************
c -------------------------------------------------------------------

      subroutine PEAG1CVM ( m, dist, lnY, sig, specT,
     1                  attenName, period1,iflag )

      real lnY, m, dist, sigT, sig, period1
      real specT, c1T, c2T, c4T, c6T, c7T, c10T
      integer nper, count1, count2, iflag
      character*80 attenName

      parameter (MAXPER=26)
      real c1(MAXPER), c2(MAXPER), c4(MAXPER), sigma(MAXPER)
      real c6(MAXPER), c7(MAXPER), c10(MAXPER), period(MAXPER)
      data period / 0.00, 0.02, 0.025, 0.0323, 0.04, 0.05, 0.055, 0.06, 0.07,
     1       0.08, 0.1, 0.12, 0.15, 0.16, 0.2, 0.24, 0.3, 0.4,
     1       0.5, 0.75, 1, 1.6, 2, 3.000, 5, 10 /
      data C1 / 15.27441, 19.88182, 19.78142, 20.8987, 20.50874, 18.64419, 18.46167, 18.29779, 17.99875,
     1       17.71756, 17.18425, 16.69027, 16.0265, 15.82366, 13.93331, 13.29372, 12.43075, 10.18655,
     1       9.10831, 6.01523, 4.21778, 0.25617, -1.92096, -5.3148, -9.25169, -14.54986 /
      data C2 / -0.61726, -0.80582, -0.78593, -0.84219, -0.81779, -0.703, -0.68951, -0.67629, -0.64981,
     1       -0.62387, -0.57629, -0.53555, -0.48449, -0.4692, -0.34606, -0.2936, -0.21755, -0.04192,
     1       0.0681, 0.35576, 0.55654, 0.96349, 1.16422, 1.49937, 1.88136, 2.30998 /
      data C4 / 3.6, 3.8, 3.8, 3.9, 3.9, 3.8, 3.8, 3.8, 3.8,
     1       3.8, 3.8, 3.8, 3.8, 3.8, 3.7, 3.7, 3.7, 3.6,
     1       3.6, 3.5, 3.5, 3.4, 3.3, 3.2, 3.1, 2.8 /
      data C6 / -5.30301, -6.01166, -5.97732, -6.14187, -6.06641, -5.74551, -5.70923, -5.67576, -5.61318,
     1       -5.55455, -5.44841, -5.35752, -5.24545, -5.21303, -4.9083, -4.81633, -4.69883, -4.37417,
     1       -4.24952, -3.87179, -3.70387, -3.30857, -3.08551, -2.79932, -2.51971, -2.15716 /
      data C7 / 0.34239, 0.37073, 0.36646, 0.37424, 0.36944, 0.34952, 0.34685, 0.34425, 0.33907,
     1       0.33408, 0.32521, 0.31804, 0.30976, 0.30744, 0.28841, 0.28167, 0.27269, 0.25066,
     1       0.24024, 0.21222, 0.19724, 0.16627, 0.15079, 0.12984, 0.1101, 0.09152 /
      data C10 / -0.09155, -0.08525, -0.08469, -0.08421, -0.0843, -0.08451, -0.08461, -0.08473, -0.08507,
     1       -0.08558, -0.08711, -0.08918, -0.09294, -0.09434, -0.10055, -0.10754, -0.119, -0.13932,
     1       -0.15976, -0.20693, -0.24619, -0.31189, -0.33869, -0.37439, -0.38752, -0.34105 /
      data sigma / 0.9031, 0.9685, 0.9722, 0.9821, 0.9842, 0.9799, 0.9733, 0.973, 0.9664,
     1       0.9628, 0.9596, 0.9587, 0.9369, 0.9306, 0.9177, 0.9111, 0.9109, 0.8991,
     1       0.904, 0.9349, 0.9271, 0.9956, 1.0612, 1.1393, 1.2665, 1.3791 /

C Find the requested spectral period and corresponding coefficients
      nPer = 26

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c4T     = c4(1)
         c6T     = c6(1)
         c7T     = c7(1)
         c10T     = c10(1)
         sigT     = sigma(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Silva et al. (2002) 1 Corner-Var-Med atttenuation Gulf model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),c10(count1),c10(count2),
     +             specT,c10T,iflag)
      call interp (period(count1),period(count2),sigma(count1),sigma(count2),
     +             specT,sigT,iflag)
 1011 period1 = specT

c     Set atten name
      attenName = 'Silva et al. Gulf(2002) 1-Corner-Var-Med'

      lnY = c1T + c2T*M + (c6T+c7T*M)*alog(dist+exp(c4T)) + c10t*(M-6)*(M-6)

c     Convert to spectral acceleration in gal
      lnY = lnY + 6.89

      sig = sigT

      return
      end

c -------------------------------------------------------------------
C *** Silva et al. (2002) 1-Corner-Variable-Low, Horizontal Gulf *************
c -------------------------------------------------------------------

      subroutine PEAG1CVL ( m, dist, lnY, sig, specT,
     1                  attenName, period1,iflag )

      real lnY, m, dist, sigT, sig, period1
      real specT, c1T, c2T, c4T, c6T, c7T, c10T
      integer nper, count1, count2, iflag
      character*80 attenName

      parameter (MAXPER=26)
      real c1(MAXPER), c2(MAXPER), c4(MAXPER), sigma(MAXPER)
      real c6(MAXPER), c7(MAXPER), c10(MAXPER), period(MAXPER)
      data period / 0.00, 0.02, 0.025, 0.0323, 0.04, 0.05, 0.055, 0.06, 0.07,
     1       0.08, 0.1, 0.12, 0.15, 0.16, 0.2, 0.24, 0.3, 0.4,
     1       0.5, 0.75, 1, 1.6, 2, 3.000, 5, 10 /
      data C1 / 14.35825, 18.89574, 18.81796, 19.93414, 19.56869, 19.13672, 18.95886, 17.43775, 17.16559,
     1       16.90986, 16.42234, 15.96772, 15.35608, 15.16957, 13.35601, 12.77568, 11.99662, 9.88541,
     1       8.91163, 6.03088, 4.3827, 0.60771, -1.52175, -4.86624, -9.24105, -14.25163 /
      data C2 / -0.58678, -0.76779, -0.75053, -0.8076, -0.78618, -0.75882, -0.74635, -0.65344, -0.63027,
     1       -0.60751, -0.56572, -0.53011, -0.48604, -0.47298, -0.35932, -0.31521, -0.25104, -0.09326,
     1       0.00198, 0.26122, 0.44249, 0.82916, 1.02753, 1.36569, 1.78174, 2.2322 /
      data C4 / 3.6, 3.8, 3.8, 3.9, 3.9, 3.9, 3.9, 3.8, 3.8,
     1       3.8, 3.8, 3.8, 3.8, 3.8, 3.7, 3.7, 3.7, 3.6,
     1       3.6, 3.5, 3.5, 3.4, 3.3, 3.2, 3, 2.8 /
      data C6 / -5.18268, -5.88521, -5.85612, -6.0219, -5.95141, -5.86837, -5.83325, -5.57562, -5.51821,
     1       -5.46428, -5.36596, -5.28098, -5.17562, -5.14508, -4.8492, -4.76255, -4.65152, -4.33601,
     1       -4.21624, -3.84799, -3.68677, -3.29808, -3.07493, -2.78892, -2.4321, -2.1362 /
      data C7 / 0.33157, 0.35942, 0.35579, 0.36387, 0.35968, 0.35426, 0.3518, 0.33613, 0.33158,
     1       0.32715, 0.31923, 0.31278, 0.30531, 0.30322, 0.28512, 0.27903, 0.27084, 0.24975,
     1       0.23987, 0.21274, 0.19846, 0.16792, 0.15219, 0.13082, 0.10715, 0.09013 /
      data C10 / -0.09714, -0.09203, -0.09155, -0.09109, -0.09113, -0.09122, -0.09125, -0.0913, -0.09148,
     1       -0.09179, -0.09279, -0.09419, -0.0968, -0.09778, -0.10218, -0.10726, -0.11582, -0.13159,
     1       -0.14814, -0.1886, -0.22467, -0.29094, -0.32102, -0.36709, -0.39711, -0.37542 /
      data sigma / 0.9003, 0.9651, 0.9688, 0.9788, 0.9811, 0.977, 0.9705, 0.9704, 0.9642,
     1       0.9609, 0.9583, 0.9578, 0.9367, 0.9305, 0.9182, 0.9119, 0.9119, 0.9001,
     1       0.9045, 0.9346, 0.9268, 0.9968, 1.0631, 1.1426, 1.269, 1.379 /

C Find the requested spectral period and corresponding coefficients
      nPer = 26

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c4T     = c4(1)
         c6T     = c6(1)
         c7T     = c7(1)
         c10T     = c10(1)
         sigT     = sigma(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Silva et al. (2002) 1 Corner-Var-Low atttenuation Gulf model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),c10(count1),c10(count2),
     +             specT,c10T,iflag)
      call interp (period(count1),period(count2),sigma(count1),sigma(count2),
     +             specT,sigT,iflag)
 1011 period1 = specT

c     Set atten name
      attenName = 'Silva et al. Gulf(2002) 1-Corner-Var-Low'

      lnY = c1T + c2T*M + (c6T+c7T*M)*alog(dist+exp(c4T)) + c10t*(M-6)*(M-6)

c     Convert to spectral acceleration in gal
      lnY = lnY + 6.89

      sig = sigT

      return
      end

c -------------------------------------------------------------------
C *** Silva et al. (2002) 1-Corner-Constant-High, Horizontal Gulf *************
c -------------------------------------------------------------------

      subroutine PEAG1CCH ( m, dist, lnY, sig, specT,
     1                  attenName, period1,iflag )

      real lnY, m, dist, sigT, sig, period1
      real specT, c1T, c2T, c4T, c6T, c7T, c10T
      integer nper, count1, count2, iflag
      character*80 attenName

      parameter (MAXPER=26)
      real c1(MAXPER), c2(MAXPER), c4(MAXPER), sigma(MAXPER)
      real c6(MAXPER), c7(MAXPER), c10(MAXPER), period(MAXPER)
      data period / 0.00, 0.02, 0.025, 0.0323, 0.04, 0.05, 0.055, 0.06, 0.07,
     1       0.08, 0.1, 0.12, 0.15, 0.16, 0.2, 0.24, 0.3, 0.4,
     1       0.5, 0.75, 1, 1.6, 2, 3.000, 5, 10 /
      data C1 / 16.08302, 19.51657, 19.40352, 20.51285, 20.10895, 19.63311, 19.43335, 19.25288, 18.92158,
     1       17.25027, 16.69021, 16.17236, 15.47703, 15.26405, 13.33561, 12.66006, 11.74743, 9.4332,
     1       8.29484, 5.08922, 3.21915, -0.80232, -2.37232, -6.35091, -10.18213, -14.92343 /
      data C2 / -0.53416, -0.64891, -0.62778, -0.68238, -0.6565, -0.624, -0.60894, -0.59416, -0.56453,
     1       -0.45606, -0.40538, -0.36176, -0.30669, -0.29006, -0.16266, -0.10531, -0.02246, 0.162,
     1       0.28003, 0.58119, 0.78973, 1.19788, 1.36543, 1.71518, 2.06757, 2.43027 /
      data C4 / 3.7, 3.8, 3.8, 3.9, 3.9, 3.9, 3.9, 3.9, 3.9,
     1       3.8, 3.8, 3.8, 3.8, 3.8, 3.7, 3.7, 3.7, 3.6,
     1       3.6, 3.5, 3.5, 3.4, 3.4, 3.2, 3.1, 2.9 /
      data C6 / -5.54089, -6.0488, -6.01142, -6.17374, -6.09544, -6.00383, -5.96446, -5.92801, -5.85972,
     1       -5.57097, -5.46052, -5.36632, -5.25065, -5.2172, -4.90916, -4.81457, -4.69411, -4.36652,
     1       -4.23968, -3.85783, -3.68683, -3.29152, -3.17502, -2.78676, -2.51603, -2.22382 /
      data C7 / 0.35572, 0.37128, 0.3667, 0.37408, 0.36898, 0.36256, 0.35961, 0.35673, 0.351,
     1       0.33242, 0.3231, 0.31558, 0.30691, 0.30448, 0.28523, 0.2782, 0.26892, 0.24675,
     1       0.23616, 0.20794, 0.19276, 0.16227, 0.15221, 0.12722, 0.10917, 0.09485 /
      data C10 / -0.0616, -0.05461, -0.05403, -0.05357, -0.05373, -0.05406, -0.05422, -0.05441, -0.05491,
     1       -0.05561, -0.05758, -0.06017, -0.06481, -0.06652, -0.07402, -0.08232, -0.09568, -0.11874,
     1       -0.14131, -0.19127, -0.23069, -0.29176, -0.3141, -0.33853, -0.33532, -0.2685 /
      data sigma / 0.9054, 0.9715, 0.9752, 0.9849, 0.987, 0.9824, 0.9757, 0.9753, 0.9685,
     1       0.9646, 0.9608, 0.9592, 0.9369, 0.9303, 0.917, 0.9098, 0.909, 0.8966,
     1       0.901, 0.9311, 0.9225, 0.9905, 1.0564, 1.1358, 1.2655, 1.3793 /

C Find the requested spectral period and corresponding coefficients
      nPer = 26

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c4T     = c4(1)
         c6T     = c6(1)
         c7T     = c7(1)
         c10T     = c10(1)
         sigT     = sigma(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Silva et al. (2002) 1 Corner-Const-High atttenuation Gulf model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),c10(count1),c10(count2),
     +             specT,c10T,iflag)
      call interp (period(count1),period(count2),sigma(count1),sigma(count2),
     +             specT,sigT,iflag)
 1011 period1 = specT

c     Set atten name
      attenName = 'Silva et al. Gulf(2002) 1-Corner-Const-High'

      lnY = c1T + c2T*M + (c6T+c7T*M)*alog(dist+exp(c4T)) + c10t*(M-6)*(M-6)

c     Convert to spectral acceleration in gal
      lnY = lnY + 6.89

      sig = sigT

      return
      end

c -------------------------------------------------------------------
C *** Silva et al. (2002) 1-Corner-Constant-Medium, Horizontal Gulf *************
c -------------------------------------------------------------------

      subroutine PEAG1CCM ( m, dist, lnY, sig, specT,
     1                  attenName, period1,iflag )

      real lnY, m, dist, sigT, sig, period1
      real specT, c1T, c2T, c4T, c6T, c7T, c10T
      integer nper, count1, count2, iflag
      character*80 attenName

      parameter (MAXPER=26)
      real c1(MAXPER), c2(MAXPER), c4(MAXPER), sigma(MAXPER)
      real c6(MAXPER), c7(MAXPER), c10(MAXPER), period(MAXPER)
      data period / 0.00, 0.02, 0.025, 0.0323, 0.04, 0.05, 0.055, 0.06, 0.07,
     1       0.08, 0.1, 0.12, 0.15, 0.16, 0.2, 0.24, 0.3, 0.4,
     1       0.5, 0.75, 1, 1.6, 2, 3.000, 5, 10 /
      data C1 / 14.09083, 18.66451, 18.5759, 19.69186, 19.31416, 18.86815, 18.68342, 17.14437, 16.8585,
     1       16.58985, 16.07898, 15.60406, 14.96522, 14.76997, 12.91716, 12.30467, 11.47972, 9.29703,
     1       8.2654, 5.26938, 3.53746, -0.33936, -2.48893, -5.83777, -9.7274, -14.97295 /
      data C2 / -0.44176, -0.62536, -0.60707, -0.66304, -0.64033, -0.61146, -0.59824, -0.50458, -0.47991,
     1       -0.45572, -0.41128, -0.37326, -0.32579, -0.3116, -0.19398, -0.14553, -0.07511, 0.09136,
     1       0.19447, 0.46791, 0.65933, 1.05439, 1.25139, 1.58067, 1.95572, 2.37485 /
      data C4 / 3.6, 3.8, 3.8, 3.9, 3.9, 3.9, 3.9, 3.8, 3.8,
     1       3.8, 3.8, 3.8, 3.8, 3.8, 3.7, 3.7, 3.7, 3.6,
     1       3.6, 3.5, 3.5, 3.4, 3.3, 3.2, 3.1, 2.8 /
      data C6 / -5.23954, -5.94544, -5.91373, -6.07864, -6.00557, -5.91969, -5.88319, -5.62237, -5.56225,
     1       -5.50586, -5.40344, -5.31533, -5.20638, -5.17479, -4.87438, -4.78472, -4.66998, -4.34955,
     1       -4.22696, -3.85384, -3.68869, -3.29591, -3.07316, -2.78845, -2.51098, -2.14967 /
      data C7 / 0.33332, 0.36127, 0.35737, 0.36517, 0.3607, 0.35496, 0.35235, 0.33654, 0.33169,
     1       0.327, 0.31863, 0.31184, 0.30397, 0.30176, 0.28333, 0.2769, 0.26828, 0.24683,
     1       0.23667, 0.20926, 0.19464, 0.16405, 0.14866, 0.12797, 0.10865, 0.09041 /
      data C10 / -0.05839, -0.05272, -0.05222, -0.05176, -0.05184, -0.05201, -0.05209, -0.05218, -0.05245,
     1       -0.05288, -0.05418, -0.05594, -0.05917, -0.06037, -0.06574, -0.07185, -0.08198, -0.10023,
     1       -0.11889, -0.1629, -0.20041, -0.26496, -0.29199, -0.32881, -0.34332, -0.29863 /
      data sigma / 0.9, 0.9655, 0.9692, 0.9791, 0.9814, 0.9771, 0.9706, 0.9704, 0.9639,
     1       0.9604, 0.9574, 0.9565, 0.9348, 0.9285, 0.9156, 0.909, 0.9085, 0.8962,
     1       0.9004, 0.9302, 0.9219, 0.9913, 1.0576, 1.1373, 1.2658, 1.3782 /

C Find the requested spectral period and corresponding coefficients
      nPer = 26

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c4T     = c4(1)
         c6T     = c6(1)
         c7T     = c7(1)
         c10T     = c10(1)
         sigT     = sigma(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Silva et al. (2002) 1 Corner-Const-Med atttenuation Gulf model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),c10(count1),c10(count2),
     +             specT,c10T,iflag)
      call interp (period(count1),period(count2),sigma(count1),sigma(count2),
     +             specT,sigT,iflag)
 1011 period1 = specT

c     Set atten name
      attenName = 'Silva et al. Gulf(2002) 1-Corner-Const-Med'

      lnY = c1T + c2T*M + (c6T+c7T*M)*alog(dist+exp(c4T)) + c10t*(M-6)*(M-6)

c     Convert to spectral acceleration in gal
      lnY = lnY + 6.89

      sig = sigT

      return
      end

c -------------------------------------------------------------------
C *** Silva et al. (2002) 1-Corner-Constant-Low, Horizontal Gulf *************
c -------------------------------------------------------------------

      subroutine PEAG1CCL ( m, dist, lnY, sig, specT,
     1                  attenName, period1,iflag )

      real lnY, m, dist, sigT, sig, period1
      real specT, c1T, c2T, c4T, c6T, c7T, c10T
      integer nper, count1, count2, iflag
      character*80 attenName

      parameter (MAXPER=26)
      real c1(MAXPER), c2(MAXPER), c4(MAXPER), sigma(MAXPER)
      real c6(MAXPER), c7(MAXPER), c10(MAXPER), period(MAXPER)
      data period / 0.00, 0.02, 0.025, 0.0323, 0.04, 0.05, 0.055, 0.06, 0.07,
     1       0.08, 0.1, 0.12, 0.15, 0.16, 0.2, 0.24, 0.3, 0.4,
     1       0.5, 0.75, 1, 1.6, 2, 3.000, 5, 10 /
      data C1 / 13.95924, 17.18549, 18.4581, 18.16727, 17.82567, 17.4211, 17.25532, 17.1086, 16.84332,
     1       16.59372, 16.11475, 14.4586, 13.87411, 13.69482, 13.03902, 11.41205, 10.65378, 8.63053,
     1       7.67899, 5.67074, 3.27417, -0.39847, -1.89095, -5.22266, -9.56051, -14.51574 /
      data C2 / -0.51587, -0.6188, -0.68363, -0.65766, -0.6382, -0.61316, -0.60178, -0.59071, -0.56847,
     1       -0.54655, -0.50595, -0.40049, -0.35857, -0.34602, -0.29926, -0.19463, -0.13196, 0.02055,
     1       0.11381, 0.32399, 0.54493, 0.92377, 1.08997, 1.4263, 1.83677, 2.27743 /
      data C4 / 3.6, 3.7, 3.8, 3.8, 3.8, 3.8, 3.8, 3.8, 3.8,
     1       3.8, 3.8, 3.7, 3.7, 3.7, 3.7, 3.6, 3.6, 3.5,
     1       3.5, 3.5, 3.4, 3.3, 3.3, 3.2, 3, 2.8 /
      data C6 / -5.26211, -5.74801, -5.94442, -5.87782, -5.81156, -5.73333, -5.70035, -5.67026, -5.61422,
     1       -5.56147, -5.46456, -5.17926, -5.07762, -5.04794, -4.9434, -4.67925, -4.56857, -4.26127,
     1       -4.13972, -3.90708, -3.60867, -3.22226, -3.10319, -2.81135, -2.45407, -2.16004 /
      data C7 / 0.33959, 0.3548, 0.36483, 0.35931, 0.35548, 0.35047, 0.34821, 0.34603, 0.34167,
     1       0.3374, 0.32967, 0.31164, 0.3044, 0.30235, 0.29508, 0.27864, 0.27022, 0.24915,
     1       0.23879, 0.21814, 0.19579, 0.16458, 0.15363, 0.1316, 0.10808, 0.09156 /
      data C10 / -0.04706, -0.04232, -0.04192, -0.04152, -0.04159, -0.04171, -0.04176, -0.04182, -0.04202,
     1       -0.04233, -0.04331, -0.04464, -0.04708, -0.04799, -0.05208, -0.05678, -0.06472, -0.0794,
     1       -0.09489, -0.13325, -0.16807, -0.23333, -0.26352, -0.31057, -0.34227, -0.3221 /
      data sigma / 0.8999, 0.965, 0.9686, 0.9786, 0.981, 0.977, 0.9705, 0.9705, 0.9642,
     1       0.9611, 0.9586, 0.9582, 0.9368, 0.9306, 0.9181, 0.9114, 0.9108, 0.8982,
     1       0.9018, 0.9306, 0.9217, 0.9915, 1.0581, 1.1387, 1.2666, 1.3771 /

C Find the requested spectral period and corresponding coefficients
      nPer = 26

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c4T     = c4(1)
         c6T     = c6(1)
         c7T     = c7(1)
         c10T     = c10(1)
         sigT     = sigma(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Silva et al. (2002) 1 Corner-Const-Low atttenuation Gulf model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),c10(count1),c10(count2),
     +             specT,c10T,iflag)
      call interp (period(count1),period(count2),sigma(count1),sigma(count2),
     +             specT,sigT,iflag)
 1011 period1 = specT

c     Set atten name
      attenName = 'Silva et al. Gulf (2002) 1-Corner-Const-Low'

      lnY = c1T + c2T*M + (c6T+c7T*M)*alog(dist+exp(c4T)) + c10t*(M-6)*(M-6)

c     Convert to spectral acceleration in gal
      lnY = lnY + 6.89

      sig = sigT

      return
      end

c -------------------------------------------------------------------
C *** Silva et al. (2002) 1-Corner-Constant-High-Sat, Horizontal Gulf *************
c -------------------------------------------------------------------

      subroutine PEAG1CCHS ( m, dist, lnY, sig, specT,
     1                  attenName, period1,iflag )

      real lnY, m, dist, sigT, sig, period1
      real specT, c1T, c2T, c4T, c6T, c7T, c10T
      integer nper, count1, count2, iflag
      character*80 attenName

      parameter (MAXPER=26)
      real c1(MAXPER), c2(MAXPER), c4(MAXPER), sigma(MAXPER)
      real c6(MAXPER), c7(MAXPER), c10(MAXPER), period(MAXPER)
      data period / 0.00, 0.02, 0.025, 0.0323, 0.04, 0.05, 0.055, 0.06, 0.07,
     1       0.08, 0.1, 0.12, 0.15, 0.16, 0.2, 0.24, 0.3, 0.4,
     1       0.5, 0.75, 1, 1.6, 2, 3.000, 5, 10 /
      data C1 / 19.2806, 24.64848, 24.51845, 24.13701, 23.71273, 23.21284, 23.00275, 22.8127, 22.46355,
     1       22.13508, 21.51625, 20.94827, 20.19141, 18.50771, 17.69717, 16.97448, 14.74399, 13.37181,
     1       12.17467, 8.6523, 6.70599, 2.38331, 0.76119, -2.92833, -7.63385, -12.65135 /
      data C2 / -0.99348, -1.24267, -1.21926, -1.18374, -1.15652, -1.12231, -1.10647, -1.09092, -1.05978,
     1       -1.02936, -0.97369, -0.92609, -0.86646, -0.7544, -0.69006, -0.62936, -0.46111, -0.32798,
     1       -0.20531, 0.12586, 0.34088, 0.77804, 0.94998, 1.29933, 1.70983, 2.09962 /
      data C4 / 3.8, 4, 4, 4, 4, 4, 4, 4, 4,
     1       4, 4, 4, 4, 3.9, 3.9, 3.9, 3.8, 3.8,
     1       3.8, 3.7, 3.7, 3.6, 3.6, 3.5, 3.3, 3.1 /
      data C6 / -6.11546, -6.93799, -6.89791, -6.81358, -6.73191, -6.63632, -6.59524, -6.55721, -6.48596,
     1       -6.41929, -6.29904, -6.19648, -6.07056, -5.79682, -5.67505, -5.57259, -5.23503, -5.06579,
     1       -4.92914, -4.49751, -4.31367, -3.87013, -3.74466, -3.40943, -2.99118, -2.65372 /
      data C7 / 0.44085, 0.47804, 0.47308, 0.46562, 0.4603, 0.45359, 0.45051, 0.4475, 0.44153,
     1       0.43578, 0.42562, 0.41744, 0.40801, 0.39016, 0.38135, 0.37377, 0.35058, 0.33699,
     1       0.32564, 0.29269, 0.27643, 0.24129, 0.23048, 0.2058, 0.17807, 0.15931 /
      data C10 / -0.07305, -0.06606, -0.06549, -0.06503, -0.06519, -0.06551, -0.06568, -0.06586, -0.06636,
     1       	-0.06706, -0.06904, -0.07162, -0.07627, -0.07798, -0.08547, -0.09378, -0.10713, -0.13019,
     1       -0.15276, -0.20273, -0.24215, -0.30322, -0.32555, -0.34999, -0.34677, -0.27995 /
      data sigma / 0.9129, 0.9786, 0.9822, 0.9922, 0.9941, 0.9896, 0.9831, 0.9827, 0.976,
     1       0.9721, 0.9683, 0.9669, 0.9448, 0.9383, 0.925, 0.9181, 0.9173, 0.905,
     1       0.9094, 0.9392, 0.9306, 0.998, 1.0634, 1.1422, 1.271, 1.3837 /

C Find the requested spectral period and corresponding coefficients
      nPer = 26

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c4T     = c4(1)
         c6T     = c6(1)
         c7T     = c7(1)
         c10T     = c10(1)
         sigT     = sigma(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Silva et al. (2002) 1 Corner-Const-High-Sat atttenuation Gulf model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),c10(count1),c10(count2),
     +             specT,c10T,iflag)
      call interp (period(count1),period(count2),sigma(count1),sigma(count2),
     +             specT,sigT,iflag)
 1011 period1 = specT

c     Set atten name
      attenName = 'Silva et al. Gulf (2002) 1-Corner-Const-High-Sat'

      lnY = c1T + c2T*M + (c6T+c7T*M)*alog(dist+exp(c4T)) + c10t*(M-6)*(M-6)

c     Convert to spectral acceleration in gal
      lnY = lnY + 6.89

      sig = sigT

      return
      end

c -------------------------------------------------------------------
C *** Silva et al. (2002) 1-Corner-Constant-Med-Sat, Horizontal Gulf *************
c -------------------------------------------------------------------

      subroutine PEAG1CCMS ( m, dist, lnY, sig, specT,
     1                  attenName, period1,iflag )

      real lnY, m, dist, sigT, sig, period1
      real specT, c1T, c2T, c4T, c6T, c7T, c10T
      integer nper, count1, count2, iflag
      character*80 attenName

      parameter (MAXPER=26)
      real c1(MAXPER), c2(MAXPER), c4(MAXPER), sigma(MAXPER)
      real c6(MAXPER), c7(MAXPER), c10(MAXPER), period(MAXPER)

      data period / 0.00, 0.02, 0.025, 0.0323, 0.04, 0.05, 0.055, 0.06, 0.07,
     1       0.08, 0.1, 0.12, 0.15, 0.16, 0.2, 0.24, 0.3, 0.4,
     1       0.5, 0.75, 1, 1.6, 2, 3.000, 5, 10 /
      data C1 / 18.4435, 23.74361, 23.64102, 23.29188, 22.89529, 22.42674, 22.23245, 22.05839, 21.74098,
     1       21.44261, 20.87722, 20.35514, 18.20699, 18.00368, 17.26232, 16.60473, 14.47052, 13.22694,
     1       12.13819, 8.82898, 7.023, 2.84583, 1.25366, -3.08593, -7.18334, -12.36761 /
      data C2 / -0.97271, -1.21411, -1.19389, -1.16219, -1.13831, -1.10792, -1.09401, -1.08042, -1.05317,
     1       -1.02649, -0.97756, -0.9359, -0.7901, -0.77536, -0.7206, -0.66904, -0.51361, -0.39862,
     1       -0.29103, 0.01214, 0.20984, 0.63403, 0.80656, 1.20331, 1.59845, 2.03153 /
      data C4 / 3.8, 4, 4, 4, 4, 4, 4, 4, 4,
     1       4, 4, 4, 3.9, 3.9, 3.9, 3.9, 3.8, 3.8,
     1       3.8, 3.7, 3.7, 3.6, 3.6, 3.4, 3.3, 3.1 /
      data C6 / -6.00839, -6.82593, -6.79201, -6.71452, -6.63833, -6.54872, -6.51064, -6.47563, -6.41027,
     1       -6.34895, -6.23744, -6.14146, -5.78572, -5.75279, -5.63758, -5.54036, -5.20994, -5.04733,
     1       -4.91519, -4.49285, -4.3152, -3.87433, -3.74757, -3.29709, -2.98527, -2.63877 /
      data C7 / 0.43044, 0.46721, 0.46299, 0.45635, 0.45168, 0.44569, 0.44297, 0.44033, 0.43505,
     1       0.42994, 0.42083, 0.41343, 0.38965, 0.38735, 0.37933, 0.37238, 0.34992, 0.33707,
     1       0.32617, 0.29408, 0.27841, 0.24315, 0.23195, 0.2001, 0.17746, 0.15707 /
      data C10 / -0.06984, -0.06417, -0.06368, -0.06322, -0.0633, -0.06346, -0.06354, -0.06363, -0.06391,
     1       -0.06434, -0.06563, -0.0674, -0.07062, -0.07183, -0.0772, -0.08331, -0.09344, -0.11168,
     1       -0.13035, -0.17435, -0.21186, -0.27642, -0.30344, -0.34026, -0.35477, -0.31008 /
      data sigma / 0.9073, 0.9726, 0.9761, 0.9861, 0.9883, 0.9841, 0.9777, 0.9775, 0.9711,
     1       0.9676, 0.9646, 0.9639, 0.9425, 0.9362, 0.9235, 0.9169, 0.9165, 0.9044,
     1       0.9086, 0.9382, 0.93, 0.9987, 1.0648, 1.1441, 1.2715, 1.3828 /

C Find the requested spectral period and corresponding coefficients
      nPer = 26

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c4T     = c4(1)
         c6T     = c6(1)
         c7T     = c7(1)
         c10T     = c10(1)
         sigT     = sigma(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Silva et al. (2002) 1 Corner-Const-Med-Sat atttenuation Gulf model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),c10(count1),c10(count2),
     +             specT,c10T,iflag)
      call interp (period(count1),period(count2),sigma(count1),sigma(count2),
     +             specT,sigT,iflag)
 1011 period1 = specT

c     Set atten name
      attenName = 'Silva et al. Gulf(2002) 1-Corner-Const-Med-Sat'

      lnY = c1T + c2T*M + (c6T+c7T*M)*alog(dist+exp(c4T)) + c10t*(M-6)*(M-6)

c     Convert to spectral acceleration in gal
      lnY = lnY + 6.89

      sig = sigT

      return
      end

c -------------------------------------------------------------------
C *** Silva et al. (2002) 1-Corner-Constant-Low-Sat, Horizontal Gulf *************
c -------------------------------------------------------------------

      subroutine PEAG1CCLS ( m, dist, lnY, sig, specT,
     1                  attenName, period1,iflag )

      real lnY, m, dist, sigT, sig, period1
      real specT, c1T, c2T, c4T, c6T, c7T, c10T
      integer nper, count1, count2, iflag
      character*80 attenName


      parameter (MAXPER=26)
      real c1(MAXPER), c2(MAXPER), c4(MAXPER), sigma(MAXPER)
      real c6(MAXPER), c7(MAXPER), c10(MAXPER), period(MAXPER)
      data period / 0.00, 0.02, 0.025, 0.0323, 0.04, 0.05, 0.055, 0.06, 0.07,
     1       0.08, 0.1, 0.12, 0.15, 0.16, 0.2, 0.24, 0.3, 0.4,
     1       0.5, 0.75, 1, 1.6, 2, 3.000, 5, 10 /
      data C1 / 16.96725, 21.95228, 21.87723, 21.57041, 21.21243, 20.78819, 20.61413, 20.45986, 20.18058,
     1       19.91774, 19.41416, 18.94247, 18.30605, 18.11166, 16.08791, 15.48361, 14.67303, 12.35996,
     1       11.3548, 9.24442, 6.58784, 2.63452, 1.0916, -2.46635, -7.12762, -12.34486 /
      data C2 / -0.95374, -1.17915, -1.16223, -1.13489, -1.11449, -1.08818, -1.07622, -1.0646, -1.04126,
     1       -1.01826, -0.9757, -0.93912, -0.89356, -0.87999, -0.74305, -0.69729, -0.63086, -0.45077,
     1       -0.35323, -0.13451, 0.1121, 0.51855, 0.68925, 1.04807, 1.49148, 1.95845 /
      data C4 / 3.7, 3.9, 3.9, 3.9, 3.9, 3.9, 3.9, 3.9, 3.9,
     1       3.9, 3.9, 3.9, 3.9, 3.9, 3.8, 3.8, 3.8, 3.7,
     1       3.7, 3.7, 3.6, 3.5, 3.5, 3.4, 3.2, 3 /
      data C6 / -5.807, -6.58099, -6.55296, -6.48374, -6.41476, -6.33324, -6.29889, -6.26753, -6.20917,
     1       -6.15421, -6.05319, -5.96502, -5.85465, -5.82243, -5.49275, -5.40014, -5.28067, -4.9283,
     1       -4.79775, -4.54798, -4.20864, -3.777, -3.64922, -3.32053, -2.91057, -2.57317 /
      data C7 / 0.42132, 0.45634, 0.45285, 0.4471, 0.44311, 0.43789, 0.43554, 0.43327, 0.42872,
     1       0.42427, 0.41621, 0.40954, 0.4017, 0.39947, 0.37755, 0.3709, 0.36186, 0.33648,
     1       0.32541, 0.30336, 0.27695, 0.24128, 0.22956, 0.20386, 0.17493, 0.15404 /
      data C10 / -0.05852, -0.05377, -0.05337, -0.05297, -0.05305, -0.05317, -0.05322, -0.05328, -0.05347,
     1       -0.05379, -0.05476, -0.0561, -0.05854, -0.05945, -0.06353, -0.06824, -0.07617, -0.09086,
     1       -0.10635, -0.14471, -0.17953, -0.24479, -0.27498, -0.32203, -0.35373, -0.33355 /
      data sigma / 0.9075, 0.9723, 0.9759, 0.9861, 0.9884, 0.9844, 0.9781, 0.978, 0.9719,
     1       0.9687, 0.9662, 0.9657, 0.9446, 0.9385, 0.9261, 0.9195, 0.919, 0.9065,
     1       0.9101, 0.9387, 0.93, 0.9992, 1.0655, 1.1457, 1.2728, 1.3821 /

C Find the requested spectral period and corresponding coefficients
      nPer = 26

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c1T     = c1(1)
         c2T     = c2(1)
         c4T     = c4(1)
         c6T     = c6(1)
         c7T     = c7(1)
         c10T     = c10(1)
         sigT     = sigma(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Silva et al. (2002) 1 Corner-Const-Low-Sat atttenuation Gulf model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period(count1),period(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period(count1),period(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period(count1),period(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period(count1),period(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period(count1),period(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period(count1),period(count2),c10(count1),c10(count2),
     +             specT,c10T,iflag)
      call interp (period(count1),period(count2),sigma(count1),sigma(count2),
     +             specT,sigT,iflag)
 1011 period1 = specT

c     Set atten name
      attenName = 'Silva et al. Gulf(2002) 1-Corner-Const-Low-Sat'

      lnY = c1T + c2T*M + (c6T+c7T*M)*alog(dist+exp(c4T)) + c10t*(M-6)*(M-6)

c     Convert to spectral acceleration in gal
      lnY = lnY + 6.89

      sig = sigT

      return
      end
c ----------------------------

c ------------------------------------------------------------------
C *** Campbell (2003) Horizontal for Hybrid CEUS ****
c ------------------------------------------------------------------

      subroutine CHY03 ( mag, rupdist, lnY, sigma, specT, period, iflag )

c    Campbell (2003) Horizontal Hybrid CEUS
C    Hard Rock Site Conditions

      real mag, rupDist, lnY, sigma, period
      real R, term1, term2, term3
      real c1(18), c2(18), c3(18), c4(18), c5(18), c6(18)
      real c7(18), c8(18), c9(18), c10(18), c11(18)
      real c12(18), c13(18)
      real specT, c1T, c2T, c3T, c4T, c5T, c6T, c7T
      real c8T, c9T, c10T, c11T, c12T, c13T
      integer nper, count1, count2,iflag
      real period1(18)

      data period1 / 0.00, 0.01, 0.02, 0.03, 0.05, 0.075, 0.10, 0.15, 0.20,
     &               0.30, 0.50, 0.75, 1.00, 1.50,  2.00, 3.00, 4.00, 5.00 /
      data c1  / 0.0305,  0.0305,  1.3535,  1.186,  0.3736, -0.0395, -0.1475,
     &          -0.1901, -0.4328, -0.6906, -0.5907, -0.5429, -0.6104,
     &          -0.9666, -1.4306, -2.2331, -2.7975, -3.2365 /
      data c2  / 0.633,  0.633, 0.63, 0.622, 0.616, 0.615, 0.613, 0.616, 0.617,
     &           0.609, 0.534, 0.48, 0.451, 0.441, 0.459, 0.492, 0.507, 0.525  /
      data c3  / -0.0427, -0.0427, -0.0404, -0.0362, -0.0353, -0.0353, -0.0353,
     &           -0.0478, -0.0586, -0.0786, -0.1379, -0.1806, -0.209,
     &           -0.2405, -0.2552, -0.2646, -0.2738, -0.2792  /
      data c4  / -1.591, -1.591, -1.787, -1.691, -1.469, -1.383, -1.369, -1.368,
     &           -1.32, -1.28, -1.216, -1.184, -1.158, -1.135, -1.124,
     &           -1.121, -1.119, -1.117  /
      data c5  / -0.00428, -0.00428, -0.00388, -0.00367, -0.00378, -0.00421, -0.00454,
     &           -0.00473, -0.0046, -0.00414, -0.00341, -0.00288, -0.00255,
     &           -0.00213, -0.00187, -0.00154, -0.00135, -0.00117  /
      data c6  / 0.000483, 0.000483, 0.000497, 0.000501, 0.0005, 0.000486, 0.00046,
     &           0.000393, 0.000337, 0.000263, 0.000194, 0.00016, 0.000141,
     &           0.000119, 0.000103, 0.000084, 0.000074, 0.000064  /
      data c7  / 0.683, 0.683, 1.02, 0.922, 0.63, 0.491, 0.484, 0.461, 0.399, 0.349,
     &           0.318, 0.304, 0.299, 0.304, 0.31, 0.31, 0.294, 0.293  /
      data c8  / 0.416, 0.416, 0.363, 0.376, 0.423, 0.463, 0.467, 0.478, 0.493, 0.502,
     &           0.503, 0.504, 0.503, 0.5, 0.499, 0.499, 0.506, 0.507  /
      data c9  / 1.14, 1.14, 0.851, 0.759, 0.771, 0.955, 1.096, 1.239, 1.25, 1.241,
     &           1.166, 1.11, 1.067, 1.029, 1.015, 1.014, 1.018, 1.018 /
      data c10 / -0.873, -0.873, -0.715, -0.922, -1.239, -1.349, -1.284, -1.079, -0.928,
     &           -0.753, -0.606, -0.526, -0.482, -0.438, -0.417, -0.393, -0.386, -0.374 /
      data c11 / 1.03, 1.03, 1.03, 1.03, 1.042, 1.052, 1.059, 1.068, 1.077, 1.081,
     &           1.098, 1.105, 1.11, 1.099, 1.093, 1.09, 1.092, 1.092  /
      data c12 / -0.086, -0.086, -0.086, -0.086, -0.0838, -0.0838, -0.0838, -0.0838,
     &           -0.0838, -0.0838, -0.0824, -0.0806, -0.0793, -0.0771, -0.0758,
     &           -0.0737, -0.0722, -0.0722 /
      data c13 / 0.414, 0.414, 0.414, 0.414, 0.443, 0.453, 0.46, 0.469, 0.478,
     &           0.482, 0.508, 0.528, 0.543, 0.547, 0.551, 0.562, 0.575, 0.575 /

C Find the requested spectral period and corresponding coefficients
      nPer = 18

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period   = period1(1)
         c1T      = c1(1)
         c2T      = c2(1)
         c3T      = c3(1)
         c4T      = c4(1)
         c5T      = c5(1)
         c6T      = c6(1)
         c7T      = c7(1)
         c8T      = c8(1)
         c9T      = c9(1)
         c10T     = c10(1)
         c11T     = c11(1)
         c12T     = c12(1)
         c13T     = c13(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period1(i) .and. specT .le. period1(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Campbell (2003) Hor. Hybrid-CEUS atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period1(count1),period1(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period1(count1),period1(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period1(count1),period1(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period1(count1),period1(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period1(count1),period1(count2),c5(count1),c5(count2),
     +             specT,c5T,iflag)
      call interp (period1(count1),period1(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period1(count1),period1(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period1(count1),period1(count2),c8(count1),c8(count2),
     +             specT,c8T,iflag)
      call interp (period1(count1),period1(count2),c9(count1),c9(count2),
     +             specT,c9T,iflag)
      call interp (period1(count1),period1(count2),c10(count1),c10(count2),
     +             specT,c10T,iflag)
      call interp (period1(count1),period1(count2),c11(count1),c11(count2),
     +             specT,c11T,iflag)
      call interp (period1(count1),period1(count2),c12(count1),c12(count2),
     +             specT,c12T,iflag)
      call interp (period1(count1),period1(count2),c13(count1),c13(count2),
     +             specT,c13T,iflag)

 1011 period = specT

C     Compute the ground motions.
      r1 = 70.0
      r2 = 130.0
      R = sqrt(rupdist*rupdist + (c7T*exp(c8T*mag))**2.0)
      term1 = c2T*mag + c3T*(8.5-mag)**2.0
      term2 = c4T*alog(R) + (c5T + c6T*mag)*rupdist

      if (rupdist .le. r1) then
         term3 = 0.0
      elseif (rupdist .le. r2) then
         term3 = c9T*(alog(rupdist) - alog(r1) )
      else
         term3 = c9T*(alog(rupdist) - alog(r1) ) + c10T*(alog(rupdist) - alog(r2) )
      endif

      lnY = c1T + term1 + term2 + term3

C     Now compute the sigma
      if (mag .lt. 7.16) then
         sigma = c11T + c12T*mag
      else
         sigma = c13T
      endif

C     Now convert to Ln Units in gals.
      lnY = lnY + 6.89

      return
      end

c ------------------------------------------------------------------
C *** Campbell (2003) Epistemic Model from B. Youngs ****
c ------------------------------------------------------------------

      subroutine CHY03Eps ( mag, rupdist, sigmaeps, specT, period, iflag )

c    Campbell (2003) Horizontal Hybrid CEUS
C    Hard Rock Site Conditions
C    Functional fit to Epistemic Values

      real mag, rupDist, lnY, sigmaeps, period
      real EU1(19), EU2(19), EU3(19), EU4(19)
      real EU5(19), EU6(19), EU7(19), EU8(19)
      real EU1T, EU2T, EU3T, EU4T, EU5T, EU6T, EU7T, EU8T
      real period1(19)
      integer nper, count1, count2,iflag

      data Period1 / 0.00, 0.02, 0.025, 0.03, 0.04, 0.05, 0.075, 0.1,
     1               0.15, 0.2, 0.3, 0.4, 0.5, 0.75, 1.0, 1.5, 2.0,
     2               3.0, 4.0 /
      data EU1 / -0.033125, 0.51389, 0.4732, 0.43996, 0.35982, 0.29766,
     1            0.14199, 0.070928,0.090445,0.094299,0.228,0.071481,
     2           -0.049923,-0.024928,-0.31915,0.30874,0.38988,0.030017,
     3            0.17177 /
      data EU2 / 0.03861, -0.012873, -0.023817, -0.032759, -0.022174,
     1          -0.013963, 0.0035871, 0.010224, 0.0016472, -0.0018457,
     2          -0.024652, -0.0067245, 0.0071813, -0.00096697, 0.059038,
     3          -0.045457, -0.048256, 0.018689, 0.0040366 /
      data EU3 / 0.0087249, 0.0024367, 0.0025327, 0.0026111, 0.0038935,
     1           0.0048883, 0.007836, 0.0092802, 0.0070123, 0.0058854,
     2          -0.00036376, 0.0027743, 0.0052083, 0.003623, 0.0072105,
     3          -0.0018214, -0.0026968, -0.00083408, -0.0029759 /
      data EU4 / -0.0011583, -0.0003466, -0.0001655, -0.000017529,
     1           -0.00022502, -0.00038596, -0.00082995, -0.0010257,
     2           -0.00062561, -0.00036639, 0.00058705, 0.00017773,
     3           -0.00013977, 0.00010171, -0.00068873, 0.00074708,
     4            0.00079911,0.00020333,0.00040235 /
      data EU5 / 0.48433, 0.077638, -0.0016085, -0.066357, -0.084339,
     1          -0.098287, -0.21126, -0.18045, -0.25327, -0.19499,
     2           0.0026986, 0.22268, 0.39332, 0.41276, 0.80731,
     3           0.26528, 0.22295, 0.83934, 1.3955 /
      data EU6 / -0.054313, -0.00050347, 0.018919, 0.034789, 0.032453,
     1            0.030642, 0.055054, 0.054054, 0.072855, 0.066763,
     2            0.028926, -0.0035868, -0.028806, -0.029292, -0.10475,
     3           -0.010409, -0.012206, -0.11457, -0.19531 /
      data EU7 / 0.10412, -0.28007, -0.15434, -0.051614, 0.0030899,
     1           0.045522, 0.089641, -0.012585, -0.16112, -0.22373,
     2          -0.31465, -0.21393, -0.13581, -0.13727, 0.069083,
     3          -0.1091, -0.07587, 0.24009, 0.53063 /
      data EU8 / -0.029092, 0.032305, 0.016081, 0.0028249, -0.0091361,
     1           -0.018414, -0.032056, -0.018555, 0.0042663, 0.013275,
     2            0.030403, 0.020432, 0.012697, 0.013937, -0.027262,
     3            0.01131, 0.0059025, -0.057348, -0.11271 /

C Find the requested spectral period and corresponding coefficients
      nPer = 19

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period   = period1(1)
         EU1T      = EU1(1)
         EU2T      = EU2(1)
         EU3T      = EU3(1)
         EU4T      = EU4(1)
         EU5T      = EU5(1)
         EU6T      = EU6(1)
         EU7T      = EU7(1)
         EU8T      = EU8(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period1(i) .and. specT .le. period1(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Campbell (2003) Hor. Hybrid-CEUS Epistemic model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period1(count1),period1(count2),EU1(count1),EU1(count2),
     +             specT,EU1T,iflag)
      call interp (period1(count1),period1(count2),EU2(count1),EU2(count2),
     +             specT,EU2T,iflag)
      call interp (period1(count1),period1(count2),EU3(count1),EU3(count2),
     +             specT,EU3T,iflag)
      call interp (period1(count1),period1(count2),EU4(count1),EU4(count2),
     +             specT,EU4T,iflag)
      call interp (period1(count1),period1(count2),EU5(count1),EU5(count2),
     +             specT,EU5T,iflag)
      call interp (period1(count1),period1(count2),EU6(count1),EU6(count2),
     +             specT,EU6T,iflag)
      call interp (period1(count1),period1(count2),EU7(count1),EU7(count2),
     +             specT,EU7T,iflag)
      call interp (period1(count1),period1(count2),EU8(count1),EU8(count2),
     +             specT,EU8T,iflag)

 1011 period = specT

C     Compute the epistemic sigma value.
      sigmaeps = EU1T + EU2T*mag + (EU3T + EU4T*mag)*rupDist +
     1          (EU5T + EU6T*mag)*exp( (EU7T + EU8T*mag)*rupDist )

      return
      end

c ------------------------------------------------------------------
C *** Atkinson and Boore (2006) Horizontal for CEUS Hard Rock ****
c ------------------------------------------------------------------

      subroutine AB06 ( mag, rupdist, lnY, sigma, specT, period, iflag )

c    Atkinson and Boore (2006) Horizontal CEUS Hard Rock
C    Hard Rock Site Conditions

      real mag, rupDist, lnY, sigma, period
      real term1, term2
      real c1(25), c2(25), c3(25), c4(25), c5(25), c6(25)
      real c7(25), c8(25), c9(25), c10(25)
      real specT, c1T, c2T, c3T, c4T, c5T, c6T, c7T
      real c8T, c9T, c10T
      integer nper, count1, count2,iflag
      real period1(25)

      data Period1 / 0.00, 0.025, 0.031, 0.04, 0.05, 0.063, 0.079,
     &               0.1, 0.125, 0.158, 0.199, 0.251, 0.315, 0.397,
     &               0.5, 0.629, 0.794, 1.00, 1.25, 1.59, 2.00, 2.5,
     &               3.13, 4.00, 5.00 /
      data c1 / 0.907, 1.52, 1.44, 1.26, 1.11, 0.911, 0.691, 0.48, 0.214,
     &         -0.146, -0.615, -1.12, -1.72, -2.44, -3.22, -3.92, -4.6,
     &         -5.27, -5.72, -6.04, -6.18, -6.17, -6.04, -5.79, -5.41 /
      data c2 / 0.983, 0.96, 0.959, 0.968, 0.972, 0.98, 0.997, 1.02, 1.05,
     &          1.12, 1.23, 1.34, 1.48, 1.65, 1.83, 1.99, 2.13, 2.26, 2.32,
     &          2.34, 2.3, 2.21, 2.08, 1.92, 1.71 /
      data c3 / -0.066, -0.0635, -0.0628, -0.0623, -0.062, -0.0621, -0.0628,
     &          -0.064, -0.0666, -0.0714, -0.0789, -0.0872, -0.0974, -0.108,
     &          -0.12, -0.131, -0.141, -0.148, -0.151, -0.15, -0.144, -0.135,
     &          -0.122, -0.107, -0.0901 /
      data c4 / -2.7, -2.81, -2.71, -2.58, -2.47, -2.36, -2.26, -2.2, -2.15,
     &          -2.12, -2.09, -2.08, -2.08, -2.05, -2.02, -2.05, -2.06, -2.07,
     &          -2.1, -2.16, -2.22, -2.3, -2.37, -2.44, -2.54 /
      data c5 / 0.159, 0.146, 0.14, 0.132, 0.128, 0.126, 0.125, 0.127, 0.13, 0.13,
     &          0.131, 0.135, 0.138, 0.136, 0.134, 0.142, 0.147, 0.15, 0.157, 0.166,
     &          0.177, 0.19, 0.2, 0.211, 0.227 /
      data c6 / -2.8, -3.65, -3.73, -3.64, -3.39, -2.97, -2.49, -2.01, -1.61, -1.3,
     &          -1.12, -0.971, -0.889, -0.843, -0.813, -0.782, -0.797, -0.813, -0.82,
     &          -0.87, -0.937, -0.986, -1.07, -1.16, -1.27 /
      data c7 / 0.212, 0.236, 0.234, 0.228, 0.214, 0.191, 0.164, 0.133, 0.105, 0.0831,
     &          0.0679, 0.0563, 0.0487, 0.0448, 0.0444, 0.043, 0.0435, 0.0467, 0.0519,
     &          0.0605, 0.0707, 0.0786, 0.0895, 0.102, 0.116 /
      data c8 / -0.301, -0.654, -0.543, -0.351, -0.139, 0.107, 0.214, 0.337, 0.427,
     &           0.562, 0.606, 0.614, 0.61, 0.739, 0.884, 0.788, 0.775, 0.826, 0.856,
     &           0.921, 0.952, 0.968, 1, 1.01, 0.979 /
      data c9 / -0.0653, -0.055, -0.0645, -0.0813, -0.0984, -0.117, -0.121, -0.127,
     &          -0.13, -0.144, -0.146, -0.143, -0.139, -0.156, -0.175, -0.159, -0.156,
     &          -0.162, -0.166, -0.173, -0.177, -0.177, -0.18, -0.182, -0.177 /
      data c10 / -0.000448, -0.0000485, -0.0000323, -0.000123, -0.000317, -0.000579,
     &           -0.000847, -0.00105, -0.00115, -0.00118, -0.00113, -0.00106,
     &           -0.000954, -0.000851, -0.00077, -0.000695, -0.000579, -0.000386,
     &           -0.000433, -0.000375, -0.000322, -0.000282, -0.000231, -0.000201,
     &           -0.000176 /

C Find the requested spectral period and corresponding coefficients
      nPer = 25

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period   = period1(1)
         c1T      = c1(1)
         c2T      = c2(1)
         c3T      = c3(1)
         c4T      = c4(1)
         c5T      = c5(1)
         c6T      = c6(1)
         c7T      = c7(1)
         c8T      = c8(1)
         c9T      = c9(1)
         c10T     = c10(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period1(i) .and. specT .le. period1(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Atkinson and Boore (2006) Hor. CEUS Hard Rock atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period1(count1),period1(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period1(count1),period1(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period1(count1),period1(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period1(count1),period1(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period1(count1),period1(count2),c5(count1),c5(count2),
     +             specT,c5T,iflag)
      call interp (period1(count1),period1(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period1(count1),period1(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period1(count1),period1(count2),c8(count1),c8(count2),
     +             specT,c8T,iflag)
      call interp (period1(count1),period1(count2),c9(count1),c9(count2),
     +             specT,c9T,iflag)
      call interp (period1(count1),period1(count2),c10(count1),c10(count2),
     +             specT,c10T,iflag)

 1011 period = specT

C     Compute the ground motions.
      r0 = 10.0
      r1 = 70.0
      r2 = 140.0
      term0 = max(alog10(r0/rupdist),0.0)
      term1 = min(alog10(rupdist),alog10(r1))
      term2 = max(alog10(rupdist/r2),0.0)

      lnY = c1T + c2T*mag + c3T*mag*mag + (c4T+c5T*mag)*term1 +
     1        (c6T + c7T*mag)*term2 + (c8T + c9T*mag)*term0 + c10T*rupdist

C     Now convert to Ln Units.
      lnY = alog(10.0)*lnY
c      lnY = lnY + 6.89
      sigma = alog(10.0)*0.30

      return
      end


c ------------------------------------------------------------------
C *** Atkinson and Boore (2006) Horizontal for CEUS Hard Rock ****
C        **** Alternative Stress Drop Scale Factors ****
c ------------------------------------------------------------------

      subroutine AB06SF2 ( mag, specT, period, SF2 )

c     Atkinson and Boore (2006) Horizontal CEUS Hard Rock
C     Hard Rock Site Conditions
C     Alternative Stress Drop values (see Eq. 6 and Table 7)

      real mag, period, SF2, specT, term1, term2
      real period1(26)
      real Mh(26), Ml(26), Delta, MhT, MlT
      integer nper, count1, count2, iFlag

      data Period1 / 0.00, 0.01, 0.025, 0.031, 0.04, 0.05, 0.063, 0.079,
     &               0.1, 0.125, 0.158, 0.199, 0.251, 0.315, 0.397,
     &               0.5, 0.629, 0.794, 1.00, 1.25, 1.59, 2.00, 2.5,
     &               3.13, 4.00, 5.00 /
      data Mh / 5.5, 5.5, 5.0, 5.0, 5.0, 5.0, 5.17, 5.34, 5.5, 5.67, 5.84,
     1          6.0, 6.12, 6.25, 6.37, 6.5, 6.7, 6.95, 7.2, 7.45, 7.7,
     2          8.0 ,8.12, 8.25 ,8.37 ,8.5 /

      data Ml / 0.5, 0.5, 0.0, 0.0, 0.0, 0.0, 0.17, 0.34, 0.5, 1.15, 1.85,
     1          2.5, 2.9, 3.3, 3.65, 4.0, 4.17, 4.34, 4.5, 4.67, 4.84,
     2          5.0, 5.25, 5.5, 5.75, 6.0 /

C Find the requested spectral period and corresponding coefficients
      nPer = 26

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period   = period1(1)
         MlT      = Ml(1)
         MhT      = Mh(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period1(i) .and. specT .le. period1(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Atkinson and Boore (2006) Hor. CEUS Hard Rock atttenuation model'
C      write (*,*) 'variable stress drop factors'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period1(count1),period1(count2),Ml(count1),Ml(count2),
     +             specT,MlT,iflag)
      call interp (period1(count1),period1(count2),Mh(count1),Mh(count2),
     +             specT,MhT,iflag)

 1011 period = specT

C     Compute the ground motions.
      delta = 0.15
      term1 = max( (mag - mlT), 0.0)
      term2 = 0.05 + delta*(term1/(MhT-MlT))
      SF2 = min(delta+0.05, term2)

      return
      end

c ------------------------------------------------------------------
C *** Atkinson and Boore (2006) Horizontal for CEUS Vs=760m/sec ****
c ------------------------------------------------------------------

      subroutine AB06vs760 ( mag, rupdist, lnY, sigma, specT, period, iflag )

c    Atkinson and Boore (2006) Horizontal CEUS Vs=760m/sec

      real mag, rupDist, lnY, sigma, period
      real term1, term2
      real c1(26), c2(26), c3(26), c4(26), c5(26), c6(26)
      real c7(26), c8(26), c9(26), c10(26)
      real specT, c1T, c2T, c3T, c4T, c5T, c6T, c7T
      real c8T, c9T, c10T
      integer nper, count1, count2,iflag
      real period1(26)

      data Period1 / 0.00, 0.0100, 0.025, 0.031, 0.04, 0.05, 0.063, 0.079,
     &               0.1, 0.125, 0.158, 0.199, 0.251, 0.315, 0.397,
     &               0.5, 0.629, 0.794, 1.00, 1.25, 1.59, 2.00, 2.5,
     &               3.13, 4.00, 5.00 /
      data c1 / 0.523, 0.523, 1.05, 1.19, 1.26, 1.21, 1.11, 0.967, 0.782, 0.536,
     &          0.119, -0.306, -0.876, -1.56, -2.28, -3.01, -3.75, -4.45,
     &         -5.06, -5.49, -5.75, -5.85, -5.8, -5.59, -5.26, -4.85 /
      data c2 / 0.969, 0.969, 0.903, 0.888, 0.879, 0.883, 0.888, 0.903, 0.924,
     &          0.965, 1.06, 1.16, 1.29, 1.46, 1.63, 1.8, 1.97, 2.12, 2.23,
     &          2.29, 2.29, 2.23, 2.13, 1.97, 1.79, 1.58 /
      data c3 / -0.062, -0.062, -0.0577, -0.0564, -0.0552, -0.0544, -0.0539,
     &          -0.0548, -0.0556, -0.0584, -0.0647, -0.0721, -0.0819,
     &          -0.0931, -0.105, -0.118, -0.129, -0.139, -0.145, -0.148,
     &          -0.145, -0.139, -0.128, -0.114, -0.0979, -0.0807 /
      data c4 / -2.44, -2.44, -2.57, -2.58, -2.54, -2.44, -2.33, -2.25, -2.17,
     &          -2.11, -2.05, -2.04, -2.01, -1.98, -1.97, -1.98, -2.00,
     &          -2.01, -2.03, -2.08, -2.13, -2.2, -2.26, -2.33, -2.44, -2.53 /
      data c5 / 0.147, 0.147, 0.148, 0.145, 0.139, 0.13, 0.123, 0.122, 0.119,
     &          0.121, 0.119, 0.122, 0.123, 0.121, 0.123, 0.127, 0.131,
     &          0.136, 0.141, 0.15, 0.158, 0.169, 0.179, 0.191, 0.207, 0.222 /
      data c6 / -2.34, -2.34, -2.65, -2.84, -2.99, -3.04, -2.88, -2.53, -2.1,
     &          -1.67, -1.36, -1.15, -1.03, -0.947, -0.888, -0.847, -0.842,
     &          -0.858, -0.874, -0.9, -0.957, -1.04, -1.12, -1.2, -1.31, -1.43 /
      data c7 / 0.191, 0.191, 0.207, 0.212, 0.216, 0.213, 0.201, 0.178, 0.148,
     &          0.116, 0.0916, 0.0738, 0.0634, 0.0558, 0.0503, 0.047, 0.0482,
     &          0.0498, 0.0541, 0.0579, 0.0676, 0.08, 0.0954, 0.11, 0.121, 0.136 /
      data c8 / -0.087, -0.087, -0.408, -0.437, -0.391, -0.21, -0.0319, 0.1, 0.285,
     &           0.343, 0.516, 0.508, 0.581, 0.65, 0.684, 0.667, 0.677, 0.708,
     &           0.792, 0.821, 0.867, 0.867, 0.891, 0.845, 0.734, 0.634 /
      data c9 / -0.0829, -0.0829, -0.0577, -0.0587, -0.0675, -0.09, -0.107, -0.115,
     &          -0.132, -0.132, -0.15, -0.143, -0.149, -0.156, -0.158,
     &          -0.155, -0.156, -0.159, -0.17, -0.172, -0.179, -0.179,
     &          -0.18, -0.172, -0.156, -0.141 /
      data c10 / -0.00063, -0.00063, -0.000512, -0.000433, -0.000388, -0.000415,
     &           -0.000548, -0.000772, -0.00099, -0.00113, -0.00118,
     &           -0.00114, -0.00105, -0.000955, -0.000859, -0.000768,
     &           -0.000676, -0.000575, -0.000489, -0.000407, -0.000343,
     &           -0.000286, -0.00026, -0.000245, -0.000196, -0.000161 /

C Find the requested spectral period and corresponding coefficients
      nPer = 26

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period   = period1(1)
         c1T      = c1(1)
         c2T      = c2(1)
         c3T      = c3(1)
         c4T      = c4(1)
         c5T      = c5(1)
         c6T      = c6(1)
         c7T      = c7(1)
         c8T      = c8(1)
         c9T      = c9(1)
         c10T     = c10(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period1(i) .and. specT .le. period1(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Atkinson and Boore (2006) Hor. CEUS Vs=760m/s atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period1(count1),period1(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period1(count1),period1(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period1(count1),period1(count2),c3(count1),c3(count2),
     +             specT,c3T,iflag)
      call interp (period1(count1),period1(count2),c4(count1),c4(count2),
     +             specT,c4T,iflag)
      call interp (period1(count1),period1(count2),c5(count1),c5(count2),
     +             specT,c5T,iflag)
      call interp (period1(count1),period1(count2),c6(count1),c6(count2),
     +             specT,c6T,iflag)
      call interp (period1(count1),period1(count2),c7(count1),c7(count2),
     +             specT,c7T,iflag)
      call interp (period1(count1),period1(count2),c8(count1),c8(count2),
     +             specT,c8T,iflag)
      call interp (period1(count1),period1(count2),c9(count1),c9(count2),
     +             specT,c9T,iflag)
      call interp (period1(count1),period1(count2),c10(count1),c10(count2),
     +             specT,c10T,iflag)

 1011 period = specT

C     Compute the ground motions.
      r0 = 10.0
      r1 = 70.0
      r2 = 140.0
      term0 = max(alog10(r0/rupdist),0.0)
      term1 = min(alog10(rupdist),alog10(r1))
      term2 = max(alog10(rupdist/r2),0.0)

      lnY = c1T + c2T*mag + c3T*mag*mag + (c4T+c5T*mag)*term1 +
     1        (c6T + c7T*mag)*term2 + (c8T + c9T*mag)*term0 + c10T*rupdist

C     Now convert to Ln Units.
      lnY = alog(10.0)*lnY
c      lnY = lnY + 6.89
      sigma = alog(10.0)*0.30

      return
      end

c ------------------------------------------------------------------
C *** Atkinson (2008) Horizontal for CEUS-NGA BA08 Vs=760m/sec ****
c ------------------------------------------------------------------

      subroutine A08vs760 ( mag, jbdist, specT, BA08lnY, period, LnY, sigma, iflag )

c    Atkinson (2008) Horizontal CEUS-NGA BA08 Vs=760m/sec

      real mag, jbDist, lnY, sigma, period, BA08LnY
      real c1(7), c2(7), c0(7)
      real specT, c1T, c2T, c0T
      integer nper, count1, count2,iflag
      real per1(7)

      data Per1 / 0.00, 0.10, 0.20, 0.50, 1.00, 2.00, 5.00 /
      data c1 / 0.00120, 0.00124, 0.00144, 0.00113, 0.000556, 0.000520, -0.00107 /
      data c2 / 0.00000230, 0.00000199, 0.00000127, 0.000000698,
     1          0.000000744, 0.000000376, 0.00000149 /
      data c0 / 0.163, 0.093, -0.155, -0.356, -0.404, -0.379, -0.319 /

C Find the requested spectral period and corresponding coefficients
      nPer = 7
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period   = per1(1)
         c1T      = c1(1)
         c2T      = c2(1)
         c0T      = c0(1)
         goto 1011
      elseif (specT .ne. 0.0) then

C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. per1(i) .and. specT .le. per1(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Atkinson (2008) Hor. CEUS-NGA BA08 Vs760 atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (per1(count1),per1(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (per1(count1),per1(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (per1(count1),per1(count2),c0(count1),c0(count2),
     +             specT,c0T,iflag)

 1011 period = specT

c     Compute the ground motions adjustment factor.
      factor = c0T + c1T*jbdist + c2T*jbdist*jbdist
      factor = factor*alog(10.0)

      lnY = BA08LnY + factor

      return
      end


c ------------------------------------------------------------------
C *** Atkinson (2008) Horizontal for CEUS-NGA BA08 Vs=760m/sec   ****
C      *** Alternative C0 values                                 ****
c ------------------------------------------------------------------

      subroutine A08vs760C0 ( mag, jbdist, specT, BA08lnY, period, LnY, sigma, iflag )

c    Atkinson (2008) Horizontal CEUS-NGA BA08 Vs=760m/sec
C     Alternative C0 values

      real mag, jbDist, lnY, sigma, period, BA08LnY
      real c1(7), c2(7), c0(7)
      real specT, c1T, c2T, c0T
      integer nper, count1, count2,iflag
      real period1(7)

      data Period1 / 0.00, 0.10, 0.20, 0.50, 1.00, 2.00, 5.00 /
      data c1 / 0.00120, 0.00124, 0.00144, 0.00113, 0.000556, 0.000520, -0.00107 /
      data c2 / 0.00000230, 0.00000199, 0.00000127, 0.000000698,
     1          0.000000744, 0.000000376, 0.00000149 /
      data c0 / 0.287, 0.143, -0.102, -0.364, -0.376, -0.419, -0.271 /

C Find the requested spectral period and corresponding coefficients
      nPer = 7

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period   = period1(1)
         c1T      = c1(1)
         c2T      = c2(1)
         c0T      = c0(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period1(i) .and. specT .le. period1(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Atkinson (2008) Hor. CEUS-NGA BA08 Vs760 atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period1(count1),period1(count2),c1(count1),c1(count2),
     +             specT,c1T,iflag)
      call interp (period1(count1),period1(count2),c2(count1),c2(count2),
     +             specT,c2T,iflag)
      call interp (period1(count1),period1(count2),c0(count1),c0(count2),
     +             specT,c0T,iflag)

 1011 period = specT

c     Compute the ground motions adjustment factor.
      factor = c0T + c1T*jbdist + c2T*jbdist*jbdist
      factor = factor*alog(10.0)

      lnY = BA08LnY + factor

      return
      end

c ------------------------------------------------------------------
C *** NGA Sigma (Average from NGA Models for M5.5) ****
c ------------------------------------------------------------------

      subroutine NGASigma ( specT, period, sigma )

C     Average sigma from NGA models for M5.5.

      real period, sigma, specT
      real period1(21)
      real sig(21), sigT
      integer nper, count1, count2, iFlag

      data Period1 / 0.01, 0.02, 0.03, 0.04, 0.05, 0.075, 0.1, 0.15,
     1               0.2, 0.25, 0.3, 0.4, 0.5, 1.0, 1.5, 2.0, 3.0,
     2               4.0, 5.0, 7.5, 10.0 /

      data sig / 0.684, 0.684, 0.684, 0.684, 0.684, 0.684 ,0.684,
     1           0.684, 0.684, 0.684, 0.684, 0.682, 0.686, 0.701,
     2           0.712, 0.721, 0.727, 0.732, 0.755, 0.758, 0.809 /


C Find the requested spectral period and corresponding coefficients
      nPer = 21

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period   = period1(1)
         sigT      = sig(1)
         goto 1011
      elseif (specT .ne. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period1(i) .and. specT .le. period1(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'NGA sigma model (M5.5)'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (period1(count1),period1(count2),sig(count1),sig(count2),
     +             specT,sigT,iflag)

 1011 period = specT

C     Set the sigma value.
      sigma = sigT

      return
      end

c ------------------------------------------------------------------
C *** Atkinson (2010) Fena adjustment factors ****
c ------------------------------------------------------------------

      subroutine Fena ( jbdist, specT, Factor )

c    Atkinson (2008) Horizontal CEUS-NGA BA08 Vs=760m/sec

      real jbDist, period, Factor
      real c(12), d(12)
      real specT, cT, dT
      integer nper, count1, count2,iflag
      real per1(12)

      data Per1 / 0.00, 0.01, 0.05, 0.10, 0.20, 0.30, 0.50, 1.00,
     1            2.00, 3.03, 5.00, 10.00 /
      data c / 0.419, 0.417, 0.417, 0.245, 0.042, -0.078, -0.180,
     1        -0.248, -0.214, -0.084, 0.0, 0.0 /
      data d / 0.00211, 0.00192, 0.00192, 0.00273, 0.00232, 0.00190,
     1         0.00180, 0.00153, 0.00117, 0.00091, 0.00, 0.00  /

C Find the requested spectral period and corresponding coefficients
      nPer = 12
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period   = per1(1)
         cT      = c(1)
         dT      = d(1)
         goto 1011
      elseif (specT .ne. 0.0) then

C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. per1(i) .and. specT .le. per1(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Atkinson (2010) Hor. Fena adustment model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020 call interp (per1(count1),per1(count2),c(count1),c(count2),
     +             specT,cT,iflag)
      call interp (per1(count1),per1(count2),d(count1),d(count2),
     +             specT,dT,iflag)

 1011 period = specT

c     Compute the ground motions adjustment factor.
      factor = cT + dT*jbdist
      factor = factor*alog(10.0)

      return
      end


       subroutine interp (x1,x2,y1,y2,x,y,iflag)

C This subroutine will perform the Log-linear interpolation
C of the given input values. This routine is used to interpolate
C the regression cofficients of the attenuation models for
C spectral periods other than those defined in the model.

       real x1, x2, y1, y2, x, y
       integer iflag

C Check to see if the interpolation period is at an end point.
C Return the 'iflag' for output purposes with
C             iflag = 0  No interpolation
C                   = 1  Interpolation need.

       if (x .eq. x1 .or. x .eq. x2) then
          iflag = 0
       else
          iflag = 1
       endif

C Set the PGA period to 100 Hz (i.e., 0.01 Sec).
       if (x1 .eq. 0.0) then
           x1 = 0.01
       endif

C Take the Log of the Period values.
       x1 = alog(x1)
       x2 = alog(x2)
       x  = alog(x)
C Perform the log-linear interpolation.
       y = y1 + (y2-y1)*((x-x1)/(x2-x1))

C Convert the Log Periods back to period.
       x1 = exp(x1)
       x2 = exp(x2)
       x  = exp(x)

       return
       end

       subroutine S24_interp (x1,x2,y1,y2,x,y,iflag)

C This subroutine will perform the Log-linear interpolation
C of the given input values. This routine is used to interpolate
C the regression cofficients of the attenuation models for
C spectral periods other than those defined in the model.

       implicit none

       integer iflag
       real x1, x2, y1, y2, x, y

C Check to see if the interpolation period is at an end point.
C Return the 'iflag' for output purposes with
C             iflag = 0  No interpolation
C                   = 1  Interpolation need.

       if (x .eq. x1 .or. x .eq. x2) then
          iflag = 0
       else
          iflag = 1
       endif

C Set the PGA period to 100 Hz (i.e., 0.01 Sec).
       if (x1 .eq. 0.0) then
           x1 = 0.01
       endif

C Take the Log of the Period values.
       x1 = alog(x1)
       x2 = alog(x2)
       x  = alog(x)
C Perform the log-linear interpolation.
       y = y1 + (y2-y1)*((x-x1)/(x2-x1))

C Convert the Log Periods back to period.
       x1 = exp(x1)
       x2 = exp(x2)
       x  = exp(x)

       return
       end



c meanpga.f

      subroutine meanInten (rupdist, jbdist, seismodist, hwflag,
     1  mag, jcalc, specT, lnY, siga, ftype, attenName, period1, iAtten, iProb,
     2  jType, vs, depth,intflag, AR, dip1, disthypo, depthvs10,
     3  depthvs15, D25, tau, depthTop, Theta_Site, RupWidth, vs30_class,
     4  foreArc, Rx, phi, cfcoefrrup, cfcoefrjb, Ry0 )

      include 'pfrisk.h'

      real mag, lnY, siga, ftype, period1(4,MAX_PROB), mag1, period2, lnSa, m
      integer jcalc,soilflag,softrock,hardRock,hwflag
      real jbdist, rupdist, seismodist, baseDepth, depth, specT, factor, a, b, faddmag
      character*80 attenName(4,MAX_ATTEN), attenname1, attenname0
      integer intflag(4,MAX_PROB), iflag, vs30_class
      integer iflag01, iflag02, iflag04, iflag10, foreArc, regionflag, basinflag, msasflag
      integer coefcountRrup, coefcountRjb, iAtten, iProb, jType

      real sc, sd, se, D25, RupWidth, Ss, Sr, Q0, SCa, SCb, SCc, SCd, SCe
      real magc, rupdistc, ftypec, lnYc, mcb, depthTop
      real disthypo, depthvs10, depthvs15, AR, dip1(1), dip
      real F_RV, F_NM, Theta_Site, Z1
      real lnY01, lnY02, lnY04, lnY10, lnY02p, lnY04p
      real sigma01, sigma02, sigma04, sigma10
      real specT01, specT02, specT04, specT10, period02, Rx, SF2, Ry0
      real phi, tau, lnYH
      real cfcoefrrup(MAX_Atten,11), cfcoefrjb(MAX_Atten,11)

C LNY IS EXPECTED INTENSITY FOR THIS MAGNITUDE AND CLOSEST DISTANCE
      lnY = 1.e30
      tau = 0.0
      phi = 0.0
      iflag = 0
      efac = 0.0


c  *** Turkey adjusted NGA1 models
      if (jcalc .eq. 9501 ) then
          call AS_NGA_2008TR ( mag, dip, fType, RuoWidth, rupDist, jbdist,
     1                     vs, hwflag, lnY, sigma,
     2                     specT, period2, depthtop, iflag, vs30_class,
     3                     depthvs10, Rx )
      endif

      if (jcalc .eq. 9502 ) then
         call BA_NGA_2008TR ( mag, jbdist, specT, period2, lnY, sigma, iflag, vs, ftype, pga4nl )
      endif

      if (jcalc .eq. 9503 ) then
         call CB_NGA_2008TR ( mag, rupDist, jbdist, Ftype, specT,
     1                     period2, lnY, sigma, iflag, vs,
     2                     depthtop, D25, Dip )
      endif

      if (jcalc .eq. 9504) then
          call CY_NGA_2008TR ( mag, rupDist, jbdist, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, dip, depthTop, Ftype, depthvs10, vs30_class,
     3                     hwflag, Rx )
      endif

      if (jcalc .eq. 9505 ) then
            call I_NGA_2008TR ( mag, rupDist, ftype, specT,
     1                     period2, lnY, sigma, iflag )
      endif
      if (jcalc .eq. 9506) then
          if ( depthTop .gt. 20. ) then
             depthTop1 = 20.
          else
             depthTop1 = depthTop
          endif
          call CY_NGA_2008TR ( mag, rupDist, jbdist, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, dip, depthTop1, Ftype, depthvs10, vs30_class,
     3                     hwflag, Rx )
      endif

c    Taiwan GMPEs


C     **** Taiwan TNGA attenuation models  ****
c-----------------------------------------------------------------------------
c     New Lin et al. (2011) Taiwan crustal model SOIL ************
C     Model Number = 316
      if ( jcalc .eq. 316 ) then
      	if (hwflag .eq. 1 ) then
         call Lin_hw_soil
     1    ( mag, rupDist, specT, period2, lnY, sigma, iflag)
        else
         call Lin_fw_soil
     1    ( mag, rupDist, specT, period2, lnY, sigma, iflag)
        endif
         attenname1 = 'Lin et al. (2011) , Crustal soil'
         lnY = lnY + efac
      endif

c-----------------------------------------------------------------------------
c     New Lin et al. (2011) Taiwan crustal model ROCK ************
C     Model Number = 317
      if ( jcalc .eq. 317 ) then
      	if (hwflag .eq. 1 ) then
         call Lin_hw_rock
     1    ( mag, rupDist, specT, period2, lnY, sigma, iflag)
        else
         call Lin_fw_rock
     1    ( mag, rupDist, specT, period2, lnY, sigma, iflag)
        endif
         attenname1 = 'Lin et al. (2011) , Crustal rock'
         lnY = lnY + efac
      endif

c-----------------------------------------------------------------------------
c     Lin 2009 Doctoral thesis
C     Model Number = 315
      if ( jcalc .eq. 315) then
cC      write(*,*) 'specT = ', specT

         call  Lin2009
     1( mag, rupDist, specT, period2, lnY, sigma, vs, iflag, ftype)
         attenname1 = 'Lin 2009 Doctoral thesis, Crustal, VS30'
         lnY = lnY + efac
      endif
c-----------------------------------------------------------------------------
c     TG09221 2012 project
C     Model Number = 441
      if ( jcalc .eq. 441) then
cC      write(*,*) 'specT = ', specT

         call  TG09221_2012
     1( mag, rupDist, specT, period2, lnY, sigma, vs, iflag, ftype)
         attenname1 = 'TG09221 Report 2012/06, Crustal, VS30'
         lnY = lnY + efac
      endif

c-----------------------------------------------------------------------------
c     NCREE 2011 project
C     Model Number = 451
      if ( jcalc .eq. 451) then
         call  NCREE_2011
     1    ( mag, rupDist, specT, period2, lnY, sigma)
         attenname1 = 'NCREE Report 2011/01, Vs30>=360m/sec'
         lnY = lnY + efac
      endif

C     **** End of Taiwan TNGA attenuation models  ****

C ******* PEER NGA Attenuation Models ****
c ******* Abrahamson and Silva Model *********
C     Abrahamson&Silva 2008 - horizontal, Estimated Vs30m
C     Model Number = 787
      if ( jcalc .eq. 787 ) then
         eta = 0.
C     Dip angle of the fault is assumed to be equal to the dip angle
C     assigned for the first two points of the fault.
         dip = dip1(1)
C     Depth to the top of the fault is set equal to the first depth
C     defined for the fault in the data file (i.e., Depthtop).
         vs30_Class = 0
         call AS_NGA_2008 ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, phi, tau )
         attenname1 = 'A&S_NGA_2008-Hor,Estimated Vs30m'
         lnY = lnY + efac
      endif

C     Abrahamson&Silva 2008 - horizontal, Measured Vs30m
C     Model Number = 788
      if ( jcalc .eq. 788 ) then
         eta = 0.
C     Dip angle of the fault is assumed to be equal to the dip angle
C     assigned for the first two points of the fault.
         dip = dip1(1)
C     Depth to the top of the fault is set equal to the first depth
C     defined for the fault in the data file (i.e., Depthtop).
         vs30_Class = 1
         call AS_NGA_2008 ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, phi, tau )
         attenname1 = 'A&S_NGA_2008-Hor,Measured Vs30m'
         lnY = lnY + efac
      endif

c ******* Chiou and Youngs Model *********
C     Chiou and Youngs 2008 - Horizontal, estimated Vs30m
C     Model Number = 797
c
      if ( jcalc .eq. 797 ) then
         vs30_class = 0
         call CY_NGA_2008 ( mag, rupDist, jbdist, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, dip1(1), Depthtop, Ftype,
     3                     depthvs10, vs30_class, hwflag, Rx, phi, tau )
         attenname1 = 'Chiou&Youngs_NGA_2008-Hor,Estimated Vs30m'
         lnY = lnY + efac
       endif

C     Chiou and Youngs 2008 - Horizontal, measured Vs30m
C     Model Number = 798
c
      if ( jcalc .eq. 798 ) then
         vs30_class = 1
         call CY_NGA_2008 ( mag, rupDist, jbdist, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, dip1(1), Depthtop, Ftype,
     3                     depthvs10, vs30_class, hwflag, Rx, phi, tau )
         attenname1 = 'Chiou&Youngs_NGA_2008-Hor,Measured Vs30m'
         lnY = lnY + efac
       endif

c ******* Chiou and Youngs Model - Small Magnitude Models *********
C     Chiou and Youngs 2008 - Horizontal, estimated Vs30m
C     Southern California Small Magnitude Model (2010)
C     Model Number = 799
c
      if ( jcalc .eq. 799 ) then
         vs30_class = 0
         call CY_NGA_2008SC ( mag, rupDist, jbdist, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, dip1(1), Depthtop, Ftype,
     3                     depthvs10, vs30_class, hwflag, Rx )
         attenname1 = 'Chiou&Youngs_NGA_2008-Hor,Estimated Vs30m,SCal SMM'
         lnY = lnY + efac
       endif

C     Chiou and Youngs 2008 - Horizontal, measured Vs30m
C     Southern California Small Magnitude Model (2010)
C     Model Number = 800
c
      if ( jcalc .eq. 800 ) then
         vs30_class = 1
         call CY_NGA_2008SC ( mag, rupDist, jbdist, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, dip1(1), Depthtop, Ftype,
     3                     depthvs10, vs30_class, hwflag, Rx )
         attenname1 = 'Chiou&Youngs_NGA_2008-Hor,Measured Vs30m,SCal SMM'
         lnY = lnY + efac
       endif

C     Chiou and Youngs 2008 - Horizontal, estimated Vs30m
C     Central California Small Magnitude Model (2010)
C     Model Number = 801
c
      if ( jcalc .eq. 801 ) then
         vs30_class = 0
         call CY_NGA_2008CC ( mag, rupDist, jbdist, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, dip1(1), Depthtop, Ftype,
     3                     depthvs10, vs30_class, hwflag, Rx )
         attenname1 = 'Chiou&Youngs_NGA_2008-Hor,Estimated Vs30m,CCal SMM'
         lnY = lnY + efac
       endif

C     Chiou and Youngs 2008 - Horizontal, measured Vs30m
C     Central California Small Magnitude Model (2010)
C     Model Number = 802
c
      if ( jcalc .eq. 802 ) then
         vs30_class = 1
         call CY_NGA_2008CC ( mag, rupDist, jbdist, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, dip1(1), Depthtop, Ftype,
     3                     depthvs10, vs30_class, hwflag, Rx )
         attenname1 = 'Chiou&Youngs_NGA_2008-Hor,Measured Vs30m,CCal SMM'
         lnY = lnY + efac
       endif

c ******* Campbell and Bozorgnia Model *********
C     Campbell and Bozorgnia 2008 - horizontal
C     Model Number = 836
      if ( jcalc .eq. 836 ) then
         call CB_NGA_2008 ( mag, rupdist, jbdist, ftype, specT,
     1                    period2, lnY, sigma, iflag, vs,
     2                    depthTop, D25, dip1(1), phi, tau )
         attenname1 = 'Campbell&Bozorgnia_NGA_2008-Hor'
         lnY = lnY + efac
       endif

c ******* Idriss Model *********
C     Idriss 2008 - Horizontal, Vs=450-900 m/sec and Vs>900 m/sec
C     Model Number = 910
      if ( jcalc .eq. 910 ) then
         if (vs .ge. 900.0) then
            call I_NGA_2008vsgt900 ( mag, rupDist, ftype, specT,
     1                     period2, lnY, sigma, iflag )
            attenname1 = 'Idriss_NGA_2008_Hor,Vs>900m/s'
         else
            call I_NGA_2008 ( mag, rupDist, ftype, specT,
     1                     period2, lnY, sigma, iflag )
            attenname1 = 'Idriss_NGA_2008_Hor,Vs=450-900m/s'
         endif
         lnY = lnY + efac

       endif

c ******* Boore and Atkinson Model *********
C     Boore and Atkinson July 2008 - horizontal
C     Model Number = 922
      if ( jcalc .eq. 922 ) then
         call BA_NGA_2008 ( mag, jbdist, specT,
     1                    period2, lnY, sigma, iflag, vs, ftype, pga4nl, phi, tau )
         attenname1 = 'Boore&Atkinson_NGA_2008_Hor'
         lnY = lnY + efac
       endif

c ******* Boore and Atkinson Model *********
C     Boore and Atkinson July 2008 - horizontal with Atkinson (2010) small magnitude adjustment
C     Model Number = 923
      if ( jcalc .eq. 923 ) then
         call BA_NGA_2008 ( mag, jbdist, specT,
     1                    period2, lnY, sigma, iflag, vs, ftype, pga4nl, phi, tau )
C     Apply small magnitude adjustment is Mag<=5.75.
         if (mag .le. 5.75 ) then
            a = max(0.0, 3.888 - 0.674*mag)
            b = max(0.0, 2.933 - 0.510*mag)
            factor = a - b*log10(jbdist+10.0)
            factor = factor*alog(10.0)
         endif
         attenname1 = 'Boore&Atkinson_NGA_2008_Hor with small mag adj Atkinson (2010)'
         lnY = lnY + factor + efac
       endif

C ******* End of PEER NGA Attenuation Models ****

C ******* PEER NGA-West2 Attenuation Models ****
c ******* Abrahamson, Silva, and Kamai Model *********
C     Note: GMPE is not programmed for Aftershock cases.
C     Abrahamson, Silva, and Kamai 2013 - Horizontal, Global, Mainshock, Estimated Vs30m

C     Model Number = 2787
      if ( jcalc .eq. 2787 ) then
         regionflag = 0
         msasflag = 0
         eta = 0.
C     Dip angle of the fault is assumed to be equal to the dip angle
C     assigned for the first two points of the fault.
         dip = dip1(1)
C     Depth to the top of the fault is set equal to the first depth
C     defined for the fault in the data file (i.e., Depthtop).
         vs30_Class = 0
         call ASK_NGAWest2_2013 ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, Ry0, regionflag, msasflag, phi, tau)
         attenname1 = 'ASK_NGAWest2_2013-Hor-Glob-MS-EstVs'
         lnY = lnY + efac
      endif

c ******* Abrahamson, Silva, and Kamai Model *********
C     Abrahamson, Silva, and Kamai 2013 - Horizontal, Taiwan, Mainshock, Estimated Vs30m
C     Model Number = 2788
      if ( jcalc .eq. 2788 ) then
         regionflag = 1
         msasflag = 0
         eta = 0.
C     Dip angle of the fault is assumed to be equal to the dip angle
C     assigned for the first two points of the fault.
         dip = dip1(1)
C     Depth to the top of the fault is set equal to the first depth
C     defined for the fault in the data file (i.e., Depthtop).
         vs30_Class = 0
         call ASK_NGAWest2_2013 ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, Ry0, regionflag, msasflag, phi, tau )
         attenname1 = 'ASK_NGAWest2_2013-Hor-Taiw-MS-EstVs'
         lnY = lnY + efac
      endif

c ******* Abrahamson, Silva, and Kamai Model *********
C     Abrahamson, Silva, and Kamai 2013 - Horizontal, China, Mainshock, Estimated Vs30m
C     Model Number = 2789
      if ( jcalc .eq. 2789 ) then
         regionflag = 2
         msasflag = 0
         eta = 0.
C     Dip angle of the fault is assumed to be equal to the dip angle
C     assigned for the first two points of the fault.
         dip = dip1(1)
C     Depth to the top of the fault is set equal to the first depth
C     defined for the fault in the data file (i.e., Depthtop).
         vs30_Class = 0
         call ASK_NGAWest2_2013 ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, Ry0, regionflag, msasflag, phi, tau )
         attenname1 = 'ASK_NGAWest2_2013-Hor-China-MS-EstVs'
         lnY = lnY + efac
      endif

c ******* Abrahamson, Silva, and Kamai Model *********
C     Abrahamson, Silva, and Kamai 2013 - Horizontal, Japan, Mainshock, Estimated Vs30m
C     Model Number = 2790
      if ( jcalc .eq. 2790 ) then
         regionflag = 3
         msasflag = 0
         eta = 0.
C     Dip angle of the fault is assumed to be equal to the dip angle
C     assigned for the first two points of the fault.
         dip = dip1(1)
C     Depth to the top of the fault is set equal to the first depth
C     defined for the fault in the data file (i.e., Depthtop).
         vs30_Class = 0
         call ASK_NGAWest2_2013 ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, Ry0, regionflag, msasflag, phi, tau )
         attenname1 = 'ASK_NGAWest2_2013-Hor-Japan-MS-EstVs'
         lnY = lnY + efac
      endif


c ******* Abrahamson, Silva, and Kamai Model *********
C     Abrahamson, Silva, and Kamai 2013 - Horizontal, Global, Mainshock, Measured Vs30m
C     Model Number = 2791
      if ( jcalc .eq. 2791 ) then
         regionflag = 0
         msasflag = 0
         eta = 0.
C     Dip angle of the fault is assumed to be equal to the dip angle
C     assigned for the first two points of the fault.
         dip = dip1(1)
C     Depth to the top of the fault is set equal to the first depth
C     defined for the fault in the data file (i.e., Depthtop).
         vs30_Class = 1
         call ASK_NGAWest2_2013 ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, Ry0, regionflag, msasflag, phi, tau )
         attenname1 = 'ASK_NGAWest2_2013-Hor-Glob-MS-MesVs'
         lnY = lnY + efac
      endif

c ******* Abrahamson, Silva, and Kamai Model *********
C     Abrahamson, Silva, and Kamai 2013 - Horizontal, Taiwan, Mainshock, Measured Vs30m
C     Model Number = 2792
      if ( jcalc .eq. 2792 ) then
         regionflag = 1
         msasflag = 0
         eta = 0.
C     Dip angle of the fault is assumed to be equal to the dip angle
C     assigned for the first two points of the fault.
         dip = dip1(1)
C     Depth to the top of the fault is set equal to the first depth
C     defined for the fault in the data file (i.e., Depthtop).
         vs30_Class = 1
         call ASK_NGAWest2_2013 ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, Ry0, regionflag, msasflag, phi, tau )
         attenname1 = 'ASK_NGAWest2_2013-Hor-Taiw-MS-MesVs'
         lnY = lnY + efac
      endif

c ******* Abrahamson, Silva, and Kamai Model *********
C     Abrahamson, Silva, and Kamai 2013 - Horizontal, China, Mainshock, Measured Vs30m
C     Model Number = 2793
      if ( jcalc .eq. 2793 ) then
         regionflag = 2
         msasflag = 0
         eta = 0.
C     Dip angle of the fault is assumed to be equal to the dip angle
C     assigned for the first two points of the fault.
         dip = dip1(1)
C     Depth to the top of the fault is set equal to the first depth
C     defined for the fault in the data file (i.e., Depthtop).
         vs30_Class = 1
         call ASK_NGAWest2_2013 ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, Ry0, regionflag, msasflag, phi, tau )
         attenname1 = 'ASK_NGAWest2_2013-Hor-China-MS-MesVs'
         lnY = lnY + efac
      endif

c ******* Abrahamson, Silva, and Kamai Model *********
C     Abrahamson, Silva, and Kamai 2013 - Horizontal, Japan, Mainshock, Measured Vs30m
C     Model Number = 2794
      if ( jcalc .eq. 2794 ) then
         regionflag = 3
         msasflag = 0
         eta = 0.
C     Dip angle of the fault is assumed to be equal to the dip angle
C     assigned for the first two points of the fault.
         dip = dip1(1)
C     Depth to the top of the fault is set equal to the first depth
C     defined for the fault in the data file (i.e., Depthtop).
         vs30_Class = 1
         call ASK_NGAWest2_2013 ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, Ry0, regionflag, msasflag, phi, tau )
         attenname1 = 'ASK_NGAWest2_2013-Hor-Japan-MS-MesVs'
         lnY = lnY + efac
      endif

C     Note: These calls are for Aftershocks cases but it not currently implemented.
C           For implementation new distance term CRjb will need to be computed and passed.
c ******* Abrahamson, Silva, and Kamai Model *********
C     Abrahamson, Silva, and Kamai 2013 - Horizontal, Global, Aftershock, Estimated Vs30m
C     Model Number = 3787
      if ( jcalc .eq. 3787 ) then
         regionflag = 0
         msasflag = 1
         eta = 0.
C     Dip angle of the fault is assumed to be equal to the dip angle
C     assigned for the first two points of the fault.
         dip = dip1(1)
C     Depth to the top of the fault is set equal to the first depth
C     defined for the fault in the data file (i.e., Depthtop).
         vs30_Class = 0
         call ASK_NGAWest2_2013 ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, Ry0, regionflag, msasflag, phi, tau )
         attenname1 = 'ASK_NGAWest2_2013-Hor-Glob-AS-EstVs'
         lnY = lnY + efac
      endif

c ******* Abrahamson, Silva, and Kamai Model *********
C     Abrahamson, Silva, and Kamai 2013 - Horizontal, Taiwan, Aftershock, Estimated Vs30m
C     Model Number = 3788
      if ( jcalc .eq. 3788 ) then
         regionflag = 1
         msasflag = 1
         eta = 0.
C     Dip angle of the fault is assumed to be equal to the dip angle
C     assigned for the first two points of the fault.
         dip = dip1(1)
C     Depth to the top of the fault is set equal to the first depth
C     defined for the fault in the data file (i.e., Depthtop).
         vs30_Class = 0
         call ASK_NGAWest2_2013 ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, Ry0, regionflag, msasflag, phi, tau )
         attenname1 = 'ASK_NGAWest2_2013-Hor-Taiw-AS-EstVs'
         lnY = lnY + efac
      endif

c ******* Abrahamson, Silva, and Kamai Model *********
C     Abrahamson, Silva, and Kamai 2013 - Horizontal, China, Aftershock, Estimated Vs30m
C     Model Number = 3789
      if ( jcalc .eq. 3789 ) then
         regionflag = 2
         msasflag = 1
         eta = 0.
C     Dip angle of the fault is assumed to be equal to the dip angle
C     assigned for the first two points of the fault.
         dip = dip1(1)
C     Depth to the top of the fault is set equal to the first depth
C     defined for the fault in the data file (i.e., Depthtop).
         vs30_Class = 0
         call ASK_NGAWest2_2013 ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, Ry0, regionflag, msasflag, phi, tau )
         attenname1 = 'ASK_NGAWest2_2013-Hor-China-AS-EstVs'
         lnY = lnY + efac
      endif

c ******* Abrahamson, Silva, and Kamai Model *********
C     Abrahamson, Silva, and Kamai 2013 - Horizontal, Japan, Aftershock, Estimated Vs30m
C     Model Number = 3790
      if ( jcalc .eq. 3790 ) then
         regionflag = 3
         msasflag = 1
         eta = 0.
C     Dip angle of the fault is assumed to be equal to the dip angle
C     assigned for the first two points of the fault.
         dip = dip1(1)
C     Depth to the top of the fault is set equal to the first depth
C     defined for the fault in the data file (i.e., Depthtop).
         vs30_Class = 0
         call ASK_NGAWest2_2013 ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, Ry0, regionflag, msasflag, phi, tau )
         attenname1 = 'ASK_NGAWest2_2013-Hor-Japan-AS-EstVs'
         lnY = lnY + efac
      endif


c ******* Abrahamson, Silva, and Kamai Model *********
C     Abrahamson, Silva, and Kamai 2013 - Horizontal, Global, Aftershock, Measured Vs30m
C     Model Number = 3791
      if ( jcalc .eq. 3791 ) then
         regionflag = 0
         msasflag = 1
         eta = 0.
C     Dip angle of the fault is assumed to be equal to the dip angle
C     assigned for the first two points of the fault.
         dip = dip1(1)
C     Depth to the top of the fault is set equal to the first depth
C     defined for the fault in the data file (i.e., Depthtop).
         vs30_Class = 1
         call ASK_NGAWest2_2013 ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, Ry0, regionflag, msasflag, phi, tau )
         attenname1 = 'ASK_NGAWest2_2013-Hor-Glob-AS-MesVs'
         lnY = lnY + efac
      endif

c ******* Abrahamson, Silva, and Kamai Model *********
C     Abrahamson, Silva, and Kamai 2013 - Horizontal, Taiwan, Aftershock, Measured Vs30m
C     Model Number = 3792
      if ( jcalc .eq. 3792 ) then
         regionflag = 1
         msasflag = 1
         eta = 0.
C     Dip angle of the fault is assumed to be equal to the dip angle
C     assigned for the first two points of the fault.
         dip = dip1(1)
C     Depth to the top of the fault is set equal to the first depth
C     defined for the fault in the data file (i.e., Depthtop).
         vs30_Class = 1
         call ASK_NGAWest2_2013 ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, Ry0, regionflag, msasflag, phi, tau )
         attenname1 = 'ASK_NGAWest2_2013-Hor-Taiw-AS-MesVs'
         lnY = lnY + efac
      endif

c ******* Abrahamson, Silva, and Kamai Model *********
C     Abrahamson, Silva, and Kamai 2013 - Horizontal, China, Aftershock, Measured Vs30m
C     Model Number = 3793
      if ( jcalc .eq. 3793 ) then
         regionflag = 2
         msasflag = 1
         eta = 0.
C     Dip angle of the fault is assumed to be equal to the dip angle
C     assigned for the first two points of the fault.
         dip = dip1(1)
C     Depth to the top of the fault is set equal to the first depth
C     defined for the fault in the data file (i.e., Depthtop).
         vs30_Class = 1
         call ASK_NGAWest2_2013 ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, Ry0, regionflag, msasflag, phi, tau )
         attenname1 = 'ASK_NGAWest2_2013-Hor-China-AS-MesVs'
         lnY = lnY + efac
      endif

c ******* Abrahamson, Silva, and Kamai Model *********
C     Abrahamson, Silva, and Kamai 2013 - Horizontal, Japan, Aftershock, Mesaured Vs30m
C     Model Number = 3794
      if ( jcalc .eq. 3794 ) then
         regionflag = 3
         msasflag = 1
         eta = 0.
C     Dip angle of the fault is assumed to be equal to the dip angle
C     assigned for the first two points of the fault.
         dip = dip1(1)
C     Depth to the top of the fault is set equal to the first depth
C     defined for the fault in the data file (i.e., Depthtop).
         vs30_Class = 1
         call ASK_NGAWest2_2013 ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, Ry0, regionflag, msasflag, phi, tau )
         attenname1 = 'ASK_NGAWest2_2013-Hor-Japan-AS-MesVs'
         lnY = lnY + efac
      endif

c ******* Chiou and Youngs Model *********
C     Chiou and Youngs 2013 - Horizontal
C     Model Number = 2797
      if ( jcalc .eq. 2797 ) then
c     Current model set for estimated Vs30 values (only impacts sigma)
         vs30_class = 0
         regionflag = 0
         call CY_NGAWest2_2013 ( mag, rupDist, jbdist, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, dip1(1), Depthtop, Ftype,
     3                     depthvs10, vs30_class, hwflag, Rx, regionflag,
     1                     phi, tau )
         attenname1 = 'CY_NGAWest2_2013-Hor,Estimated Vs30m'
         lnY = lnY + efac
       endif

c ******* Chiou and Youngs Model *********
C     Chiou and Youngs 2013 - Horizontal
C     Model Number = 2798
      if ( jcalc .eq. 2798 ) then
c     Current model set for measured Vs30 values (only impacts sigma)
         vs30_class = 1
         regionflag = 0
         call CY_NGAWest2_2013 ( mag, rupDist, jbdist, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, dip1(1), Depthtop, Ftype,
     3                     depthvs10, vs30_class, hwflag, Rx, regionflag,
     1                     phi, tau )
         attenname1 = 'CY_NGAWest2_2013-Hor,Measured Vs30m'
         lnY = lnY + efac
       endif

c ******* Chiou and Youngs Model *********
C     Chiou and Youngs 2013 - Horizontal, Japan and Italy Adjustment
C      Note: Only valid for the Following magnitude Range: 6<M<6.9
C     Model Number = 2799
      if ( jcalc .eq. 2799 ) then
c     Current model set for estimated Vs30 values (only impacts sigma)
         vs30_class = 0
         regionflag = 1
         call CY_NGAWest2_2013 ( mag, rupDist, jbdist, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, dip1(1), Depthtop, Ftype,
     3                     depthvs10, vs30_class, hwflag, Rx, regionflag,
     1                     phi, tau )
         attenname1 = 'CY_NGAWest2_2013-Hor-Jap/Ity,Estimated Vs30m'
         lnY = lnY + efac
       endif

c ******* Chiou and Youngs Model *********
C     Chiou and Youngs 2013 - Horizontal, Japan and Italy Adjustment
C      Note: Only valid for the Following magnitude Range: 6<M<6.9
C     Model Number = 2800
      if ( jcalc .eq. 2800 ) then
c     Current model set for measured Vs30 values (only impacts sigma)
         vs30_class = 1
         regionflag = 1
         call CY_NGAWest2_2013 ( mag, rupDist, jbdist, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, dip1(1), Depthtop, Ftype,
     3                     depthvs10, vs30_class, hwflag, Rx, regionflag,
     1                     phi, tau )
         attenname1 = 'CY_NGAWest2_2013-Hor-Jap/Ity,Measured Vs30m'
         lnY = lnY + efac
       endif

c ******* Chiou and Youngs Model *********
C     Chiou and Youngs 2013 - Horizontal, Wenchaun Adjustment
C      Note: Only valid for the Following magnitude : 6<M<6.9
C     Model Number = 2801
      if ( jcalc .eq. 2801 ) then
c     Current model set for estimated Vs30 values (only impacts sigma)
         vs30_class = 0
         regionflag = 2
         call CY_NGAWest2_2013 ( mag, rupDist, jbdist, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, dip1(1), Depthtop, Ftype,
     3                     depthvs10, vs30_class, hwflag, Rx, regionflag,
     1                     phi, tau )
         attenname1 = 'CY_NGAWest2_2013-Hor-Wenchuan,Estimated Vs30m'
         lnY = lnY + efac
       endif

c ******* Chiou and Youngs Model *********
C     Chiou and Youngs 2013 - Horizontal, Wenchaun Adjustment
C      Note: Only valid for the Following magnitude: M=7.9
C     Model Number = 2802
      if ( jcalc .eq. 2802 ) then
c     Current model set for measured Vs30 values (only impacts sigma)
         vs30_class = 1
         regionflag = 2
         call CY_NGAWest2_2013 ( mag, rupDist, jbdist, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, dip1(1), Depthtop, Ftype,
     3                     depthvs10, vs30_class, hwflag, Rx, regionflag,
     1                     phi, tau )
         attenname1 = 'CY_NGAWest2_2013-Hor-Wenchaun,Measured Vs30m'
         lnY = lnY + efac
       endif

c ******* Campbell and Bozorgnia Model *********
C     Campbell and Bozorgnia 2013 - horizontal, California
C     Model Number = 2836
      if ( jcalc .eq. 2836 ) then
         regionflag = 0
         call CB_NGAWest2_2013 ( mag, rupdist, jbdist, ftype, specT,
     1                    period2, lnY, sigma, iflag, vs,
     2                    depthTop, D25, dip1(1), depth, HWFlag, Rx, rupwidth, regionflag,
     1                    phi, tau )
         attenname1 = 'CB_NGAWest2_2013-Hor,Calif'
         lnY = lnY + efac
       endif

c ******* Campbell and Bozorgnia Model *********
C     Campbell and Bozorgnia 2013 - horizontal, Japan
C     Model Number = 2837
      if ( jcalc .eq. 2837 ) then
         regionflag = 1
         call CB_NGAWest2_2013 ( mag, rupdist, jbdist, ftype, specT,
     1                    period2, lnY, sigma, iflag, vs,
     2                    depthTop, D25, dip1(1), depth, HWFlag, Rx, rupwidth, regionflag,
     1                    phi, tau )
         attenname1 = 'CB_NGAWest2_2013-Hor,Japan'
         lnY = lnY + efac
       endif

c ******* Campbell and Bozorgnia Model *********
C     Campbell and Bozorgnia 2013 - horizontal, China
C     Model Number = 2838
      if ( jcalc .eq. 2838 ) then
         regionflag = 2
         call CB_NGAWest2_2013 ( mag, rupdist, jbdist, ftype, specT,
     1                    period2, lnY, sigma, iflag, vs,
     2                    depthTop, D25, dip1(1), depth, HWFlag, Rx, rupwidth, regionflag,
     1                    phi, tau )
         attenname1 = 'CB_NGAWest2_2013-Hor,China'
         lnY = lnY + efac
       endif

c ******* Campbell and Bozorgnia Model *********
C     Campbell and Bozorgnia 2013 - horizontal, Italy
C     Model Number = 2839
      if ( jcalc .eq. 2839 ) then
         regionflag = 3
         call CB_NGAWest2_2013 ( mag, rupdist, jbdist, ftype, specT,
     1                    period2, lnY, sigma, iflag, vs,
     2                    depthTop, D25, dip1(1), depth, HWFlag, Rx, rupwidth, regionflag,
     1                    phi, tau )
         attenname1 = 'CB_NGAWest2_2013-Hor,Italy'
         lnY = lnY + efac
       endif


c ******* Idriss Model *********
C     Idriss 2013 - Horizontal
C     Model Number = 2910
      if ( jcalc .eq. 2910 ) then
         if (vs .ge. 450.0) then
            call I_NGAWest2_2013 ( mag, rupDist, ftype, vs, specT,
     1                     period2, lnY, sigma, iflag )
            attenname1 = 'Idriss_NGAWest2_2013_Hor'
         elseif (vs .gt. 1200) then
            call I_NGAWest2_2013 ( mag, rupDist, ftype, 1200.0, specT,
     1                     period2, lnY, sigma, iflag )
            attenname1 = 'Idriss_NGAWest2_2013_Hor'
         else
C            write (*,*) 'Idriss NGA West 2 GMPE not defined'
C            write (*,*) 'for Vs<450m/s.'
            return
         endif
         lnY = lnY + efac
       endif

c ******* Boore and Atkinson Model *********
C     Boore, Stewart, Seyhan and Atkinson 2013 - horizontal
C          DeltaC3 Model Global Adjustments, No Basin Adjustments
C     Model Number = 2922
      if ( jcalc .eq. 2922 ) then
         regionflag = 0
         basinflag = 0
         call BSSA_NGAWest2_2013 ( mag, jbdist, specT,
     1               period2, lnY, sigma, iflag, vs, ftype, pga4nl, depthvs10, regionflag, basinflag,
     1               phi, tau )
         attenname1 = 'BSSA_NGAWest2_2013_Hor, DC3Global, No Basin'
         lnY = lnY + efac
       endif

c ******* Boore and Atkinson Model *********
C     Boore, Stewart, Seyhan and Atkinson 2013 - horizontal
C          DeltaC3 Model China-Turkey Adjustments, No Basin Adjustment
C     Model Number = 2923
      if ( jcalc .eq. 2923 ) then
         regionflag = 1
         basinflag = 0
         call BSSA_NGAWest2_2013 ( mag, jbdist, specT,
     1               period2, lnY, sigma, iflag, vs, ftype, pga4nl, depthvs10, regionflag, basinflag,
     1               phi, tau )
         attenname1 = 'BSSA_NGAWest2_2013_Hor, DC3ChinaTurkey, No Basin'
         lnY = lnY + efac
       endif
c ******* Boore and Atkinson Model *********
C     Boore, Stewart, Seyhan and Atkinson 2013 - horizontal
C          DeltaC3 Model Italy-Japan Adjustments, No Basin Adjustment
C     Model Number = 2924
      if ( jcalc .eq. 2924 ) then
         regionflag = 2
         Basinflag = 0
         call BSSA_NGAWest2_2013 ( mag, jbdist, specT,
     1               period2, lnY, sigma, iflag, vs, ftype, pga4nl, depthvs10, regionflag, Basinflag,
     1               phi, tau  )
         attenname1 = 'BSSA_NGAWest2_2013_Hor, DC3ItalyJapan, No Basin'
         lnY = lnY + efac
       endif
c ******* Boore and Atkinson Model *********
C     Boore, Stewart, Seyhan and Atkinson 2013 - horizontal
C          DeltaC3 Model Global Adjustments, Basin Adjustments
C     Model Number = 2925
      if ( jcalc .eq. 2925 ) then
         regionflag = 0
         basinflag = 1
         call BSSA_NGAWest2_2013 ( mag, jbdist, specT,
     1               period2, lnY, sigma, iflag, vs, ftype, pga4nl, depthvs10, regionflag, basinflag,
     1               phi, tau )
         attenname1 = 'BSSA_NGAWest2_2013_Hor, DC3Global, Basin'
         lnY = lnY + efac
       endif

c ******* Boore and Atkinson Model *********
C     Boore, Stewart, Seyhan and Atkinson 2013 - horizontal
C          DeltaC3 Model China-Turkey Adjustments, Basin Adjustment
C     Model Number = 2926
      if ( jcalc .eq. 2926 ) then
         regionflag = 1
         basinflag = 1
         call BSSA_NGAWest2_2013 ( mag, jbdist, specT,
     1               period2, lnY, sigma, iflag, vs, ftype, pga4nl, depthvs10, regionflag, basinflag,
     1               phi, tau )
         attenname1 = 'BSSA_NGAWest2_2013_Hor, DC3ChinaTurkey, Basin'
         lnY = lnY + efac
       endif
c ******* Boore and Atkinson Model *********
C     Boore, Stewart, Seyhan and Atkinson 2013 - horizontal
C          DeltaC3 Model Italy-Japan Adjustments, Basin Adjustment
C     Model Number = 2927
      if ( jcalc .eq. 2927 ) then
         regionflag = 2
         Basinflag = 1
         call BSSA_NGAWest2_2013 ( mag, jbdist, specT,
     1               period2, lnY, sigma, iflag, vs, ftype, pga4nl, depthvs10, regionflag, Basinflag,
     1               phi, tau  )
         attenname1 = 'BSSA_NGAWest2_2013_Hor, DC3ItalyJapan, Basin'
         lnY = lnY + efac
       endif



C **** NGA West2 Vertical Models *********
c ******* Stewart, Seyhan, Boore, and Atkinson Model *********
C     Stewart, Seyhan, Boore, and Atkinson 2013 - vertical
C          DeltaC3 Model Global Adjustments, No Basin Adjustments
C     Model Number = 4922
      if ( jcalc .eq. 4922 ) then
         regionflag = 0
         basinflag = 0
         call SSBA_NGAWest2_2013_Vert ( mag, jbdist, specT,
     1               period2, lnY, sigma, iflag, vs, ftype, pga4nl, depthvs10, regionflag, basinflag, phi, tau )
         attenname1 = 'SSBA_NGAWest2_2013_Ver, DC3Global, No Basin'
         lnY = lnY + efac
       endif

C     Stewart, Seyhan, Boore, and Atkinson 2013 - V/H Ratio
C          DeltaC3 Model Global Adjustments, No Basin Adjustments
C     Model Number = 6922
      if ( jcalc .eq. 6922 ) then
         regionflag = 0
         basinflag = 0
         call SSBA_NGAWest2_2013_Vert ( mag, jbdist, specT,
     1               period2, lnY, sigma, iflag, vs, ftype, pga4nl, depthvs10, regionflag, basinflag, phi, tau )

         call BSSA_NGAWest2_2013 ( mag, jbdist, specT,
     1               period2, lnYH, sigmaH, iflag, vs, ftype, pga4nl, depthvs10, regionflag, basinflag, phiH, tauH )
         attenname1 = 'SSBA_NGAWest2_2013_V/H, DC3Global, No Basin'
C     Divide Vertical by horizontal to get V/H ratio
         lnY = lnY - lnYH + 6.89

         lnY = lnY + efac
       endif

c ******* Gulerce, Abrahamson, Silva, and Kamai Model *********
C     Gulerce, Abrahamson, Silva, and Kamai 2013 - Vertical, Global, Mainshock, Estimated Vs30m

C     Model Number = 4787
      if ( jcalc .eq. 4787 ) then
         regionflag = 0
         msasflag = 0
         eta = 0.
C     Dip angle of the fault is assumed to be equal to the dip angle
C     assigned for the first two points of the fault.
         dip = dip1(1)
C     Depth to the top of the fault is set equal to the first depth
C     defined for the fault in the data file (i.e., Depthtop).
         vs30_Class = 0
         call GKAS_NGAWest2_2013_Vert ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, Ry0, regionflag, msasflag, phi, tau)
         attenname1 = 'GKAS_NGAWest2_2013-Ver-Glob-MS-EstVs'
         lnY = lnY + efac
      endif

C     Gulerce, Abrahamson, Silva, and Kamai 2013 - Vertical, Global, Mainshock, Measured Vs30m

C     Model Number = 4788
      if ( jcalc .eq. 4788 ) then
         regionflag = 0
         msasflag = 0
         eta = 0.
C     Dip angle of the fault is assumed to be equal to the dip angle
C     assigned for the first two points of the fault.
         dip = dip1(1)
C     Depth to the top of the fault is set equal to the first depth
C     defined for the fault in the data file (i.e., Depthtop).
         vs30_Class = 1
         call GKAS_NGAWest2_2013_Vert ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, Ry0, regionflag, msasflag, phi, tau)
         attenname1 = 'GKAS_NGAWest2_2013-Ver-Glob-MS-MsrVs'
         lnY = lnY + efac
      endif

c ******* Gulerce, Abrahamson, Silva, and Kamai Model *********
C     Gulerce, Abrahamson, Silva, and Kamai 2013 - V/H Ratio, Global, Mainshock, Estimated Vs30m

C     Model Number = 6787
      if ( jcalc .eq. 6787 ) then
         regionflag = 0
         msasflag = 0
         eta = 0.
C     Dip angle of the fault is assumed to be equal to the dip angle
C     assigned for the first two points of the fault.
         dip = dip1(1)
C     Depth to the top of the fault is set equal to the first depth
C     defined for the fault in the data file (i.e., Depthtop).
         vs30_Class = 0
         call GKAS_NGAWest2_2013_Vert ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, Ry0, regionflag, msasflag, phi, tau)
         call ASK_NGAWest2_2013 ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnYH, sigmaH, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, Ry0, regionflag, msasflag, phiH, tauH)

C     Divide Vertical by Horizontal to get V/H Ratio
         lnY = lnY - lnYH + 6.89

         attenname1 = 'GKAS_NGAWest2_2013-V/H-Glob-MS-EstVs'
         lnY = lnY + efac
      endif

c ******* Gulerce, Abrahamson, Silva, and Kamai Model *********
C     Gulerce, Abrahamson, Silva, and Kamai 2013 - V/H Ratio, Global, Mainshock, Measured Vs30m

C     Model Number = 6787
      if ( jcalc .eq. 6787 ) then
         regionflag = 0
         msasflag = 0
         eta = 0.
C     Dip angle of the fault is assumed to be equal to the dip angle
C     assigned for the first two points of the fault.
         dip = dip1(1)
C     Depth to the top of the fault is set equal to the first depth
C     defined for the fault in the data file (i.e., Depthtop).
         vs30_Class = 1
         call GKAS_NGAWest2_2013_Vert ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, Ry0, regionflag, msasflag, phi, tau)

         call ASK_NGAWest2_2013 ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnYH, sigmaH, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, Ry0, regionflag, msasflag, phiH, tauH)

C     Divide Vertical by Horizontal to get V/H Ratio
         lnY = lnY - lnYH + 6.89

         attenname1 = 'GKAS_NGAWest2_2013-V/H-Glob-MS-MsrVs'
         lnY = lnY + efac
      endif

c ******* Chiou and Youngs Model *********
C     Chiou and Youngs 2013 - Vertical
C     Model Number = 4797
      if ( jcalc .eq. 4797 ) then
c     Current model set for estimated Vs30 values (only impacts sigma)
         vs30_class = 0
         regionflag = 0
         call CY_NGAWest2_2013_V ( mag, rupDist, jbdist, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, dip1(1), Depthtop, Ftype,
     3                     depthvs10, vs30_class, hwflag, Rx, regionflag, phi, tau )
         attenname1 = 'CY_NGAWest2_2013-Ver,Estimated Vs30m'
         lnY = lnY + efac
       endif

C     Chiou and Youngs 2013 - Vertical
C     Model Number = 4798
      if ( jcalc .eq. 4798 ) then
c     Current model set for measured Vs30 values (only impacts sigma)
         vs30_class = 0
         regionflag = 0
         call CY_NGAWest2_2013_V ( mag, rupDist, jbdist, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, dip1(1), Depthtop, Ftype,
     3                     depthvs10, vs30_class, hwflag, Rx, regionflag, phi, tau )
         attenname1 = 'CY_NGAWest2_2013-Ver,Measured Vs30m'
         lnY = lnY + efac
       endif

C     V/H Model
C     Model Number = 6797
      if ( jcalc .eq. 6797 ) then
c     Current model set for estimated Vs30 values (only impacts sigma)
         vs30_class = 0
         regionflag = 0
         call CY_NGAWest2_2013_V ( mag, rupDist, jbdist, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, dip1(1), Depthtop, Ftype,
     3                     depthvs10, vs30_class, hwflag, Rx, regionflag, phi, tau )
C     Call the horizontal model
         call CY_NGAWest2_2013 ( mag, rupDist, jbdist, specT,
     1                     period2, lnYH, sigmaH, iflag,
     2                     vs, dip1(1), Depthtop, Ftype,
     3                     depthvs10, vs30_class, hwflag, Rx, regionflag, phiH, tauH )

         attenname1 = 'CY_NGAWest2_2013-V/H,Estimated Vs30m'

C     Divide vertical by horizontal to get V/H Ratio.
         lnY = lnY - lnYH + 6.89

         lnY = lnY  + efac
       endif

C     V/H Model
C     Model Number = 6798
      if ( jcalc .eq. 6798 ) then
c     Current model set for estimated Vs30 values (only impacts sigma)
         vs30_class = 1
         regionflag = 0
         call CY_NGAWest2_2013_V ( mag, rupDist, jbdist, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, dip1(1), Depthtop, Ftype,
     3                     depthvs10, vs30_class, hwflag, Rx, regionflag, phi, tau )
C     Call the horizontal model
         call CY_NGAWest2_2013 ( mag, rupDist, jbdist, specT,
     1                     period2, lnYH, sigmaH, iflag,
     2                     vs, dip1(1), Depthtop, Ftype,
     3                     depthvs10, vs30_class, hwflag, Rx, regionflag, phiH, tauH )

         attenname1 = 'CY_NGAWest2_2013-V/H,Measured Vs30m'

C     Divide vertical by horizontal to get V/H Ratio.
         lnY = lnY - lnYH + 6.89

         lnY = lnY  + efac
       endif

c ******* Campbell and Bozorgnia Model *********
C     Bozorgnia and Campbell 2013 - Vertical, California
C     Model Number = 4836
      if ( jcalc .eq. 4836 ) then
         regionflag = 0
         call BC_NGAWest2_2013_Vert ( mag, rupdist, jbdist, ftype, specT,
     1                    period2, lnY, sigma, iflag, vs,
     2                    depthTop, D25, dip1(1), depth, HWFlag, Rx, rupwidth, regionflag, phi, tau )
         attenname1 = 'BC_NGAWest2_2013-Ver,Calif'
         lnY = lnY + efac
       endif

C     Bozorgnia and Campbell 2013 - Vertical, Japan
C     Model Number = 4837
      if ( jcalc .eq. 4837 ) then
         regionflag = 1
         call BC_NGAWest2_2013_Vert ( mag, rupdist, jbdist, ftype, specT,
     1                    period2, lnY, sigma, iflag, vs,
     2                    depthTop, D25, dip1(1), depth, HWFlag, Rx, rupwidth, regionflag, phi, tau )
         attenname1 = 'BC_NGAWest2_2013-Ver,Japan'
         lnY = lnY + efac
       endif

C     Bozorgnia and Campbell 2013 - Implied Vertical/Horizontal Ratio, California
C     Model Number = 6836
      if ( jcalc .eq. 6836 ) then
         regionflag = 0
         call BC_NGAWest2_2013_Vert ( mag, rupdist, jbdist, ftype, specT,
     1                    period2, lnY, sigma, iflag, vs,
     2                    depthTop, D25, dip1(1), depth, HWFlag, Rx, rupwidth, regionflag, phi, tau )

         call CB_NGAWest2_2013 ( mag, rupdist, jbdist, ftype, specT,
     1                    period2, lnYH, sigmaH, iflag, vs,
     2                    depthTop, D25, dip1(1), depth, HWFlag, Rx, rupwidth, regionflag, phiH, tauH )

C     Divide vertical by horizontal to get V/H Ratio.
         lnY = lnY - lnYH + 6.89

         attenname1 = 'BC_NGAWest2_2013-V/H,Calif'
         lnY = lnY + efac
       endif
C     Bozorgnia and Campbell 2013 - Implied Vertical/Horizontal Ratio, California
C     Model Number = 6837
      if ( jcalc .eq. 6837 ) then
         regionflag = 1
         call BC_NGAWest2_2013_Vert ( mag, rupdist, jbdist, ftype, specT,
     1                    period2, lnY, sigma, iflag, vs,
     2                    depthTop, D25, dip1(1), depth, HWFlag, Rx, rupwidth, regionflag, phi, tau )

         call CB_NGAWest2_2013 ( mag, rupdist, jbdist, ftype, specT,
     1                    period2, lnYH, sigmaH, iflag, vs,
     2                    depthTop, D25, dip1(1), depth, HWFlag, Rx, rupwidth, regionflag, phiH, tauH )

C     Divide vertical by horizontal to get V/H Ratio.
         lnY = lnY - lnYH + 6.89

         attenname1 = 'BC_NGAWest2_2013-V/H,Japan'
         lnY = lnY + efac
       endif

C ******* End of vertical NGA West2 GMPEs.*******



C ******* End of PEER NGA-West2 Attenuation Models ****

C ***************************************************

c     Campbell and Bozorgnia (2003), Horizontal
C              StrikeSlip and Reverse Events, Firm Soil
C     Notes: This site condition roughly corresponds to NEHRP D.
C            Sources with Ftype=1 are classified as Reverse events.
C            HW sites are determined for those faults with dip angles
C            less than 80 degrees although the Campbell and Bozorgnia
C            relationship has a cut off dip angle of 70 degrees. The
C            80 degree angle is taken from the Abrahamson and Silva
C            relationship. Valid distance range is 0 - 60 km, with an
C            acceptable extrapolation to 100 km. For distances greater
C            than 100 km caution should be used.
C            This relationship allows for the separation of groun motions
C            from Reverse and Thrust events. Reverse events are those faults
C            with dip angles greater than or equal to 45 degrees and Thrust
C            events are those faults with dip angles less than 45 degrees.
C            The authors do note that this differnce in ground motions may
C            be statistically insignificant. Combining the Reverse and
C            Thrust events is modeled below by taking Frv=Fth=0.5.

C     Campbell and Bozorgnia (2003), Horizontal, Firm Soil, SS and Reverse
C     Model Number = 070
      if ( jcalc .eq. 70 ) then
c     Set site condition = Firm Soil (Vs~298m/s)
         s03vfs = 0.0
         s03sr  = 0.0
         s03fr  = 0.0
C     Set mechanism term for Reverse/Thrust events.
         if (ftype .eq. 1) then
             frv = 0.5
             fth = 0.5
         else
             frv = 0.0
             fth = 0.0
         endif

         call Camp03_H ( mag, seismoDist, jbDist, lnY, sigma,
     1        specT, period2, s03vfs, s03sr, s03fr, frv, fth, hwflag,
     2        iflag)
         attenname1 = 'Campbell&Bozorgnia(2003)-Hor,Firm Soil'
         lnY = lnY + efac
      endif

C     Campbell and Bozorgnia (2003), Horizontal, Very Firm Soil, SS and Reverse
C     Model Number = 071
      if ( jcalc .eq. 71 ) then
c     Set site condition = Very Firm Soil (Vs~368m/s)
         s03vfs = 1.0
         s03sr  = 0.0
         s03fr  = 0.0
C     Set mechanism term for Reverse/Thrust events.
         if (ftype .eq. 1) then
             frv = 0.5
             fth = 0.5
         else
             frv = 0.0
             fth = 0.0
         endif

         call Camp03_H ( mag, seismoDist, jbDist, lnY, sigma,
     1        specT, period2, s03vfs, s03sr, s03fr, frv, fth, hwflag,
     2        iflag)
         attenname1 = 'Campbell&Bozorgnia(2003)-Hor,Very Firm Soil'
         lnY = lnY + efac
      endif

C     Campbell and Bozorgnia (2003), Horizontal, Soft Rock, SS and Reverse
C     Model Number = 072
      if ( jcalc .eq. 72 ) then
c     Set site condition = Soft Rock (Vs~421)
         s03vfs = 0.0
         s03sr  = 1.0
         s03fr  = 0.0
C     Set mechanism term for Reverse/Thrust events.
         if (ftype .eq. 1) then
             frv = 0.5
             fth = 0.5
         else
             frv = 0.0
             fth = 0.0
         endif

         call Camp03_H ( mag, seismoDist, jbDist, lnY, sigma,
     1        specT, period2, s03vfs, s03sr, s03fr, frv, fth, hwflag,
     2        iflag)
         attenname1 = 'Campbell&Bozorgnia(2003)-Hor,Soft Rock'
         lnY = lnY + efac
      endif

C     Campbell and Bozorgnia (2003), Horizontal, Firm Rock, SS and Reverse
C     Model Number = 073
      if ( jcalc .eq. 73 ) then
c     Set site condition = Firm Rock (Vs~830m/s)
         s03vfs = 0.0
         s03sr  = 0.0
         s03fr  = 1.0
C     Set mechanism term for Reverse/Thrust events.
         if (ftype .eq. 1) then
             frv = 0.5
             fth = 0.5
         else
             frv = 0.0
             fth = 0.0
         endif

         call Camp03_H ( mag, seismoDist, jbDist, lnY, sigma,
     1        specT, period2, s03vfs, s03sr, s03fr, frv, fth, hwflag,
     2        iflag)
         attenname1 = 'Campbell&Bozorgnia(2003)-Hor,Firm Rock'
         lnY = lnY + efac
      endif

C     Campbell and Bozorgnia (2003), Horizontal, Generic Rock, SS and Reverse
C     Model Number = 074
      if ( jcalc .eq. 74 ) then
c     Set site condition = Generic Rock (Vs~620m/s)
         s03vfs = 0.0
         s03sr  = 0.5
         s03fr  = 0.5
C     Set mechanism term for Reverse/Thrust events.
         if (ftype .eq. 1) then
             frv = 0.5
             fth = 0.5
         else
             frv = 0.0
             fth = 0.0
         endif

         call Camp03_H ( mag, seismoDist, jbDist, lnY, sigma,
     1        specT, period2, s03vfs, s03sr, s03fr, frv, fth, hwflag,
     2        iflag)
         attenname1 = 'Campbell&Bozorgnia(2003)-Hor,GenericRock'
         lnY = lnY + efac
      endif

C     Campbell and Bozorgnia (2003), Horizontal, Generic Soil, SS and Reverse
C     Model Number = 075
      if ( jcalc .eq. 75 ) then
c     Set site condition = Generic Soil (Vs~310m/s)
         s03vfs = 0.25
         s03sr  = 0.0
         s03fr  = 0.0
C     Set mechanism term for Reverse/Thrust events.
         if (ftype .eq. 1) then
             frv = 0.5
             fth = 0.5
         else
             frv = 0.0
             fth = 0.0
         endif

         call Camp03_H ( mag, seismoDist, jbDist, lnY, sigma,
     1        specT, period2, s03vfs, s03sr, s03fr, frv, fth, hwflag,
     2        iflag)
         attenname1 = 'Campbell&Bozorgnia(2003)-Hor,GenericSoil'
         lnY = lnY + efac
      endif

C     Campbell and Bozorgnia (2003), Vertical, Firm Soil, SS and Reverse
C     Model Number = 076
      if ( jcalc .eq. 76 ) then
c     Set site condition = Firm Soil (Vs~298m/s)
         s03vfs = 0.0
         s03sr  = 0.0
         s03fr  = 0.0
C     Set mechanism term for Reverse/Thrust events.
         if (ftype .eq. 1) then
             frv = 0.5
             fth = 0.5
         else
             frv = 0.0
             fth = 0.0
         endif

         call Camp03_V ( mag, seismoDist, jbDist, lnY, sigma,
     1        specT, period2, s03vfs, s03sr, s03fr, frv, fth, hwflag,
     2        iflag)
         attenname1 = 'Campbell&Bozorgnia(2003)-Ver,Firm Soil'
         lnY = lnY + efac
      endif

C     Campbell and Bozorgnia (2003), Vertical, Very Firm Soil, SS and Reverse
C     Model Number = 077
      if ( jcalc .eq. 77 ) then
c     Set site condition = Very Firm Soil (Vs~368m/s)
         s03vfs = 1.0
         s03sr  = 0.0
         s03fr  = 0.0
C     Set mechanism term for Reverse/Thrust events.
         if (ftype .eq. 1) then
             frv = 0.5
             fth = 0.5
         else
             frv = 0.0
             fth = 0.0
         endif

         call Camp03_V ( mag, seismoDist, jbDist, lnY, sigma,
     1        specT, period2, s03vfs, s03sr, s03fr, frv, fth, hwflag,
     2        iflag)
         attenname1 = 'Campbell&Bozorgnia(2003)-Ver,Very Firm Soil'
         lnY = lnY + efac
      endif

C     Campbell and Bozorgnia (2003), Vertical, Soft Rock, SS and Reverse
C     Model Number = 078
      if ( jcalc .eq. 78 ) then
c     Set site condition = Soft Rock (Vs~421)
         s03vfs = 0.0
         s03sr  = 1.0
         s03fr  = 0.0
C     Set mechanism term for Reverse/Thrust events.
         if (ftype .eq. 1) then
             frv = 0.5
             fth = 0.5
         else
             frv = 0.0
             fth = 0.0
         endif

         call Camp03_V ( mag, seismoDist, jbDist, lnY, sigma,
     1        specT, period2, s03vfs, s03sr, s03fr, frv, fth, hwflag,
     2        iflag)
         attenname1 = 'Campbell&Bozorgnia(2003)-Ver,Soft Rock'
         lnY = lnY + efac
      endif

C     Campbell and Bozorgnia (2003), Vertical, Firm Rock, SS and Reverse
C     Model Number = 079
      if ( jcalc .eq. 79 ) then
c     Set site condition = Firm Rock (Vs~830m/s)
         s03vfs = 0.0
         s03sr  = 0.0
         s03fr  = 1.0
C     Set mechanism term for Reverse/Thrust events.
         if (ftype .eq. 1) then
             frv = 0.5
             fth = 0.5
         else
             frv = 0.0
             fth = 0.0
         endif

         call Camp03_V ( mag, seismoDist, jbDist, lnY, sigma,
     1        specT, period2, s03vfs, s03sr, s03fr, frv, fth, hwflag,
     2        iflag)
         attenname1 = 'Campbell&Bozorgnia(2003)-Ver,Firm Rock'
         lnY = lnY + efac
      endif

C     Campbell and Bozorgnia (2003), Vertical, Generic Rock, SS and Reverse
C     Model Number = 080
      if ( jcalc .eq. 80 ) then
c     Set site condition = Generic Rock (Vs~620m/s)
         s03vfs = 0.0
         s03sr  = 0.5
         s03fr  = 0.5
C     Set mechanism term for Reverse/Thrust events.
         if (ftype .eq. 1) then
             frv = 0.5
             fth = 0.5
         else
             frv = 0.0
             fth = 0.0
         endif

         call Camp03_V ( mag, seismoDist, jbDist, lnY, sigma,
     1        specT, period2, s03vfs, s03sr, s03fr, frv, fth, hwflag,
     2        iflag)
         attenname1 = 'Campbell&Bozorgnia(2003)-Ver,GenericRock'
         lnY = lnY + efac
      endif

C     Campbell and Bozorgnia (2003), Vertical, Generic Soil, SS and Reverse
C     Model Number = 081
      if ( jcalc .eq. 81 ) then
c     Set site condition = Generic Soil (Vs~310m/s)
         s03vfs = 0.25
         s03sr  = 0.0
         s03fr  = 0.0
C     Set mechanism term for Reverse/Thrust events.
         if (ftype .eq. 1) then
             frv = 0.5
             fth = 0.5
         else
             frv = 0.0
             fth = 0.0
         endif

         call Camp03_V ( mag, seismoDist, jbDist, lnY, sigma,
     1        specT, period2, s03vfs, s03sr, s03fr, frv, fth, hwflag,
     2        iflag)
         attenname1 = 'Campbell&Bozorgnia(2003)-Ver,GenericSoil'
         lnY = lnY + efac
      endif


c ******* Abrahamson and Silva Models *********
C     Abrahamson&Silva 1997 (Rock) - horizontal
C     Model Number = 001
      if ( jcalc .eq. 1 ) then
         soil = 0.
         call AS_97_H ( mag, rupDist, ftype, soil, hwflag, specT,
     1                     period2, lnY, sigma,iflag )
         attenname1 = 'Abrahamson/Silva(97)-Hor,rock'
         lnY = lnY + efac
       endif

C     Abrahamson&Silva 1997 (Rock) - vertical
C     Model Number = 002
      if ( jcalc .eq. 2 ) then
         soil = 0.
         call AS_97_V ( mag, rupDist, ftype, soil, hwflag, specT,
     1                     period2, lnY, sigma,iflag )
         attenname1 = 'Abrahamson/Silva(97)-Ver,rock'
         lnY = lnY + efac
       endif

C     Abrahamson&Silva 1997 (Soil) - horizontal
C     Model Number = 003
      if ( jcalc .eq. 3 ) then
         soil = 1.
         call AS_97_H ( mag, rupDist, ftype, soil, hwflag, specT,
     1                     period2, lnY, sigma,iflag )
         attenname1 = 'Abrahamson/Silva(97)-Hor,soil'
         lnY = lnY + efac
       endif

C     Abrahamson&Silva 1995 (Soil) - vertical
C     Model Number = 004
      if ( jcalc .eq. 4 ) then
         soil = 1.
         call AS_97_V ( mag, rupDist, ftype, soil, hwflag, specT,
     1                     period2, lnY, sigma,iflag )
         attenname1 = 'Abrahamson/Silva(97)-Ver,soil'
         lnY = lnY + efac
       endif

C     Abrahamson&Silva 1997 (Rock) - horizontal with Normal Faulting factors.
C     Model Number = 005
      if ( jcalc .eq. 5 ) then
         soil = 0.
         call AS_97_H_NF ( mag, rupDist, ftype, soil, hwflag, specT,
     1                     period2, lnY, sigma,iflag )
         attenname1 = 'Abrahamson/Silva(97)-Hor,rock,NF'
         lnY = lnY + efac
       endif

C     Abrahamson&Silva 1997 (Rock) - vertical
C     Model Number = 006
      if ( jcalc .eq. 6 ) then
         soil = 0.
         call AS_97_V_NF ( mag, rupDist, ftype, soil, hwflag, specT,
     1                     period2, lnY, sigma,iflag )
         attenname1 = 'Abrahamson/Silva(97)-Ver,rock,NF'
         lnY = lnY + efac
       endif

C     Abrahamson&Silva 1997 (Soil) - horizontal with Normal faulting factors.
C     Model Number = 007
      if ( jcalc .eq. 7 ) then
         soil = 1.
         call AS_97_H_NF ( mag, rupDist, ftype, soil, hwflag, specT,
     1                     period2, lnY, sigma,iflag )
         attenname1 = 'Abrahamson/Silva(97)-Hor,soil,NF'
         lnY = lnY + efac
       endif

C     Abrahamson&Silva 1997 (Soil) - vertical with Normal faulting factors
C     Model Number = 008
      if ( jcalc .eq. 8 ) then
         soil = 1.
         call AS_97_V_NF ( mag, rupDist, ftype, soil, hwflag, specT,
     1                     period2, lnY, sigma,iflag )
         attenname1 = 'Abrahamson/Silva(97)-Ver,soil,NF'
         lnY = lnY + efac
       endif

C     Abrahamson&Silva 1997 (Rock) - horizontal with Normal Faulting factors scaled
C           by 1.0/1.67 factor.
C     Model Number = 2005
      if ( jcalc .eq. 2005 ) then
         soil = 0.
         call AS_97_H_NF ( mag, rupDist, ftype, soil, hwflag, specT,
     1                     period2, lnY, sigma,iflag )
         attenname1 = 'Abrahamson/Silva(97)-Hor,rock,NF(1/1.67)'
C      Scale the computed ground motion by 1.0/1.67
         lnY = lnY + alog(1.0/1.67)
         lnY = lnY + efac
       endif

C     Abrahamson&Silva 1997 (Rock) - horizontal with Normal Faulting factors scaled
C           by 1.67 factor.
C     Model Number = 3005
      if ( jcalc .eq. 3005 ) then
         soil = 0.
         call AS_97_H_NF ( mag, rupDist, ftype, soil, hwflag, specT,
     1                     period2, lnY, sigma,iflag )
         attenname1 = 'Abrahamson/Silva(97)-Hor,rock,NF(1.67)'
C      Scale the computed ground motion by 1.67
         lnY = lnY + alog(1.67)
         lnY = lnY + efac
       endif


c ********* Boore, Joyner and Fumal Models ******************
c     BJF94, Horizontal, Class A
C     Model Number = 010
      if ( jcalc .eq. 10 ) then
         GB = 0
         GC = 0
         call bjf94 ( mag, jbDist, ftype, lnY, sigma, GB, GC, specT,
     1            attenName1, period2,iflag )
         lnY = lnY + efac
c     BJF94, Horizontal, Class B
C     Model Number = 011
      elseif ( jcalc .eq. 11 ) then
         GB = 1
         GC = 0
         call bjf94 ( mag, jbDist, ftype, lnY, sigma, GB, GC, specT,
     1            attenName1, period2,iflag )
         lnY = lnY + efac
c     BJF94, Horizontal, Class c
C     Model Number = 012
      elseif ( jcalc .eq. 12 ) then
         GB = 0
         GC = 1
         call bjf94 ( mag, jbDist, ftype, lnY, sigma, GB, GC, specT,
     1            attenName1, period2,iflag )
         lnY = lnY + efac
      endif

c     BJF97, Horizontal, Vs top 30 meters
C     Model Number = 013
      if ( jcalc .eq. 13 ) then
         call bjf97 ( mag, jbDist, ftype, lnY, sigma, specT,
     1            attenName1, period2, vs,iflag )
         lnY = lnY + efac
      endif

c     BJF97, Horizontal, Vs top 30 meters scaled by factor 1.0/1.67
C     Model Number = 2013
      if ( jcalc .eq. 2013 ) then
         call bjf97 ( mag, jbDist, ftype, lnY, sigma, specT,
     1            attenName1, period2, vs,iflag )
c     Scale ground motion by factor 1.0/1.67
         lnY = lnY + alog(1.0/1.67)
         attenName1='Boore, Joyner, Fumal (1997) (1.0/1.67)'
         lnY = lnY + efac
      endif

c     BJF97, Horizontal, Vs top 30 meters scaled by factor 1.67
C     Model Number = 3013
      if ( jcalc .eq. 3013 ) then
         call bjf97 ( mag, jbDist, ftype, lnY, sigma, specT,
     1            attenName1, period2, vs,iflag )
c     Scale ground motion by factor 1.67
         lnY = lnY + alog(1.67)
         attenName1='Boore, Joyner, Fumal (1997) (1.67)'
         lnY = lnY + efac
      endif

c ******** Campbell Models ******
c     Campbell (1990), Horizontal, Rock
C     Model Number = 020
      if ( jcalc .eq. 20 ) then
         baseDepth = 2.0
         call Camp90 ( mag, seismoDist, ftype, lnY, sigma, baseDepth,
     1            specT, attenName1, period2,iflag )
         lnY = lnY + efac
      endif

c     Campbell (1990) - vertical, Rock
C     Model Number = 021
      if ( jcalc .eq. 21 ) then
         baseDepth = 2.0
         call Camp90v ( mag, seismoDist, ftype, lnY, sigma, baseDepth,
     1            specT, attenName1, period2,iflag )
         lnY = lnY + efac
      endif

c     Campbell (1990/1994), Horizontal, Rock
C     Model Number = 022
      if ( jcalc .eq. 22 ) then
         baseDepth = 2.0
         soilflag = 0
         call Camp90_94 ( mag, seismoDist, ftype, lnY, sigma, baseDepth,
     1             specT, attenName1, period2,iflag )
         lnY = lnY + efac
      endif

c     Campbell (1993-1994), Horizontal Soil
C     Model Number = 023
      if ( jcalc .eq. 23 ) then
         baseDepth = 2.0
         soilFlag = 0
         softRock = 0
         hardRock = 0
         call Campbell_94 ( mag, seismoDist, ftype, lnY, sigma, specT,
     1                soilFlag, softRock, hardRock, baseDepth,
     1                attenName1, period2,iflag )
         lnY = lnY + efac
c     Campbell (1993-1994), Horizontal Soft Rock
C     Model Number = 024
      elseif ( jcalc .eq. 24 ) then
         baseDepth = 2.0
         soilFlag = 1
         softRock = 1
         hardRock = 0
         call Campbell_94 ( mag, seismoDist, ftype, lnY, sigma, specT,
     1                soilFlag, softRock, hardRock, baseDepth,
     1                attenName1, period2,iflag )
         lnY = lnY + efac
c     Campbell (1993-1994), Horizontal Hard Rock
C     Model Number = 025
      elseif ( jcalc .eq. 25 ) then
         baseDepth = 2.0
         soilFlag = 1
         softRock = 0
         hardRock = 1
         call Campbell_94 ( mag, seismoDist, ftype, lnY, sigma, specT,
     1                soilFlag, softRock, hardRock, baseDepth,
     1                attenName1, period2,iflag )
         lnY = lnY + efac
      endif

c     Campbell (1997), Horizontal, Soil
C     Model Number = 026
      if ( jcalc .eq. 26 ) then
         baseDepth = 4.0
         soilFlag = 0
         softRock = 0
         hardRock = 0
         call Camp97_H ( mag, seismoDist, ftype, lnY, sigma,
     1                baseDepth, specT,
     1                attenName1, period2, softrock, hardRock,iflag )
         lnY = lnY + efac
c     Campbell (1997), Horizontal, Soft Rock
C     Model Number = 027
      elseif ( jcalc .eq. 27 ) then
         baseDepth = 2.0
         soilFlag = 1
         softRock = 1
         hardRock = 0
         call Camp97_H ( mag, seismoDist, ftype, lnY, sigma,
     1                baseDepth, specT,
     1                attenName1, period2, softrock, hardRock,iflag )
         lnY = lnY + efac
c     Campbell (1997), Horizontal, Hard Rock
C     Model Number = 028
      elseif ( jcalc .eq. 28 ) then
         baseDepth = 2.0
         soilFlag = 1
         softRock = 0
         hardRock = 1
         call Camp97_H ( mag, seismoDist, ftype, lnY, sigma,
     1                baseDepth, specT,
     1                attenName1, period2, softrock, hardRock,iflag )
         lnY = lnY + efac
      endif

c     Campbell (1997)  vertical, Soil
C     Model Number = 029
      if ( jcalc .eq. 29 ) then
         baseDepth = 4.0
         soilFlag = 0
         softRock = 0
         hardRock = 0
         call Camp97_Z ( mag, seismoDist, ftype, lnY, sigma,
     1                baseDepth, specT,
     1                attenName1, period2, softrock, hardRock,iflag )
         lnY = lnY + efac
c     Campbell (1997)  vertical, Soft Rock
C     Model Number = 030
      elseif ( jcalc .eq. 30 ) then
         baseDepth = 2.0
         soilFlag = 1
         softRock = 1
         hardRock = 0
         call Camp97_Z ( mag, seismoDist, ftype, lnY, sigma,
     1                baseDepth, specT,
     1                attenName1, period2, softrock, hardRock,iflag )
         lnY = lnY + efac
c     Campbell (1997)  vertical, Hard Rock
C     Model Number = 031
      elseif ( jcalc .eq. 31 ) then
         baseDepth = 2.0
         soilFlag = 1
         softRock = 0
         hardRock = 1
         call Camp97_Z ( mag, seismoDist, ftype, lnY, sigma,
     1                baseDepth, specT,
     1                attenName1, period2, softrock, hardRock,iflag )
         lnY = lnY + efac
      endif

c ******** Idriss Models *******
c     Idriss (1991), Horizontal, Rock
C     Model Number = 040
      if ( jcalc .eq. 40 ) then
         call Idriss91_rock (mag, rupDist, ftype, lnY, sigma, specT,
     1            attenName1, period2,iflag )
         lnY = lnY + efac
      endif

C     Idriss (1991), Horizontal, Soft-soil, PGA
C     Model Number = 041
c     soft-soil
      if ( jcalc .eq. 41 .and. specT .eq. 0.0 ) then
         call Idriss91_soft (mag, rupDist, ftype, lnY, sigma,
     1            attenName1, period2 )
         iflag = 0
         lnY = lnY + efac
      elseif (jcalc .eq. 41 .and. specT .ne. 0.0) then
C        write (*,*) 'Idriss (1991), Horizontal, Soft Soil'
C        write (*,*) 'not defined for spectral acclereation!!!'
C        write (*,*) 'Check input file.'
        return
      endif

c     Idriss 1997 Horizontal, soft-soil, PGA
C     Model Number = 042
      if ( jcalc .eq. 42 .and. specT .eq. 0.0 ) then
         call Idriss97_soft (mag, rupDist, ftype, lnY, sigma,
     1            attenName1, period2 )
         iflag = 0
         lnY = lnY + efac
      elseif (jcalc .eq. 42 .and. specT .ne. 0.0) then
C         write (*,*) 'Idriss (1997), Horizontal, Soft Soil'
C         write (*,*) 'not defined for spectral acclereation!!!'
C         write (*,*) 'Check input file.'
         return
      endif

c     Idriss (1991:1995), Horizontal, Rock
C     Model Number = 043
      if ( jcalc .eq. 43 ) then
         call Idriss91_95_rock (mag, rupDist, ftype, lnY, sigma, specT,
     1            attenName1, period2,iflag )
         lnY = lnY + efac
      endif

c     Idriss (1991:1995), Horizontal, Rock scaled by factor 1.0/1.67
C     Model Number = 2043
      if ( jcalc .eq. 2043 ) then
         call Idriss91_95_rock (mag, rupDist, ftype, lnY, sigma, specT,
     1            attenName1, period2,iflag )
c     Scaled ground motion by factor 1.0/1.67
         lnY = lnY + alog (1.0/1.67)
         attenName1 = 'Idriss (1991;1995), Rock (1.0/1.67)'
         lnY = lnY + efac
      endif

c     Idriss (1991:1995), Horizontal, Rock scaled by factor 1.67
C     Model Number = 3043
      if ( jcalc .eq. 3043 ) then
         call Idriss91_95_rock (mag, rupDist, ftype, lnY, sigma, specT,
     1            attenName1, period2,iflag )
c     Scaled ground motion by factor 1.67
         lnY = lnY + alog (1.67)
         attenName1 = 'Idriss (1991;1995), Rock (1.67)'
         lnY = lnY + efac
      endif

c  ******* Sadigh/Geomatrix Models *******
c     Geomatrix 93 (rock) vertical
C     Model Number = 050
      if ( jcalc .eq. 50 ) then
         call Geomatrix93_V_rock ( mag, rupDist, ftype, lnY, sigma,
     1             specT, attenName1, period2,iflag )
         lnY = lnY + efac
      endif

c     Sadigh et al. 97 (rock) Horizontal
C     Model Number = 051
      if ( jcalc .eq. 51 ) then
         call Geomatrix93_H_rock ( mag, rupDist, ftype, lnY, sigma,
     1             specT, attenName1, period2,iflag )
         lnY = lnY + efac
      endif

c     Sadigh et al. 97 (rock) Horizontal scaled by factor 1.0/1.67
C     Model Number = 2051
      if ( jcalc .eq. 2051 ) then
         call Geomatrix93_H_rock ( mag, rupDist, ftype, lnY, sigma,
     1             specT, attenName1, period2,iflag )
c     Scale ground motion by factor 1.0/1.67
         lnY = lnY + alog(1.0/1.67)
         attenName1 = 'Sadigh et al. (1997), Horizontal, rock (1.0/1.67)'
         lnY = lnY + efac
      endif

c     Sadigh et al. 97 (rock) Horizontal scaled by factor 1.67
C     Model Number = 3051
      if ( jcalc .eq. 3051 ) then
         call Geomatrix93_H_rock ( mag, rupDist, ftype, lnY, sigma,
     1             specT, attenName1, period2,iflag )
c     Scale ground motion by factor 1.67
         lnY = lnY + alog(1.67)
         attenName1 = 'Sadigh et al. (1997), Horizontal, rock (1.67)'
         lnY = lnY + efac
      endif

c     Sadigh et al. 97 (soil) horizontal
C     Model Number = 052
      if ( jcalc .eq. 52 ) then
         call Sadigh97_H_soil ( mag, rupDist, ftype, lnY, sigma,
     1             specT, attenName1, period2,iflag )
         lnY = lnY + efac
      endif

c     Sadigh et al. 97 (rock) Horizontal - Sigma = 0.0
C     Model Number = 053
      if ( jcalc .eq. 53 ) then
         call Geomatrix93_H_rock ( mag, rupDist, ftype, lnY, sigma,
     1             specT, attenName1, period2,iflag )
c     Now set sigma = 0.0
         sigma = 1.0e-10
         attenName1 = 'Sadigh et al. (1997),Hor.,rock,Sigma=0.0'
         lnY = lnY + efac
      endif

c ******** Spudich et al. (1997) Models *******
C     Spudich et al. (1997), Horizontal, Rock, Extensional Regimes
C     Model Number = 060
      if (jcalc .eq. 60) then
         call Spudich96 ( mag, JBdist, lnY, sigma, 0, specT,
     1                   attenName1, period2,iflag )
         attenname1 = 'Spudich et al. (1997), Horizontal, Rock'
         lnY = lnY + efac
      endif

C     Spudich et al. (1997), Horizontal, Soil, Extensional Regimes
C     Model Number = 061
      if (jcalc .eq. 61) then
         call Spudich96 ( mag, JBdist, lnY, sigma, 1, specT,
     1                   attenName1, period2,iflag )
         attenname1 = 'Spudich et al. (1997), Horizontal, Soil'
         lnY = lnY + efac
      endif

c ******** Youngs Models *******
c     Youngs et al (1993) Horizontal, subduction, Rock
C     Model Number = 200
      if ( jcalc .eq. 200 ) then
         call youngs93 ( mag, rupDist, lnY, sigma, attenName1,
     1       period2, specT, ftype,iflag )
         attenName1 ='Youngs (1993) Rock, Subduction'
         lnY = lnY + efac
      endif

c     Youngs et al (1997) Horizontal, subduction, rock
C     Model Number = 201
      if ( jcalc .eq. 201 ) then
         call youngs97_rock ( mag, rupDist, lnY, sigma, attenName1,
     1       period2, specT, ftype, depth,iflag )
         attenName1 ='Youngs (1997) Rock, Subduction'
         lnY = lnY + efac
      endif

c     Youngs et al (1997) Horizontal, subduction, soil
C     Model Number = 202
      if ( jcalc .eq. 202 ) then
         call youngs97_soil ( mag, rupDist, lnY, sigma, attenName1,
     1       period2, specT, ftype, depth,iflag )
         attenName1 ='Youngs (1997) Soil, Subduction'
         lnY = lnY + efac
      endif

c ***** Synchronous Rupture Ground Motion Models for HBIP *****
c       Model consists of the SRSS from the Subduction GM
c       and the Crustal GM.

c     This first suite of synchronous ruptures is for seismic source
c          Model A (Geomatrix). Fault parameters for crustal event are:
c          M =7.4, D=1.0 km, Ftype=1 (reverse).

C     Now call the synchronous rupture cases for rock ground motions
c     (i.e., no HBIP amp factors applied).
c     Set the crustal earthquake parameters
      if (jcalc .eq. 7201001 .or. jcalc .eq. 7201043 .or. jcalc .eq.
     1      7201051) then
         rupdistc = 1.0
         ftypec = 1
         magc = 7.4
C     Now call the specific Subduction and Crustal Attenuation Model.

c     Youngs et al (1997) Horizontal, subduction, Rock
c     with Abrahamson&Silva (1997) Horizontal Crustal
C     Model Number = 7201001
         if (jcalc .eq. 7201001) then
            call youngs97_rock ( mag, rupDist, lnY, sigma, attenName1,
     1          period2, specT, ftype, depth,iflag )
            soil = 0.
            hwflag = 1
            call AS_97_H ( magc, rupDistc, ftypec, soil, hwflag, specT,
     1                     period2, lnYc, sigmac,iflag )
            attenname1 = 'Syn. Rupture: Youngs+AS (M7.4)-Rock'
c     Youngs et al (1997) Horizontal, subduction, Rock
c     with Idriss (1991:1995) Horizontal Crustal
C     Model Number = 7201043
         elseif ( jcalc .eq. 7201043 ) then
            call youngs97_rock ( mag, rupDist, lnY, sigma, attenName1,
     1          period2, specT, ftype, depth,iflag )
            call Idriss91_95_rock (magc, rupDistc, ftypec, lnYc, sigmac, specT,
     1            attenName1, period2,iflag )
            attenname1 = 'Synchronous Rupture: Youngs+Idriss (M7.4)-Rock'
c     Youngs et al (1997) Horizontal, subduction, Rock
c     with Sadigh et al. (1997) Horizontal Crustal
C     Model Number = 7201051
         elseif ( jcalc .eq. 7201051 ) then
            call youngs97_rock ( mag, rupDist, lnY, sigma, attenName1,
     1          period2, specT, ftype, depth,iflag )
            call Geomatrix93_H_rock ( magc, rupDistc, ftypec, lnYc, sigmac,
     1             specT, attenName1, period2,iflag )
            attenname1 = 'Syn. Rupture: Youngs+Sadigh (M7.4)-Rock'
         endif

c     First Combine the Sigma values.
         sigma=sqrt(((sigma**2)*(exp(lnY-6.89))**4 +
     1          (sigmac**2)*(exp(lnYc-6.89))**4)
     2          / ( ((exp(lnY-6.89))**2 + (exp(lnYc-6.89))**2))**2 )

c     Now combine the Subduction GM and Crustal GM values.
         lnY = alog ( sqrt( (exp(lnY))**2 + (exp(lnYc))**2 ) )
         lnY = lnY + efac
      endif

c     The second suite of synchronous ruptures is for seismic source
c          Model B (Carver). Fault parameters for crustal event are:
c          M =7.7, D=1.0 km, Ftype=1 (reverse)

C     Now call the synchronous rupture cases for rock ground motions
c     (i.e., no HBIP amp factors applied).
c     Set the crustal earthquake parameters
      if (jcalc .eq. 8201001 .or. jcalc .eq. 8201043 .or. jcalc .eq.
     1      8201051) then
         rupdistc = 1.0
         ftypec = 1
         magc = 7.7
C     Now call the specific Subduction and Crustal Attenuation Model.

c     Youngs et al (1997) Horizontal, subduction, Rock
c     with Abrahamson&Silva (1997) Horizontal Crustal
C     Model Number = 8201001
         if (jcalc .eq. 8201001) then
            call youngs97_rock ( mag, rupDist, lnY, sigma, attenName1,
     1          period2, specT, ftype, depth,iflag )
            soil = 0.
            hwflag = 1
            call AS_97_H ( magc, rupDistc, ftypec, soil, hwflag, specT,
     1                     period2, lnYc, sigmac,iflag )
            attenname1 = 'Syn. Rupture: Youngs+AS (M7.7)-Rock'
c     Youngs et al (1997) Horizontal, subduction, Rock
c     with Idriss (1991:1995) Horizontal Crustal
C     Model Number = 8201043
         elseif ( jcalc .eq. 8201043 ) then
            call youngs97_rock ( mag, rupDist, lnY, sigma, attenName1,
     1          period2, specT, ftype, depth,iflag )
            call Idriss91_95_rock (magc, rupDistc, ftypec, lnYc, sigmac, specT,
     1            attenName1, period2,iflag )
            attenname1 = 'Synchronous Rupture: Youngs+Idriss (M7.7)-Rock'
c     Youngs et al (1997) Horizontal, subduction, Rock
c     with Sadigh et al. (1997) Horizontal Crustal
C     Model Number = 8201051
         elseif ( jcalc .eq. 8201051 ) then
            call youngs97_rock ( mag, rupDist, lnY, sigma, attenName1,
     1          period2, specT, ftype, depth,iflag )
            call Geomatrix93_H_rock ( magc, rupDistc, ftypec, lnYc, sigmac,
     1             specT, attenName1, period2,iflag )
            attenname1 = 'Syn. Rupture: Youngs+Sadigh (M7.7)-Rock'
         endif

c     First Combine the Sigma values.
         sigma=sqrt(((sigma**2)*(exp(lnY-6.89))**4 +
     1          (sigmac**2)*(exp(lnYc-6.89))**4)
     2          / ( ((exp(lnY-6.89))**2 + (exp(lnYc-6.89))**2))**2 )

c     Now combine the Subduction GM and Crustal GM values.
         lnY = alog ( sqrt( (exp(lnY))**2 + (exp(lnYc))**2 ) )
         lnY = lnY + efac
      endif

c ***** Atkinson and Boore Subduction Models *****
c     Atkinson and Boore (2003) - Horizontal, NEHRP-B, Subduction
C     Model Number = 210
      if (jcalc .eq. 210) then
C        Set NEHRP-B site class by setting Sc=Sd=Se=0
         Sc = 0
         Sd = 0
         Se = 0
         call AB03 ( mag, rupdist, lnY, sigma, specT,
     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
         attenname1 = 'Atkinson&Boore 2003, Subduction, NEHRP-B'
         lnY = lnY + efac
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-C, Subduction
C     Model Number = 211
      if (jcalc .eq. 211) then
C        Set NEHRP-C site class by setting Sc=1, Sd=Se=0
         Sc = 1
         Sd = 0
         Se = 0
         call AB03 ( mag, rupdist, lnY, sigma, specT,
     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
         attenname1 = 'Atkinson&Boore 2003, Subduction, NEHRP-C'
         lnY = lnY + efac
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-D, Subduction
C     Model Number = 212
      if (jcalc .eq. 212) then
C        Set NEHRP-D site class by setting Sc=Se=0, Sd=1
         Sc = 0
         Sd = 1
         Se = 0
         call AB03 ( mag, rupdist, lnY, sigma, specT,
     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
         attenname1 = 'Atkinson&Boore 2003, Subduction, NEHRP-D'
         lnY = lnY + efac
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-E, Subduction
C     Model Number = 213
      if (jcalc .eq. 213) then
C        Set NEHRP-E site class by setting Sc=Sd=0, Se=1
         Sc = 0
         Sd = 0
         Se = 1
         call AB03 ( mag, rupdist, lnY, sigma, specT,
     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
         attenname1 = 'Atkinson&Boore 2003, Subduction, NEHRP-E'
         lnY = lnY + efac
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-B, Subduction
C     Model Number = 220
      if (jcalc .eq. 220) then
C        Set NEHRP-B site class by setting Sc=Sd=Se=0
         Sc = 0
         Sd = 0
         Se = 0
         call AB03Cas ( mag, rupdist, lnY, sigma, specT,
     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
         attenname1 = 'Atkinson&Boore 2003, Sub-Cascadia, NEHRP-B'
         lnY = lnY + efac
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-C, Subduction
C     Model Number = 221
      if (jcalc .eq. 221) then
C        Set NEHRP-C site class by setting Sc=1, Sd=Se=0
         Sc = 1
         Sd = 0
         Se = 0
         call AB03Cas ( mag, rupdist, lnY, sigma, specT,
     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
         attenname1 = 'Atkinson&Boore 2003, Sub-Cascadia, NEHRP-C'
         lnY = lnY + efac
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-D, Subduction
C     Model Number = 222
      if (jcalc .eq. 222) then
C        Set NEHRP-D site class by setting Sc=Se=0, Sd=1
         Sc = 0
         Sd = 1
         Se = 0
         call AB03Cas ( mag, rupdist, lnY, sigma, specT,
     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
         attenname1 = 'Atkinson&Boore 2003, Sub-Cascadia, NEHRP-D'
         lnY = lnY + efac
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-E, Subduction
C     Model Number = 223
      if (jcalc .eq. 223) then
C        Set NEHRP-E site class by setting Sc=Sd=0, Se=1
         Sc = 0
         Sd = 0
         Se = 1
         call AB03Cas ( mag, rupdist, lnY, sigma, specT,
     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
         attenname1 = 'Atkinson&Boore 2003, Sub-Cascadia, NEHRP-E'
         lnY = lnY + efac
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-B, Subduction
C     Model Number = 230
      if (jcalc .eq. 230) then
C        Set NEHRP-B site class by setting Sc=Sd=Se=0
         Sc = 0
         Sd = 0
         Se = 0
         call AB03Jap ( mag, rupdist, lnY, sigma, specT,
     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
         attenname1 = 'Atkinson&Boore 2003, Sub-Japan, NEHRP-B'
         lnY = lnY + efac
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-C, Subduction
C     Model Number = 231
      if (jcalc .eq. 231) then
C        Set NEHRP-C site class by setting Sc=1, Sd=Se=0
         Sc = 1
         Sd = 0
         Se = 0
         call AB03Jap ( mag, rupdist, lnY, sigma, specT,
     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
         attenname1 = 'Atkinson&Boore 2003, Sub-Japan, NEHRP-C'
         lnY = lnY + efac
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-D, Subduction
C     Model Number = 232
      if (jcalc .eq. 232) then
C        Set NEHRP-D site class by setting Sc=Se=0, Sd=1
         Sc = 0
         Sd = 1
         Se = 0
         call AB03Jap ( mag, rupdist, lnY, sigma, specT,
     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
         attenname1 = 'Atkinson&Boore 2003, Sub-Japan, NEHRP-D'
         lnY = lnY + efac
      endif

c     Atkinson and Boore (2003) - Horizontal, NEHRP-E, Subduction
C     Model Number = 233
      if (jcalc .eq. 233) then
C        Set NEHRP-E site class by setting Sc=Sd=0, Se=1
         Sc = 0
         Sd = 0
         Se = 1
         call AB03Jap ( mag, rupdist, lnY, sigma, specT,
     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
         attenname1 = 'Atkinson&Boore 2003, Sub-Japan, NEHRP-E'
         lnY = lnY + efac
      endif

C Atkinson and Boore (2008) Subduction Erratum Corrected for Interface Events ****
c     Atkinson and Boore (2003/08) - Horizontal, NEHRP-B, Subduction
C     Model Number = 310
      if (jcalc .eq. 310) then
C        Set NEHRP-B site class by setting Sc=Sd=Se=0
         Sc = 0
         Sd = 0
         Se = 0
         call AB03 ( mag, rupdist, lnY, sigma, specT,
     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
         attenname1 = 'Atkinson&Boore 2003/08, Subduction, NEHRP-B'

c     Erratum correction only for interface events.
C     Need to check ground motions between 0.1-1.0sec because of the
c         interpolation for periods between these end points.
         if (ftype .eq. 0) then
            if (specT .gt. 0.1 .and. specT .lt. 1.0) then
c     Call the attenuation model with needed spectral periods
               specT01 = 0.1
               call AB03 ( mag, rupdist, lnY01, sigma01, specT01,
     1              attenName0, period02,iflag01, ftype, depth, Sc, Sd, Se)
               specT02 = 0.2
               call AB03 ( mag, rupdist, lnY02, sigma02, specT02,
     1              attenName0, period02,iflag02, ftype, depth, Sc, Sd, Se)
               specT04 = 0.4
               call AB03 ( mag, rupdist, lnY04, sigma04, specT04,
     1              attenName0, period02,iflag04, ftype, depth, Sc, Sd, Se)
               specT10 = 1.0
               call AB03 ( mag, rupdist, lnY10, sigma10, specT10,
     1              attenName0, period02,iflag10, ftype, depth, Sc, Sd, Se)
               period2 = specT

C     SpecT falls between 0.1 and 0.2sec
               if (specT .gt. 0.1 .and. specT .le. 0.2) then
c     Correct the 0.2sec ground motion value.
                 lnY02p = 0.667*lnY04 + 0.333*lnY02
c     Interpolate to given SpecT value with new 0.2sec ground motion value.
                 lnY = lnY01 + (lnY01-lnY02p)*(alog(specT)-alog(0.1))/(alog(0.1)-alog(0.2))
C     SpecT falls between 0.2 and 0.4sec
               elseif (specT .gt. 0.2 .and. specT .le. 0.4) then
c     Correct the 0.2sec ground motion value.
                 lnY02p = 0.667*lnY04 + 0.333*lnY02
c     Correct the 0.4sec ground motion value.
                 lnY04p = 0.333*lnY04 + 0.667*lnY02
c     Interpolate to given SpecT value with new 0.2 and 0.4sec ground motion values.
                 lnY = lnY02p + (lnY02p-lnY04p)*(alog(specT)-alog(0.2))/(alog(0.2)-alog(0.4))
C     SpecT falls between 0.4 and 1.0sec
               elseif (specT .gt. 0.4 .and. specT .lt. 1.0) then
c     Correct the 0.4sec ground motion value.
                 lnY04p = 0.333*lnY04 + 0.667*lnY02
c     Interpolate to given SpecT value with new 1.0sec ground motion value.
                 lnY = lnY04p + (lnY04p-lnY10)*(alog(specT)-alog(0.4))/(alog(0.4)-alog(1.0))
               endif
            endif
	   endif
         lnY = lnY + efac
      endif

c     Atkinson and Boore (2003/08) - Horizontal, NEHRP-C, Subduction
C     Model Number = 311
      if (jcalc .eq. 311) then
C        Set NEHRP-C site class by setting Sc=1, Sd=Se=0
         Sc = 1
         Sd = 0
         Se = 0
         call AB03 ( mag, rupdist, lnY, sigma, specT,
     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
         attenname1 = 'Atkinson&Boore 2003/08, Subduction, NEHRP-C'

c     Erratum correction only for interface events.
C     Need to check ground motions between 0.1-1.0sec because of the
c         interpolation for periods between these end points.
         if (ftype .eq. 0) then
            if (specT .gt. 0.1 .and. specT .lt. 1.0) then
c     Call the attenuation model with needed spectral periods
               specT01 = 0.1
               call AB03 ( mag, rupdist, lnY01, sigma01, specT01,
     1              attenName0, period02,iflag01, ftype, depth, Sc, Sd, Se)
               specT02 = 0.2
               call AB03 ( mag, rupdist, lnY02, sigma02, specT02,
     1              attenName0, period02,iflag02, ftype, depth, Sc, Sd, Se)
               specT04 = 0.4
               call AB03 ( mag, rupdist, lnY04, sigma04, specT04,
     1              attenName0, period02,iflag04, ftype, depth, Sc, Sd, Se)
               specT10 = 1.0
               call AB03 ( mag, rupdist, lnY10, sigma10, specT10,
     1              attenName0, period02,iflag10, ftype, depth, Sc, Sd, Se)
               period2 = specT

C     SpecT falls between 0.1 and 0.2sec
               if (specT .gt. 0.1 .and. specT .le. 0.2) then
c     Correct the 0.2sec ground motion value.
                 lnY02p = 0.667*lnY04 + 0.333*lnY02
c     Interpolate to given SpecT value with new 0.2sec ground motion value.
                 lnY = lnY01 + (lnY01-lnY02p)*(alog(specT)-alog(0.1))/(alog(0.1)-alog(0.2))
C     SpecT falls between 0.2 and 0.4sec
               elseif (specT .gt. 0.2 .and. specT .le. 0.4) then
c     Correct the 0.2sec ground motion value.
                 lnY02p = 0.667*lnY04 + 0.333*lnY02
c     Correct the 0.4sec ground motion value.
                 lnY04p = 0.333*lnY04 + 0.667*lnY02
c     Interpolate to given SpecT value with new 0.2 and 0.4sec ground motion values.
                 lnY = lnY02p + (lnY02p-lnY04p)*(alog(specT)-alog(0.2))/(alog(0.2)-alog(0.4))
C     SpecT falls between 0.4 and 1.0sec
               elseif (specT .gt. 0.4 .and. specT .lt. 1.0) then
c     Correct the 0.4sec ground motion value.
                 lnY04p = 0.333*lnY04 + 0.667*lnY02
c     Interpolate to given SpecT value with new 1.0sec ground motion value.
                 lnY = lnY04p + (lnY04p-lnY10)*(alog(specT)-alog(0.4))/(alog(0.4)-alog(1.0))
               endif
            endif
	   endif
         lnY = lnY + efac
      endif

c     Atkinson and Boore (2003/08) - Horizontal, NEHRP-D, Subduction
C     Model Number = 312
      if (jcalc .eq. 312) then
C        Set NEHRP-D site class by setting Sc=Se=0, Sd=1
         Sc = 0
         Sd = 1
         Se = 0
         call AB03 ( mag, rupdist, lnY, sigma, specT,
     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
         attenname1 = 'Atkinson&Boore 2003/08, Subduction, NEHRP-D'

c     Erratum correction only for interface events.
C     Need to check ground motions between 0.1-1.0sec because of the
c         interpolation for periods between these end points.
         if (ftype .eq. 0) then
            if (specT .gt. 0.1 .and. specT .lt. 1.0) then
c     Call the attenuation model with needed spectral periods
               specT01 = 0.1
               call AB03 ( mag, rupdist, lnY01, sigma01, specT01,
     1              attenName0, period02,iflag01, ftype, depth, Sc, Sd, Se)
               specT02 = 0.2
               call AB03 ( mag, rupdist, lnY02, sigma02, specT02,
     1              attenName0, period02,iflag02, ftype, depth, Sc, Sd, Se)
               specT04 = 0.4
               call AB03 ( mag, rupdist, lnY04, sigma04, specT04,
     1              attenName0, period02,iflag04, ftype, depth, Sc, Sd, Se)
               specT10 = 1.0
               call AB03 ( mag, rupdist, lnY10, sigma10, specT10,
     1              attenName0, period02,iflag10, ftype, depth, Sc, Sd, Se)
               period2 = specT
C     SpecT falls between 0.1 and 0.2sec
               if (specT .gt. 0.1 .and. specT .le. 0.2) then
c     Correct the 0.2sec ground motion value.
                 lnY02p = 0.667*lnY04 + 0.333*lnY02
c     Interpolate to given SpecT value with new 0.2sec ground motion value.
                 lnY = lnY01 + (lnY01-lnY02p)*(alog(specT)-alog(0.1))/(alog(0.1)-alog(0.2))
C     SpecT falls between 0.2 and 0.4sec
               elseif (specT .gt. 0.2 .and. specT .le. 0.4) then
c     Correct the 0.2sec ground motion value.
                 lnY02p = 0.667*lnY04 + 0.333*lnY02
c     Correct the 0.4sec ground motion value.
                 lnY04p = 0.333*lnY04 + 0.667*lnY02
c     Interpolate to given SpecT value with new 0.2 and 0.4sec ground motion values.
                 lnY = lnY02p + (lnY02p-lnY04p)*(alog(specT)-alog(0.2))/(alog(0.2)-alog(0.4))
C     SpecT falls between 0.4 and 1.0sec
               elseif (specT .gt. 0.4 .and. specT .lt. 1.0) then
c     Correct the 0.4sec ground motion value.
                 lnY04p = 0.333*lnY04 + 0.667*lnY02
c     Interpolate to given SpecT value with new 1.0sec ground motion value.
                 lnY = lnY04p + (lnY04p-lnY10)*(alog(specT)-alog(0.4))/(alog(0.4)-alog(1.0))
               endif
            endif
	   endif
         lnY = lnY + efac
      endif

c     Atkinson and Boore (2003/08) - Horizontal, NEHRP-E, Subduction
C     Model Number = 313
      if (jcalc .eq. 313) then
C        Set NEHRP-E site class by setting Sc=Sd=0, Se=1
         Sc = 0
         Sd = 0
         Se = 1
         call AB03 ( mag, rupdist, lnY, sigma, specT,
     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
         attenname1 = 'Atkinson&Boore 2003/08, Subduction, NEHRP-E'

c     Erratum correction only for interface events.
C     Need to check ground motions between 0.1-1.0sec because of the
c         interpolation for periods between these end points.
         if (ftype .eq. 0) then
            if (specT .gt. 0.1 .and. specT .lt. 1.0) then
c     Call the attenuation model with needed spectral periods
               specT01 = 0.1
               call AB03 ( mag, rupdist, lnY01, sigma01, specT01,
     1              attenName0, period02,iflag01, ftype, depth, Sc, Sd, Se)
               specT02 = 0.2
               call AB03 ( mag, rupdist, lnY02, sigma02, specT02,
     1              attenName0, period02,iflag02, ftype, depth, Sc, Sd, Se)
               specT04 = 0.4
               call AB03 ( mag, rupdist, lnY04, sigma04, specT04,
     1              attenName0, period02,iflag04, ftype, depth, Sc, Sd, Se)
               specT10 = 1.0
               call AB03 ( mag, rupdist, lnY10, sigma10, specT10,
     1              attenName0, period02,iflag10, ftype, depth, Sc, Sd, Se)
               period2 = specT
C     SpecT falls between 0.1 and 0.2sec
               if (specT .gt. 0.1 .and. specT .le. 0.2) then
c     Correct the 0.2sec ground motion value.
                 lnY02p = 0.667*lnY04 + 0.333*lnY02
c     Interpolate to given SpecT value with new 0.2sec ground motion value.
                 lnY = lnY01 + (lnY01-lnY02p)*(alog(specT)-alog(0.1))/(alog(0.1)-alog(0.2))
C     SpecT falls between 0.2 and 0.4sec
               elseif (specT .gt. 0.2 .and. specT .le. 0.4) then
c     Correct the 0.2sec ground motion value.
                 lnY02p = 0.667*lnY04 + 0.333*lnY02
c     Correct the 0.4sec ground motion value.
                 lnY04p = 0.333*lnY04 + 0.667*lnY02
c     Interpolate to given SpecT value with new 0.2 and 0.4sec ground motion values.
                 lnY = lnY02p + (lnY02p-lnY04p)*(alog(specT)-alog(0.2))/(alog(0.2)-alog(0.4))
C     SpecT falls between 0.4 and 1.0sec
               elseif (specT .gt. 0.4 .and. specT .lt. 1.0) then
c     Correct the 0.4sec ground motion value.
                 lnY04p = 0.333*lnY04 + 0.667*lnY02
c     Interpolate to given SpecT value with new 1.0sec ground motion value.
                 lnY = lnY04p + (lnY04p-lnY10)*(alog(specT)-alog(0.4))/(alog(0.4)-alog(1.0))
               endif
            endif
	   endif
         lnY = lnY + efac
      endif

c     Atkinson and Boore (2003/08) - Horizontal, NEHRP-B, Subduction
C     Model Number = 320
      if (jcalc .eq. 320) then
C        Set NEHRP-B site class by setting Sc=Sd=Se=0
         Sc = 0
         Sd = 0
         Se = 0
         call AB03Cas ( mag, rupdist, lnY, sigma, specT,
     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
         attenname1 = 'Atkinson&Boore 2003/08, Sub-Cascadia, NEHRP-B'

c     Erratum correction only for world-wide model case interface events.
c     Note that this model is the same as the 2003 model.

         lnY = lnY + efac
      endif

c     Atkinson and Boore (2003/08) - Horizontal, NEHRP-C, Subduction
C     Model Number = 321
      if (jcalc .eq. 321) then
C        Set NEHRP-C site class by setting Sc=1, Sd=Se=0
         Sc = 1
         Sd = 0
         Se = 0
         call AB03Cas ( mag, rupdist, lnY, sigma, specT,
     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
         attenname1 = 'Atkinson&Boore 2003/08, Sub-Cascadia, NEHRP-C'

c     Erratum correction only for world-wide model case interface events.
c     Note that this model is the same as the 2003 model.

         lnY = lnY + efac
      endif

c     Atkinson and Boore (2003/08) - Horizontal, NEHRP-D, Subduction
C     Model Number = 322
      if (jcalc .eq. 322) then
C        Set NEHRP-D site class by setting Sc=Se=0, Sd=1
         Sc = 0
         Sd = 1
         Se = 0
         call AB03Cas ( mag, rupdist, lnY, sigma, specT,
     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
         attenname1 = 'Atkinson&Boore 2003/08, Sub-Cascadia, NEHRP-D'

c     Erratum correction only for world-wide model case interface events.
c     Note that this model is the same as the 2003 model.

         lnY = lnY + efac
      endif

c     Atkinson and Boore (2003/08) - Horizontal, NEHRP-E, Subduction
C     Model Number = 323
      if (jcalc .eq. 323) then
C        Set NEHRP-E site class by setting Sc=Sd=0, Se=1
         Sc = 0
         Sd = 0
         Se = 1
         call AB03Cas ( mag, rupdist, lnY, sigma, specT,
     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
         attenname1 = 'Atkinson&Boore 2003/08, Sub-Cascadia, NEHRP-E'

c     Erratum correction only for world-wide model case interface events.
c     Note that this model is the same as the 2003 model.

         lnY = lnY + efac
      endif

c     Atkinson and Boore (2003/08) - Horizontal, NEHRP-B, Subduction
C     Model Number = 330
      if (jcalc .eq. 330) then
C        Set NEHRP-B site class by setting Sc=Sd=Se=0
         Sc = 0
         Sd = 0
         Se = 0
         call AB03Jap ( mag, rupdist, lnY, sigma, specT,
     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
         attenname1 = 'Atkinson&Boore 2003/08, Sub-Japan, NEHRP-B'

c     Erratum correction only for world-wide model case interface events.
c     Note that this model is the same as the 2003 model.

         lnY = lnY + efac
      endif

c     Atkinson and Boore (2003/08) - Horizontal, NEHRP-C, Subduction
C     Model Number = 331
      if (jcalc .eq. 331) then
C        Set NEHRP-C site class by setting Sc=1, Sd=Se=0
         Sc = 1
         Sd = 0
         Se = 0
         call AB03Jap ( mag, rupdist, lnY, sigma, specT,
     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
         attenname1 = 'Atkinson&Boore 2003/08, Sub-Japan, NEHRP-C'

c     Erratum correction only for world-wide model case interface events.
c     Note that this model is the same as the 2003 model.

         lnY = lnY + efac
      endif

c     Atkinson and Boore (2003/08) - Horizontal, NEHRP-D, Subduction
C     Model Number = 332
      if (jcalc .eq. 332) then
C        Set NEHRP-D site class by setting Sc=Se=0, Sd=1
         Sc = 0
         Sd = 1
         Se = 0
         call AB03Jap ( mag, rupdist, lnY, sigma, specT,
     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
         attenname1 = 'Atkinson&Boore 2003/08, Sub-Japan, NEHRP-D'

c     Erratum correction only for world-wide model case interface events.
c     Note that this model is the same as the 2003 model.

         lnY = lnY + efac
      endif

c     Atkinson and Boore (2003/08) - Horizontal, NEHRP-E, Subduction
C     Model Number = 333
      if (jcalc .eq. 333) then
C        Set NEHRP-E site class by setting Sc=Sd=0, Se=1
         Sc = 0
         Sd = 0
         Se = 1
         call AB03Jap ( mag, rupdist, lnY, sigma, specT,
     1            attenName1, period2,iflag, ftype, depth, Sc, Sd, Se)
         attenname1 = 'Atkinson&Boore 2003/08, Sub-Japan, NEHRP-E'

c     Erratum correction only for world-wide model case interface events.
c     Note that this model is the same as the 2003 model.

         lnY = lnY + efac
      endif

c ***** Gregor et al. Cascadia Subduction Model *****
c     Gregor et al. (2002) - Horizontal, Rock, Cascadia Subduction
C     Model Number = 240
C     Note: This model is only valid for the magnitude range of the
C           the data used in the regression: 8.0 - 9.0.  The program
C           will check to make sure that the magnitude range being
C           requested falls within this range.
      if (jcalc .eq. 240) then
C        Check the magnitude range.
c         if (mag .lt. 8.0 .or. mag .gt. 9.0) then
c   C         write (*,*) 'User has requested the Gregor et al. (2002)'
c   C         write (*,*) 'Cascadia Subduction attenuation relationship,'
c   C         write (*,*) 'however, the magnitude of = ', mag
c   C         write (*,*) 'falls outside of the applicable magnitude'
c   C         write (*,*) 'range for this attenuation relationship.'
c   C         write (*,*) 'Check your input fault parameter file.'
c            return
c         endif
         call Gregor02CasR ( mag, rupdist, lnY, sigma, specT,
     1            attenName1, period2,iflag)
         attenname1 = 'Gregor et al.(2002),Rock,Cascadia Subduction'
         lnY = lnY + efac
      endif

c     Gregor et al. (2002) - Horizontal, Soil, Cascadia Subduction
C     Model Number = 241
C     Note: This model is only valid for the magnitude range of the
C           the data used in the regression: 8.0 - 9.0.  The program
C           will check to make sure that the magnitude range being
C           requested falls within this range.
      if (jcalc .eq. 241) then
C        Check the magnitude range.
c         if (mag .lt. 8.0 .or. mag .gt. 9.0) then
c   C         write (*,*) 'User has requested the Gregor et al. (2002)'
c   C         write (*,*) 'Cascadia Subduction attenuation relationship,'
c   C         write (*,*) 'however, the magnitude of = ', mag
c   C         write (*,*) 'falls outside of the applicable magnitude'
c   C         write (*,*) 'range for this attenuation relationship.'
c   C         write (*,*) 'Check your input fault parameter file.'
c            return
c         endif
         call Gregor02CasS ( mag, rupdist, lnY, sigma, specT,
     1            attenName1, period2,iflag)
         attenname1 = 'Gregor et al.(2002),Soil,Cascadia Subduction'
         lnY = lnY + efac
      endif

c ***** Gregor et al. Cascadia Subduction Model *****
c     Gregor et al. (2006) - Horizontal, Cascadia Subduction
C     Model Number = 242

      if (jcalc .eq. 242) then
         call Gregor06Cas ( mag, rupdist, lnY, sigma, specT,
     1            attenName1, vs, period2, iflag)
         attenname1 = 'Gregor et al.(2006), Cascadia Subduction'
         lnY = lnY + efac
      endif

c ***** Zhao et al. (2006) Crustal/Subduction Models *****
c     Zhao et al. (2006) - Horizontal, Hard Rock, Subduction
C     Model Number = 250
      if (jcalc .eq. 250) then
c        Set Site Class = Hard Rock and Source Type
         sclass = 0
         if (ftype .eq. 1) then
            sourceclass = 2
         elseif (ftype .eq. 0) then
            sourceclass = 1
         endif

         call Zhaoetal2006 ( mag, rupdist, ftype, lnY, sigma, sclass, specT,
     1            attenName1, period2,iflag, sourceclass, depth, phi, tau )

         attenname1 = 'Zhao etal(2006)-Sub., Hard Rock'
         lnY = lnY + efac
      endif

c     Zhao et al. (2006) - Horizontal, Rock, Subduction
C     Model Number = 251
      if (jcalc .eq. 251) then

c        Set Site Class = Rock and Source Type
         sclass = 1.0
         if (ftype .eq. 1) then
            sourceclass = 2.0
         elseif (ftype .eq. 0) then
            sourceclass = 1.0
         endif
         call Zhaoetal2006 ( mag, rupdist, ftype, lnY, sigma, sclass, specT,
     1            attenName1, period2,iflag, sourceclass, depth, phi, tau )

         attenname1 = 'Zhao etal(2006)-Sub., Rock (SC I)'
         lnY = lnY + efac
      endif

c     Zhao et al. (2006) - Horizontal, Hard Soil, Subduction
C     Model Number = 252
      if (jcalc .eq. 252) then
c        Set Site Class = Hard Soil and Source Type
         sclass = 2
         if (ftype .eq. 1) then
            sourceclass = 2
         elseif (ftype .eq. 0) then
            sourceclass = 1
         endif

         call Zhaoetal2006 ( mag, rupdist, ftype, lnY, sigma, sclass, specT,
     1            attenName1, period2,iflag, sourceclass, depth, phi, tau )

         attenname1 = 'Zhao etal(2006)-Sub., Hard Soil (SC II)'
         lnY = lnY + efac
      endif

c     Zhao et al. (2006) - Horizontal, Medium Soil, Subduction
C     Model Number = 253
      if (jcalc .eq. 253) then
c        Set Site Class = Medium Soil and Source Type
         sclass = 3
         if (ftype .eq. 1) then
            sourceclass = 2
         elseif (ftype .eq. 0) then
            sourceclass = 1
         endif

         call Zhaoetal2006 ( mag, rupdist, ftype, lnY, sigma, sclass, specT,
     1            attenName1, period2,iflag, sourceclass, depth, phi, tau )

         attenname1 = 'Zhao etal(2006)-Sub., Medium Soil (SC III)'
         lnY = lnY + efac
      endif

c     Zhao et al. (2006) - Horizontal, Soft Soil, Subduction
C     Model Number = 254
      if (jcalc .eq. 254) then
c        Set Site Class = Soft Soil and Source Type
         sclass = 4
         if (ftype .eq. 1) then
            sourceclass = 2
         elseif (ftype .eq. 0) then
            sourceclass = 1
         endif

         call Zhaoetal2006 ( mag, rupdist, ftype, lnY, sigma, sclass, specT,
     1            attenName1, period2,iflag, sourceclass, depth, phi, tau )

         attenname1 = 'Zhao etal(2006)-Sub., Soft Soil (SC IV)'
         lnY = lnY + efac
      endif

c     Zhao et al. (2006) - Horizontal, Hard Rock, Crustal
C     Model Number = 255
      if (jcalc .eq. 255) then
c        Set Site Class = Hard Rock and Source Type
         sclass = 0
         sourceclass = 0

         call Zhaoetal2006 ( mag, rupdist, ftype, lnY, sigma, sclass, specT,
     1            attenName1, period2,iflag, sourceclass, depth, phi, tau )

         attenname1 = 'Zhao etal(2006)-Crust, Hard Rock'
         lnY = lnY + efac
      endif

c     Zhao et al. (2006) - Horizontal, Rock, Crustal
C     Model Number = 256
      if (jcalc .eq. 256) then
c        Set Site Class = Rock and Source Type
         sclass = 1.0
         sourceclass = 0

         call Zhaoetal2006 ( mag, rupdist, ftype, lnY, sigma, sclass, specT,
     1            attenName1, period2,iflag, sourceclass, depth, phi, tau )

         attenname1 = 'Zhao etal(2006)-Crust, Rock (SC I)'
         lnY = lnY + efac
      endif

c     Zhao-Lu (2011) - Horizontal, Rock, Crustal
C     Modified (2006) model with magnitude capped at 7.1.
C     Model Number = 2256
      if (jcalc .eq. 2256) then
c        Set Site Class = Rock and Source Type
         sclass = 1.0
         sourceclass = 0
         if (mag .gt. 7.1) then
            m = 7.1
         else
            m = mag
         endif
         call Zhaoetal2006 ( m, rupdist, ftype, lnY, sigma, sclass, specT,
     1            attenName1, period2,iflag, sourceclass, depth, phi, tau )
         attenname1 = 'ZhaoLu(2011)-Crust, Rock (SC I)'
         lnY = lnY + efac
      endif



c     Zhao et al. (2006) - Horizontal, Hard Soil, Crustal
C     Model Number = 257
      if (jcalc .eq. 257) then
c        Set Site Class = Hard Soil and Source Type
         sclass = 2
         sourceclass = 0

         call Zhaoetal2006 ( mag, rupdist, ftype, lnY, sigma, sclass, specT,
     1            attenName1, period2,iflag, sourceclass, depth, phi, tau )

         attenname1 = 'Zhao etal(2006)-Crust, Hard Soil (SC II)'
         lnY = lnY + efac
      endif

c     Zhao et al. (2006) - Horizontal, Medium Soil, Crustal
C     Model Number = 258
      if (jcalc .eq. 258) then
c        Set Site Class = Medium Soil and Source Type
         sclass = 3
         sourceclass = 0

         call Zhaoetal2006 ( mag, rupdist, ftype, lnY, sigma, sclass, specT,
     1            attenName1, period2,iflag, sourceclass, depth, phi, tau )

         attenname1 = 'Zhao etal(2006)-Crust, Medium Soil (SC III)'
         lnY = lnY + efac
      endif

c     Zhao et al. (2006) - Horizontal, Soft Soil, Crustal
C     Model Number = 259
      if (jcalc .eq. 259) then
c        Set Site Class = Soft Soil and Source Type
         sclass = 4
         sourceclass = 0

         call Zhaoetal2006 ( mag, rupdist, ftype, lnY, sigma, sclass, specT,
     1            attenName1, period2,iflag, sourceclass, depth, phi, tau )

         attenname1 = 'Zhao etal(2006)-Crust, Soft Soil (SC IV)'
         lnY = lnY + efac
      endif

c ***** Kanno Subduction Models *****
c     Kanno (2006) - Horizontal, Subduction
C     Model Number = 260
      if ( jcalc .eq. 260 ) then

         call kanno2006 ( mag, rupdist, specT,
     1                    period2, lnY, sigma, iflag, vs, depth )

         attenname1 = 'Kanno Subduction (2006)'
         lnY = lnY + efac
      endif

c ***** Garcia et al. (2005) Subduction Model-Inslab *****
c     Garcia et al. (2005) - Horizontal, Subduction-Inslab
C     Model Number = 270
      if ( jcalc .eq. 270 ) then
         if (ftype .ne. 1) then
C            write (*,*)
C            write (*,*) 'Garcia et al. (2005) Subduction atttenuation model'
C            write (*,*) 'is defined only for inslab events'
C            write (*,*) 'Mechanism Ftype = 1'
C            write (*,*) 'Please check the input file.'
         else
            call GarciaH05 ( mag, rupdist, specT,
     1                    period2, lnY, sigma, iflag, depth )
            attenname1 = 'Garcia et al. (2005), Hor-Inslab, Rock'
         endif
         lnY = lnY + efac
       endif

C     Model Number = 271
c     Garcia et al. (2005) - Vertical, Subduction-Inslab
      if ( jcalc .eq. 271 ) then
         if (ftype .ne. 1) then
C            write (*,*)
C            write (*,*) 'Garcia et al. (2005) Subduction atttenuation model'
C            write (*,*) 'is defined only for inslab events'
C            write (*,*) 'Mechanism Ftype = 1'
C            write (*,*) 'Please check the input file.'
         else
            call GarciaV05 ( mag, rupdist, specT,
     1                       period2, lnY, sigma, iflag, depth )
            attenname1 = 'Garcia et al. (2005), Ver-Inslab, Rock'
         endif
         lnY = lnY + efac
       endif

c ***** Lin and Lee (2008) Subduction Model *****
c      Lin and Lee (2008) - Horizontal, Subduction, Rock
C     Model Number = 280
      if ( jcalc .eq. 280 ) then
         call LinLee08rock ( mag, rupdist, specT,
     1                    period2, lnY, sigma, iflag, depth, ftype )
         attenname1 = 'Lin and Lee (2008), Subduction, Rock'
         lnY = lnY + efac
      endif

c      Lin and Lee (2008) - Horizontal, Subduction, Soil
C     Model Number = 281
      if ( jcalc .eq. 281 ) then
         call LinLee08soil ( mag, rupdist, specT,
     1                    period2, lnY, sigma, iflag, depth, ftype )
         attenname1 = 'Lin and Lee (2008), Subduction, Soil'
         lnY = lnY + efac
      endif

C  **** BCSubduction Model *******
C     Base Case Model, DeltaC1 = 0.0
C     Model Number = 350
      if ( jcalc .eq. 350 ) then
         deltaC1 = 0.0
         call BCHydroSub_V3 ( mag, ftype, rupDist, vs, lnY,
     1            sigma, specT, period2, iflag, foreArc, depth, disthypo, deltaC1 )
         attenname1 = 'BCHydroSub_V3, DeltaC1=0'
      endif

C     Base Case Model, DeltaC1 = -0.5
C     Model Number = 351
      if ( jcalc .eq. 351 ) then
         deltaC1 = -0.5
         call BCHydroSub_V3 ( mag, ftype, rupDist, vs, lnY,
     1            sigma, specT, period2, iflag, foreArc, depth, disthypo, deltaC1 )
         attenname1 = 'BCHydroSub_V3, DeltaC1=-0.5'
      endif

C     Base Case Model, DeltaC1 = 0.5
C     Model Number = 352
      if ( jcalc .eq. 352 ) then
         deltaC1 = 0.5
         call BCHydroSub_V3 ( mag, ftype, rupDist, vs, lnY,
     1            sigma, specT, period2, iflag, foreArc, depth, disthypo, deltaC1 )
         attenname1 = 'BCHydroSub_V3, DeltaC1=0.5'
      endif

C     Base Case Model, DeltaC1 = 0.0, Single Station Sigma=0.60
C     Model Number = 353
      if ( jcalc .eq. 353 ) then
         deltaC1 = 0.0
         call BCHydroSub_V3 ( mag, ftype, rupDist, vs, lnY,
     1            sigma, specT, period2, iflag, foreArc, depth, disthypo, deltaC1 )
         sigma = 0.60
         attenname1 = 'BCHydroSub_V3-SSS, DeltaC1=0'
      endif

C     Base Case Model, DeltaC1 = -0.5, Single Station Sigma=0.60
C     Model Number = 354
      if ( jcalc .eq. 354 ) then
         deltaC1 = -0.5
         call BCHydroSub_V3 ( mag, ftype, rupDist, vs, lnY,
     1            sigma, specT, period2, iflag, foreArc, depth, disthypo, deltaC1 )
         sigma = 0.60
         attenname1 = 'BCHydroSub_V3-SSS, DeltaC1=-0.5'
      endif

C     Base Case Model, DeltaC1 = 0.5, Single Station Sigma=0.58
C     Model Number = 355
      if ( jcalc .eq. 355 ) then
         deltaC1 = 0.5
         call BCHydroSub_V3 ( mag, ftype, rupDist, vs, lnY,
     1            sigma, specT, period2, iflag, foreArc, depth, disthypo, deltaC1 )
         sigma = 0.60
         attenname1 = 'BCHydroSub_V3-SSS, DeltaC1=0.5'
      endif

C     Base Case Model, DeltaC1 = -0.2
C     Model Number = 356
      if ( jcalc .eq. 356 ) then
         deltaC1 = -0.2
         call BCHydroSub_V3 ( mag, ftype, rupDist, vs, lnY,
     1            sigma, specT, period2, iflag, foreArc, depth, disthypo, deltaC1 )
         attenname1 = 'BCHydroSub_V3, DeltaC1=-0.2'
      endif

C     Base Case Model, DeltaC1 = 0.2
C     Model Number = 357
      if ( jcalc .eq. 357 ) then
         deltaC1 = 0.2
         call BCHydroSub_V3 ( mag, ftype, rupDist, vs, lnY,
     1            sigma, specT, period2, iflag, foreArc, depth, disthypo, deltaC1 )
         attenname1 = 'BCHydroSub_V3, DeltaC1=0.2'
      endif

C     Base Case Model, DeltaC1 = -0.2, Single Station Sigma=0.60
C     Model Number = 358
      if ( jcalc .eq. 358 ) then
         deltaC1 = -0.2
         call BCHydroSub_V3 ( mag, ftype, rupDist, vs, lnY,
     1            sigma, specT, period2, iflag, foreArc, depth, disthypo, deltaC1 )
         sigma = 0.60
         attenname1 = 'BCHydroSub_V3-SSS, DeltaC1=-0.2'
      endif

C     Base Case Model, DeltaC1 = 0.2, Single Station Sigma=0.60
C     Model Number = 359
      if ( jcalc .eq. 359 ) then
         deltaC1 = 0.2
         call BCHydroSub_V3 ( mag, ftype, rupDist, vs, lnY,
     1            sigma, specT, period2, iflag, foreArc, depth, disthypo, deltaC1 )
         sigma = 0.60
         attenname1 = 'BCHydroSub_V3-SSS, DeltaC1=0.2'
      endif

C     Base Case Model, Variable DeltaC1 Adjustment - Central Values, Reg. Sigma
C     Model Number = 360
      if ( jcalc .eq. 360 ) then
c        Determine the DeltaC1 value based on recommended adjusted model and spectral period.
C        Period dependent model for interface events and constant for intraslab
         if (ftype .eq. 0) then
         if (specT .le. 0.3) then
            deltaC1 = 0.2
         elseif (specT .gt. 0.3 .and. specT .le. 0.5) then
            deltaC1 = 0.2 + (0.1-0.2)*(alog(specT)-alog(0.3)) / (alog(0.5)-alog(0.3))
         elseif (specT .gt. 0.5 .and. specT .le. 1.0) then
            deltaC1 = 0.1 + (0.0-0.1)*(alog(specT)-alog(0.5)) / (alog(1.0)-alog(0.5))
         elseif (specT .gt.1.0 .and. specT .le. 2.0) then
            deltaC1 = 0.0 + (-0.1-0.0)*(alog(specT)-alog(1.0)) / (alog(2.0)-alog(1.0))
         elseif (specT .gt. 2.0 .and. specT .le. 3.0) then
            deltaC1 = -0.1 + (-0.2+0.1)*(alog(specT)-alog(2.0)) / (alog(3.0)-alog(2.0))
         else
            deltaC1 = -0.2
         endif
         elseif (ftype .eq. 1) then
            deltaC1 = -0.3
         endif
         call BCHydroSub_V3 ( mag, ftype, rupDist, vs, lnY,
     1            sigma, specT, period2, iflag, foreArc, depth, disthypo, deltaC1 )
         attenname1 = 'BCHydroSub_V3, Var. Central DeltaC1'
      endif

C     Base Case Model, Variable DeltaC1 Adjustment - Lower Values, Reg. Sigma
C     Model Number = 361
      if ( jcalc .eq. 361 ) then
c        Determine the DeltaC1 value based on recommended adjusted model and spectral period.
C        Period dependent model for interface events and constant for intraslab
         if (ftype .eq. 0) then
         if (specT .le. 0.3) then
            deltaC1 = 0.0
         elseif (specT .gt. 0.3 .and. specT .le. 0.5) then
            deltaC1 = 0.0 + (-0.1-0.0)*(alog(specT)-alog(0.3)) / (alog(0.5)-alog(0.3))
         elseif (specT .gt. 0.5 .and. specT .le. 1.0) then
            deltaC1 = -0.1 + (-0.2+0.1)*(alog(specT)-alog(0.5)) / (alog(1.0)-alog(0.5))
         elseif (specT .gt.1.0 .and. specT .le. 2.0) then
            deltaC1 = -0.2 + (-0.3+0.2)*(alog(specT)-alog(1.0)) / (alog(2.0)-alog(1.0))
         elseif (specT .gt. 2.0 .and. specT .le. 3.0) then
            deltaC1 = -0.3 + (-0.4+0.3)*(alog(specT)-alog(2.0)) / (alog(3.0)-alog(2.0))
         else
            deltaC1 = -0.4
         endif
         elseif (ftype .eq. 1) then
            deltaC1 = -0.5
         endif
         call BCHydroSub_V3 ( mag, ftype, rupDist, vs, lnY,
     1            sigma, specT, period2, iflag, foreArc, depth, disthypo, deltaC1 )
         attenname1 = 'BCHydroSub_V3, Var. Lower DeltaC1'
      endif

C     Base Case Model, Variable DeltaC1 Adjustment - Upper Values, Reg. Sigma
C     Model Number = 362
      if ( jcalc .eq. 362 ) then
c        Determine the DeltaC1 value based on recommended adjusted model and spectral period.
C        Period dependent model for interface events and constant for intraslab
         if (ftype .eq. 0) then
         if (specT .le. 0.3) then
            deltaC1 = 0.4
         elseif (specT .gt. 0.3 .and. specT .le. 0.5) then
            deltaC1 = 0.4 + (0.3-0.4)*(alog(specT)-alog(0.3)) / (alog(0.5)-alog(0.3))
         elseif (specT .gt. 0.5 .and. specT .le. 1.0) then
            deltaC1 = 0.3 + (0.2-0.3)*(alog(specT)-alog(0.5)) / (alog(1.0)-alog(0.5))
         elseif (specT .gt.1.0 .and. specT .le. 2.0) then
            deltaC1 = 0.2 + (0.1-0.2)*(alog(specT)-alog(1.0)) / (alog(2.0)-alog(1.0))
         elseif (specT .gt. 2.0 .and. specT .le. 3.0) then
            deltaC1 = 0.1 + (0.0-0.1)*(alog(specT)-alog(2.0)) / (alog(3.0)-alog(2.0))
         else
            deltaC1 = 0.0
         endif
         elseif (ftype .eq. 1) then
            deltaC1 = -0.1
         endif
         call BCHydroSub_V3 ( mag, ftype, rupDist, vs, lnY,
     1            sigma, specT, period2, iflag, foreArc, depth, disthypo, deltaC1 )
         attenname1 = 'BCHydroSub_V3, Var. Upper DeltaC1'
      endif

C     Base Case Model, Variable DeltaC1 Adjustment - Central Values, Single Station Sigma
C     Model Number = 363
      if ( jcalc .eq. 363 ) then
c        Determine the DeltaC1 value based on recommended adjusted model and spectral period.
C        Period dependent model for interface events and constant for intraslab
         if (ftype .eq. 0) then
         if (specT .le. 0.3) then
            deltaC1 = 0.2
         elseif (specT .gt. 0.3 .and. specT .le. 0.5) then
            deltaC1 = 0.2 + (0.1-0.2)*(alog(specT)-alog(0.3)) / (alog(0.5)-alog(0.3))
         elseif (specT .gt. 0.5 .and. specT .le. 1.0) then
            deltaC1 = 0.1 + (0.0-0.1)*(alog(specT)-alog(0.5)) / (alog(1.0)-alog(0.5))
         elseif (specT .gt.1.0 .and. specT .le. 2.0) then
            deltaC1 = 0.0 + (-0.1-0.0)*(alog(specT)-alog(1.0)) / (alog(2.0)-alog(1.0))
         elseif (specT .gt. 2.0 .and. specT .le. 3.0) then
            deltaC1 = -0.1 + (-0.2+0.1)*(alog(specT)-alog(2.0)) / (alog(3.0)-alog(2.0))
         else
            deltaC1 = -0.2
         endif
         elseif (ftype .eq. 1) then
            deltaC1 = -0.3
         endif
         call BCHydroSub_V3 ( mag, ftype, rupDist, vs, lnY,
     1            sigma, specT, period2, iflag, foreArc, depth, disthypo, deltaC1 )
C     Changed SSS to 0.60 (January 17, 2014)
         sigma = 0.60
         attenname1 = 'BCHydroSub_V3, Var. Central DeltaC1, SSS'
      endif

C     Base Case Model, Variable DeltaC1 Adjustment - Lower Values, Single Station Sigma
C     Model Number = 364
      if ( jcalc .eq. 364 ) then
c        Determine the DeltaC1 value based on recommended adjusted model and spectral period.
C        Period dependent model for interface events and constant for intraslab
         if (ftype .eq. 0) then
         if (specT .le. 0.3) then
            deltaC1 = 0.0
         elseif (specT .gt. 0.3 .and. specT .le. 0.5) then
            deltaC1 = 0.0 + (-0.1-0.0)*(alog(specT)-alog(0.3)) / (alog(0.5)-alog(0.3))
         elseif (specT .gt. 0.5 .and. specT .le. 1.0) then
            deltaC1 = -0.1 + (-0.2+0.1)*(alog(specT)-alog(0.5)) / (alog(1.0)-alog(0.5))
         elseif (specT .gt.1.0 .and. specT .le. 2.0) then
            deltaC1 = -0.2 + (-0.3+0.2)*(alog(specT)-alog(1.0)) / (alog(2.0)-alog(1.0))
         elseif (specT .gt. 2.0 .and. specT .le. 3.0) then
            deltaC1 = -0.3 + (-0.4+0.3)*(alog(specT)-alog(2.0)) / (alog(3.0)-alog(2.0))
         else
            deltaC1 = -0.4
         endif
         elseif (ftype .eq. 1) then
            deltaC1 = -0.5
         endif
         call BCHydroSub_V3 ( mag, ftype, rupDist, vs, lnY,
     1            sigma, specT, period2, iflag, foreArc, depth, disthypo, deltaC1 )
         sigma = 0.60
         attenname1 = 'BCHydroSub_V3, Var. Lower DeltaC1, SSS'
      endif

C     Base Case Model, Variable DeltaC1 Adjustment - Upper Values, Single Station Sigma
C     Model Number = 365
      if ( jcalc .eq. 365 ) then
c        Determine the DeltaC1 value based on recommended adjusted model and spectral period.
C        Period dependent model for interface events and constant for intraslab
         if (ftype .eq. 0) then
         if (specT .le. 0.3) then
            deltaC1 = 0.4
         elseif (specT .gt. 0.3 .and. specT .le. 0.5) then
            deltaC1 = 0.4 + (0.3-0.4)*(alog(specT)-alog(0.3)) / (alog(0.5)-alog(0.3))
         elseif (specT .gt. 0.5 .and. specT .le. 1.0) then
            deltaC1 = 0.3 + (0.2-0.3)*(alog(specT)-alog(0.5)) / (alog(1.0)-alog(0.5))
         elseif (specT .gt.1.0 .and. specT .le. 2.0) then
            deltaC1 = 0.2 + (0.1-0.2)*(alog(specT)-alog(1.0)) / (alog(2.0)-alog(1.0))
         elseif (specT .gt. 2.0 .and. specT .le. 3.0) then
            deltaC1 = 0.1 + (0.0-0.1)*(alog(specT)-alog(2.0)) / (alog(3.0)-alog(2.0))
         else
            deltaC1 = 0.0
         endif
         elseif (ftype .eq. 1) then
            deltaC1 = -0.1
         endif
         call BCHydroSub_V3 ( mag, ftype, rupDist, vs, lnY,
     1            sigma, specT, period2, iflag, foreArc, depth, disthypo, deltaC1 )
         sigma = 0.60
         attenname1 = 'BCHydroSub_V3, Var. Upper DeltaC1, SSS'
      endif

c ***** Atkinson and Macias (2009) Cascadia Model, NEHRP B/C *****
C     Model Number = 370
      if ( jcalc .eq. 370 ) then
         call AM09_Cas ( mag, rupDist, lnY,
     1            sigma, specT, period2, iflag )
         attenname1 = 'Atkinson&Macias, Cascadia, NEHRP B/C'
      endif

C ******  CEUS Models *********
C
c ***** Atkinson and Boore Models *****
c     Atkinson and Boore (1994) - Horizontal, EUS Hard Rock
C     Model Number = 100
      if ( jcalc .eq. 100 ) then
         call AB95 ( mag, rupdist, lnY, sigma, specT,
     1            attenName1, period2,iflag )
         attenname1 = 'Atkinson&Boore 1994, EUS, Rock'
         lnY = lnY + efac
      endif

c     Atkinson and Boore (1994), Horizontal, EUS Hard Rock, magnitude Nuttli
C     Model Number = 101
      if ( jcalc .eq. 101 ) then
C         Convert Nuttli magnitude to Moment magnitude.
          if (mag .le. 5.5) then
            mag1 = -0.39 + 0.98*mag
          else
            mag1 = 2.715 - 0.277*mag + 0.127*mag*mag
          endif
          call AB95Mn ( mag1, rupdist, lnY, sigma, specT,
     1            attenName1, period2,iflag )
          attenname1 = 'Atkinson&Boore 1994, EUS, Rock, Nuttli Mag'
         lnY = lnY + efac
      endif

c     Atkinson and Boore (2006) - Horizontal, EUS Hard Rock
C     Model Number = 102
      if ( jcalc .eq. 102 ) then
         call AB06 ( mag, rupdist, lnY, sigma, specT,
     1            period2,iflag )
         attenname1 = 'Atkinson&Boore 2006, EUS, Hard Rock'
         lnY = lnY + efac
      endif

c     Atkinson and Boore (2006) - Horizontal, EUS Vs=760m/sec
C     Model Number = 103
      if ( jcalc .eq. 103 ) then
         call AB06vs760 ( mag, rupdist, lnY, sigma, specT,
     1            period2,iflag )
         attenname1 = 'Atkinson&Boore 2006, EUS, Vs=760m/sec'
         lnY = lnY + efac
      endif

c     Atkinson (2008, weighted C0) - Horizontal, CEUS-NGA nga Vs=760m/sec
C     Model Number = 104
      if ( jcalc .eq. 104 ) then
c     First call BA08 to get ground motion values which will be adjusted.
         vs = 760.0
         call BA_NGA_2008 ( mag, jbdist, specT,
     1                    period2, BA08lnY, sigma, iflag, vs, ftype, pga4nl,
     1                    phi, tau )
C     Now Call A08vs760 to adjust BA08 NGA value to CEUS Vs=760 value.
         call A08vs760 ( mag, jbdist, specT, BA08lnY,
     1                    period2, lnY, sigma, iflag )
         attenname1 = 'Atkinson 2008 wt C0, EUS-NGA BA08, Vs=760m/sec'
         lnY = lnY + efac
      endif

c     Atkinson and Boore (2006) with Atikinson (2010) stress drop adjustment - Horizontal, EUS Hard Rock
C     Model Number = 105
      if ( jcalc .eq. 105 ) then
         call AB06 ( mag, rupdist, lnY, sigma, specT,
     1            period2,iflag )
C     Now apply compute the SF2 factor from the AB06 model.
         call AB06SF2 (mag, specT, period2, SF2)
c     Now compute the scale factor for different magnitude dependent stress drops.
         sd = 10**(3.45 - 0.2*mag)
         sdscale = log10(sd/140.0)/log10(2.0)
         attenname1 = 'Atkinson&Boore 2006/Atkinson2010, EUS, Hard Rock'
         LnY = lnY + sdscale*SF2*alog(10.0) + efac
      endif

c     Atkinson and Boore (2006) with Atikinson (2010) stress drop adjustment - Horizontal, EUS Vs760m/sec
C     Model Number = 106
      if ( jcalc .eq. 106 ) then
         call AB06vs760 ( mag, rupdist, lnY, sigma, specT,
     1            period2,iflag )
C     Now apply compute the SF2 factor from the AB06 model.
         call AB06SF2 (mag, specT, period2, SF2)
c     Now compute the scale factor for different magnitude dependent stress drops.
         sd = 10**(3.45 - 0.2*mag)
         sdscale = log10(sd/140.0)/log10(2.0)
         attenname1 = 'Atkinson&Boore 2006/Atkinson2010, EUS, Vs760m/s'
         LnY = lnY + sdscale*SF2*alog(10.0) + efac
      endif

c     Atkinson (2010) - Horizontal, CEUS-NGA NGA Based
C     Model Number = 107
      if ( jcalc .eq. 107 ) then
c     First call BA08 to get ground motion values which will be adjusted.
         call BA_NGA_2008 ( mag, jbdist, specT,
     1                    period2, BA08lnY, sigma, iflag, vs, ftype, pga4nl,
     1                    phi, tau )
C     Apply small magnitude adjustment is Mag<=5.75.
         if (mag .le. 5.75 ) then
            a = max(0.0, 3.888 - 0.674*mag)
            b = max(0.0, 2.933 - 0.510*mag)
            factor = a - b*log10(jbdist+10.0)
            factor = factor*alog(10.0)
         endif
C     Now apply Fena adjustment as given in Atkinson (2010).
         call Fena ( jbdist, specT, facFena )
         attenname1 = 'Atkinson 2010, EUS-NGA BA08 based'
         lnY =  BA08lnY + factor + FacFena + efac
      endif

c     Atkinson (2008, average C0) - Horizontal, CEUS-NGA nga Vs=760m/sec
C     Model Number = 108
      if ( jcalc .eq. 108 ) then
c     First call BA08 to get ground motion values which will be adjusted.
         vs = 760.0
         call BA_NGA_2008 ( mag, jbdist, specT,
     1                    period2, BA08lnY, sigma, iflag, vs, ftype, pga4nl,
     1                    phi, tau )
C     Now Call A08vs760 to adjust BA08 NGA value to CEUS Vs=760 value.
         call A08vs760C0 ( mag, jbdist, specT, BA08lnY,
     1                    period2, lnY, sigma, iflag )
         attenname1 = 'Atkinson 2008 avg C0, EUS-NGA BA08, Vs=760m/sec'
         lnY = lnY + efac
      endif

c     Atkinson and Boore (2006) with 2x stress drop adjustment (280bars) - Horizontal, EUS Hard Rock
C     Model Number = 130
      if ( jcalc .eq. 130 ) then
         call AB06 ( mag, rupdist, lnY, sigma, specT,
     1            period2,iflag )
C     Now apply compute the SF2 factor from the AB06 model.
         call AB06SF2 (mag, specT, period2, SF2)
c     Now compute the scale factor for different magnitude dependent stress drops.
         sd = 280.0
         sdscale = log10(sd/140.0)/log10(2.0)
         attenname1 = 'Atkinson&Boore 2006 (2x) StressDrop, EUS, Hard Rock'
         LnY = lnY + sdscale*SF2*alog(10.0) + efac
      endif

c     Atkinson and Boore (2006) with 0.5x stress drop adjustment (70bars) - Horizontal, EUS Hard Rock
C     Model Number = 131
      if ( jcalc .eq. 131 ) then
         call AB06 ( mag, rupdist, lnY, sigma, specT,
     1            period2,iflag )
C     Now apply compute the SF2 factor from the AB06 model.
         call AB06SF2 (mag, specT, period2, SF2)
c     Now compute the scale factor for different magnitude dependent stress drops.
         sd = 70.0
         sdscale = log10(sd/140.0)/log10(2.0)
         attenname1 = 'Atkinson&Boore 2006 (0.5x) StressDrop, EUS, Hard Rock'
         LnY = lnY + sdscale*SF2*alog(10.0) + efac
      endif

c ******* Toro et al. Models *******
C Toro et al. (1997) MidCon., Horizontal, Rock
C     Model Number = 110
      if (jcalc .eq. 110) then
         call TAS96 ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag )
         attenname1 = 'Toro et al. (1997), Horizontal, MidCon.'
         lnY = lnY + efac
      endif

C Toro et al. (1997) MidCon., Horizontal, Rock, MLg magnitude
C     Model Number = 111
      if (jcalc .eq. 111) then
         call TAS96MLg ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag)
         attenname1 = 'Toro et al. (1997), Horizontal, MidCon., MLg'
         lnY = lnY + efac
      endif

C Toro et al. (1997) Gulf, Horizontal, Rock
C     Model Number = 112
      if (jcalc .eq. 112) then
         call TAS96Gulf ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag )
         attenname1 = 'Toro et al. (1997), Horizontal, Gulf'
         lnY = lnY + efac
      endif

C Toro et al. (1997) Gulf, Horizontal, Rock, MLg magnitude
C     Model Number = 113
      if (jcalc .eq. 113) then
         call TAS96GulfMLg ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag )
         attenname1 = 'Toro et al. (1997), Horizontal, Gulf, MLg'
         lnY = lnY + efac
      endif

c ******* Campbell Hybrid CEUS Models *******
C Campbell (2003) Hybrid CEUS Horizontal, Hard Rock
C     Model Number = 120
      if (jcalc .eq. 120) then
         call CHY03 ( mag, rupdist, lnY, sigma, specT,
     1                  period2,iflag )
         attenname1 = 'Campbell (2003), Hor., CEUS-Hybrid, Hard Rock'
         lnY = lnY + efac
      endif

c ******* Campbell Hybrid CEUS Models *******
C Campbell (2003) Hybrid CEUS Horizontal minus SigmaEps, Hard Rock
C     Model Number = 121
      if (jcalc .eq. 121) then
         call CHY03 ( mag, rupdist, lnY, sigma, specT,
     1                  period2,iflag )
         call CHY03Eps ( mag, rupdist, sigmaeps, specT, period2, iflag )
         attenname1 = 'Campbell (2003), Hor - SigmaEps, CEUS-Hybrid, Hard Rock'
         lnY = lnY - sigmaEps + efac
      endif

c ******* Campbell Hybrid CEUS Models *******
C Campbell (2003) Hybrid CEUS Horizontal plus SigmaEps, Hard Rock
C     Model Number = 122
      if (jcalc .eq. 122) then
         call CHY03 ( mag, rupdist, lnY, sigma, specT,
     1                  period2,iflag )
         call CHY03Eps ( mag, rupdist, sigmaeps, specT, period2, iflag )
         attenname1 = 'Campbell (2003), Hor + SigmaEps, CEUS-Hybrid, Hard Rock'
         lnY = lnY + sigmaEps + efac
      endif

c ******* PE&A CEUS Models *******
C Silva et al. (2002) 2 Corner, Rock
C     Model Number = 401
      if (jcalc .eq. 401) then
         call PEA2C ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag )
         attenname1 = 'Silva et al. (2002), 2-Corner, Horizontal'
         lnY = lnY + efac
      endif

C New PE&A CEUS Models
C Silva et al. (2002) 2 Corner-Saturation, Rock
C     Model Number = 402
      if (jcalc .eq. 402) then
         call PEA2CS ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag )
         attenname1 = 'Silva et al. (2002), 2-Corner-Sat, Horizontal'
         lnY = lnY + efac
      endif

C New PE&A CEUS Models
C Silva et al. (2002) 1 Corner Variable-High, Rock
C     Model Number = 403
      if (jcalc .eq. 403) then
         call PEA1CVH ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag )
         attenname1 = 'Silva et al. (2002), 1-Corner-Var-High, Horizontal'
         lnY = lnY + efac
      endif

C New PE&A CEUS Models
C Silva et al. (2002) 1 Corner Variable-Medium, Rock
C     Model Number = 404
      if (jcalc .eq. 404) then
         call PEA1CVM ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag )
         attenname1 = 'Silva et al. (2002), 1-Corner-Var-Med, Horizontal'
         lnY = lnY + efac
      endif

C New PE&A CEUS Models
C Silva et al. (2002) 1 Corner Variable-Low, Rock
C     Model Number = 405
      if (jcalc .eq. 405) then
         call PEA1CVL ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag )
         attenname1 = 'Silva et al. (2002), 1-Corner-Var-Low, Horizontal'
         lnY = lnY + efac
      endif

C New PE&A CEUS Models
C Silva et al. (2002) 1 Corner Constant-High, Rock
C     Model Number = 406
      if (jcalc .eq. 406) then
         call PEA1CCH ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag )
         attenname1 = 'Silva et al. (2002), 1-Corner-Const-High, Horizontal'
         lnY = lnY + efac
      endif

C New PE&A CEUS Models
C Silva et al. (2002) 1 Corner Constant-Medium, Rock
C     Model Number = 407
      if (jcalc .eq. 407) then
         call PEA1CCM ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag )
         attenname1 = 'Silva et al. (2002), 1-Corner-Const-Med, Horizontal'
         lnY = lnY + efac
      endif

C New PE&A CEUS Models
C Silva et al. (2002) 1 Corner Constant-Low, Rock
C     Model Number = 408
      if (jcalc .eq. 408) then
         call PEA1CCL ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag )
         attenname1 = 'Silva et al. (2002), 1-Corner-Const-Low, Horizontal'
         lnY = lnY + efac
      endif

C New PE&A CEUS Models
C Silva et al. (2002) 1 Corner Constant-High-Sat, Rock
C     Model Number = 409
      if (jcalc .eq. 409) then
         call PEA1CCHS ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag )
         attenname1 = 'Silva et al. (2002), 1-Corner-Const-High-Sat, Horizontal'
         lnY = lnY + efac
      endif

C New PE&A CEUS Models
C Silva et al. (2002) 1 Corner Constant-Med-Sat, Rock
C     Model Number = 410
      if (jcalc .eq. 410) then
         call PEA1CCMS ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag )
         attenname1 = 'Silva et al. (2002), 1-Corner-Const-Med-Sat, Horizontal'
         lnY = lnY + efac
      endif

C New PE&A CEUS Models
C Silva et al. (2002) 1 Corner Constant-Low-Sat, Rock
C     Model Number = 411
      if (jcalc .eq. 411) then
         call PEA1CCLS ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag )
         attenname1 = 'Silva et al. (2002), 1-Corner-Const-Low-Sat, Horizontal'
         lnY = lnY + efac
      endif

C New PE&A CEUS Gulf Models
C Silva et al. (2002) 2 Corner, Rock, Gulf
C     Model Number = 501
      if (jcalc .eq. 501) then
         call PEAG2C ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag )
         attenname1 = 'Silva et al. (2002), 2-Corner, Hor. Gulf'
         lnY = lnY + efac
      endif

C New PE&A CEUS Models
C Silva et al. (2002) 2 Corner-Saturation, Rock, Gulf
C     Model Number = 502
      if (jcalc .eq. 502) then
         call PEAG2CS ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag )
         attenname1 = 'Silva et al. (2002), 2-Corner-Sat, Hor. Gulf'
         lnY = lnY + efac
      endif

C New PE&A CEUS Models
C Silva et al. (2002) 1 Corner Variable-High, Rock, Gulf
C     Model Number = 503
      if (jcalc .eq. 503) then
         call PEAG1CVH ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag )
         attenname1 = 'Silva et al. (2002), 1-Corner-Var-High, Hor. Gulf'
         lnY = lnY + efac
      endif

C New PE&A CEUS Models
C Silva et al. (2002) 1 Corner Variable-Medium, Rock, Gulf
C     Model Number = 504
      if (jcalc .eq. 504) then
         call PEAG1CVM ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag )
         attenname1 = 'Silva et al. (2002), 1-Corner-Var-Med, Hor. Gulf'
         lnY = lnY + efac
      endif

C New PE&A CEUS Models
C Silva et al. (2002) 1 Corner Variable-Low, Rock, Gulf
C     Model Number = 505
      if (jcalc .eq. 505) then
         call PEAG1CVL ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag )
         attenname1 = 'Silva et al. (2002), 1-Corner-Var-Low, Hor. Gulf'
         lnY = lnY + efac
      endif

C New PE&A CEUS Models
C Silva et al. (2002) 1 Corner Constant-High, Rock, Gulf
C     Model Number = 506
      if (jcalc .eq. 506) then
         call PEAG1CCH ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag )
         attenname1 = 'Silva et al. (2002), 1-Corner-Const-High, Hor. Gulf'
         lnY = lnY + efac
      endif

C New PE&A CEUS Models
C Silva et al. (2002) 1 Corner Constant-Medium, Rock, Gulf
C     Model Number = 507
      if (jcalc .eq. 507) then
         call PEAG1CCM ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag )
         attenname1 = 'Silva et al. (2002), 1-Corner-Const-Med, Hor. Gulf'
         lnY = lnY + efac
      endif

C New PE&A CEUS Models
C Silva et al. (2002) 1 Corner Constant-Low, Rock, Gulf
C     Model Number = 508
      if (jcalc .eq. 508) then
         call PEAG1CCL ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag )
         attenname1 = 'Silva et al. (2002), 1-Corner-Const-Low, Hor. Gulf'
         lnY = lnY + efac
      endif

C New PE&A CEUS Models
C Silva et al. (2002) 1 Corner Constant-High-Sat, Rock, Gulf
C     Model Number = 509
      if (jcalc .eq. 509) then
         call PEAG1CCHS ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag )
         attenname1 = 'Silva et al. (2002), 1-Corner-Const-High-Sat, Hor. Gulf'
         lnY = lnY + efac
      endif

C New PE&A CEUS Models
C Silva et al. (2002) 1 Corner Constant-Med-Sat, Rock, Gulf
C     Model Number = 510
      if (jcalc .eq. 510) then
         call PEAG1CCMS ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag )
         attenname1 = 'Silva et al. (2002), 1-Corner-Const-Med-Sat, Hor. Gulf'
         lnY = lnY + efac
      endif

C New PE&A CEUS Models
C Silva et al. (2002) 1 Corner Constant-Low-Sat, Rock, Gulf
C     Model Number = 511
      if (jcalc .eq. 511) then
         call PEAG1CCLS ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag )
         attenname1 = 'Silva et al. (2002), 1-Corner-Const-Low-Sat, Hor. Gulf'
         lnY = lnY + efac
      endif

C *****  Misc Models ******
c     McVerry et al (1993) new zealand
C     Model Number = 300
      if ( jcalc .eq. 300 .and. specT .eq. 0.0 ) then
        call mcverry93 ( mag, rupDist, lnY, sigma, attenName1,
     1       ftype )
          period2 = 0.0
          iflag = 0
         lnY = lnY + efac
      elseif ( jcalc .eq. 300 .and. specT .ne. 0.0) then
C          write (*,*) 'McVerry (1993), Horizontal, Rock'
C          write (*,*) 'not defined for spectral acclereation!!!'
C          write (*,*) 'Check input file.'
          return
      endif

c     fukushima (1990) rock
C     Model Number = 301
      if ( jcalc .eq. 301 .and. specT .eq. 0.0 ) then
          call fukushima90 ( mag, rupDist, lnY, sigma, attenName1)
          period2 = 0.0
          iflag = 0
         lnY = lnY + efac
      elseif (jcalc .eq. 301 .and. specT .ne. 0.0) then
C          write (*,*) 'Fukushima (1990), Horizontal, Rock'
C          write (*,*) 'not defined for spectral acclereation!!!'
C          write (*,*) 'Check input file.'
          return
      endif

c     Loh high speed rail (New Joyner-Boore form)
C     Model Number = 302
      if ( jcalc .eq. 302 .and. specT .eq. 0.0 ) then
         call HighSpeedRail ( mag, rupDist, lnY, sigma,
     1                      attenName1, period2 )
         iflag = 0
         lnY = lnY + efac
      elseif (jcalc .eq. 302 .and. specT .ne. 0.0 ) then
C         write (*,*) 'Loh High Speed Rail, Horizontal, Rock'
C         write (*,*) 'not defined for spectral acclereation!!!'
C         write (*,*) 'Check input file.'
         return
      endif

c     New Loh (1996) model (unpublished)
C     Model Number = 303
      if ( jcalc .eq. 303 .and. specT .eq. 0.0) then
         call Loh96 ( mag, rupDist, lnY, sigma, attenName1, period2)
         iflag = 0
         lnY = lnY + efac
      elseif (jcalc .eq. 303 .and. specT .ne. 0.0 ) then
C         write (*,*) 'Loh (1996), Horizontal, Rock'
C         write (*,*) 'not defined for spectral acclereation!!!'
C         write (*,*) 'Check input file.'
         return
      endif

c ******* Ambraseys et al 2005 Model *********
C     Model Number = 601
      if ( jcalc .eq. 601 ) then
         call Ambraseys_2005 ( mag, jbDist, ftype, specT,
     1                     period2, lnY, sigma, iflag )
         attenname1 = 'Ambraseys_et_al_2005_Hor'
         lnY = lnY + efac
      endif


C     **** BCHydro SCR attenuation models adjusted for Vs=760m/sec ****

c     Atkinson and Boore (2006) - Horizontal, CEUS with BC Hydro Amps for Vs=760m/s
C     Model Number = 1020
      if ( jcalc .eq. 1020 ) then
         call AB06 ( mag, rupdist, lnY, sigma, specT,
     1            period2,iflag )
         call BCHHR2Vs760 ( lnY, specT, lnSa )
         attenname1 = 'Atkinson&Boore 2006, EUS, BCH Amps for Vs760m/s'
         lnY = lnSa + efac
      endif

c     Atkinson and Boore (2006) with Atikinson (2010) stress drop adjustment - Horizontal, EUS BCH Amps for Vs760m/s
C     Model Number = 1050
      if ( jcalc .eq. 1050 ) then
         call AB06 ( mag, rupdist, lnY, sigma, specT,
     1            period2,iflag )
C     Now apply compute the SF2 factor from the AB06 model.
         call AB06SF2 (mag, specT, period2, SF2)
c     Now compute the scale factor for different magnitude dependent stress drops.
         sd = 10**(3.45 - 0.2*mag)
         sdscale = log10(sd/140.0)/log10(2.0)
         attenname1 = 'Atkinson&Boore 2006/Atkinson2010, EUS, BCH Amps for Vs760m/s'
         LnY = lnY + sdscale*SF2*alog(10.0) + efac
         call BCHHR2Vs760 ( lnY, specT, lnSa )
         LnY = LnSa
      endif

c     Atkinson and Boore (2006) with 2x stress drop adjustment (280bars) - Horizontal, EUS with BC Hydro Amps for Vs=760m/s
C     Model Number = 1300
      if ( jcalc .eq. 1300 ) then
         call AB06 ( mag, rupdist, lnY, sigma, specT,
     1            period2,iflag )
C     Now apply compute the SF2 factor from the AB06 model.
         call AB06SF2 (mag, specT, period2, SF2)
c     Now compute the scale factor for different magnitude dependent stress drops.
         sd = 280.0
         sdscale = log10(sd/140.0)/log10(2.0)
         attenname1 = 'Atkinson&Boore 2006 (2x) StressDrop, EUS, BCH Amps for Vs760'
         LnY = lnY + sdscale*SF2*alog(10.0) + efac
         call BCHHR2Vs760 ( lnY, specT, lnSa )
         LnY = LnSa
      endif

c     Atkinson and Boore (2006) with 0.5x stress drop adjustment (70bars) - Horizontal, EUS with BC Hydro Amps for Vs=760m/s
C     Model Number = 1310
      if ( jcalc .eq. 1310 ) then
         call AB06 ( mag, rupdist, lnY, sigma, specT,
     1            period2,iflag )
C     Now apply compute the SF2 factor from the AB06 model.
         call AB06SF2 (mag, specT, period2, SF2)
c     Now compute the scale factor for different magnitude dependent stress drops.
         sd = 70.0
         sdscale = log10(sd/140.0)/log10(2.0)
         attenname1 = 'Atkinson&Boore 2006 (0.5x) StressDrop, EUS, BCH Amps for Vs760'
         LnY = lnY + sdscale*SF2*alog(10.0) + efac
         call BCHHR2Vs760 ( lnY, specT, lnSa )
         LnY = LnSa
      endif

c ******* Campbell Hybrid CEUS Models *******
C Campbell (2003) Hybrid CEUS Horizontal, BCH Amps for Vs760m/s
C     Model Number = 1200
      if (jcalc .eq. 1200) then
         call CHY03 ( mag, rupdist, lnY, sigma, specT,
     1                  period2,iflag )
         call BCHHR2Vs760 ( lnY, specT, lnSa )
         attenname1 = 'Campbell (2003), Hor., CEUS-Hybrid, BCH Amps for Vs760m/s'
         lnY = lnSa + efac
      endif

c ******* Campbell Hybrid CEUS Models *******
C Campbell (2003) Hybrid CEUS Horizontal minus SigmaEps, BCH Amps for Vs760m/s
C     Model Number = 1210s
      if (jcalc .eq. 1210) then
         call CHY03 ( mag, rupdist, lnY, sigma, specT,
     1                  period2,iflag )
         call CHY03Eps ( mag, rupdist, sigmaeps, specT, period2, iflag )
         attenname1 = 'Campbell (2003), Hor - SigmaEps, CEUS-Hybrid, BCH Amps for Vs760m/s'
         lnY = lnY - sigmaEps + efac
         call BCHHR2Vs760 ( lnY, specT, lnSa )
         LnY = LnSa
      endif

c ******* Campbell Hybrid CEUS Models *******
C Campbell (2003) Hybrid CEUS Horizontal plus SigmaEps, BCH Amps for Vs760m/s
C     Model Number = 1220
      if (jcalc .eq. 1220) then
         call CHY03 ( mag, rupdist, lnY, sigma, specT,
     1                  period2,iflag )
         call CHY03Eps ( mag, rupdist, sigmaeps, specT, period2, iflag )
         attenname1 = 'Campbell (2003), Hor + SigmaEps, CEUS-Hybrid, BCH Amps for Vs760m/s'
         lnY = lnY + sigmaEps + efac
         call BCHHR2Vs760 ( lnY, specT, lnSa )
         LnY = LnSa
      endif

C New PE&A CEUS Models
C Silva et al. (2002) 1 Corner Variable-High, BCH Amps for Vs760m/s
C     Model Number = 4030
      if (jcalc .eq. 4030) then
         call PEA1CVH ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag )
         call BCHHR2Vs760 ( lnY, specT, lnSa )
         attenname1 = 'Silva et al. (2002), 1-Corner-Var-High, Hor,BCH Amps for Vs760m/s'
         lnY = lnSA + efac
      endif

C New PE&A CEUS Models
C Silva et al. (2002) 1 Corner Variable-Medium, BCH Amps for Vs760m/s
C     Model Number = 4040
      if (jcalc .eq. 4040) then
         call PEA1CVM ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag )
         call BCHHR2Vs760 ( lnY, specT, lnSa )
         attenname1 = 'Silva et al. (2002), 1-Corner-Var-Med, Hor,BCH Amps for Vs760m/s'
         lnY = lnSa + efac
      endif

C New PE&A CEUS Models
C Silva et al. (2002) 1 Corner Variable-Low, BCH Amps for Vs760m/s
C     Model Number = 4050
      if (jcalc .eq. 4050) then
         call PEA1CVL ( mag, jbdist, lnY, sigma, specT,
     1                  attenName1, period2,iflag )
         call BCHHR2Vs760 ( lnY, specT, lnSa )
         attenname1 = 'Silva et al. (2002), 1-Corner-Var-Low, Hor,BCH Amps for Vs760m/s'
         lnY = lnSa + efac
      endif

C     **** End of BCHydro SCR attenuation models adjusted for Vs=760m/sec ****

C     Akkar and Cayan (2010) - "A Local Ground-Motion Predictive Model for Turkey, and
C           its Comparison with Other Regional and Global Ground-Motion Models"
C     BSSA: Vol. 100, No.6, pp. 2978-2995.
C     Model Number = 150
      if ( jcalc .eq. 150 ) then
         call AC_2010 ( mag, jbdist, specT,
     1                    period2, lnY, sigma, iflag, vs, ftype, pga4nl )
         attenname1 = 'Akkar&Cagan_2010_Hor'
         lnY = lnY + efac
       endif

C     Akkar and Bommer (2010) - "Empirical Equations for the Prediction of PGA, PGV,
C             and Spectral Accelerations in Europe, the Mediterranean Region and
C             the Middle East"
C     SRL: March/April, Vol.81, pp. 195-206
C     Rock Site conditions Vs>750m/s
C     Model Number = 151
      if ( jcalc .eq. 151 ) then
         Ss = 0.0
         Sa = 0.0
         call AB_2010 ( mag, jbdist, specT,
     1                    period2, lnY, sigma, iflag, ftype, Ss, Sa )
         attenname1 = 'Akkar&Bommer_2010_Hor, Rock'
         lnY = lnY + efac
       endif

C     Stiff Soils Site conditions 360<Vs<750m/s
C     Model Number = 152
      if ( jcalc .eq. 152 ) then
         Ss = 0.0
         Sa = 1.0
         call AB_2010 ( mag, jbdist, specT,
     1                    period2, lnY, sigma, iflag, ftype, Ss, Sa )
         attenname1 = 'Akkar&Bommer_2010_Hor, Stiff Soil'
         lnY = lnY + efac
       endif
C     Soft Soil Site conditions Vs<360m/s
C     Model Number = 153
      if ( jcalc .eq. 153 ) then
         Ss = 1.0
         Sa = 0.0
         call AB_2010 ( mag, jbdist, specT,
     1                    period2, lnY, sigma, iflag, ftype, Ss, Sa )
         attenname1 = 'Akkar&Bommer_2010_Hor, Soft Soil'
         lnY = lnY + efac
       endif

C     Akkar, Sandikkaya, and Bommer (2013) - "Empirical ground-motion models for
C             point- and extended-source crustal earthquake scenarios in
C             Europe and the Middle East"
C     Bull Earthquake Engineering: May 31, 2013
C         Applicable Range:
C            Mw = 4 - 8
C            Distance < 200km
C            Vs = 150 - 1200 (Note site response is constant for Vs>1000)
C                Reference Vs = 750m/s
C            Horizontal is Geomean
C            Defined for PGA, 0.01 - 4.0 sec and PGV
C     Model Number = 154
      if ( jcalc .eq. 154 ) then
         call ASB_2013 ( mag, jbdist, specT,
     1                    period2, lnY, sigma, iflag, ftype, Vs, phi, tau )
         attenname1 = 'Akkar,Sandikkaya&Bommer_2013_Hor'
         lnY = lnY + efac
       endif





c ******* Bradley (2010) *********
C     Bradley (2010) - "NZ-Specific Psuedo-Spectral Acceleration Ground
C         Motion Prediction Equation Based on Foreign Models"
C     University of Canterbury Research Report 2010-03
C     Model Number = 160
      if ( jcalc .eq. 160 ) then
         call Bradley_2010 ( mag, rupDist, jbdist, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, dip1(1), Depthtop, Ftype,
     3                     depthvs10, hwflag, Rx )
         attenname1 = 'Bradley-2010, Hor'
         lnY = lnY + efacs
       endif

c ******* McVerry et al. (2006) Crustal Events, Horizontal *********
C     McVerry, G. H., J. X. Zhao, N.A. Abrahamson and P.G. Somerville (2006)
C        "New Zealand Acceleration Response Spectrum Attenuation
C         Reations for Crustal and Subduction Zone Earthquakes",
C         Bulletin New Zealand Society for Earthquake Engineering, Vol. 39,
C         No. 1, pp. 1 - 58.
C     Model Number = 140, Site Class A/B
      if ( jcalc .eq. 140 ) then
         Sc = 0.0
         Sd = 0.0
         call McVerry_Crustal_2006 ( mag, rupDist, specT,
     1                     period2, lnY, sigma, iflag, Ftype,
     3                     hwflag, Sc, Sd)
         attenname1 = 'McVerryetal-Crustal-2006, Hor, Site A/B'
         lnY = lnY + efacs
       endif
C     Model Number = 141, Site Class C
      if ( jcalc .eq. 141 ) then
         Sc = 1.0
         Sd = 0.0
         call McVerry_Crustal_2006 ( mag, rupDist, specT,
     1                     period2, lnY, sigma, iflag, Ftype,
     3                     hwflag, Sc, Sd)
         attenname1 = 'McVerryetal-Crustal-2006, Hor, Site C'
         lnY = lnY + efacs
       endif
C     Model Number = 142, Site Class D
      if ( jcalc .eq. 142 ) then
         Sc = 0.0
         Sd = 1.0
         call McVerry_Crustal_2006 ( mag, rupDist, specT,
     1                     period2, lnY, sigma, iflag, Ftype,
     3                     hwflag, Sc, Sd)
         attenname1 = 'McVerryetal-Crustal-2006, Hor, Site D'
         lnY = lnY + efacs
       endif

c ******* Bindi et al. (2009) Crustal Events, Horizontal *********
C     Bindi, D., L. Luzi, M. Massa, and F. Pacor (2009). "Horizontal and Vertical
C          ground motion prediction equaitons derived from the Italian
C          Accelerometric Archive (ITACA)", Bull. Earthquake Eng.,
C          DOI 10.1007/s10518-009-9130-9
C      Note: Only the horizontal model is currently coded and the coefficients
C            independent of fault mechanism as preferred by the authors. Coefficients
C            are for the model as a function of JBDist.
C     Model Number = 95, Rock, Horizontal
      if ( jcalc .eq. 95 ) then
         Sr = 1.0
         Ss = 0.0
         Sd = 0.0
         call Bindi_Hor_2009 ( mag, jbdist, specT,
     1                     period2, lnY, sigma, iflag, Sr, Ss, Sd )
         attenname1 = 'Bindietal-Hor-2009, Rock'
         lnY = lnY + efacs
       endif
C     Model Number = 96, Shallow Alluvium
      if ( jcalc .eq. 96 ) then
         Sr = 0.0
         Ss = 1.0
         Sd = 0.0
         call Bindi_Hor_2009 ( mag, jbdist, specT,
     1                     period2, lnY, sigma, iflag, Sr, Ss, Sd )
         attenname1 = 'Bindietal-Hor-2009, Shallow Alluvium'
         lnY = lnY + efacs
       endif
C     Model Number = 97, Deep Alluvium
      if ( jcalc .eq. 97 ) then
         Sr = 0.0
         Ss = 0.0
         Sd = 1.0
         call Bindi_Hor_2009 ( mag, jbdist, specT,
     1                     period2, lnY, sigma, iflag, Sr, Ss, Sd )
         attenname1 = 'Bindietal-Hor-2009, Deep Alluvium'
         lnY = lnY + efacs
       endif

c ******* Bindi et al. (2011) Crustal Events, Horizontal *********
C     Bindi, D., F. Pacor, L. Luzi, R. Puglia, M. Massa, G. Ameri and R. Paolucci (2011).
C          "Ground motion prediction equations derived from the Italian
C          strong motion database."
C          Bull. Earthquake Eng, Vol. 9, pp. 1899-1920. uake Eng.,
C          DOI 10.1007/s10518-011-9313-z
C       Dataset is for 4.1 < M < 6.9 and distance less than 200km.
C       Model is considered an update of the Bindi (2009) model
C          change in site conditions classes from 2009 to 2011 with new model
C          being consistent with Eurocode 8 Site Classes:
C             Class A: Vs>800m/s
C             Class B: Vs>360-800m/s
C             Class C: Vs>180-360m/s
C             Class D: Vs<180-800m/s
C             Class E: 5-20m of C or D type alluvium underlain by stiffer material with Vs>800m/s
C
C     Model Number = 195, Horizontal, Class A (Vs>800m/s)
      if ( jcalc .eq. 195 ) then
         SCa = 1.0
         SCb = 0.0
         SCc = 0.0
         SCd = 0.0
         SCe = 0.0
         call Bindi_Hor_2011 ( mag, jbdist, ftype, specT,
     1                     period2, lnY, sigma, iflag, SCa, SCb, SCc, SCD, SCe, phi, tau )
         attenname1 = 'Bindietal-Hor-2011, Class A(Vs>800m/s)'
         lnY = lnY + efacs
       endif
C     Model Number = 196, Class B (Vs=360-800m/s)
      if ( jcalc .eq. 196 ) then
         SCa = 0.0
         SCb = 1.0
         SCc = 0.0
         SCd = 0.0
         SCe = 0.0
         call Bindi_Hor_2011 ( mag, jbdist, ftype, specT,
     1                     period2, lnY, sigma, iflag, SCa, SCb, SCc, SCD, SCe, phi, tau )
         attenname1 = 'Bindietal-Hor-2011, Class B(360<Vs<800m/s)'
         lnY = lnY + efacs
       endif

C     Model Number = 197, Class C (Vs=180-360m/s)
      if ( jcalc .eq. 197) then
         SCa = 0.0
         SCb = 0.0
         SCc = 1.0
         SCd = 0.0
         SCe = 0.0
         call Bindi_Hor_2011 ( mag, jbdist, ftype, specT,
     1                     period2, lnY, sigma, iflag, SCa, SCb, SCc, SCD, SCe, phi, tau )
         attenname1 = 'Bindietal-Hor-2011, Class C(180<Vs<360m/s)'
         lnY = lnY + efacs
       endif

C     Model Number = 198, Class D (Vs<180)
      if ( jcalc .eq. 198) then
         SCa = 0.0
         SCb = 0.0
         SCc = 0.0
         SCd = 1.0
         SCe = 0.0
         call Bindi_Hor_2011 ( mag, jbdist, ftype, specT,
     1                     period2, lnY, sigma, iflag, SCa, SCb, SCc, SCD, SCe, phi, tau )
         attenname1 = 'Bindietal-Hor-2011, Class D(Vs<180)'
         lnY = lnY + efacs
       endif

C     Model Number = 199, Class E (Vs=180-360m/s)
      if ( jcalc .eq. 199) then
         SCa = 0.0
         SCb = 0.0
         SCc = 0.0
         SCd = 0.0
         SCe = 1.0
         call Bindi_Hor_2011 ( mag, jbdist, ftype, specT,
     1                     period2, lnY, sigma, iflag, SCa, SCb, SCc, SCD, SCe, phi, tau )
         attenname1 = 'Bindietal-Hor-2011, Class E(5-20m Class D/E over ClassA)'
         lnY = lnY + efacs
       endif

c ******* Bindi et al. (2013) Crustal Events, Horizontal *********
C     Bindi, D., M. Massa, L. Luzi, G. Ameri, R. Puglia, and P. Augliera (2013).
C          "Pan-European Ground-Motion Prediction Equations for the Average
C           Horizontal Component of PGA, PGV, and 5%-Damped PSA at Spectral
C           Periods up to 3.0 s using the RESORCE dataset"
C     Several versions of the model are developed in terms of Vs or Eurocode
C           Site Classes and distance metrics of RJB and Rhypo. The version
C           code in the code is for the Vs and RJB parameters.
C     Recommended application range:
C           Magnitude = 4 - 7.6
C           Distance < 300 km
C           Hypocenteral Depths < 35km
C
C     Model Number = 295, Horizontal, Rjb, Vs
      if ( jcalc .eq. 295 ) then
         call Bindi_Hor_2013 ( mag, jbdist, ftype, specT,
     1                     period2, lnY, sigma, iflag, vs, phi, tau )
         attenname1 = 'Bindietal-Hor-2013, Rjb, Vs'
         lnY = lnY + efacs
       endif

c ******* Graizer and Kalkan (Nov. 2012) *********
C     This is an unpublished update to the Jan/Feb. 2011 SRL version of the GMPE.
C          Fortran code for this model was obtained from V. Graizer and it is
C          currently being submitted for publication.
C     Note that currently a fixed Q values typical for California is set.
C     Currently depthvs15 is set equal to depthvs10 value
C     Model Number = 90
      if ( jcalc .eq. 90 ) then
         Q0 = 150.0
         call GK_Nov2012 ( mag, RupDist, specT, ftype,
     1                     period2, lnY, sigma, iflag, Vs, Q0, depthvs15 )
         attenname1 = 'Graizer&Kalkan, Nov.2012'
         lnY = lnY + efacs
       endif
      if ( jcalc .eq. 91 ) then
         Q0 = 75.0
         call GK_Nov2012 ( mag, RupDist, specT, ftype,
     1                     period2, lnY, sigma, iflag, Vs, Q0, depthvs15 )
         attenname1 = 'Graizer&Kalkan, Nov.2012, Q0=75'
         lnY = lnY + efacs
       endif
      if ( jcalc .eq. 92 ) then
         Q0 = 300.0
         call GK_Nov2012 ( mag, RupDist, specT, ftype,
     1                     period2, lnY, sigma, iflag, Vs, Q0, depthvs15 )
         attenname1 = 'Graizer&Kalkan, Nov.2012, Q0=300'
         lnY = lnY + efacs
       endif


c ******* DCPP Common Function Form Models *********
C     Preliminary Models for DCPP for Workshop 3, March 2014
C     Model Numbers 8001, ASK form
      if ( jcalc .eq. 8001 ) then
         call DCPP_CommonASK ( mag, RupDist, depthtop, specT, lnY, sigma, iflag )
         attenname1 = 'DCPP Common Model, ASK'
         lnY = lnY + efacs
       endif
C     Model Numbers 8002, BSSA form
      if ( jcalc .eq. 8002 ) then
         call DCPP_CommonBSSA ( mag, RupDist, depthtop, specT, lnY, sigma, iflag )
         attenname1 = 'DCPP Common Model, BSSA'
         lnY = lnY + efacs
       endif
C     Model Numbers 8003, Common Model 001
      if ( jcalc .eq. 8003 ) then
         call DCPP_Common001 ( mag, RupDist, depthtop, specT, lnY, sigma, iflag )
         attenname1 = 'DCPP Common Model001'
         lnY = lnY + efacs
       endif
C     Model Numbers 8004, Common Model 002
      if ( jcalc .eq. 8004 ) then
         call DCPP_Common002 ( mag, RupDist, depthtop, specT, lnY, sigma, iflag )
         attenname1 = 'DCPP Common Model002'
         lnY = lnY + efacs
       endif
C     Model Numbers 8005, Common Model 003
      if ( jcalc .eq. 8005 ) then
         call DCPP_Common003 ( mag, RupDist, depthtop, specT, lnY, sigma, iflag )
         attenname1 = 'DCPP Common Model003'
         lnY = lnY + efacs
       endif
C     Model Numbers 8006, Common Model 004
      if ( jcalc .eq. 8006 ) then
         call DCPP_Common004 ( mag, RupDist, depthtop, specT, lnY, sigma, iflag )
         attenname1 = 'DCPP Common Model004'
         lnY = lnY + efacs
       endif
C     Model Numbers 8007, Common Model 005
      if ( jcalc .eq. 8007 ) then
         call DCPP_Common005 ( mag, RupDist, depthtop, specT, lnY, sigma, iflag )
         attenname1 = 'DCPP Common Model005'
         lnY = lnY + efacs
       endif
C     Model Numbers 8008, Common Model 006
      if ( jcalc .eq. 8008 ) then
         call DCPP_Common006 ( mag, RupDist, depthtop, specT, lnY, sigma, iflag )
         attenname1 = 'DCPP Common Model006'
         lnY = lnY + efacs
       endif
C     Model Numbers 8009, Common Model 007
      if ( jcalc .eq. 8009 ) then
         call DCPP_Common007 ( mag, RupDist, depthtop, specT, lnY, sigma, iflag )
         attenname1 = 'DCPP Common Model007'
         lnY = lnY + efacs
       endif
C     Model Numbers 8010, Common Model 008
      if ( jcalc .eq. 8010 ) then
         call DCPP_Common008 ( mag, RupDist, depthtop, specT, lnY, sigma, iflag )
         attenname1 = 'DCPP Common Model008'
         lnY = lnY + efacs
       endif
C     Model Numbers 8011, Common Model 009
      if ( jcalc .eq. 8011 ) then
         call DCPP_Common009 ( mag, RupDist, depthtop, specT, lnY, sigma, iflag )
         attenname1 = 'DCPP Common Model009'
         lnY = lnY + efacs
       endif

c ******* PVNGS Common Function Form Models *********
C     Preliminary Models for PVNGS for Workshop 3, March 2014

C     Model Numbers 9001 Common Model ASK
      if ( jcalc .eq. 9001 ) then
         call PVNGS_CommonASK ( mag, jbdist, depthtop, specT, lnY, sigma, iflag )
         attenname1 = 'PVNGS Common Model ASK'
         lnY = lnY + efacs
      endif
C     Model Numbers 9002 Common Model ASK
      if ( jcalc .eq. 9002 ) then
         call PVNGS_CommonBindi ( mag, jbdist, depthtop, specT, lnY, sigma, iflag )
         attenname1 = 'PVNGS Common Model Bindi'
         lnY = lnY + efacs
      endif
C     Model Numbers 9003 Common Model ASK
      if ( jcalc .eq. 9003 ) then
         call PVNGS_Common001 ( mag, jbdist, depthtop, specT, lnY, sigma, iflag )
         attenname1 = 'PVNGS Common Model001'
         lnY = lnY + efacs
      endif
C     Model Numbers 9004 Common Model ASK
      if ( jcalc .eq. 9004 ) then
         call PVNGS_Common002 ( mag, jbdist, depthtop, specT, lnY, sigma, iflag )
         attenname1 = 'PVNGS Common Model002'
         lnY = lnY + efacs
      endif
C     Model Numbers 9005 Common Model ASK
      if ( jcalc .eq. 9005 ) then
         call PVNGS_Common003 ( mag, jbdist, depthtop, specT, lnY, sigma, iflag )
         attenname1 = 'PVNGS Common Model003'
         lnY = lnY + efacs
      endif
C     Model Numbers 9006 Common Model ASK
      if ( jcalc .eq. 9006 ) then
         call PVNGS_Common004 ( mag, jbdist, depthtop, specT, lnY, sigma, iflag )
         attenname1 = 'PVNGS Common Model004'
         lnY = lnY + efacs
      endif
C     Model Numbers 9007 Common Model ASK
      if ( jcalc .eq. 9007 ) then
         call PVNGS_Common005 ( mag, jbdist, depthtop, specT, lnY, sigma, iflag )
         attenname1 = 'PVNGS Common Model005'
         lnY = lnY + efacs
      endif
C     Model Numbers 9008 Common Model ASK
      if ( jcalc .eq. 9008 ) then
         call PVNGS_Common006 ( mag, jbdist, depthtop, specT, lnY, sigma, iflag )
         attenname1 = 'PVNGS Common Model006'
         lnY = lnY + efacs
      endif
C     Model Numbers 9009 Common Model ASK
      if ( jcalc .eq. 9009 ) then
         call PVNGS_Common007 ( mag, jbdist, depthtop, specT, lnY, sigma, iflag )
         attenname1 = 'PVNGS Common Model007'
         lnY = lnY + efacs
      endif
C     Model Numbers 9010 Common Model ASK
      if ( jcalc .eq. 9010 ) then
         call PVNGS_Common008 ( mag, jbdist, depthtop, specT, lnY, sigma, iflag )
         attenname1 = 'PVNGS Common Model008'
         lnY = lnY + efacs
      endif
C     Model Numbers 9011 Common Model ASK
      if ( jcalc .eq. 9011 ) then
         call PVNGS_Common009 ( mag, jbdist, depthtop, specT, lnY, sigma, iflag )
         attenname1 = 'PVNGS Common Model009'
         lnY = lnY + efacs
      endif




C     SWUS Common Functional Form as a function of Rrup
C         10,000 < jcalc < 11,000
      if ( jcalc .gt. 10000 .and. jcalc .lt. 11000 ) then
         coefcountrrup = jcalc - 10000
         if (coefcountrrup .lt. 0) then
C            write (*,*) 'Incorrect jcalc for SWUS Common Functional Model Rrup!!!'
C            write (*,*) 'Check input file.'
            return
         endif
         call SWUS_CFRrup ( mag, RupDist, jbDist, depthtop, ftype, dip1(1), RupWidth, Rx, HWFlag,
     1           specT, lnY, sigma, iflag, cfcoefrrup, coefcountrrup, phi, tau )
         attenname1 = 'SWUS Common Function Model-Rrup'
         lnY = lnY + efacs
      endif


C     SWUS Common Functional Form as a function of Rjb
C         11,000 < jcalc < 12,000
      if ( jcalc .gt. 11000 .and. jcalc .lt. 12000 ) then
         coefcountrjb = jcalc - 11000
         if (coefcountrjb .lt. 0) then
C            write (*,*) 'Incorrect jcalc for SWUS Common Functional Model Rjb!!!'
C            write (*,*) 'Check input file.'
            return
         endif
         call SWUS_CFRjb ( mag, RupDist, jbDist, depthtop, ftype, dip1(1), RupWidth, Rx, HWFlag,
     1           specT, lnY, sigma, iflag, cfcoefrjb, coefcountrjb, phi, tau )
         attenname1 = 'SWUS Common Function Model-Rjb'
         lnY = lnY + efacs
      endif


C ******* PEER NGA-West2 Attenuation Models with Additional Mag Scaling Uncertainty ****
C ******* For use with Zones 1, 2, and 3  with path term accounted for *****
C         (Jcalcs start with 8000s)

c ******* Abrahamson, Silva, and Kamai Model *********
C     Abrahamson, Silva, and Kamai 2014 - Horizontal, Global, Mainshock, Estimated Vs30m
C     Central Mag Uncertainty
C     Model Number = 8787
      if ( jcalc .eq. 8787 ) then
         regionflag = 0
         msasflag = 0
         eta = 0.
C     Dip angle of the fault is assumed to be equal to the dip angle
C     assigned for the first two points of the fault.
         dip = dip1(1)
C     Depth to the top of the fault is set equal to the first depth
C     defined for the fault in the data file (i.e., Depthtop).
         vs30_Class = 0
         call ASK_NGAWest2_2013 ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, Ry0, regionflag, msasflag, phi, tau)
         attenname1 = 'ASK_NGAWest2_2014-Hor-Zone123-Cent-EstVs'

C     Apply Mag Uncertainty
         c1 = 0.0
         faddmag = 0.0
         if (mag .gt. 7.0) then
            if (specT .lt. 1.0) then
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0))**2.0 - 0.083**2.0)
            else
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0)+0.0171*alog(specT))**2.0 - 0.083**2.0)
            endif
            lnY = lnY + faddmag
         endif

         lnY = lnY + efac
      endif


c ******* Abrahamson, Silva, and Kamai Model *********
C     Abrahamson, Silva, and Kamai 2014 - Horizontal, Global, Mainshock, Estimated Vs30m
C     Low Mag Uncertainty
C     Model Number = 8788
      if ( jcalc .eq. 8788 ) then
         regionflag = 0
         msasflag = 0
         eta = 0.
C     Dip angle of the fault is assumed to be equal to the dip angle
C     assigned for the first two points of the fault.
         dip = dip1(1)
C     Depth to the top of the fault is set equal to the first depth
C     defined for the fault in the data file (i.e., Depthtop).
         vs30_Class = 0
         call ASK_NGAWest2_2013 ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, Ry0, regionflag, msasflag, phi, tau)
         attenname1 = 'ASK_NGAWest2_2014-Hor-Zone123-Low-EstVs'

C     Apply Mag Uncertainty
         c1 = -1.6
         faddmag = 0.0
         if (mag .gt. 7.0) then
            if (specT .lt. 1.0) then
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0))**2.0 - 0.083**2.0)
            else
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0)+0.0171*alog(specT))**2.0 - 0.083**2.0)
            endif
            lnY = lnY + faddmag
         endif

         lnY = lnY + efac
      endif

c ******* Abrahamson, Silva, and Kamai Model *********
C     Abrahamson, Silva, and Kamai 2014 - Horizontal, Global, Mainshock, Estimated Vs30m
C     High Mag Uncertainty
C     Model Number = 8789
      if ( jcalc .eq. 8789 ) then
         regionflag = 0
         msasflag = 0
         eta = 0.
C     Dip angle of the fault is assumed to be equal to the dip angle
C     assigned for the first two points of the fault.
         dip = dip1(1)
C     Depth to the top of the fault is set equal to the first depth
C     defined for the fault in the data file (i.e., Depthtop).
         vs30_Class = 0
         call ASK_NGAWest2_2013 ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, Ry0, regionflag, msasflag, phi, tau)
         attenname1 = 'ASK_NGAWest2_2014-Hor-Zone123-High-EstVs'

C     Apply Mag Uncertainty
         c1 = 1.6
         faddmag = 0.0
         if (mag .gt. 7.0) then
            if (specT .lt. 1.0) then
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0))**2.0 - 0.083**2.0)
            else
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0)+0.0171*alog(specT))**2.0 - 0.083**2.0)
            endif
            lnY = lnY + faddmag
         endif

         lnY = lnY + efac
      endif


c ******* Boore and Atkinson Model *********
C     Boore, Stewart, Seyhan and Atkinson 2014 - horizontal
C          DeltaC3 Model Global Adjustments, No Basin Adjustments
C     Central Mag Uncertainty
C     Model Number = 8922
      if ( jcalc .eq. 8922 ) then
         regionflag = 0
         basinflag = 0
         call BSSA_NGAWest2_2013 ( mag, jbdist, specT,
     1               period2, lnY, sigma, iflag, vs, ftype, pga4nl, depthvs10, regionflag, basinflag,
     1               phi, tau )
         attenname1 = 'BSSA_NGAWest2_2014_Hor, Zone123-Cent, No Basin'

C     Apply Mag Uncertainty
         c1 = 0.0
         faddmag = 0.0
         if (mag .gt. 7.0) then
            if (specT .lt. 1.0) then
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0))**2.0 - 0.083**2.0)
            else
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0)+0.0171*alog(specT))**2.0 - 0.083**2.0)
            endif
            lnY = lnY + faddmag
         endif

         lnY = lnY + efac
       endif

c ******* Boore and Atkinson Model *********
C     Boore, Stewart, Seyhan and Atkinson 2014 - horizontal
C          DeltaC3 Model Global Adjustments, No Basin Adjustments
C     Central Mag Uncertainty
C     Model Number = 8923
      if ( jcalc .eq. 8923 ) then
         regionflag = 0
         basinflag = 0
         call BSSA_NGAWest2_2013 ( mag, jbdist, specT,
     1               period2, lnY, sigma, iflag, vs, ftype, pga4nl, depthvs10, regionflag, basinflag,
     1               phi, tau )
         attenname1 = 'BSSA_NGAWest2_2014_Hor, Zone123-Low, No Basin'

C     Apply Mag Uncertainty
         c1 = -1.6
         faddmag = 0.0
         if (mag .gt. 7.0) then
            if (specT .lt. 1.0) then
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0))**2.0 - 0.083**2.0)
            else
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0)+0.0171*alog(specT))**2.0 - 0.083**2.0)
            endif
            lnY = lnY + faddmag
         endif

         lnY = lnY + efac
       endif

c ******* Boore and Atkinson Model *********
C     Boore, Stewart, Seyhan and Atkinson 2014 - horizontal
C          DeltaC3 Model Global Adjustments, No Basin Adjustments
C     High Mag Uncertainty
C     Model Number = 8924
      if ( jcalc .eq. 8924 ) then
         regionflag = 0
         basinflag = 0
         call BSSA_NGAWest2_2013 ( mag, jbdist, specT,
     1               period2, lnY, sigma, iflag, vs, ftype, pga4nl, depthvs10, regionflag, basinflag,
     1               phi, tau )
         attenname1 = 'BSSA_NGAWest2_2014_Hor, Zone123-High, No Basin'

C     Apply Mag Uncertainty
         c1 = 1.6
         faddmag = 0.0
         if (mag .gt. 7.0) then
            if (specT .lt. 1.0) then
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0))**2.0 - 0.083**2.0)
            else
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0)+0.0171*alog(specT))**2.0 - 0.083**2.0)
            endif
            lnY = lnY + faddmag
         endif

         lnY = lnY + efac
       endif

c ******* Campbell and Bozorgnia Model *********
C     Campbell and Bozorgnia 2014 - horizontal, Zone1,2,3
C     Central Mag Uncertainty
C     Model Number = 8836
      if ( jcalc .eq. 8836 ) then
         regionflag = 0
         call CB_NGAWest2_2013 ( mag, rupdist, jbdist, ftype, specT,
     1                    period2, lnY, sigma, iflag, vs,
     2                    depthTop, D25, dip1(1), depth, HWFlag, Rx, rupwidth, regionflag,
     1                    phi, tau )
         attenname1 = 'CB_NGAWest2_2014-Hor,Zone123-Cent'

C     Apply Mag Uncertainty
         c1 = 0.0
         faddmag = 0.0
         if (mag .gt. 7.0) then
            if (specT .lt. 1.0) then
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0))**2.0 - 0.083**2.0)
            else
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0)+0.0171*alog(specT))**2.0 - 0.083**2.0)
            endif
            lnY = lnY + faddmag
         endif

         lnY = lnY + efac
       endif

c ******* Campbell and Bozorgnia Model *********
C     Campbell and Bozorgnia 2014 - horizontal, Zone1,2,3
C     Central Mag Uncertainty
C     Model Number = 8837
      if ( jcalc .eq. 8837 ) then
         regionflag = 0
         call CB_NGAWest2_2013 ( mag, rupdist, jbdist, ftype, specT,
     1                    period2, lnY, sigma, iflag, vs,
     2                    depthTop, D25, dip1(1), depth, HWFlag, Rx, rupwidth, regionflag,
     1                    phi, tau )
         attenname1 = 'CB_NGAWest2_2014-Hor,Zone123-Low'

C     Apply Mag Uncertainty
         c1 = -1.6
         faddmag = 0.0
         if (mag .gt. 7.0) then
            if (specT .lt. 1.0) then
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0))**2.0 - 0.083**2.0)
            else
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0)+0.0171*alog(specT))**2.0 - 0.083**2.0)
            endif
            lnY = lnY + faddmag
         endif

         lnY = lnY + efac
       endif

c ******* Campbell and Bozorgnia Model *********
C     Campbell and Bozorgnia 2014 - horizontal, Zone1,2,3
C     High Mag Uncertainty
C     Model Number = 8838
      if ( jcalc .eq. 8838 ) then
         regionflag = 0
         call CB_NGAWest2_2013 ( mag, rupdist, jbdist, ftype, specT,
     1                    period2, lnY, sigma, iflag, vs,
     2                    depthTop, D25, dip1(1), depth, HWFlag, Rx, rupwidth, regionflag,
     1                    phi, tau )
         attenname1 = 'CB_NGAWest2_2014-Hor,Zone123-High'

C     Apply Mag Uncertainty
         c1 = 1.6
         faddmag = 0.0
         if (mag .gt. 7.0) then
            if (specT .lt. 1.0) then
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0))**2.0 - 0.083**2.0)
            else
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0)+0.0171*alog(specT))**2.0 - 0.083**2.0)
            endif
            lnY = lnY + faddmag
         endif

         lnY = lnY + efac
       endif



c ******* Chiou and Youngs Model *********
C     Chiou and Youngs 2014 - Horizontal
C     Central Mag Uncertainty
C     Model Number = 8797
      if ( jcalc .eq. 8797 ) then
c     Current model set for estimated Vs30 values (only impacts sigma)
         vs30_class = 0
         regionflag = 0
         call CY_NGAWest2_2013 ( mag, rupDist, jbdist, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, dip1(1), Depthtop, Ftype,
     3                     depthvs10, vs30_class, hwflag, Rx, regionflag,
     1                     phi, tau )
         attenname1 = 'CY_NGAWest2_2014-Hor,Zone123-Cent,Est Vs30m'

C     Apply Mag Uncertainty
         c1 = 0.0
         faddmag = 0.0
         if (mag .gt. 7.0) then
            if (specT .lt. 1.0) then
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0))**2.0 - 0.083**2.0)
            else
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0)+0.0171*alog(specT))**2.0 - 0.083**2.0)
            endif
            lnY = lnY + faddmag
         endif

         lnY = lnY + efac
       endif

c ******* Chiou and Youngs Model *********
C     Chiou and Youngs 2014 - Horizontal
C     Low Mag Uncertainty
C     Model Number = 8798
      if ( jcalc .eq. 8798 ) then
c     Current model set for estimated Vs30 values (only impacts sigma)
         vs30_class = 0
         regionflag = 0
         call CY_NGAWest2_2013 ( mag, rupDist, jbdist, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, dip1(1), Depthtop, Ftype,
     3                     depthvs10, vs30_class, hwflag, Rx, regionflag,
     1                     phi, tau )
         attenname1 = 'CY_NGAWest2_2014-Hor,Zone123-Low,Est Vs30m'

C     Apply Mag Uncertainty
         c1 = -1.6
         faddmag = 0.0
         if (mag .gt. 7.0) then
            if (specT .lt. 1.0) then
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0))**2.0 - 0.083**2.0)
            else
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0)+0.0171*alog(specT))**2.0 - 0.083**2.0)
            endif
            lnY = lnY + faddmag
         endif

         lnY = lnY + efac
       endif

c ******* Chiou and Youngs Model *********
C     Chiou and Youngs 2014 - Horizontal
C     High Mag Uncertainty
C     Model Number = 8799
      if ( jcalc .eq. 8799 ) then
c     Current model set for estimated Vs30 values (only impacts sigma)
         vs30_class = 0
         regionflag = 0
         call CY_NGAWest2_2013 ( mag, rupDist, jbdist, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, dip1(1), Depthtop, Ftype,
     3                     depthvs10, vs30_class, hwflag, Rx, regionflag,
     1                     phi, tau )
         attenname1 = 'CY_NGAWest2_2014-Hor,Zone123-High,Est Vs30m'

C     Apply Mag Uncertainty
         c1 = 1.6
         faddmag = 0.0
         if (mag .gt. 7.0) then
            if (specT .lt. 1.0) then
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0))**2.0 - 0.083**2.0)
            else
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0)+0.0171*alog(specT))**2.0 - 0.083**2.0)
            endif
            lnY = lnY + faddmag
         endif

         lnY = lnY + efac
       endif


c ******* Idriss Model *********
C     Idriss 2014 - Horizontal
C     Central Mag Uncertainty
C     Model Number = 8910
      if ( jcalc .eq. 8910 ) then
         if (vs .ge. 450.0) then
            call I_NGAWest2_2013 ( mag, rupDist, ftype, vs, specT,
     1                     period2, lnY, sigma, iflag )
            attenname1 = 'Idriss_NGAWest2_2014_Hor, Zone123-Cent'
         elseif (vs .gt. 1200) then
            call I_NGAWest2_2013 ( mag, rupDist, ftype, 1200.0, specT,
     1                     period2, lnY, sigma, iflag )
            attenname1 = 'Idriss_NGAWest2_2014_Hor, Zone123-Cent'
         else
C            write (*,*) 'Idriss NGA West 2 GMPE not defined'
C            write (*,*) 'for Vs<450m/s.'
            return
         endif

C     Apply Mag Uncertainty
         c1 = 0.0
         faddmag = 0.0
         if (mag .gt. 7.0) then
            if (specT .lt. 1.0) then
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0))**2.0 - 0.083**2.0)
            else
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0)+0.0171*alog(specT))**2.0 - 0.083**2.0)
            endif
            lnY = lnY + faddmag
         endif

         lnY = lnY + efac
       endif

c ******* Idriss Model *********
C     Idriss 2014 - Horizontal
C     Low Mag Uncertainty
C     Model Number = 8911
      if ( jcalc .eq. 8911 ) then
         if (vs .ge. 450.0) then
            call I_NGAWest2_2013 ( mag, rupDist, ftype, vs, specT,
     1                     period2, lnY, sigma, iflag )
            attenname1 = 'Idriss_NGAWest2_2014_Hor, Zone123-Low'
         elseif (vs .gt. 1200) then
            call I_NGAWest2_2013 ( mag, rupDist, ftype, 1200.0, specT,
     1                     period2, lnY, sigma, iflag )
            attenname1 = 'Idriss_NGAWest2_2014_Hor, Zone123-Low'
         else
C            write (*,*) 'Idriss NGA West 2 GMPE not defined'
C            write (*,*) 'for Vs<450m/s.'
            return
         endif

C     Apply Mag Uncertainty
         c1 = -1.6
         faddmag = 0.0
         if (mag .gt. 7.0) then
            if (specT .lt. 1.0) then
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0))**2.0 - 0.083**2.0)
            else
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0)+0.0171*alog(specT))**2.0 - 0.083**2.0)
            endif
            lnY = lnY + faddmag
         endif

         lnY = lnY + efac
       endif

c ******* Idriss Model *********
C     Idriss 2014 - Horizontal
C     High Mag Uncertainty
C     Model Number = 8912
      if ( jcalc .eq. 8912 ) then
         if (vs .ge. 450.0) then
            call I_NGAWest2_2013 ( mag, rupDist, ftype, vs, specT,
     1                     period2, lnY, sigma, iflag )
            attenname1 = 'Idriss_NGAWest2_2014_Hor, Zone123-High'
         elseif (vs .gt. 1200) then
            call I_NGAWest2_2013 ( mag, rupDist, ftype, 1200.0, specT,
     1                     period2, lnY, sigma, iflag )
            attenname1 = 'Idriss_NGAWest2_2014_Hor, Zone123-High'
         else
C            write (*,*) 'Idriss NGA West 2 GMPE not defined'
C            write (*,*) 'for Vs<450m/s.'
            return
         endif

C     Apply Mag Uncertainty
         c1 = 1.6
         faddmag = 0.0
         if (mag .gt. 7.0) then
            if (specT .lt. 1.0) then
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0))**2.0 - 0.083**2.0)
            else
               faddmag = c1*sqrt( (0.083+0.056*(mag-7.0)+0.0171*alog(specT))**2.0 - 0.083**2.0)
            endif
            lnY = lnY + faddmag
         endif

         lnY = lnY + efac
       endif

C ******* PEER NGA-West2 Attenuation Models with Additional Mag Scaling Uncertainty ****
C ******* For use with Zones 1, 2, and 3  with no path term accounted for *****
C         (Jcalcs start with 9000s)

c ******* Abrahamson, Silva, and Kamai Model *********
C     Abrahamson, Silva, and Kamai 2014 - Horizontal, Global, Mainshock, Estimated Vs30m
C     Central Mag Uncertainty
C     Model Number = 9787
      if ( jcalc .eq. 9787 ) then
         regionflag = 0
         msasflag = 0
         eta = 0.
C     Dip angle of the fault is assumed to be equal to the dip angle
C     assigned for the first two points of the fault.
         dip = dip1(1)
C     Depth to the top of the fault is set equal to the first depth
C     defined for the fault in the data file (i.e., Depthtop).
         vs30_Class = 0
         call ASK_NGAWest2_2013 ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, Ry0, regionflag, msasflag, phi, tau)
         attenname1 = 'ASK_NGAWest2_2014-Hor-Zone123-Cent-EstVs'

C     Apply Mag Uncertainty
         c1 = 0.0
         faddmag = 0.0
         faddmag = c1*( (0.083+0.056*max(0.0,(mag-7.0)) ) + 0.0171*max(0.0, alog(specT)))
         lnY = lnY + faddmag

         lnY = lnY + efac
      endif


c ******* Abrahamson, Silva, and Kamai Model *********
C     Abrahamson, Silva, and Kamai 2014 - Horizontal, Global, Mainshock, Estimated Vs30m
C     Low Mag Uncertainty
C     Model Number = 9788
      if ( jcalc .eq. 9788 ) then
         regionflag = 0
         msasflag = 0
         eta = 0.
C     Dip angle of the fault is assumed to be equal to the dip angle
C     assigned for the first two points of the fault.
         dip = dip1(1)
C     Depth to the top of the fault is set equal to the first depth
C     defined for the fault in the data file (i.e., Depthtop).
         vs30_Class = 0
         call ASK_NGAWest2_2013 ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, Ry0, regionflag, msasflag, phi, tau)
         attenname1 = 'ASK_NGAWest2_2014-Hor-Zone123-Low-EstVs'

C     Apply Mag Uncertainty
         c1 = -1.6
         faddmag = 0.0
         faddmag = c1*( (0.083+0.056*max(0.0,(mag-7.0)) ) + 0.0171*max(0.0, alog(specT)))
         lnY = lnY + faddmag

         lnY = lnY + efac
      endif

c ******* Abrahamson, Silva, and Kamai Model *********
C     Abrahamson, Silva, and Kamai 2014 - Horizontal, Global, Mainshock, Estimated Vs30m
C     High Mag Uncertainty
C     Model Number = 9789
      if ( jcalc .eq. 9789 ) then
         regionflag = 0
         msasflag = 0
         eta = 0.
C     Dip angle of the fault is assumed to be equal to the dip angle
C     assigned for the first two points of the fault.
         dip = dip1(1)
C     Depth to the top of the fault is set equal to the first depth
C     defined for the fault in the data file (i.e., Depthtop).
         vs30_Class = 0
         call ASK_NGAWest2_2013 ( mag, dip, ftype, Rupwidth, rupDist, jbdist,
     1            vs, hwflag, lnY, sigma, specT, period2, depthtop, iflag,
     2            vs30_class, depthvs10, Rx, Ry0, regionflag, msasflag, phi, tau)
         attenname1 = 'ASK_NGAWest2_2014-Hor-Zone123-High-EstVs'

C     Apply Mag Uncertainty
         c1 = 1.6
         faddmag = 0.0
         faddmag = c1*( (0.083+0.056*max(0.0,(mag-7.0)) ) + 0.0171*max(0.0, alog(specT)))
         lnY = lnY + faddmag

         lnY = lnY + efac
      endif


c ******* Boore and Atkinson Model *********
C     Boore, Stewart, Seyhan and Atkinson 2014 - horizontal
C          DeltaC3 Model Global Adjustments, No Basin Adjustments
C     Central Mag Uncertainty
C     Model Number = 9922
      if ( jcalc .eq. 9922 ) then
         regionflag = 0
         basinflag = 0
         call BSSA_NGAWest2_2013 ( mag, jbdist, specT,
     1               period2, lnY, sigma, iflag, vs, ftype, pga4nl, depthvs10, regionflag, basinflag,
     1               phi, tau )
         attenname1 = 'BSSA_NGAWest2_2014_Hor, Zone123-Cent, No Basin'

C     Apply Mag Uncertainty
         c1 = 0.0
         faddmag = 0.0
         faddmag = c1*( (0.083+0.056*max(0.0,(mag-7.0)) ) + 0.0171*max(0.0, alog(specT)))
         lnY = lnY + faddmag

         lnY = lnY + efac
       endif

c ******* Boore and Atkinson Model *********
C     Boore, Stewart, Seyhan and Atkinson 2014 - horizontal
C          DeltaC3 Model Global Adjustments, No Basin Adjustments
C     Central Mag Uncertainty
C     Model Number = 9923
      if ( jcalc .eq. 9923 ) then
         regionflag = 0
         basinflag = 0
         call BSSA_NGAWest2_2013 ( mag, jbdist, specT,
     1               period2, lnY, sigma, iflag, vs, ftype, pga4nl, depthvs10, regionflag, basinflag,
     1               phi, tau )
         attenname1 = 'BSSA_NGAWest2_2014_Hor, Zone123-Low, No Basin'

C     Apply Mag Uncertainty
         c1 = -1.6
         faddmag = 0.0
         faddmag = c1*( (0.083+0.056*max(0.0,(mag-7.0)) ) + 0.0171*max(0.0, alog(specT)))
         lnY = lnY + faddmag

         lnY = lnY + efac
       endif

c ******* Boore and Atkinson Model *********
C     Boore, Stewart, Seyhan and Atkinson 2014 - horizontal
C          DeltaC3 Model Global Adjustments, No Basin Adjustments
C     High Mag Uncertainty
C     Model Number = 9924
      if ( jcalc .eq. 9924 ) then
         regionflag = 0
         basinflag = 0
         call BSSA_NGAWest2_2013 ( mag, jbdist, specT,
     1               period2, lnY, sigma, iflag, vs, ftype, pga4nl, depthvs10, regionflag, basinflag,
     1               phi, tau )
         attenname1 = 'BSSA_NGAWest2_2014_Hor, Zone123-High, No Basin'

C     Apply Mag Uncertainty
         c1 = 1.6
         faddmag = 0.0
         faddmag = c1*( (0.083+0.056*max(0.0,(mag-7.0)) ) + 0.0171*max(0.0, alog(specT)))
         lnY = lnY + faddmag

         lnY = lnY + efac
       endif

c ******* Campbell and Bozorgnia Model *********
C     Campbell and Bozorgnia 2014 - horizontal, Zone1,2,3
C     Central Mag Uncertainty
C     Model Number = 9836
      if ( jcalc .eq. 9836 ) then
         regionflag = 0
         call CB_NGAWest2_2013 ( mag, rupdist, jbdist, ftype, specT,
     1                    period2, lnY, sigma, iflag, vs,
     2                    depthTop, D25, dip1(1), depth, HWFlag, Rx, rupwidth, regionflag,
     1                    phi, tau )
         attenname1 = 'CB_NGAWest2_2014-Hor,Zone123-Cent'

C     Apply Mag Uncertainty
         c1 = 0.0
         faddmag = 0.0
         faddmag = c1*( (0.083+0.056*max(0.0,(mag-7.0)) ) + 0.0171*max(0.0, alog(specT)))
         lnY = lnY + faddmag

         lnY = lnY + efac
       endif

c ******* Campbell and Bozorgnia Model *********
C     Campbell and Bozorgnia 2014 - horizontal, Zone1,2,3
C     Central Mag Uncertainty
C     Model Number = 9837
      if ( jcalc .eq. 9837 ) then
         regionflag = 0
         call CB_NGAWest2_2013 ( mag, rupdist, jbdist, ftype, specT,
     1                    period2, lnY, sigma, iflag, vs,
     2                    depthTop, D25, dip1(1), depth, HWFlag, Rx, rupwidth, regionflag,
     1                    phi, tau )
         attenname1 = 'CB_NGAWest2_2014-Hor,Zone123-Low'

C     Apply Mag Uncertainty
         c1 = -1.6
         faddmag = 0.0
         faddmag = c1*( (0.083+0.056*max(0.0,(mag-7.0)) ) + 0.0171*max(0.0, alog(specT)))
         lnY = lnY + faddmag

         lnY = lnY + efac
       endif

c ******* Campbell and Bozorgnia Model *********
C     Campbell and Bozorgnia 2014 - horizontal, Zone1,2,3
C     High Mag Uncertainty
C     Model Number = 9838
      if ( jcalc .eq. 9838 ) then
         regionflag = 0
         call CB_NGAWest2_2013 ( mag, rupdist, jbdist, ftype, specT,
     1                    period2, lnY, sigma, iflag, vs,
     2                    depthTop, D25, dip1(1), depth, HWFlag, Rx, rupwidth, regionflag,
     1                    phi, tau )
         attenname1 = 'CB_NGAWest2_2014-Hor,Zone123-High'

C     Apply Mag Uncertainty
         c1 = 1.6
         faddmag = 0.0
         faddmag = c1*( (0.083+0.056*max(0.0,(mag-7.0)) ) + 0.0171*max(0.0, alog(specT)))
         lnY = lnY + faddmag

         lnY = lnY + efac
       endif



c ******* Chiou and Youngs Model *********
C     Chiou and Youngs 2014 - Horizontal
C     Central Mag Uncertainty
C     Model Number = 9797
      if ( jcalc .eq. 9797 ) then
c     Current model set for estimated Vs30 values (only impacts sigma)
         vs30_class = 0
         regionflag = 0
         call CY_NGAWest2_2013 ( mag, rupDist, jbdist, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, dip1(1), Depthtop, Ftype,
     3                     depthvs10, vs30_class, hwflag, Rx, regionflag,
     1                     phi, tau )
         attenname1 = 'CY_NGAWest2_2014-Hor,Zone123-Cent,Est Vs30m'

C     Apply Mag Uncertainty
         c1 = 0.0
         faddmag = 0.0
         faddmag = c1*( (0.083+0.056*max(0.0,(mag-7.0)) ) + 0.0171*max(0.0, alog(specT)))
         lnY = lnY + faddmag

         lnY = lnY + efac
       endif

c ******* Chiou and Youngs Model *********
C     Chiou and Youngs 2014 - Horizontal
C     Low Mag Uncertainty
C     Model Number = 9798
      if ( jcalc .eq. 9798 ) then
c     Current model set for estimated Vs30 values (only impacts sigma)
         vs30_class = 0
         regionflag = 0
         call CY_NGAWest2_2013 ( mag, rupDist, jbdist, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, dip1(1), Depthtop, Ftype,
     3                     depthvs10, vs30_class, hwflag, Rx, regionflag,
     1                     phi, tau )
         attenname1 = 'CY_NGAWest2_2014-Hor,Zone123-Low,Est Vs30m'

C     Apply Mag Uncertainty
         c1 = -1.6
         faddmag = 0.0
         faddmag = c1*( (0.083+0.056*max(0.0,(mag-7.0)) ) + 0.0171*max(0.0, alog(specT)))
         lnY = lnY + faddmag

         lnY = lnY + efac
       endif

c ******* Chiou and Youngs Model *********
C     Chiou and Youngs 2014 - Horizontal
C     High Mag Uncertainty
C     Model Number = 9799
      if ( jcalc .eq. 9799 ) then
c     Current model set for estimated Vs30 values (only impacts sigma)
         vs30_class = 0
         regionflag = 0
         call CY_NGAWest2_2013 ( mag, rupDist, jbdist, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, dip1(1), Depthtop, Ftype,
     3                     depthvs10, vs30_class, hwflag, Rx, regionflag,
     1                     phi, tau )
         attenname1 = 'CY_NGAWest2_2014-Hor,Zone123-High,Est Vs30m'

C     Apply Mag Uncertainty
         c1 = 1.6
         faddmag = 0.0
         faddmag = c1*( (0.083+0.056*max(0.0,(mag-7.0)) ) + 0.0171*max(0.0, alog(specT)))
         lnY = lnY + faddmag

         lnY = lnY + efac
       endif


c ******* Idriss Model *********
C     Idriss 2014 - Horizontal
C     Central Mag Uncertainty
C     Model Number = 9910
      if ( jcalc .eq. 9910 ) then
         if (vs .ge. 450.0) then
            call I_NGAWest2_2013 ( mag, rupDist, ftype, vs, specT,
     1                     period2, lnY, sigma, iflag )
            attenname1 = 'Idriss_NGAWest2_2014_Hor, Zone123-Cent'
         elseif (vs .gt. 1200) then
            call I_NGAWest2_2013 ( mag, rupDist, ftype, 1200.0, specT,
     1                     period2, lnY, sigma, iflag )
            attenname1 = 'Idriss_NGAWest2_2014_Hor, Zone123-Cent'
         else
C            write (*,*) 'Idriss NGA West 2 GMPE not defined'
C            write (*,*) 'for Vs<450m/s.'
            return
         endif

C     Apply Mag Uncertainty
         c1 = 0.0
         faddmag = 0.0
         faddmag = c1*( (0.083+0.056*max(0.0,(mag-7.0)) ) + 0.0171*max(0.0, alog(specT)))
         lnY = lnY + faddmag

         lnY = lnY + efac
       endif

c ******* Idriss Model *********
C     Idriss 2014 - Horizontal
C     Low Mag Uncertainty
C     Model Number = 9911
      if ( jcalc .eq. 9911 ) then
         if (vs .ge. 450.0) then
            call I_NGAWest2_2013 ( mag, rupDist, ftype, vs, specT,
     1                     period2, lnY, sigma, iflag )
            attenname1 = 'Idriss_NGAWest2_2014_Hor, Zone123-Low'
         elseif (vs .gt. 1200) then
            call I_NGAWest2_2013 ( mag, rupDist, ftype, 1200.0, specT,
     1                     period2, lnY, sigma, iflag )
            attenname1 = 'Idriss_NGAWest2_2014_Hor, Zone123-Low'
         else
C            write (*,*) 'Idriss NGA West 2 GMPE not defined'
C            write (*,*) 'for Vs<450m/s.'
            return
         endif

C     Apply Mag Uncertainty
         c1 = -1.6
         faddmag = 0.0
         faddmag = c1*( (0.083+0.056*max(0.0,(mag-7.0)) ) + 0.0171*max(0.0, alog(specT)))
         lnY = lnY + faddmag

         lnY = lnY + efac
       endif

c ******* Idriss Model *********
C     Idriss 2014 - Horizontal
C     High Mag Uncertainty
C     Model Number = 9912
      if ( jcalc .eq. 9912 ) then
         if (vs .ge. 450.0) then
            call I_NGAWest2_2013 ( mag, rupDist, ftype, vs, specT,
     1                     period2, lnY, sigma, iflag )
            attenname1 = 'Idriss_NGAWest2_2014_Hor, Zone123-High'
         elseif (vs .gt. 1200) then
            call I_NGAWest2_2013 ( mag, rupDist, ftype, 1200.0, specT,
     1                     period2, lnY, sigma, iflag )
            attenname1 = 'Idriss_NGAWest2_2014_Hor, Zone123-High'
         else
C            write (*,*) 'Idriss NGA West 2 GMPE not defined'
C            write (*,*) 'for Vs<450m/s.'
            return
         endif

C     Apply Mag Uncertainty
         c1 = 1.6
         faddmag = 0.0
         faddmag = c1*( (0.083+0.056*max(0.0,(mag-7.0)) ) + 0.0171*max(0.0, alog(specT)))
         lnY = lnY + faddmag

         lnY = lnY + efac
       endif

C     Total Sigma Model for SWUS
C     Note that these sigma models should only be called with given scalc number.
C     The use of these values as jcalcs will be incorrect as the median ground motions is kept
C     at the large value of 1.0e10.

C     SWUS Total Sigma: DCPP Central
C     Model Number = 13001
      if ( jcalc .eq. 13001 ) then
         attenname1 = 'SWUS Total Sigma DCPP-Central'
         call SWUS_Sigma_DCPP_Cen ( mag, specT, sigma, iflag )
C     Kepp median ground motions large since this is only for sigma model
         lnY = 1.0e10
       endif

C     SWUS Total Sigma: DCPP Low
C     Model Number = 13002
      if ( jcalc .eq. 13002 ) then
         attenname1 = 'SWUS Total Sigma DCPP-Low'
         call SWUS_Sigma_DCPP_Low ( mag, specT, sigma, iflag )
C     Kepp median ground motions large since this is only for sigma model
         lnY = 1.0e10
       endif

C     SWUS Total Sigma: DCPP High
C     Model Number = 13003
      if ( jcalc .eq. 13003 ) then
         attenname1 = 'SWUS Total Sigma DCPP-High'
         call SWUS_Sigma_DCPP_High ( mag, specT, sigma, iflag )
C     Kepp median ground motions large since this is only for sigma model
         lnY = 1.0e10
       endif


c     Check for valid jcalc
      if ( lnY .gt. 1.0e10 ) then
C         write (*,*)') jcalc, mag,
C     1      rupDist, ftype, lnY, sigma
         return
      endif

      attenName(jType,iAtten) = attenname1
      period1(jType,iProb) = period2
      intflag(jType,iProb) = iflag
      siga = sigma

c     Convert to g
      lnY = lnY - 6.89

      return
      end

C  ***** PEER NGA MODELS **********

c ------------------------------------------------------------------
C *** Abrahamson and Silva (NGA-2008 Model) Horizontal ************
c ------------------------------------------------------------------
      subroutine AS_NGA_2008 ( mag, dip, fType, width, rRup, rjb,
     1                     vs30, hwflag, lnSa, sigma1,
     2                     specT, period1, depthtop, iflag, vs30_class,
     3                     depthvs10, Rx, phi, tau )

      real mag, dip, fType, aspectratio, rRup, rjb, vs30, pgaRock,
     1       Rx, lnSa, sigma, tau, period1, sigma1, depthtop, width,
     2       depthvs10, lnSaTD, lnSa1, lnSa2, lnSaRock, phi
      integer hwflag, iflag, vs30_class

c     VS30 class is to distinguish between the sigma if the VS30 is measured
c     vs the VS30 being estimated from surface geology.
c         Vs30_class = 1 for measured
c         Vs30_class = 0 for estimated

c     For now, convert ftype to an equivalent rake
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C      -1       Normal                   -120 < Rake < -60.0
C     1, 0.5    Reverse and Rev/Obl        30 < Rake < 150.0
C     0,-0.5    Strike-Slip and NMl/Obl        Otherwise
C
      if ( fType .eq. 1.0 ) then
        Frv = 1.0
        Fn = 0.0
      elseif ( fType .eq. 0.5 ) then
        Frv = 1.0
        Fn = 0.0
      elseif ( fType .eq. -1.0 ) then
        Frv = 0.0
        Fn = 1.0
      else
        Frv = 0.0
        Fn = 0.0
      endif

C HW factors......
c     For now, convert hwflag to an equivalent srcSiteA
c      if ( hwflag .eq. 1 ) then
c        srcSiteA = 90.
c      else
c        srcSiteA = 0.
c      endif

c     compute pga on rock
      period0 = 0.0
      pgaRock = 0.0
      vs30_rock = 1100.
      depthvs10rock = 0.006
      call AS_072007_model ( mag, dip, rake, width, rRup, rjb,
     1                     vs30_rock, pgaRock, Rx, lnSa, sigma, tau,
     2                     period0, depthTop, Frv, Fn, iflag, vs30_class,
     3                     depthvs10rock, hwflag )

      pgaRock = exp(lnSa)

c     Compute the spectral period for the constant displacement model
c     (Eq. 21)
      TD = 10**(-1.25+0.3*mag)
      if (specT .ge. TD) then
c         Compute Sa at TD spectral period for Vs30=1,100m/sec
          call AS_072007_model ( mag, dip, rake, width, rRup, rjb,
     1                     vs30_rock, pgaRock, Rx, lnSaTD, sigmaX, tauX,
     2                     TD, depthtop, Frv, Fn, iflag, vs30_class,
     3                     depthvs10rock, hwflag )

          lnSaRock = lnSaTD + alog((TD*TD)/(specT*specT))

c         Compute Sa at spectral period for Vs30
          call AS_072007_model ( mag, dip, rake, width, rRup, rjb,
     1                     vs30, pgaRock, Rx, lnSa1, sigma, tau,
     2                     specT, depthtop, Frv, Fn, iflag, vs30_class,
     3                     depthvs10, hwflag )
c         Compute Sa at spectral period for Vs30=1,100m/sec
          call AS_072007_model ( mag, dip, rake, width, rRup, rjb,
     1                     vs30_rock, pgaRock, Rx, lnSa2, sigmaX, tauX,
     2                     specT, depthtop, Frv, Fn, iflag, vs30_class,
     3                     depthvs10rock, hwflag )
C         Compute soil amplification (i.e., 'lnSa1-lnSa2') and add to Constant displcaement rock spectrum
          lnSa = lnSaRock + (lnSa1-lnSa2)

      else
C         For cases where specT < TD compute regular ground motions.
          call AS_072007_model ( mag, dip, rake, width, rRup, rjb,
     1                     vs30, pgaRock, Rx, lnSa, sigma, tau,
     2                     specT, depthtop, Frv, Fn, iflag, vs30_class,
     3                     depthvs10, hwflag )
      endif

c     compute Sa (given the PGA rock value)
      sigma1 = sqrt( sigma**2 + tau**2 )
      period1 = specT
      phi = sigma

c     Convert units spectral acceleration in gal
      lnSa = lnSa + 6.89

      return
      end
c ----------------------------------------------------------------------

      subroutine AS_072007_model ( mag, dip, rake, width, rRup, rjb,
     1                     vs30, pgaRock, Rx, lnSa, sigma, tau,
     2                     specT, depthtop, Frv, Fn, iflag, vs30_class,
     3                     z10, hwflag )

      parameter (MAXPER=107)
      real a1(MAXPER), a2(MAXPER), a3(MAXPER), a4(MAXPER), a5(MAXPER),
     1     a8(MAXPER), a9(MAXPER), a10(MAXPER), a11(MAXPER),
     1     a12(MAXPER), a13(MAXPER), a14(MAXPER), a15(MAXPER),
     1     c4(MAXPER), a16(MAXPER), a18(MAXPER),
     2     s1e(MAXPER), s2e(MAXPER), s1m(MAXPER), s2m(MAXPER), s3(MAXPER), s4(MAXPER)
      real period(MAXPER), b_soil(MAXPER), vLin(MAXPER), M1
      real sigma, tau,lnSa, pgaRock, vs30, rjb, rRup, aspectratio, rake,
     1     dip, mag, sigcorr(MAXPER), taucorr(MAXPER)
c      real sig1(MAXPER), sig2(MAXPER), tau1(MAXPER), tau2(MAXPER)
c      real tauCorr, sigCorr
      real taper1, taper2, taper3, taper4, taper5
      real a1T, a2T, a3T, a5T, a8T, a9T
      real a10T, a11T, a12T, a13T, a14T, a15T, a18T
      real c4T, M1T, a4T
      real s1eT, s2eT, s1mT, s2mT, s3T, s4T, s1T, s2T
      real sigcorrT, taucorrT, vLinT, b_soilT, sum, Frv, Fn
      real damp_dpga, sigamp, width, testv1
      real sigmanot, sigmanotPGA, taunot, taunotPGA, sigmaB, sigmaBPGA
      integer count1, count2, iflag, vs30_class, hwflag
      real n, c, z10, c2, e2, a21, a22, test, zhat

      data period / 0.0, -1.0, 0.01, 0.02, 0.022, 0.025, 0.029,
     1              0.03, 0.032, 0.035, 0.036, 0.04, 0.042, 0.044,
     2              0.045, 0.046, 0.048, 0.05, 0.055, 0.06, 0.065,
     3              0.067, 0.07, 0.075, 0.08, 0.085, 0.09, 0.095, 0.1,
     4              0.11, 0.12, 0.13, 0.133, 0.14, 0.15, 0.16, 0.17,
     5              0.18, 0.19, 0.2, 0.22, 0.24, 0.25, 0.26, 0.28, 0.29,
     6              0.3, 0.32, 0.34, 0.35, 0.36, 0.38, 0.4, 0.42, 0.44,
     7              0.45, 0.46, 0.48, 0.5, 0.55, 0.6, 0.65, 0.667, 0.7,
     8              0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.1, 1.2, 1.3, 1.4,
     9              1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.2, 2.4, 2.5, 2.6, 2.8,
     1              3.0, 3.2, 3.4, 3.5, 3.6, 3.8, 4.0, 4.2, 4.4, 4.6, 4.8,
     1              5.0, 5.5, 6.0, 6.5, 7.0, 7.5, 8.0, 8.5, 9.0, 9.5, 10.0 /
      data Vlin / 865.1, 400.0, 865.1, 865.1, 865.1, 865.1, 898.6,
     1            907.8, 926.4, 953.6, 962.3, 994.5, 1008.9, 1022.0,
     2           1028.0, 1033.8, 1044.3, 1053.5, 1071.5, 1082.8, 1088.3,
     3           1089.1, 1089, 1085.7, 1079.2, 1070.1, 1059.0, 1046.3,
     4           1032.5, 1002.5, 970.9, 939.1, 929.7, 907.8, 877.6,
     5            848.7, 821.2, 795.3, 771.0, 748.2, 706.8, 670.6,
     6            654.3, 639.0, 611.4, 598.9, 587.1, 565.9, 547.1,
     7            538.6, 530.6, 516.0, 503.0, 491.5, 481.2, 476.5,
     8            472.1, 463.9, 456.6, 441.6, 430.3, 421.7, 419.3,
     9            415.2, 410.5, 407.0, 404.6, 402.9, 401.8, 400.0, 400.0,
     1            400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0,
     1            400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0,
     2            400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0,
     3            400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0,
     4            400.0, 400.0, 400.0, 400.0 /
      data b_soil / -1.186, -1.955, -1.186, -1.219, -1.232, -1.25,
     1              -1.269, -1.273, -1.281, -1.291, -1.295, -1.308,
     2              -1.315, -1.323, -1.326, -1.33, -1.338, -1.346,
     3              -1.367, -1.391, -1.416, -1.426, -1.443, -1.471,
     4              -1.5, -1.53, -1.561, -1.592, -1.624, -1.687, -1.751,
     5              -1.813, -1.831, -1.873, -1.931, -1.988, -2.041,
     6              -2.093, -2.141, -2.188, -2.272, -2.347, -2.381,
     7              -2.412, -2.469, -2.494, -2.518, -2.558, -2.592,
     8              -2.607, -2.62, -2.641, -2.657, -2.668, -2.674,
     9              -2.676, -2.676, -2.675, -2.669, -2.643, -2.599,
     1              -2.543, -2.521, -2.476, -2.401, -2.319, -2.233,
     1              -2.142, -2.049, -1.955, -1.762, -1.57, -1.382,
     2              -1.199, -1.025, -0.859, -0.703, -0.558, -0.423,
     3              -0.299, -0.086, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     4               0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     5               0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /
      data c4 / 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5,
     1          4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5,
     2          4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5,
     3          4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5,
     4          4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5,
     5          4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5,
     6          4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5,
     7          4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5,
     8          4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5,
     9          4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5 /


      data a1 / 0.8039, 5.7578, 0.8109, 0.8554, 0.8785, 0.9139, 0.9520, 0.9617,
     1          0.9747, 0.9953, 1.0031, 1.0370, 1.0556, 1.0754, 1.0860, 1.0950,
     2          1.1146, 1.1331, 1.1850, 1.2374, 1.2867, 1.3040, 1.3296, 1.3751,
     3          1.4158, 1.4538, 1.4877, 1.5278, 1.5628, 1.6179, 1.6603, 1.6889,
     4          1.6953, 1.7051, 1.7155, 1.7190, 1.7141, 1.7064, 1.6991, 1.6870,
     5          1.6716, 1.6550, 1.6463, 1.6374, 1.6193, 1.6101, 1.6008, 1.5845,
     6          1.5605, 1.5507, 1.5443, 1.5289, 1.5105, 1.4921, 1.4696, 1.4572,
     7          1.4449, 1.4207, 1.3972, 1.3406, 1.2866, 1.2349, 1.2178, 1.1851,
     8          1.1370, 1.0903, 1.0449, 1.0006, 0.9574, 0.9152, 0.8276, 0.7517,
     9          0.6653, 0.5850, 0.5099, 0.4394, 0.3727, 0.3094, 0.2492, 0.1917,
     1          0.0837, -0.0163, -0.0637, -0.1096, -0.1973, -0.2801, -0.3586,
     1         -0.4335, -0.4696, -0.5050, -0.5735, -0.6394, -0.7029, -0.7641,
     2         -0.8234, -0.8808, -0.9364, -1.0689, -1.1931, -1.3102, -1.4212,
     3         -1.5268, -1.6277, -1.7243, -1.8171, -1.9065, -1.9928 /

      data a2 / -0.9679, -0.9046, -0.9679, -0.9774, -0.9816, -0.9889, -0.9996, -1.0024,
     1          -1.0079, -1.0160, -1.0187, -1.0289, -1.0337, -1.0383, -1.0406, -1.0427,
     2          -1.0469, -1.0508, -1.0596, -1.0669, -1.0728, -1.0749, -1.0775, -1.0810,
     3          -1.0833, -1.0847, -1.0851, -1.0847, -1.0833, -1.0781, -1.0702, -1.0600,
     4          -1.0567, -1.0484, -1.0357, -1.0224, -1.0089, -0.9956, -0.9825, -0.9700,
     5          -0.9473, -0.9282, -0.9202, -0.9133, -0.9030, -0.8997, -0.8974, -0.8906,
     6          -0.8842, -0.8812, -0.8783, -0.8728, -0.8677, -0.8630, -0.8587, -0.8566,
     7          -0.8546, -0.8509, -0.8475, -0.8400, -0.8338, -0.8286, -0.8270, -0.8242,
     8          -0.8206, -0.8175, -0.8148, -0.8125, -0.8106, -0.8088, -0.8060, -0.8038,
     9          -0.8020, -0.8006, -0.7995, -0.7985, -0.7977, -0.7970, -0.7965, -0.7960,
     1          -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, -0.7960,
     1          -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, -0.7960,
     2          -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, -0.7960,
     3          -0.7960, -0.7960, -0.7960 /

      data a3 / 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265,
     1          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265,
     2          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265,
     3          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265,
     4          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265,
     5          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265,
     6          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265,
     7          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265,
     8          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265,
     9          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265,
     1          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265,
     1          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265 /

      data a4 / -0.231, -0.231, -0.231, -0.231, -0.231, -0.231, -0.231,
     1     -0.231, -0.231, -0.231, -0.231, -0.231, -0.231, -0.231, -0.231,
     2     -0.231, -0.231, -0.231, -0.231, -0.231, -0.231, -0.231, -0.231,
     3     -0.231, -0.231, -0.231, -0.231, -0.231, -0.231, -0.231, -0.231,
     4     -0.231, -0.231, -0.231, -0.231, -0.231, -0.231, -0.231, -0.231,
     5     -0.231, -0.231, -0.231, -0.231, -0.231, -0.231, -0.231, -0.231,
     6     -0.231, -0.231, -0.231, -0.231, -0.231, -0.231, -0.231, -0.231,
     7     -0.231, -0.231, -0.231, -0.231, -0.231, -0.231, -0.231, -0.231,
     8     -0.231, -0.231, -0.231, -0.231, -0.231, -0.231, -0.231, -0.231,
     9     -0.231, -0.231, -0.231, -0.231, -0.231, -0.231, -0.231, -0.231,
     1     -0.231, -0.231, -0.231, -0.231, -0.231, -0.231, -0.231, -0.231,
     1     -0.231, -0.231, -0.231, -0.231, -0.231, -0.231, -0.231, -0.231,
     2     -0.231, -0.231, -0.231, -0.231, -0.231, -0.231, -0.231, -0.231,
     3     -0.231, -0.231, -0.231, -0.231 /

      data a5 / -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398,
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398,
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398,
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398,
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398,
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398,
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398,
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398,
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398,
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398,
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398,
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398,
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398,
     1     -0.398, -0.398, -0.398, -0.398 /

      data a8 / -0.0372, -0.1200, -0.0372, -0.0372, -0.0372, -0.0372, -0.0372,
     1          -0.0372, -0.0359, -0.0341, -0.0336, -0.0315, -0.0305, -0.0296,
     2          -0.0292, -0.0287, -0.0279, -0.0271, -0.0252, -0.0235, -0.0219,
     3          -0.0213, -0.0204, -0.0191, -0.0178, -0.0166, -0.0155, -0.0161,
     4          -0.0166, -0.0177, -0.0187, -0.0196, -0.0205, -0.0226, -0.0254,
     5          -0.0281, -0.0305, -0.0329, -0.0363, -0.0396, -0.0457, -0.0513,
     6          -0.0539, -0.0564, -0.0612, -0.0634, -0.0656, -0.0690, -0.0722,
     7          -0.0737, -0.0752, -0.0780, -0.0807, -0.0833, -0.0857, -0.0869,
     8          -0.0881, -0.0903, -0.0924, -0.0975, -0.1020, -0.1062, -0.1076,
     9          -0.1101, -0.1137, -0.1171, -0.1203, -0.1233, -0.1262, -0.1289,
     1          -0.1346, -0.1399, -0.1447, -0.1492, -0.1534, -0.1573, -0.1610,
     1          -0.1645, -0.1677, -0.1708, -0.1766, -0.1819, -0.1844, -0.1867,
     2          -0.1912, -0.1954, -0.1993, -0.2030, -0.2047, -0.2064, -0.2097,
     3          -0.2128, -0.2158, -0.2186, -0.2213, -0.2239, -0.2263, -0.2321,
     4          -0.2374, -0.2422, -0.2467, -0.2509, -0.2548, -0.2585, -0.2619,
     5          -0.2652, -0.2683 /

      data a9 / 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1          0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     2          0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     3          0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     4          0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     5          0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     6          0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     7          0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     8          0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     9          0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /

      data a10 / 0.9445, 1.5390, 0.9445, 0.9834, 0.9988, 1.0200, 1.0424, 1.0471,
     1           1.0566, 1.0684, 1.0731, 1.0884, 1.0967, 1.1061, 1.1097, 1.1144,
     2           1.1238, 1.1333, 1.1581, 1.1864, 1.2159, 1.2277, 1.2477, 1.2808,
     3           1.3150, 1.3504, 1.3870, 1.4236, 1.4613, 1.5357, 1.6112, 1.6843,
     4           1.7030, 1.7466, 1.8071, 1.8670, 1.9225, 1.9773, 2.0277, 2.0773,
     5           2.1655, 2.2440, 2.2794, 2.3114, 2.3702, 2.3956, 2.4201, 2.4598,
     6           2.4930, 2.5074, 2.5195, 2.5380, 2.5510, 2.5584, 2.5601, 2.5599,
     7           2.5574, 2.5513, 2.5395, 2.4914, 2.4236, 2.3429, 2.3123, 2.2504,
     8           2.1493, 2.0407, 1.9282, 1.8104, 1.6908, 1.5705, 1.3254, 1.0829,
     9           0.8465, 0.6170, 0.3991, 0.1914, -0.0037, -0.1852, -0.3544, -0.6072,
     1          -0.8585, -0.9600, -0.9600, -0.9600, -0.9600, -0.9600, -0.9600, -0.9600,
     1          -0.9600, -0.9600, -0.9600, -0.9600, -0.9600, -0.9600, -0.9518, -0.9360,
     2          -0.9208, -0.8854, -0.8530, -0.8232, -0.7956, -0.7700, -0.7460, -0.7234,
     3          -0.7021, -0.6820, -0.6630 /

      data a11 / 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     2           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     3           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     4           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     5           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     6           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     7           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     8           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     9           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /

      data a12 / 0.0000, 0.0800, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
     1           0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
     2           0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
     3           0.0000, 0.0000, 0.0043, 0.0081, 0.0117, 0.0127, 0.0150, 0.0181, 0.0210,
     4           0.0237, 0.0262, 0.0287, 0.0309, 0.0352, 0.0391, 0.0409, 0.0427, 0.0460,
     5           0.0475, 0.0491, 0.0519, 0.0546, 0.0559, 0.0572, 0.0596, 0.0619, 0.0641,
     6           0.0662, 0.0672, 0.0681, 0.0700, 0.0719, 0.0761, 0.0800, 0.0800, 0.0800,
     7           0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800,
     8           0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800,
     9           0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800,
     1           0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800,
     1           0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800 /
      data a13 / -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600,
     1           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600,
     2           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600,
     3           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600,
     4           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600,
     5           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600,
     6           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600,
     7           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600,
     8           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600,
     9           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600,
     1           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600,
     1           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600,
     2           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600,
     3           -0.0600, -0.0600, -0.0600 /

      data a14 / 1.08, 0.7, 1.08, 1.08, 1.0925, 1.1092, 1.1287,
     1         1.1331, 1.1416, 1.1533, 1.157, 1.1708, 1.1772, 1.1833,
     1         1.1862, 1.1891, 1.1947, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2,
     1         1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.1886, 1.1854,
     1         1.1781, 1.1683, 1.1591, 1.1505, 1.1424, 1.1347, 1.1274,
     1         1.1138, 1.1015, 1.0956, 1.0901, 1.0795, 1.0745, 1.0697,
     1         1.0605, 1.0519, 1.0478, 1.0438, 1.0361, 1.0288, 1.0219,
     1         1.0153, 1.0121, 1.009, 1.0029, 0.9971, 0.9835, 0.9712,
     1         0.9598, 0.9561, 0.9493, 0.9395, 0.9303, 0.9217, 0.9135,
     1         0.9058, 0.8985, 0.885, 0.8726, 0.8612, 0.8507, 0.8409,
     1         0.8317, 0.8231, 0.815, 0.8073, 0.8, 0.7246, 0.6558,
     1         0.6235, 0.5925, 0.5339, 0.4793, 0.4283, 0.3804, 0.3574,
     1         0.3352, 0.2924, 0.2518, 0.2133, 0.1765, 0.1413, 0.1077,
     1         0.0754, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /

      data a15 / -0.3500, -0.3900, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500,
     1           -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500,
     2           -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500,
     3           -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500,
     4           -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500,
     5           -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500,
     6           -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500,
     7           -0.3500, -0.3500, -0.3500, -0.3500, -0.3432, -0.3368, -0.3337,
     8           -0.3306, -0.3247, -0.3191, -0.3059, -0.2938, -0.2827, -0.2791,
     9           -0.2725, -0.2629, -0.2539, -0.2455, -0.2376, -0.2301, -0.2230,
     1           -0.2098, -0.1978, -0.1867, -0.1764, -0.1668, -0.1579, -0.1495,
     1           -0.1416, -0.1341, -0.1270, -0.1138, -0.1017, -0.0961, -0.0906,
     2           -0.0803, -0.0708, -0.0618, -0.0534, -0.0494, -0.0455, -0.0380,
     3           -0.0309, -0.0242, -0.0177, -0.0116, -0.0057, 0.0000, 0.0000, 0.0000,
     4            0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000 /

      data a16 / 0.9000, 0.6300, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000,
     1           0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000,
     2           0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000,
     3           0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000,
     4           0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000,
     5           0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.8878, 0.8644, 0.8423, 0.8212,
     6           0.8010, 0.7913, 0.7818, 0.7634, 0.7458, 0.7045, 0.6669, 0.6323, 0.6211,
     7           0.6002, 0.5704, 0.5425, 0.5163, 0.4916, 0.4682, 0.4460, 0.4048, 0.3672,
     8           0.3325, 0.3005, 0.2707, 0.2427, 0.2165, 0.1918, 0.1684, 0.1463, 0.1050,
     9           0.0674, 0.0498, 0.0328, 0.0007, -0.0291, -0.0570, -0.0832, -0.0958, -0.1079,
     1          -0.1313, -0.1535, -0.1746, -0.1947, -0.2139, -0.2323, -0.2500, -0.2500, -0.2500,
     1          -0.2500, -0.2500, -0.2500, -0.2500, -0.2500, -0.2500, -0.2500, -0.2500 /

      data a18 / -0.0067,  0.0000, -0.0067, -0.0067, -0.0067, -0.0067, -0.0067, -0.0067, -0.0067,
     1           -0.0067, -0.0067, -0.0067, -0.0069, -0.0071, -0.0072, -0.0073, -0.0075, -0.0076,
     2           -0.0080, -0.0084, -0.0087, -0.0088, -0.0090, -0.0093, -0.0093, -0.0093, -0.0093,
     3           -0.0093, -0.0093, -0.0093, -0.0093, -0.0093, -0.0093, -0.0093, -0.0093, -0.0093,
     4           -0.0093, -0.0089, -0.0086, -0.0083, -0.0077, -0.0071, -0.0069, -0.0066, -0.0062,
     5           -0.0060, -0.0057, -0.0053, -0.0050, -0.0048, -0.0046, -0.0043, -0.0039, -0.0036,
     6           -0.0033, -0.0032, -0.0031, -0.0028, -0.0025, -0.0019, -0.0014, -0.0009, -0.0007,
     7           -0.0004, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
     8            0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
     9            0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
     1            0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
     1            0.0000, 0.0000, 0.0000, 0.0000 /

      data s1e / 0.590, 0.590, 0.590, 0.590, 0.593, 0.598, 0.604, 0.605, 0.607, 0.610, 0.611,
     1           0.615, 0.617, 0.619, 0.620, 0.620, 0.622, 0.623, 0.627, 0.630, 0.630, 0.630,
     2           0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630,
     3           0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630,
     4           0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630,
     5           0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630,
     6           0.630, 0.630, 0.630, 0.630, 0.626, 0.623, 0.620, 0.617, 0.615, 0.612, 0.610,
     7           0.608, 0.606, 0.604, 0.601, 0.597, 0.596, 0.594, 0.592, 0.589, 0.587, 0.584,
     8           0.583, 0.582, 0.580, 0.578, 0.576, 0.575, 0.573, 0.572, 0.570, 0.580, 0.588,
     9           0.596, 0.604, 0.611, 0.617, 0.624, 0.629, 0.635, 0.640 /

      data s2e / 0.470, 0.470, 0.470, 0.470, 0.472, 0.474, 0.477, 0.478, 0.479, 0.481, 0.481,
     1           0.483, 0.484, 0.485, 0.486, 0.486, 0.487, 0.488, 0.489, 0.491, 0.493, 0.493,
     2           0.494, 0.495, 0.497, 0.498, 0.499, 0.500, 0.501, 0.503, 0.504, 0.506, 0.506,
     3           0.507, 0.509, 0.510, 0.511, 0.512, 0.513, 0.514, 0.516, 0.518, 0.518, 0.519,
     4           0.521, 0.521, 0.522, 0.523, 0.524, 0.525, 0.525, 0.526, 0.527, 0.528, 0.529,
     5           0.530, 0.530, 0.531, 0.532, 0.534, 0.535, 0.537, 0.537, 0.538, 0.539, 0.541,
     6           0.542, 0.543, 0.544, 0.545, 0.547, 0.548, 0.550, 0.551, 0.552, 0.553, 0.555,
     7           0.556, 0.557, 0.558, 0.559, 0.561, 0.562, 0.562, 0.564, 0.565, 0.566, 0.567,
     8           0.568, 0.568, 0.569, 0.570, 0.574, 0.577, 0.581, 0.584, 0.587, 0.594, 0.601,
     9           0.607, 0.613, 0.618, 0.623, 0.628, 0.632, 0.636, 0.640 /

      data s3 / 0.470, 0.420, 0.420, 0.420, 0.430, 0.443, 0.459, 0.462, 0.469, 0.478, 0.481,
     1          0.492, 0.497, 0.502, 0.504, 0.506, 0.511, 0.515, 0.525, 0.534, 0.542, 0.545,
     2          0.550, 0.550, 0.550, 0.550, 0.550, 0.550, 0.550, 0.550, 0.550, 0.550, 0.550,
     3          0.550, 0.550, 0.543, 0.537, 0.531, 0.526, 0.520, 0.511, 0.502, 0.497, 0.493,
     4          0.486, 0.482, 0.479, 0.472, 0.466, 0.463, 0.460, 0.454, 0.449, 0.444, 0.439,
     5          0.437, 0.435, 0.430, 0.426, 0.416, 0.408, 0.399, 0.397, 0.392, 0.385, 0.378,
     6          0.372, 0.366, 0.360, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350,
     7          0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350,
     8          0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350,
     9          0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350 /

      data s4 / 0.300, 0.300, 0.300, 0.300, 0.301, 0.303, 0.305, 0.305, 0.306, 0.307, 0.308,
     1          0.309, 0.309, 0.310, 0.310, 0.311, 0.311, 0.312, 0.313, 0.314, 0.315, 0.315,
     2          0.316, 0.317, 0.318, 0.318, 0.319, 0.320, 0.321, 0.322, 0.323, 0.324, 0.324,
     3          0.325, 0.326, 0.327, 0.327, 0.328, 0.329, 0.329, 0.331, 0.332, 0.332, 0.333,
     4          0.334, 0.334, 0.335, 0.335, 0.336, 0.337, 0.337, 0.338, 0.338, 0.339, 0.340,
     5          0.340, 0.340, 0.341, 0.341, 0.342, 0.343, 0.344, 0.345, 0.345, 0.346, 0.347,
     6          0.348, 0.349, 0.349, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350,
     7          0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350,
     8          0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350,
     9          0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350 /

      data s1m / 0.576, 0.576, 0.576, 0.576, 0.580, 0.585, 0.590, 0.591, 0.594, 0.597, 0.598,
     1           0.602, 0.604, 0.606, 0.607, 0.607, 0.609, 0.610, 0.614, 0.617, 0.617, 0.617,
     2           0.617, 0.617, 0.617, 0.617, 0.617, 0.617, 0.617, 0.617, 0.617, 0.617, 0.617,
     3           0.617, 0.616, 0.616, 0.615, 0.615, 0.615, 0.614, 0.613, 0.613, 0.612, 0.612,
     4           0.611, 0.611, 0.611, 0.610, 0.610, 0.610, 0.609, 0.609, 0.608, 0.608, 0.608,
     5           0.607, 0.607, 0.607, 0.606, 0.606, 0.605, 0.604, 0.604, 0.603, 0.602, 0.600,
     6           0.598, 0.597, 0.595, 0.594, 0.588, 0.582, 0.576, 0.571, 0.566, 0.561, 0.556,
     7           0.552, 0.548, 0.544, 0.540, 0.536, 0.534, 0.533, 0.530, 0.527, 0.524, 0.522,
     8           0.520, 0.519, 0.517, 0.515, 0.513, 0.511, 0.509, 0.509, 0.510, 0.525, 0.539,
     9           0.551, 0.562, 0.572, 0.581, 0.590, 0.598, 0.605, 0.612 /

      data s2m / 0.453, 0.453, 0.453, 0.453, 0.455, 0.457, 0.460, 0.461, 0.462, 0.464, 0.464,
     1           0.466, 0.467, 0.468, 0.469, 0.469, 0.470, 0.471, 0.473, 0.475, 0.476, 0.477,
     2           0.478, 0.479, 0.480, 0.481, 0.483, 0.484, 0.485, 0.487, 0.488, 0.490, 0.490,
     3           0.491, 0.491, 0.492, 0.493, 0.493, 0.494, 0.495, 0.496, 0.496, 0.497, 0.497,
     4           0.498, 0.498, 0.499, 0.499, 0.500, 0.500, 0.500, 0.501, 0.501, 0.502, 0.502,
     5           0.503, 0.503, 0.503, 0.504, 0.504, 0.505, 0.506, 0.506, 0.506, 0.506, 0.505,
     6           0.505, 0.504, 0.504, 0.503, 0.502, 0.501, 0.499, 0.498, 0.497, 0.496, 0.495,
     7           0.493, 0.492, 0.491, 0.493, 0.495, 0.496, 0.497, 0.498, 0.500, 0.501, 0.502,
     8           0.503, 0.503, 0.504, 0.505, 0.510, 0.514, 0.517, 0.523, 0.529, 0.541, 0.552,
     9           0.562, 0.571, 0.579, 0.587, 0.594, 0.601, 0.607, 0.612 /

      data sigcorr / 1.000, 0.74, 1.000, 1.000, 0.998, 0.996, 0.992,
     1               0.991, 0.989, 0.987, 0.986, 0.982, 0.98, 0.978, 0.978,
     2               0.977, 0.975, 0.973, 0.969, 0.965, 0.961, 0.96, 0.957,
     3               0.952, 0.946, 0.942, 0.937, 0.933, 0.929, 0.921, 0.914,
     4               0.908, 0.906, 0.902, 0.896, 0.891, 0.886, 0.882, 0.878,
     5               0.874, 0.866, 0.859, 0.856, 0.853, 0.847, 0.844, 0.841,
     6               0.836, 0.831, 0.829, 0.827, 0.823, 0.818, 0.815, 0.811,
     7               0.81, 0.804, 0.794, 0.783, 0.759, 0.737, 0.717, 0.71,
     8               0.698, 0.68, 0.664, 0.648, 0.634, 0.62, 0.607, 0.583,
     9               0.561, 0.541, 0.522, 0.504, 0.488, 0.472, 0.458, 0.444,
     1               0.431, 0.407, 0.385, 0.374, 0.364, 0.346, 0.328, 0.312,
     2               0.296, 0.289, 0.282, 0.268, 0.255, 0.243, 0.231, 0.22,
     3               0.209, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 /
      data taucorr / 1.000, 0.74, 1.000, 1.000, 0.998, 0.996, 0.992,
     1               0.991, 0.989, 0.987, 0.986, 0.982, 0.98, 0.978, 0.978,
     2               0.977, 0.975, 0.973, 0.969, 0.965, 0.961, 0.96, 0.957,
     3               0.952, 0.946, 0.942, 0.937, 0.933, 0.929, 0.921, 0.914,
     4               0.908, 0.906, 0.902, 0.896, 0.891, 0.886, 0.882, 0.878,
     5               0.874, 0.866, 0.859, 0.856, 0.853, 0.847, 0.844, 0.841,
     6               0.836, 0.831, 0.829, 0.827, 0.823, 0.818, 0.815, 0.811,
     7               0.81, 0.804, 0.794, 0.783, 0.759, 0.737, 0.717, 0.71,
     8               0.698, 0.68, 0.664, 0.648, 0.634, 0.62, 0.607, 0.583,
     9               0.561, 0.541, 0.522, 0.504, 0.488, 0.472, 0.458, 0.444,
     1               0.431, 0.407, 0.385, 0.374, 0.364, 0.346, 0.328, 0.312,
     2               0.296, 0.289, 0.282, 0.268, 0.255, 0.243, 0.231, 0.22,
     3               0.209, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 /

      n = 1.18
      c = 1.88
      sigamp = 0.30

C Find the requested spectral period and corresponding coefficients
      nPer = 105

C First check for the PGA, PGV, PGD cases
      if (specT .le. 0.0) then
        if ( specT .eq. 0.0 ) i1=1
        if ( specT .eq. -1. ) i1=2
         period1 = period(i1)
         a1T = a1(i1)
         a2T = a2(i1)
         a3T = a3(i1)
         a4T = a4(i1)
         a5T = a5(i1)
         a8T = a8(i1)
         a9T = a9(i1)
         a10T = a10(i1)
         a11T = a11(i1)
         a12T = a12(i1)
         a13T = a13(i1)
         a14T = a14(i1)
         a15T = a15(i1)
         a16T = a16(i1)
         a18T = a18(i1)
         c4T = c4(i1)
         b_soilT = b_soil(i1)
         vLinT   = vLin(i1)
         if (vs30_class .eq. 0) then
            s1T = s1e(i1)
            s2T = s2e(i1)
         elseif (vs30_class .eq. 1) then
            s1T = s1m(i1)
            s2T = s2m(i1)
         endif
         s3T = s3(i1)
         s4T = s4(i1)
         taucorrT = taucorr(i1)
         sigcorrT = sigcorr(i1)
         goto 1011
      endif

C   For other periods, loop over the spectral period range of the attenuation relationship.
      do i=3,nper-1+2
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Abrahamson and Silva (NGA-2008) Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),a1(count1),a1(count2),
     +                   specT,a1T,iflag)
            call interp (period(count1),period(count2),a2(count1),a2(count2),
     +                   specT,a2T,iflag)
            call interp (period(count1),period(count2),a3(count1),a3(count2),
     +                   specT,a3T,iflag)
            call interp (period(count1),period(count2),a4(count1),a4(count2),
     +                   specT,a4T,iflag)
            call interp (period(count1),period(count2),a5(count1),a5(count2),
     +                   specT,a5T,iflag)
            call interp (period(count1),period(count2),a8(count1),a8(count2),
     +                   specT,a8T,iflag)
            call interp (period(count1),period(count2),a9(count1),a9(count2),
     +                   specT,a9T,iflag)
            call interp (period(count1),period(count2),a10(count1),a10(count2),
     +                   specT,a10T,iflag)
            call interp (period(count1),period(count2),a11(count1),a11(count2),
     +                   specT,a11T,iflag)
            call interp (period(count1),period(count2),a12(count1),a12(count2),
     +                   specT,a12T,iflag)
            call interp (period(count1),period(count2),a13(count1),a13(count2),
     +                   specT,a13T,iflag)
            call interp (period(count1),period(count2),a14(count1),a14(count2),
     +                   specT,a14T,iflag)
            call interp (period(count1),period(count2),a15(count1),a15(count2),
     +                   specT,a15T,iflag)
            call interp (period(count1),period(count2),a16(count1),a16(count2),
     +                   specT,a16T,iflag)
            call interp (period(count1),period(count2),a18(count1),a18(count2),
     +                   specT,a18T,iflag)
            call interp (period(count1),period(count2),c4(count1),c4(count2),
     +                   specT,c4T,iflag)
            call interp (period(count1),period(count2),b_soil(count1),b_soil(count2),
     +                   specT,b_soilT,iflag)
            call interp (period(count1),period(count2),vLin(count1),vLin(count2),
     +                   specT,vLinT,iflag)

            if (vs30_class .eq. 0) then
               call interp (period(count1),period(count2),s1e(count1),s1e(count2),
     +                   specT,s1T,iflag)
               call interp (period(count1),period(count2),s2e(count1),s2e(count2),
     +                   specT,s2T,iflag)
            elseif (vs30_class .eq. 1) then
               call interp (period(count1),period(count2),s1m(count1),s1m(count2),
     +                   specT,s1T,iflag)
               call interp (period(count1),period(count2),s2m(count1),s2m(count2),
     +                   specT,s2T,iflag)
            endif
            call interp (period(count1),period(count2),s3(count1),s3(count2),
     +                   specT,s3T,iflag)
            call interp (period(count1),period(count2),s4(count1),s4(count2),
     +                   specT,s4T,iflag)
            call interp (period(count1),period(count2),sigcorr(count1),sigcorr(count2),
     +                   specT,sigcorrT,iflag)
            call interp (period(count1),period(count2),taucorr(count1),taucorr(count2),
     +                   specT,taucorrT,iflag)

 1011 period1 = specT

c     Set distance (Eq. 3)
      R = sqrt(rRup**2 + c4T**2)

C     Set the 5 taper models (Eq. 8-12)
C     Taper 1 (Eq. 8)
      if ( rjb .ge. 30. ) then
         taper1 = 0.
      else
         taper1 = (30. - rjb) / 30.
      endif

c     Taper 2 (Eq. 9)
      if ( abs(dip) .eq. 90.0 .or. Rx .gt. width*cos(abs(dip)*3.14159/180.0) ) then
         taper2 = 1.
       else
         taper2 = 0.5 + Rx/(2.0*width*cos(abs(dip)*3.14159/180.0))
       endif

c     Set Taper 3 (Eq. 10)
      if (Rx .ge. DepthTop) then
         taper3 = 1.0
      else
         taper3 = Rx/depthTop
      endif

c     Set Taper 4 (Eq. 11)
      if ( mag .ge. 7. ) then
        taper4 = 1.0
      elseif ( mag .gt. 6.0) then
        taper4 = (mag-6.0)
      else
        taper4 = 0.0
      endif

c     Set Taper 5 (Eq. 12)
c      if ( abs(dip) .lt. 70. ) then
c        taper5 = 1.
c      else
c        taper5 = 1. - (abs(dip)-70.)/20.
c      endif
C     Modification of Taper5 model from N. Abrahamson (per com. 6/2010)
      if ( abs(dip) .lt. 30. ) then
        taper5 = 1.
      else
        taper5 = 1. - (abs(dip)-30.)/60.
      endif

C     Base Model (Eq. 2)
      c1 = 6.75
       if ( mag .le. c1 ) then
        sum = a1T + a4T*(Mag-c1) + a8T*(8.5-Mag)**2 + (a2T + a3T*(Mag-c1))*alog(R)
       else
        sum = a1T + a5T*(Mag-c1) + a8T*(8.5-Mag)**2 + (a2T + a3T*(Mag-c1))*alog(R)
       endif

c     style of faulting
      sum = sum + a12T*Frv + a13T*Fn

c     Site response
c     Set Velocity for break in slope (Eq. 6)
      if ( specT .ge. 2.0) then
	    v1 = 700.
      elseif ( specT .gt. 1.00 ) then
	    v1 = exp(6.76-0.297*alog(specT))
      elseif ( specT .gt. 0.50 ) then
	    v1 = exp(8.0-0.795*alog(specT/0.21))
      elseif (specT .eq. -1.0) then
	    v1 = 862.0
      elseif (specT .eq. -2.0) then
	    v1 = 700.0
      else
            v1 = 1500.
      endif

C     Set the Vs30* (Eq. 5)
      if ( vs30 .lt. v1 ) then
	    vs = vs30
      else
	    vs = v1
      endif

c     Compute site amplification (Eq. 4)
      if (vs30 .lt. vLinT) then
          soilamp = a10T*alog(vs/vLinT) - 1.0*b_soilT*alog(c+pgaRock)
     1              + b_soilT*alog(pgaRock+c*((vs/vLinT)**(n)) )
      else
     	  soilamp = (a10T + b_soilT*n) * alog(vs/vLinT)
      endif
      sum = sum + soilamp

C     Soil Depth Model
C     (Eq. 17)
      if (vs30 .lt. 180) then
         zhat = exp(6.745)
      elseif (vs30 .le. 500.0) then
         zhat = exp(6.745-1.35*alog(vs30/180.0) )
      else
         zhat = exp(5.394-4.48*alog(vs30/500.0) )
      endif

C     (Eq. 19)
      if (vs30 .gt. 1000 .or. specT .lt. 0.35) then
         e2 = 0.0
      elseif (specT .ge. 0.35 .and. specT .le. 2.0) then
         e2 = -0.25*alog(vs30/1000)*alog(specT/0.35)
      else
         e2 = -0.25*alog(vs30/1000)*alog(2.00/0.35)
      endif

C     (Eq. 20)
      if (specT .ge. 2.0) then
         a22 = 0.0625*(specT-2.00)
      else
         a22 = 0.0
      endif

C     Test Value for Eq. 18
      c2 = 50.0
      if (v1 .lt. 1000.0) then
         testv1 = v1
      else
         testv1 = 1000.0
      endif

      test = (a10T+b_soilT*n)*alog(vs/(testv1)) +
     1        e2*alog((z10*1000.0+c2)/(zhat+c2))

C     (Eq. 18)
      if (vs30 .ge. 1000.0) then
         a21 = 0.0
      elseif (test .lt. 0.0) then
         a21 = -1.0*(a10T+b_soilT*n)*alog(vs/testv1) /
     1           alog((z10*1000.0+c2)/(zhat+c2))
      else
         a21 = e2
      endif

C     (Eq. 16)
      if (z10*1000.0 .ge. 200) then
         sum = sum + a21*alog((z10*1000.0+c2)/(zhat+c2)) +
     1               a22*alog(z10*1000.0/200.0)
      else
         sum = sum+ a21*alog((z10*1000.0+c2)/(zhat+c2))
      endif

c     Hanging wall Model (Eq. 7)
      if ( HWFlag .eq. 1 ) then
        sum = sum + a14T * taper1 * taper2 * taper3 * taper4 * taper5
      endif

c     Depth to top of Rupture Model
C     (Eq. 13)
      if (depthTop .le. 10.) then
            sum = sum +a16T*depthtop/10.0
         else
            sum = sum + a16T
      endif

C     Large Distance Model
C     (Eq. 15)
      if (mag .lt. 5.5) then
         T6 = 1.0
      elseif (mag .le. 6.5) then
         T6 = 0.5*(6.5 - mag) + 0.5
      else
         T6 = 0.5
      endif
C     (Eq. 14)
      if (Rrup .lt. 100.0) then
         sum = sum
      else
         sum = sum + a18T*(Rrup - 100.0)*T6
      endif

C     Set the Sigma Values
c     Compute parital derivative of alog(soil amp) w.r.t. alog(rock PGA)
c     (Eq. 26)
      if ( vs30 .ge. vLinT) then
        dAmp_dPGA = 0.
      else
        dAmp_dPGA = b_soilT*pgaRock * ( -1. / (pgaRock+c)
     1              + 1./ (pgaRock + c*(vs30/vLinT)**(n)) )
      endif

c     (Eq. 27)
      if (mag .lt. 5.0) then
         sigmanot = s1T
         if (vs30_class .eq. 0) then
            sigmanotPGA = s1e(1)
         else
            sigmanotPGA = s1m(1)
         endif
      elseif (mag .le. 7.0) then
         sigmanot = s1T + ((s2T-s1T)/2.0)*(mag-5.0)
         if (vs30_class .eq. 0) then
            sigmanotPGA = s1e(1) + ((s2e(1)-s1e(1))/2.0)*(mag-5.0)
         else
            sigmanotPGA = s1m(1) + ((s2m(1)-s1m(1))/2.0)*(mag-5.0)
         endif
      else
         sigmanot = s2T
         if (vs30_class .eq. 0) then
            sigmanotPGA = s2e(1)
         else
            sigmanotPGA = s2m(1)
         endif
      endif

c     (Eq. 28)
      if (mag .lt. 5.0) then
         taunot = s3T
         taunotPGA = s3(1)
      elseif (mag .le. 7.0) then
         taunot = s3T + ((s4T-s3T)/2.0)*(mag-5.0)
         taunotPGA = s3(1) + ((s4(1)-s3(1))/2.0)*(mag-5.0)
      else
         taunot = s4T
         taunotPGA = s4(1)
      endif

C     (Eq. 23)
      sigmaB = sqrt(sigmanot*sigmanot - sigamp*sigamp)
      sigmaBPGA = sqrt(sigmanotPGA*sigmanotPGA - sigamp*sigamp)

C     (Eq. 24)
      sigma = sqrt( sigmaB**2 + sigAmp**2 + (dAmp_dPGA * sigmaBPGA)**2
     1        + 2. * dAmp_dPGA * sigmaBPGA * sigmaB * sigCorrT )

C     (Eq. 25)
      tau = sqrt( taunot**2 + (dAmp_dPGA * taunotPGA)**2
     1        + 2. * dAmp_dPGA * taunotPGA * taunot * tauCorrT )

c     Set total to return
      lnSa = sum

      return
      end

c ---------------------------------------------------------------------
C ** Chiou and Youngs (NGA-2008 Model) Horizontal **
c ---------------------------------------------------------------------
      Subroutine CY_NGA_2008 ( m, Rrup, Rbjf, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, Delta, DTor, Ftype, depthvs10, vs30_class,
     3                     hwflag, Rx, phi, tau )

      parameter (MAXPER=107)
      REAL Period(MAXPER), C1(MAXPER), C1a(MAXPER), C1b(MAXPER)
      REAL cn(MAXPER), cm(MAXPER), c5(MAXPER), c6(MAXPER)
      REAL c7(MAXPER), c9(MAXPER), gamma1(MAXPER), gamma2(MAXPER)
      REAL phi1(MAXPER), phi2(MAXPER), phi3(MAXPER), phi4(MAXPER)
      REAL phi5(MAXPER), phi6(MAXPER), phi7(MAXPER), phi8(MAXPER)
      REAL tau1(MAXPER), tau2(MAXPER), sigma1(MAXPER), sigma2(MAXPER)
      REAL sigma3(MAXPER), sigma4(MAXPER), c9a(MAXPER)

      REAL c1T, c1aT, c1bT, cnT, cmT, c5T, c6T, c7T, c9T, c9aT
      REAL gamma1T, gamma2T, phi1T, phi2T, phi3T, phi4T, sigma3T, sigma4T
      REAL phi5T, phi6T, phi7T, phi8T, tau1T, tau2T, sigma1T, sigma2T
      REAL c2, c3, c4, c4a, cRB, cHM, gm, pi, d2r, gamma
      real cc, cosdelta, r1, r2, r3, r4, hw, psa_ref, psa, a, b, c
      integer iflag, count1, count2, hwflag, vs30_class
      REAL M, RRUP, RBJF, DTOR, Delta, specT, sigma, Ftype, Rx
      REAL period2, lnY, F_RV, F_NM, depthvs10, sigma_M, tau, NL, rkdepth
      real phi

      data period / 0.0, -1.0, 0.01, 0.02, 0.022, 0.025, 0.029, 0.03, 0.032, 0.035, 0.036, 0.04,
     1              0.042, 0.044, 0.045, 0.046, 0.048, 0.05, 0.055, 0.06, 0.065, 0.067,
     1              0.07, 0.075, 0.08, 0.085, 0.09, 0.095, 0.1, 0.11, 0.12, 0.13, 0.133,
     1              0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.2, 0.22, 0.24, 0.25, 0.26,
     1              0.28, 0.29, 0.3, 0.32, 0.34, 0.35, 0.36, 0.38, 0.4, 0.42, 0.44,
     1              0.45, 0.46, 0.48, 0.5, 0.55, 0.6, 0.65, 0.667, 0.7, 0.75, 0.8, 0.85,
     1              0.9, 0.95, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.2,
     1              2.4, 2.5, 2.6, 2.8, 3.0, 3.2, 3.4, 3.5, 3.6, 3.8, 4.0, 4.2, 4.4, 4.6,
     1              4.8, 5.0, 5.5, 6.0, 6.5, 7.0, 7.5, 8.0, 8.5, 9.0, 9.5, 10.0 /
      data c1    / -1.2687, 2.2884, -1.268694, -1.251478, -1.238087, -1.216428, -1.18418,
     1   -1.174374, -1.154467, -1.123314, -1.111874, -1.067114,
     1   -1.043071, -1.018824, -1.00656, -0.994327, -0.970216,
     1   -0.946391, -0.889485, -0.836096, -0.787293, -0.769389,
     1   -0.743954, -0.705072, -0.670827, -0.640929, -0.6151,
     1   -0.593104, -0.574699, -0.545283, -0.527572, -0.519988,
     1   -0.520317, -0.522696, -0.530869, -0.544692, -0.562955,
     1   -0.584664, -0.608982, -0.635236, -0.689254, -0.746535,
     1   -0.776564, -0.806831, -0.866612, -0.897204, -0.92776,
     1   -0.987694, -1.046911, -1.076381, -1.10551, -1.162283,
     1   -1.217597, -1.271357, -1.323477, -1.348959, -1.373988,
     1   -1.422616, -1.469453, -1.578991, -1.678576, -1.769127,
     1   -1.797932, -1.8516, -1.927839, -1.998837, -2.06549,
     1   -2.128468, -2.188278, -2.245326, -2.352111, -2.451947,
     1   -2.547437, -2.640124, -2.730652, -2.818867, -2.904397,
     1   -2.986847, -3.065866, -3.141253, -3.281536, -3.409571,
     1   -3.469751, -3.527743, -3.637785, -3.741264, -3.838964,
     1   -3.931396, -3.975878, -4.019205, -4.102464, -4.181358,
     1   -4.256034, -4.326756, -4.39387, -4.457747, -4.518726,
     1   -4.660582, -4.789382, -4.907897, -5.018331, -5.12243,
     1   -5.221536, -5.316573, -5.40817, -5.496751, -5.587222 /

      data c1a   / 0.1, 0.1094, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
     1   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
     1   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
     1   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
     1   0.1, 0.1, 0.0999, 0.0999, 0.0999, 0.0999, 0.0999,
     1   0.0998, 0.0998, 0.0998, 0.0997, 0.0996, 0.0995,
     1   0.0995, 0.0994, 0.0993, 0.0991, 0.0986, 0.0978,
     1   0.0968, 0.0963, 0.0954, 0.0936, 0.0914, 0.0887,
     1   0.0853, 0.0813, 0.0766, 0.0651, 0.0512, 0.0355,
     1   0.0188, 0.0022, -0.0135, -0.0275, -0.0399, -0.0504,
     1   -0.0591, -0.0722, -0.0808, -0.084, -0.0866, -0.0905,
     1   -0.0931, -0.0949, -0.0962, -0.0967, -0.0971, -0.0978,
     1   -0.0982, -0.0986, -0.0989, -0.0991, -0.0993, -0.0994,
     1   -0.0996, -0.0998, -0.0998, -0.0999, -0.0999, -0.0999,
     1   -0.1, -0.1, -0.1, -0.1 /

      data c1b   / -0.2550, -0.0626, -0.255, -0.255, -0.255, -0.255, -0.255, -0.255,
     1   -0.255, -0.255, -0.255, -0.255, -0.255, -0.255,
     1   -0.255, -0.255, -0.255, -0.255, -0.255, -0.255,
     1   -0.2547, -0.254, -0.254, -0.254, -0.254, -0.254,
     1   -0.254, -0.253, -0.253, -0.2529, -0.252, -0.251,
     1   -0.251, -0.2504, -0.25, -0.249, -0.248, -0.247,
     1   -0.246, -0.2449, -0.2428, -0.24, -0.2382, -0.237,
     1   -0.2343, -0.2328, -0.2313, -0.2275, -0.2247, -0.2226,
     1   -0.2214, -0.218, -0.2146, -0.2107, -0.2073, -0.2054,
     1   -0.2037, -0.2008, -0.1972, -0.1889, -0.1814, -0.1744,
     1   -0.1722, -0.168, -0.162, -0.1564, -0.1511, -0.1472,
     1   -0.1432, -0.14, -0.1337, -0.1282, -0.1246, -0.1214,
     1   -0.1184, -0.1166, -0.114, -0.1125, -0.1111, -0.11,
     1   -0.108, -0.107, -0.106, -0.106, -0.105, -0.104, -0.104,
     1   -0.103, -0.103, -0.103, -0.102, -0.102, -0.102, -0.102,
     1   -0.102, -0.101, -0.101, -0.101, -0.101, -0.101, -0.101,
     1   -0.101, -0.1, -0.1, -0.1, -0.1, -0.1 /

      data cn    / 2.996, 1.648, 2.996, 3.2924, 3.3516, 3.4293, 3.5012, 3.5137,
     1   3.5331, 3.5512, 3.5549, 3.563, 3.5627, 3.5607,
     1   3.5594, 3.5574, 3.5526, 3.5473, 3.5308, 3.5129,
     1   3.493, 3.4844, 3.4714, 3.448, 3.4232, 3.3966,
     1   3.3689, 3.3407, 3.312, 3.2549, 3.1992, 3.1447,
     1   3.1288, 3.0932, 3.0436, 2.997, 2.9522, 2.91,
     1   2.8701, 2.8312, 2.7596, 2.6916, 2.6579, 2.6256,
     1   2.5637, 2.5334, 2.5048, 2.4487, 2.397, 2.3719,
     1   2.348, 2.3034, 2.2611, 2.2218, 2.1848, 2.1672,
     1   2.15, 2.1178, 2.0868, 2.0174, 1.957, 1.9036,
     1   1.8868, 1.8554, 1.8119, 1.7727, 1.7368, 1.7039,
     1   1.6747, 1.648, 1.6046, 1.5717, 1.5462, 1.5263,
     1   1.511, 1.4984, 1.4889, 1.4814, 1.4744, 1.4698,
     1   1.4625, 1.458, 1.4562, 1.456, 1.455, 1.4557, 1.4565,
     1   1.4581, 1.4594, 1.4606, 1.463, 1.4652, 1.4676,
     1   1.4703, 1.4733, 1.4752, 1.4779, 1.4831, 1.4878,
     1   1.4923, 1.4955, 1.4975, 1.499, 1.5, 1.501, 1.501, 1.502 /

      data cM    / 4.1840, 4.2979, 4.184, 4.1879, 4.1828, 4.1734, 4.1593, 4.1556,
     1   4.1485, 4.1382, 4.1351, 4.1226, 4.1174, 4.1123, 4.1104,
     1   4.1084, 4.1038, 4.1011, 4.094, 4.0892, 4.0867, 4.086,
     1   4.086, 4.086, 4.0873, 4.0899, 4.0938, 4.0985, 4.103,
     1   4.1144, 4.1277, 4.1416, 4.1459, 4.1565, 4.1717, 4.1871,
     1   4.2023, 4.2172, 4.2323, 4.2476, 4.2759, 4.3042, 4.3184,
     1   4.332, 4.3584, 4.3712, 4.3844, 4.4086, 4.4323, 4.4441,
     1   4.4557, 4.4768, 4.4979, 4.5172, 4.5361, 4.5452, 4.5545,
     1   4.5712, 4.5881, 4.6273, 4.6632, 4.6959, 4.7071, 4.7276,
     1   4.7571, 4.7851, 4.8114, 4.8362, 4.8597, 4.882, 4.9245,
     1   4.9641, 5.0013, 5.0367, 5.0697, 5.1019, 5.1325, 5.1623,
     1   5.1905, 5.2173, 5.2691, 5.3173, 5.3393, 5.361, 5.4013,
     1   5.4385, 5.4737, 5.5069, 5.5229, 5.5382, 5.5687, 5.5977,
     1   5.6252, 5.6518, 5.6776, 5.7027, 5.7276, 5.7855, 5.8404,
     1   5.8924, 5.9422, 5.9891, 6.0339, 6.077, 6.1172, 6.1561, 6.193 /

      data c5    / 6.16, 5.17, 6.16, 6.158, 6.158, 6.157, 6.1558, 6.155, 6.1545,
     1   6.153, 6.153, 6.1508, 6.1497, 6.1487, 6.1477, 6.147,
     1   6.1459, 6.1441, 6.1409, 6.1362, 6.1314, 6.1294, 6.126,
     1   6.12, 6.1144, 6.1072, 6.1007, 6.0929, 6.085, 6.0683,
     1   6.0494, 6.0296, 6.0237, 6.0087, 5.9871, 5.9647, 5.9416,
     1   5.9177, 5.8942, 5.8699, 5.8231, 5.7767, 5.7547, 5.7335,
     1   5.6917, 5.6719, 5.6527, 5.6163, 5.5832, 5.5681, 5.5528,
     1   5.5252, 5.4997, 5.4764, 5.4555, 5.4458, 5.4362, 5.4189,
     1   5.4029, 5.3697, 5.3431, 5.3213, 5.3149, 5.3045, 5.29,
     1   5.2788, 5.2692, 5.2607, 5.2537, 5.248, 5.2387, 5.2321,
     1   5.2266, 5.2224, 5.2194, 5.2166, 5.214, 5.2125, 5.2111,
     1   5.2099, 5.208, 5.206, 5.206, 5.205, 5.2043, 5.204, 5.203,
     1   5.203, 5.203, 5.2024, 5.202, 5.202, 5.202, 5.2017, 5.201,
     1   5.201, 5.201, 5.201, 5.201, 5.201, 5.201, 5.2, 5.2, 5.2,
     1   5.2, 5.2, 5.2 /

      data c6    / 0.4893, 0.4407, 0.4893, 0.4892, 0.4892, 0.4891, 0.4891, 0.489, 0.489,
     1   0.4889, 0.4889, 0.4888, 0.4887, 0.4887, 0.4886, 0.4886, 0.4885,
     1   0.4884, 0.4883, 0.488, 0.4878, 0.4876, 0.4875, 0.4872, 0.4869,
     1   0.4865, 0.4862, 0.4858, 0.4854, 0.4846, 0.4837, 0.4828, 0.4825,
     1   0.4818, 0.4808, 0.4797, 0.4787, 0.4776, 0.4765, 0.4755, 0.4735,
     1   0.4715, 0.4706, 0.4698, 0.468, 0.4673, 0.4665, 0.4651, 0.4638,
     1   0.4632, 0.4626, 0.4616, 0.4607, 0.4598, 0.4591, 0.4587, 0.4583,
     1   0.4578, 0.4571, 0.456, 0.455, 0.4542, 0.454, 0.4536, 0.4531,
     1   0.4528, 0.4524, 0.4522, 0.4519, 0.4517, 0.4514, 0.4511, 0.451,
     1   0.4508, 0.4507, 0.4506, 0.4505, 0.4504, 0.4504, 0.4504, 0.4503,
     1   0.4502, 0.4502, 0.4502, 0.4502, 0.4501, 0.4501, 0.4501, 0.4501,
     1   0.4501, 0.4501, 0.4501, 0.4501, 0.4501, 0.4501, 0.45, 0.45,
     1   0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.45 /

      data c7    / 0.0512, 0.0207, 0.0512, 0.0512, 0.0512, 0.0512, 0.0511, 0.0511, 0.0511, 0.051,
     1   0.0509, 0.0508, 0.0507, 0.0506, 0.0506, 0.0505, 0.0505, 0.0504,
     1   0.0502, 0.05, 0.0499, 0.0498, 0.0497, 0.0495, 0.0494, 0.0492,
     1   0.0491, 0.049, 0.0489, 0.0486, 0.0484, 0.0482, 0.0482, 0.0481,
     1   0.0479, 0.0477, 0.0476, 0.0474, 0.0473, 0.0471, 0.0468, 0.0466,
     1   0.0464, 0.0463, 0.046, 0.0459, 0.0458, 0.0455, 0.0453, 0.0452,
     1   0.045, 0.0448, 0.0445, 0.0442, 0.0439, 0.0437, 0.0436, 0.0432,
     1   0.0429, 0.0421, 0.0412, 0.0404, 0.0401, 0.0395, 0.0387, 0.0379,
     1   0.0372, 0.0364, 0.0357, 0.035, 0.0336, 0.0322, 0.0308, 0.0294,
     1   0.028, 0.0266, 0.0253, 0.024, 0.0227, 0.0213, 0.0188, 0.0165,
     1   0.0154, 0.0144, 0.0124, 0.0106, 0.009, 0.0076, 0.0069, 0.0063,
     1   0.0052, 0.0041, 0.0033, 0.0025, 0.0019, 0.0014, 0.001, 0.0002,
     1   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /

      data c9    / 0.79, 0.3079, 0.79, 0.8129, 0.8188, 0.828, 0.8407, 0.8439, 0.8502, 0.8594,
     1   0.8624, 0.874, 0.8795, 0.8848, 0.8874, 0.8899, 0.8949, 0.8996,
     1   0.9105, 0.9204, 0.9292, 0.9325, 0.9371, 0.9442, 0.9505, 0.9559,
     1   0.9606, 0.9645, 0.9677, 0.9718, 0.9733, 0.9725, 0.9719, 0.9699,
     1   0.966, 0.9609, 0.9549, 0.9482, 0.941, 0.9334, 0.9179, 0.9023,
     1   0.8946, 0.8871, 0.8726, 0.8657, 0.859, 0.8462, 0.8342, 0.8284,
     1   0.8228, 0.8121, 0.8019, 0.7922, 0.783, 0.7786, 0.7743, 0.7659,
     1   0.7578, 0.7391, 0.7221, 0.7065, 0.7015, 0.6922, 0.6788, 0.6662,
     1   0.654, 0.6423, 0.6308, 0.6196, 0.5975, 0.5756, 0.5538, 0.532,
     1   0.5101, 0.4877, 0.4649, 0.4412, 0.4169, 0.3917, 0.339, 0.2833,
     1   0.2546, 0.2262, 0.1722, 0.1244, 0.0846, 0.0538, 0.042, 0.0322,
     1   0.0177, 0.0086, 0.0031, 0.0004, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /

      data c9a   / 1.5005, 2.6690, 1.500502, 1.502755, 1.503506, 1.504559, 1.506667, 1.507119,
     1   1.508175, 1.510438, 1.511043, 1.513765, 1.515734, 1.517706,
     1   1.518617, 1.519528, 1.521353, 1.523027, 1.529743, 1.535875,
     1   1.542802, 1.546354, 1.551621, 1.55971, 1.567842, 1.579171,
     1   1.590105, 1.600474, 1.610428, 1.638367, 1.664459, 1.692658,
     1   1.702334, 1.724608, 1.754879, 1.784789, 1.819388, 1.852804,
     1   1.884759, 1.915732, 1.9806, 2.041531, 2.070935, 2.098242,
     1   2.150499, 2.175808, 2.200534, 2.246784, 2.284621, 2.302971,
     1   2.321004, 2.355846, 2.388582, 2.412588, 2.435617, 2.446846,
     1   2.457882, 2.479359, 2.500023, 2.533749, 2.564594, 2.589332,
     1   2.595295, 2.606478, 2.622426, 2.636626, 2.645606, 2.65382,
     1   2.661527, 2.66899, 2.677276, 2.685052, 2.690965, 2.694735,
     1   2.698511, 2.701481, 2.703372, 2.705265, 2.706889, 2.708514,
     1   2.710139, 2.711766, 2.712308, 2.712851, 2.713665, 2.714479,
     1   2.715022, 2.715293, 2.715565, 2.715836, 2.716108, 2.71638,
     1   2.716651, 2.716651, 2.716923, 2.716923, 2.717195, 2.717466,
     1   2.717466, 2.717738, 2.717738, 2.717738, 2.71801, 2.71801,
     1   2.71801, 2.71801, 2.71801 /

      data gamma1  / -0.00804, -0.00275, -0.00804, -0.008113, -0.008155, -0.00823, -0.008351,
     1      -0.008387, -0.008454, -0.008564, -0.008599, -0.008754,
     1      -0.008833, -0.008906, -0.008945, -0.008984, -0.00905,
     1      -0.009121, -0.009288, -0.009433, -0.009561, -0.009603,
     1      -0.009656, -0.009733, -0.009782, -0.009808, -0.009809,
     1      -0.009788, -0.009753, -0.009627, -0.00946, -0.009269,
     1      -0.009205, -0.009054, -0.008832, -0.00861, -0.008398,
     1      -0.008183, -0.007976, -0.007776, -0.007397, -0.007044,
     1      -0.006877, -0.006715, -0.006408, -0.006263, -0.006123,
     1      -0.005859, -0.005614, -0.005497, -0.005386, -0.005175,
     1      -0.00498, -0.004799, -0.004632, -0.004552, -0.004477,
     1      -0.004332, -0.004199, -0.003903, -0.003652, -0.003435,
     1      -0.003368, -0.003246, -0.003078, -0.002929, -0.002795,
     1      -0.002674, -0.002564, -0.002464, -0.002287, -0.002138,
     1      -0.00201, -0.001898, -0.001802, -0.001717, -0.001643,
     1      -0.001578, -0.001519, -0.001467, -0.001381, -0.001311,
     1      -0.001281, -0.001255, -0.001209, -0.001172, -0.001142,
     1      -0.001117, -0.001106, -0.001096, -0.001079, -0.001065,
     1      -0.001052, -0.001042, -0.001032, -0.001024, -0.001016,
     1      -0.000999, -0.000987, -0.000977, -0.000968, -0.000961,
     1      -0.000955, -0.00095, -0.000945, -0.000941, -0.000937 /

      data gamma2  / -0.00785, -0.00625, -0.00785, -0.007921, -0.007962, -0.008035, -0.008154,
     1      -0.008189, -0.008255, -0.008362, -0.008396, -0.008547,
     1      -0.008624, -0.008696, -0.008734, -0.008771, -0.008836,
     1      -0.008906, -0.009068, -0.00921, -0.009335, -0.009376,
     1      -0.009428, -0.009503, -0.00955, -0.009577, -0.009577,
     1      -0.009557, -0.009522, -0.0094, -0.009236, -0.00905,
     1      -0.008988, -0.00884, -0.008623, -0.008406, -0.008199,
     1      -0.007989, -0.007787, -0.007592, -0.007222, -0.006878,
     1      -0.006714, -0.006556, -0.006257, -0.006115, -0.005979,
     1      -0.00572, -0.005481, -0.005368, -0.005259, -0.005053,
     1      -0.004862, -0.004686, -0.004522, -0.004445, -0.004371,
     1      -0.00423, -0.0041, -0.003811, -0.003565, -0.003354,
     1      -0.003288, -0.003169, -0.003005, -0.00286, -0.002729,
     1      -0.002611, -0.002504, -0.002406, -0.002233, -0.002087,
     1      -0.001962, -0.001854, -0.001759, -0.001677, -0.001604,
     1      -0.00154, -0.001483, -0.001433, -0.001348, -0.00128,
     1      -0.001251, -0.001225, -0.001181, -0.001145, -0.001115,
     1      -0.001091, -0.00108, -0.001071, -0.001054, -0.00104,
     1      -0.001027, -0.001017, -0.001007, -0.000999, -0.000992,
     1       -0.000976, -0.000964, -0.000954, -0.000945, -0.000938,
     1      -0.000933, -0.000927, -0.000923, -0.000919, -0.000914 /

      data phi1   / -0.4417, -0.7861, -0.4417, -0.434, -0.4313, -0.4267, -0.4196, -0.4177,
     1    -0.4139, -0.4082, -0.4064, -0.4, -0.3973, -0.3949, -0.3939,
     1    -0.393, -0.3914, -0.3903, -0.3892, -0.3903, -0.3934, -0.3951,
     1    -0.3981, -0.404, -0.4108, -0.4182, -0.4261, -0.4341, -0.4423,
     1    -0.4585, -0.4743, -0.4892, -0.4935, -0.5032, -0.5162, -0.5283,
     1    -0.5396, -0.5502, -0.5602, -0.5697, -0.5873, -0.6034, -0.6109,
     1    -0.6182, -0.6319, -0.6383, -0.6444, -0.6559, -0.6665, -0.6715,
     1    -0.6762, -0.685, -0.6931, -0.7005, -0.7072, -0.7104, -0.7135,
     1    -0.7193, -0.7246, -0.7365, -0.7468, -0.7557, -0.7585, -0.7636,
     1    -0.7708, -0.7773, -0.7833, -0.7888, -0.7941, -0.799, -0.8082,
     1    -0.8165, -0.8243, -0.8315, -0.8382, -0.8445, -0.8504, -0.856,
     1    -0.8613, -0.8663, -0.8755, -0.8836, -0.8874, -0.8909, -0.8974,
     1    -0.9032, -0.9083, -0.913, -0.9151, -0.917, -0.9205, -0.9231,
     1    -0.9249, -0.9257, -0.9255, -0.9243, -0.9222, -0.9129, -0.8982,
     1    -0.8791, -0.8572, -0.8346, -0.8126, -0.7914, -0.7711, -0.7517, -0.7332 /

      data phi2   / -0.1417, -0.0699, -0.1417, -0.1364, -0.1361, -0.1365, -0.1392, -0.1403, -0.143,
     1    -0.1482, -0.1502, -0.1591, -0.1641, -0.1694, -0.1721, -0.1748,
     1    -0.1804, -0.1862, -0.2008, -0.2153, -0.2291, -0.2344, -0.242,
     1    -0.2538, -0.2644, -0.2739, -0.2819, -0.2887, -0.2943, -0.3025,
     1    -0.3077, -0.3106, -0.3111, -0.3118, -0.3113, -0.3093, -0.3062,
     1    -0.3022, -0.2976, -0.2927, -0.2823, -0.2716, -0.2662, -0.2609,
     1    -0.2505, -0.2455, -0.2405, -0.231, -0.222, -0.2177, -0.2135,
     1    -0.2053, -0.1975, -0.1901, -0.183, -0.1795, -0.1762, -0.1696,
     1    -0.1633, -0.1487, -0.1353, -0.1232, -0.1194, -0.1124, -0.1028,
     1    -0.0943, -0.0869, -0.0805, -0.0748, -0.0699, -0.0617, -0.0552,
     1    -0.0501, -0.0459, -0.0425, -0.0395, -0.0369, -0.0346, -0.0323,
     1    -0.0302, -0.0262, -0.0225, -0.0207, -0.019, -0.0159, -0.0129,
     1    -0.0102, -0.0077, -0.0066, -0.0055, -0.0036, -0.0016, 0.0, 0.0,
     1    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /

      data phi3   / -0.007010, -0.008444, -0.00701, -0.007279, -0.007301, -0.007364, -0.007378, -0.007354,
     1    -0.007281, -0.007162, -0.007129, -0.006977, -0.006878, -0.006765,
     1    -0.00671, -0.006656, -0.006556, -0.006467, -0.006279, -0.006117,
     1    -0.00597, -0.005914, -0.005835, -0.005734, -0.00567, -0.005632,
     1    -0.005607, -0.005597, -0.005604, -0.005644, -0.005696, -0.005744,
     1    -0.005758, -0.005794, -0.005845, -0.005901, -0.005959, -0.006019,
     1    -0.00608, -0.006141, -0.006262, -0.006381, -0.006439, -0.006495,
     1    -0.006604, -0.006655, -0.006704, -0.006795, -0.006882, -0.006923,
     1    -0.006965, -0.007047, -0.007125, -0.007194, -0.007259, -0.00729,
     1    -0.00732, -0.007378, -0.007435, -0.007579, -0.00772, -0.007863,
     1    -0.007911, -0.008001, -0.00812, -0.008223, -0.008313, -0.008381,
     1    -0.008423, -0.008444, -0.0085, -0.008478, -0.008307, -0.008042,
     1    -0.007707, -0.007317, -0.006862, -0.006265, -0.005541, -0.004792,
     1    -0.003555, -0.002764, -0.002497, -0.002292, -0.002007, -0.001828,
     1    -0.001713, -0.001636, -0.001608, -0.001585, -0.001549, -0.001523,
     1    -0.001501, -0.001483, -0.001467, -0.001453, -0.00144, -0.001416,
     1    -0.001397, -0.001384, -0.001375, -0.001369, -0.001364, -0.001362,
     1    -0.00136, -0.00136, -0.001361 /

      data phi4   / 0.102151, 5.4100, 0.102151, 0.10836, 0.110372, 0.11371, 0.1186, 0.119888, 0.122493,
     1    0.12654, 0.127926, 0.133641, 0.136572, 0.139596, 0.141112, 0.142659,
     1    0.145774, 0.148927, 0.157001, 0.165249, 0.173635, 0.177001, 0.182082,
     1    0.190596, 0.199129, 0.207505, 0.215628, 0.223398, 0.230662, 0.243315,
     1    0.253169, 0.260175, 0.261767, 0.264504, 0.266468, 0.266468, 0.26506,
     1    0.262501, 0.259163, 0.255253, 0.246252, 0.236525, 0.231541, 0.22657,
     1    0.216796, 0.211993, 0.207277, 0.198077, 0.189304, 0.185074, 0.18092,
     1    0.172976, 0.165464, 0.158358, 0.151662, 0.148466, 0.145352, 0.139415,
     1    0.133828, 0.121226, 0.110339, 0.100842, 0.097891, 0.092504, 0.085153,
     1    0.078622, 0.072788, 0.067563, 0.06285, 0.058595, 0.051206, 0.045054,
     1    0.039879, 0.035504, 0.031787, 0.028613, 0.02589, 0.023537, 0.021496,
     1    0.019716, 0.016771, 0.014434, 0.013436, 0.012534, 0.010962, 0.009643,
     1    0.008521, 0.007561, 0.00713, 0.00673, 0.006008, 0.005379, 0.00483,
     1    0.004349, 0.003925, 0.003553, 0.003223, 0.002551, 0.002047, 0.001662,
     1    0.001366, 0.001134, 0.000952, 0.000806, 0.000689, 0.000593, 0.000515 /

      data phi5   / 0.2289, 0.2899, 0.2289, 0.2289, 0.2289, 0.2289, 0.2289, 0.2289, 0.2289, 0.2289, 0.2289,
     1    0.2289, 0.2289, 0.229, 0.229, 0.229, 0.229, 0.229, 0.229, 0.229, 0.2291,
     1    0.2291, 0.2291, 0.2292, 0.2293, 0.2294, 0.2295, 0.2296, 0.2297, 0.2302,
     1    0.2305, 0.2311, 0.2313, 0.2319, 0.2326, 0.2334, 0.2348, 0.2361, 0.2374,
     1    0.2386, 0.2433, 0.2477, 0.2497, 0.2533, 0.2606, 0.2641, 0.2674, 0.2746,
     1    0.2847, 0.2895, 0.2942, 0.3032, 0.312, 0.3227, 0.3329, 0.3378, 0.3427,
     1    0.352, 0.361, 0.381, 0.3993, 0.4142, 0.418, 0.4252, 0.4353, 0.4444,
     1    0.4494, 0.4542, 0.4587, 0.4629, 0.4668, 0.4703, 0.4729, 0.4743, 0.4756,
     1    0.4767, 0.4772, 0.4777, 0.4781, 0.4785, 0.4789, 0.4792, 0.4793, 0.4794,
     1    0.4795, 0.4796, 0.4797, 0.4798, 0.4798, 0.4798, 0.4798, 0.4799, 0.4799,
     1    0.4799, 0.4799, 0.4799, 0.4799, 0.48, 0.48, 0.48, 0.48, 0.48, 0.48,
     1    0.48, 0.48, 0.48, 0.48 /

      data phi6   / 0.014996, 0.006718, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996,
     1    0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996,
     1    0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996,
     1    0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014994,
     1    0.014994, 0.014993, 0.014993, 0.014991, 0.014988, 0.014987, 0.014981,
     1    0.014975, 0.01497, 0.014964, 0.014928, 0.014895, 0.014881, 0.014832,
     1    0.014731, 0.014684, 0.014639, 0.014513, 0.014239, 0.01411, 0.013985,
     1    0.013747, 0.013493, 0.012938, 0.012429, 0.01219, 0.011962, 0.011532,
     1    0.011133, 0.009769, 0.00866, 0.007829, 0.00762, 0.007244, 0.006739,
     1    0.006325, 0.006163, 0.006014, 0.005876, 0.005749, 0.005678, 0.005613,
     1    0.005573, 0.005558, 0.005544, 0.005533, 0.005529, 0.005527, 0.005524,
     1    0.005521, 0.005519, 0.005518, 0.005518, 0.005518, 0.005517, 0.005517,
     1    0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517,
     1    0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517,
     1    0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517 /

      data phi7   / 580.0, 459.0, 580.0, 580.0, 580.0, 580.0, 580.0, 580.0, 580.0, 580.0, 580.0,
     1    579.9, 579.9, 579.9, 579.9, 579.9, 579.9, 579.9, 579.8, 579.8,
     1    579.8, 579.7, 579.7, 579.6, 579.6, 579.5, 579.4, 579.3, 579.2,
     1    578.8, 578.6, 578.2, 578.0, 577.7, 577.2, 576.7, 576.0, 575.2,
     1    574.6, 573.9, 571.6, 569.5, 568.5, 566.9, 563.6, 562.0, 560.5,
     1    557.3, 552.6, 550.4, 548.3, 544.1, 540.0, 534.0, 528.4, 525.7,
     1    523.0, 517.8, 512.9, 497.1, 482.7, 468.7, 463.9, 454.8, 441.9,
     1    429.9, 419.5, 409.8, 400.5, 391.8, 379.6, 368.5, 359.8, 353.7,
     1    348.1, 343.1, 340.2, 337.5, 334.9, 332.5, 330.0, 327.8, 326.7,
     1    326.1, 325.1, 324.1, 323.3, 322.9, 322.7, 322.5, 322.1, 321.7,
     1    321.6, 321.4, 321.2, 321.1, 320.9, 320.7, 320.6, 320.4, 320.4,
     1    320.3, 320.2, 320.2, 320.2, 320.1, 320.1 /

      data phi8   / 0.070, 0.1138, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07,
     1    0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.0698, 0.0696, 0.0694,
     1    0.0692, 0.0686, 0.0679, 0.0671, 0.0662, 0.0654, 0.0646, 0.0635,
     1    0.0625, 0.0602, 0.0592, 0.056, 0.0494, 0.0407, 0.0306, 0.0199,
     1    0.0089, -0.0019, -0.0223, -0.0401, -0.0479, -0.0548, -0.0665,
     1    -0.0713, -0.0756, -0.0825, -0.0875, -0.0895, -0.0912, -0.0939,
     1    -0.096, -0.0975, -0.0987, -0.0991, -0.0994, -0.0998, -0.0998,
     1    -0.0983, -0.0948, -0.0896, -0.0876, -0.0834, -0.0765, -0.0693,
     1    -0.062, -0.0549, -0.0479, -0.0412, -0.0285, -0.0167, -0.0057,
     1    0.0045, 0.014, 0.0229, 0.0313, 0.0393, 0.0469, 0.0544, 0.0687,
     1    0.0826, 0.0895, 0.0963, 0.1098, 0.1232, 0.1366, 0.1498, 0.1562,
     1    0.1625, 0.1746, 0.1859, 0.1964, 0.206, 0.2147, 0.2225, 0.2295,
     1    0.2435, 0.2532, 0.2595, 0.2635, 0.266, 0.2675, 0.2683, 0.2686,
     1    0.2685, 0.2682 /

      data tau1   / 0.3437, 0.2539, 0.3437, 0.3471, 0.3505, 0.3538, 0.3571, 0.3603, 0.3633, 0.3663,
     1    0.3691, 0.3718, 0.3744, 0.3768, 0.3791, 0.3811, 0.3831, 0.3848,
     1    0.3863, 0.3876, 0.3877, 0.3881, 0.3883, 0.3878, 0.3872, 0.3865,
     1    0.3856, 0.3846, 0.3835, 0.3816, 0.3795, 0.3775, 0.3761, 0.3742,
     1    0.3719, 0.3696, 0.3672, 0.3649, 0.3626, 0.3601, 0.3572, 0.3543,
     1    0.3522, 0.35, 0.3474, 0.3455, 0.3438, 0.3417, 0.3398, 0.3386,
     1    0.3375, 0.3362, 0.3351, 0.3344, 0.3339, 0.334, 0.3344, 0.3346,
     1    0.3353, 0.3354, 0.336, 0.3369, 0.339, 0.3409, 0.3429, 0.3452,
     1    0.3478, 0.3508, 0.3541, 0.3577, 0.3608, 0.3644, 0.3682, 0.3725,
     1    0.3769, 0.3816, 0.3865, 0.3916, 0.3968, 0.4023, 0.4085, 0.4149,
     1    0.4212, 0.4277, 0.4341, 0.4406, 0.447, 0.4534, 0.4598, 0.4661,
     1    0.4723, 0.4784, 0.4845, 0.4904, 0.4962, 0.5019, 0.5074, 0.5128,
     1    0.5181, 0.5232, 0.5281, 0.5328, 0.5374, 0.5419, 0.5461, 0.5502, 0.5542 /

      data tau2   / 0.2637, 0.2381, 0.2637, 0.2671, 0.2705, 0.2738, 0.2771, 0.2803, 0.2833, 0.2863,
     1    0.2891, 0.2918, 0.2944, 0.2968, 0.2991, 0.3011, 0.3031, 0.3048,
     1    0.3063, 0.3076, 0.3095, 0.3106, 0.3118, 0.3129, 0.3138, 0.3145,
     1    0.3149, 0.3151, 0.3152, 0.3154, 0.3153, 0.3151, 0.3143, 0.3135,
     1    0.3128, 0.312, 0.311, 0.31, 0.3089, 0.3076, 0.3068, 0.306, 0.3047,
     1    0.3034, 0.3026, 0.3015, 0.3005, 0.2999, 0.2993, 0.2988, 0.2983,
     1    0.2983, 0.2984, 0.2987, 0.2993, 0.2999, 0.3008, 0.3021, 0.3036,
     1    0.306, 0.3085, 0.3113, 0.3139, 0.3169, 0.3205, 0.3243, 0.3283,
     1    0.3326, 0.3371, 0.3419, 0.3472, 0.3527, 0.3584, 0.3643, 0.3703,
     1    0.3765, 0.3828, 0.3892, 0.3957, 0.4023, 0.4085, 0.4149, 0.4212,
     1    0.4277, 0.4341, 0.4406, 0.447, 0.4534, 0.4598, 0.4661, 0.4723,
     1    0.4784, 0.4845, 0.4904, 0.4962, 0.5019, 0.5074, 0.5128, 0.5181,
     1    0.5232, 0.5281, 0.5328, 0.5374, 0.5419, 0.5461, 0.5502, 0.5542 /

      data sigma1  / 0.4458, 0.4496, 0.4458, 0.4458, 0.4476, 0.45, 0.4529, 0.4535, 0.4547, 0.4564,
     1     0.4569, 0.4589, 0.4598, 0.4607, 0.4611, 0.4615, 0.4623, 0.463,
     1     0.4647, 0.4663, 0.4677, 0.4682, 0.469, 0.4702, 0.4712, 0.4722,
     1     0.4731, 0.474, 0.4747, 0.4761, 0.4773, 0.4782, 0.4785, 0.4791,
     1     0.4798, 0.4803, 0.4808, 0.4811, 0.4814, 0.4816, 0.4817, 0.4816,
     1     0.4815, 0.4813, 0.4808, 0.4805, 0.4801, 0.4794, 0.4786, 0.4781,
     1     0.4777, 0.4768, 0.4758, 0.4748, 0.4738, 0.4734, 0.4729, 0.4719,
     1     0.471, 0.4688, 0.4667, 0.465, 0.4644, 0.4634, 0.4621, 0.461,
     1     0.46, 0.4592, 0.4586, 0.4581, 0.4555, 0.4535, 0.4518, 0.4505,
     1     0.4493, 0.4484, 0.4476, 0.4469, 0.4463, 0.4459, 0.4451, 0.4444,
     1     0.4442, 0.444, 0.4436, 0.4433, 0.443, 0.4428, 0.4427, 0.4426,
     1     0.4425, 0.4424, 0.4423, 0.4422, 0.4421, 0.442, 0.442, 0.4418,
     1     0.4417, 0.4417, 0.4416, 0.4416, 0.4415, 0.4415, 0.4415, 0.4415,
     1     0.4414 /

      data sigma2  / 0.3459, 0.3554, 0.3459, 0.3459, 0.3477, 0.3502, 0.353, 0.3537, 0.3549, 0.3566,
     1     0.3572, 0.3592, 0.3602, 0.3611, 0.3615, 0.3619, 0.3627, 0.3635,
     1     0.3654, 0.367, 0.3686, 0.3692, 0.37, 0.3713, 0.3726, 0.3738,
     1     0.3749, 0.3759, 0.3769, 0.3787, 0.3804, 0.3819, 0.3824, 0.3834,
     1     0.3847, 0.3859, 0.3871, 0.3882, 0.3893, 0.3902, 0.3921, 0.3938,
     1     0.3946, 0.3953, 0.3967, 0.3974, 0.3981, 0.3993, 0.4005, 0.401,
     1     0.4016, 0.4026, 0.4036, 0.4046, 0.4054, 0.4059, 0.4063, 0.4071,
     1     0.4079, 0.4098, 0.4114, 0.413, 0.4135, 0.4144, 0.4157, 0.417,
     1     0.4181, 0.4192, 0.4203, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213,
     1     0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213,
     1     0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213,
     1     0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213,
     1     0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213 /

      data sigma3  / 0.80, 0.7504, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8,
     1     0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8,
     1     0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8,
     1     0.8, 0.8, 0.7999, 0.7999, 0.7999, 0.7998, 0.7998, 0.7997,
     1     0.7997, 0.7996, 0.7994, 0.7993, 0.7992, 0.799, 0.7988, 0.7983,
     1     0.7979, 0.7976, 0.7974, 0.797, 0.7966, 0.794, 0.7917, 0.7884,
     1     0.7867, 0.7836, 0.7792, 0.7747, 0.7681, 0.7619, 0.756, 0.7504,
     1     0.74, 0.7304, 0.723, 0.7182, 0.7136, 0.7097, 0.708, 0.7064,
     1     0.7049, 0.7035, 0.7025, 0.7017, 0.7012, 0.7011, 0.7008, 0.7006,
     1     0.7004, 0.7003, 0.7003, 0.7002, 0.7002, 0.7001, 0.7001, 0.7001,
     1     0.7001, 0.7001, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7 /

c      Note: Sigma4 only used for Aftershock cases which is not currently coded.
c      data sigma4 /   /

C Find the requested spectral period and corresponding coefficients
      nPer = 107
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         c1T      = c1(1)
         c1aT     = c1a(1)
         c1bT     = c1b(1)
         cnT      = cn(1)
         cmT      = cm(1)
         c5T      = c5(1)
         c6T      = c6(1)
         c7T      = c7(1)
         c9T      = c9(1)
         c9aT     = c9a(1)
         gamma1T  = gamma1(1)
         gamma2T  = gamma2(1)
         phi1T    = phi1(1)
         phi2T    = phi2(1)
         phi3T    = phi3(1)
         phi4T    = phi4(1)
         phi5T    = phi5(1)
         phi6T    = phi6(1)
         phi7T    = phi7(1)
         phi8T    = phi8(1)
         tau1T    = tau1(1)
         tau2T    = tau2(1)
         sigma1T = sigma1(1)
         sigma2T = sigma2(1)
         sigma3T = sigma3(1)
         goto 1011
      elseif (specT .eq. -1.0) then
         period1  = period(2)
         c1T      = c1(2)
         c1aT     = c1a(2)
         c1bT     = c1b(2)
         cnT      = cn(2)
         cmT      = cm(2)
         c5T      = c5(2)
         c6T      = c6(2)
         c7T      = c7(2)
         c9T      = c9(2)
         c9aT     = c9a(2)
         gamma1T  = gamma1(2)
         gamma2T  = gamma2(2)
         phi1T    = phi1(2)
         phi2T    = phi2(2)
         phi3T    = phi3(2)
         phi4T    = phi4(2)
         phi5T    = phi5(2)
         phi6T    = phi6(2)
         phi7T    = phi7(2)
         phi8T    = phi8(2)
         tau1T    = tau1(2)
         tau2T    = tau2(2)
         sigma1T = sigma1(2)
         sigma2T = sigma2(2)
         sigma3T = sigma3(2)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=3,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Chiou and Youngs (NGA-2008) Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),c1(count1),c1(count2),
     +                   specT,c1T,iflag)
            call interp (period(count1),period(count2),c1a(count1),c1a(count2),
     +                   specT,c1aT,iflag)
            call interp (period(count1),period(count2),c1b(count1),c1b(count2),
     +                   specT,c1bT,iflag)
            call interp (period(count1),period(count2),cn(count1),cn(count2),
     +                   specT,cnT,iflag)
            call interp (period(count1),period(count2),cm(count1),cm(count2),
     +                   specT,cmT,iflag)
            call interp (period(count1),period(count2),c5(count1),c5(count2),
     +                   specT,c5T,iflag)
            call interp (period(count1),period(count2),c6(count1),c6(count2),
     +                   specT,c6T,iflag)
            call interp (period(count1),period(count2),c7(count1),c7(count2),
     +                   specT,c7T,iflag)
            call interp (period(count1),period(count2),c9(count1),c9(count2),
     +                   specT,c9T,iflag)
            call interp (period(count1),period(count2),c9a(count1),c9a(count2),
     +                   specT,c9aT,iflag)
            call interp (period(count1),period(count2),gamma1(count1),gamma1(count2),
     +                   specT,gamma1T,iflag)
            call interp (period(count1),period(count2),gamma2(count1),gamma2(count2),
     +                   specT,gamma2T,iflag)
            call interp (period(count1),period(count2),phi1(count1),phi1(count2),
     +                   specT,phi1T,iflag)
            call interp (period(count1),period(count2),phi2(count1),phi2(count2),
     +                   specT,phi2T,iflag)
            call interp (period(count1),period(count2),phi3(count1),phi3(count2),
     +                   specT,phi3T,iflag)
            call interp (period(count1),period(count2),phi4(count1),phi4(count2),
     +                   specT,phi4T,iflag)
            call interp (period(count1),period(count2),phi5(count1),phi5(count2),
     +                   specT,phi5T,iflag)
            call interp (period(count1),period(count2),phi6(count1),phi6(count2),
     +                   specT,phi6T,iflag)
            call interp (period(count1),period(count2),phi7(count1),phi7(count2),
     +                   specT,phi7T,iflag)
            call interp (period(count1),period(count2),phi8(count1),phi8(count2),
     +                   specT,phi8T,iflag)
            call interp (period(count1),period(count2),tau1(count1),tau1(count2),
     +                   specT,tau1T,iflag)
            call interp (period(count1),period(count2),tau2(count1),tau2(count2),
     +                   specT,tau2T,iflag)
            call interp (period(count1),period(count2),sigma1(count1),sigma1(count2),
     +                   specT,sigma1T,iflag)
            call interp (period(count1),period(count2),sigma2(count1),sigma2(count2),
     +                   specT,sigma2T,iflag)
            call interp (period(count1),period(count2),sigma3(count1),sigma3(count2),
     +                   specT,sigma3T,iflag)
c            call interp (period(count1),period(count2),sigma4(count1),sigma4(count2),
c     +                   specT,sigma4T,iflag)

 1011 period1 = specT

c     Set the fault mechanism term.
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C      -1       Normal                   -120 < Rake < -60.0
C     1, 0.5    Reverse and Rev/Obl        30 < Rake < 150.0
C     0,-0.5    Strike-Slip and NMl/Obl        Otherwise
         if (ftype .eq. -1) then
            F_RV = 0.0
            F_NM = 1.0
         elseif (ftype .ge. 0.5) then
            F_RV = 1.0
            F_NM = 0.0
         else
            F_RV = 0.0
            F_NM = 0.0
         endif

C HW factors......
c     For now, convert hwflag to an equivalent srcSiteA
c      if ( hwflag .eq. 1 ) then
c        srcSiteA = 90.
c      else
c        srcSiteA = 0.
c      endif
C No longer needed since Rx is computed and passed.
C     Compute Rx value given source to site azimuth
c      if (srcsiteA .eq. 90.0) then
c         Rx = Rrup/sin(abs(delta)*3.14159/180.0) - DTor/tan(abs(delta)*3.14159/180.0)
c      elseif (srcsiteA .gt. 0.0) then
c         Rx = Rbjf*tan(srcSiteA*3.14159/180.0)
c      elseif (srcsiteA .le. 0.0) then
c         Rx = 0.0
c      endif

        c2 = 1.06
        c3 = 3.45
        c4 = -2.1
        c4a = -0.5
        cRB = 50.0
        cHM = 3.0
        gm = 4.0

        pi = atan(1.0)*4.0
        d2r = pi/180.0

        cc = c5T* cosh(c6T * max((M-cHM),0.0))
        gamma = gamma1T + gamma2T/cosh(max((M-gm),0.0))
        cosDELTA = cos(abs(DELTA)*d2r)

c Magnitude scaling
        r1 = c1T + c2 * (M-6.0) +
     1       (c2-c3)/cnT *
     1             alog(1.0 + exp(-cnT*(M-cMT)))

c Near-field magnitude and distance scaling
        r2 = c4 * alog(Rrup + cc)

c Distance scaling at large distance
        r3 = (c4a-c4)/2.0 *
     1            alog( Rrup*Rrup+cRB*cRB ) +
     1       Rrup * gamma

c More source scaling
        r4 = c1aT*F_RV +
     1       c1bT*F_NM +
     1       c7T*(DTor - 4.0)

c HW effect
        if (HWFlag .eq. 0) then
           hw = 0.0
        else
           hw = c9T * tanh(Rx*cosDelta**2.0/c9aT) *
     1          (1.0 - sqrt(Rbjf**2.0+DTor**2.0)/(Rrup + 0.001))
        endif
c Predicted median Sa on reference condition (Vs=1130 m/sec)
        psa_ref = r1+r2+r3+r4+hw

c Linear soil amplification
        a = phi1T * min(alog(Vs/1130.0), 0.0)

c Nonlinear soil amplification
        b = phi2T *
     1      (exp(phi3T*(min(Vs,1130.0)-360.0)) - exp(phi3T*(1130.0-360.0)))
        c = phi4T

C Deviation from ln(Vs30) scaling: bedrock depth (Z1) effect
C NOTE: max(0,z1-15) is capped at 300 to avoid overflow of function cosh
        rkdepth = phi5T*
     1            (1.0-1.0/cosh(phi6T*max(0.0,depthvs10*1000.0-phi7T))) +
     1            phi8T/cosh(0.15*min(max(0.0,depthvs10*1000.0-15.0),300.0))

c Sa on soil condition
        psa = psa_ref + (a + b * alog((exp(psa_ref)+c)/c)) + rkdepth

C Compute the sigma term
        NL = b*exp(psa_ref)/(exp(psa_ref)+c)
        sigma_M = sigma1T + (sigma2T-sigma1T)/2.0*(min(max(M,5.0),7.0)-5.0)
        if (vs30_class .eq. 0) then
           sigma = sigma_M*sqrt(sigma3T+(1.0+NL)**2.0)
        else
           sigma = sigma_M*sqrt(0.7+(1.0+NL)**2.0)
        endif
C Compute the tau term
        tau = tau1T + (tau2T-tau1T)/2.0*(min(max(M,5.0),7.0)-5.0)
        tau = tau*(1.0+NL)
        phi = sigma

        sigma = sqrt(tau*tau + sigma*sigma)

C     Convert ground motion to units of gals.
      lnY = psa + 6.89
      period2 = period1

      return
      end

c ---------------------------------------------------------------------
C ** Chiou and Youngs (NGA-2008) Horizontal **
C ** Southern California Small Magnitude Model             **
C ** Chiou, Youngs, Abrahamson, an Addo (EQ Spectra, 2010) **
C     Note: Currently only coded for PGA, T=0.3, and 1.0sec
c ---------------------------------------------------------------------
      Subroutine CY_NGA_2008SC ( m, Rrup, Rbjf, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, Delta, DTor, Ftype, depthvs10, vs30_class,
     3                     hwflag, Rx )

      parameter (MAXPER=107)
      REAL Period(MAXPER), C1(MAXPER), C1a(MAXPER), C1b(MAXPER)
      REAL cn(MAXPER), cm(MAXPER), c5(MAXPER), c6(MAXPER)
      REAL c7(MAXPER), c9(MAXPER), gamma1(MAXPER), gamma2(MAXPER)
      REAL phi1(MAXPER), phi2(MAXPER), phi3(MAXPER), phi4(MAXPER)
      REAL phi5(MAXPER), phi6(MAXPER), phi7(MAXPER), phi8(MAXPER)
      REAL tau1(MAXPER), tau2(MAXPER), sigma1(MAXPER), sigma2(MAXPER)
      REAL sigma3(MAXPER), sigma4(MAXPER), c9a(MAXPER)

      REAL c1T, c1aT, c1bT, cnT, cmT, c5T, c6T, c7T, c9T, c9aT
      REAL gamma1T, gamma2T, phi1T, phi2T, phi3T, phi4T, sigma3T, sigma4T
      REAL phi5T, phi6T, phi7T, phi8T, tau1T, tau2T, sigma1T, sigma2T
      REAL c2, c3, c4, c4a, cRB, cHM, gm, pi, d2r, gamma
      real cc, cosdelta, r1, r2, r3, r4, hw, psa_ref, psa, a, b, c
      integer iflag, count1, count2, hwflag, vs30_class
      REAL M, RRUP, RBJF, DTOR, Delta, specT, sigma, Ftype, Rx
      REAL period2, lnY, F_RV, F_NM, depthvs10, sigma_M, tau, NL, rkdepth

      data period / 0.0, -1.0, 0.01, 0.02, 0.022, 0.025, 0.029, 0.03, 0.032, 0.035, 0.036, 0.04,
     1              0.042, 0.044, 0.045, 0.046, 0.048, 0.05, 0.055, 0.06, 0.065, 0.067,
     1              0.07, 0.075, 0.08, 0.085, 0.09, 0.095, 0.1, 0.11, 0.12, 0.13, 0.133,
     1              0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.2, 0.22, 0.24, 0.25, 0.26,
     1              0.28, 0.29, 0.3, 0.32, 0.34, 0.35, 0.36, 0.38, 0.4, 0.42, 0.44,
     1              0.45, 0.46, 0.48, 0.5, 0.55, 0.6, 0.65, 0.667, 0.7, 0.75, 0.8, 0.85,
     1              0.9, 0.95, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.2,
     1              2.4, 2.5, 2.6, 2.8, 3.0, 3.2, 3.4, 3.5, 3.6, 3.8, 4.0, 4.2, 4.4, 4.6,
     1              4.8, 5.0, 5.5, 6.0, 6.5, 7.0, 7.5, 8.0, 8.5, 9.0, 9.5, 10.0 /
      data c1    / -1.2687, 2.2884, -1.268694, -1.251478, -1.238087, -1.216428, -1.18418,
     1   -1.174374, -1.154467, -1.123314, -1.111874, -1.067114,
     1   -1.043071, -1.018824, -1.00656, -0.994327, -0.970216,
     1   -0.946391, -0.889485, -0.836096, -0.787293, -0.769389,
     1   -0.743954, -0.705072, -0.670827, -0.640929, -0.6151,
     1   -0.593104, -0.574699, -0.545283, -0.527572, -0.519988,
     1   -0.520317, -0.522696, -0.530869, -0.544692, -0.562955,
     1   -0.584664, -0.608982, -0.635236, -0.689254, -0.746535,
     1   -0.776564, -0.806831, -0.866612, -0.897204, -0.92776,
     1   -0.987694, -1.046911, -1.076381, -1.10551, -1.162283,
     1   -1.217597, -1.271357, -1.323477, -1.348959, -1.373988,
     1   -1.422616, -1.469453, -1.578991, -1.678576, -1.769127,
     1   -1.797932, -1.8516, -1.927839, -1.998837, -2.06549,
     1   -2.128468, -2.188278, -2.245326, -2.352111, -2.451947,
     1   -2.547437, -2.640124, -2.730652, -2.818867, -2.904397,
     1   -2.986847, -3.065866, -3.141253, -3.281536, -3.409571,
     1   -3.469751, -3.527743, -3.637785, -3.741264, -3.838964,
     1   -3.931396, -3.975878, -4.019205, -4.102464, -4.181358,
     1   -4.256034, -4.326756, -4.39387, -4.457747, -4.518726,
     1   -4.660582, -4.789382, -4.907897, -5.018331, -5.12243,
     1   -5.221536, -5.316573, -5.40817, -5.496751, -5.587222 /

      data c1a   / 0.1, 0.1094, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
     1   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
     1   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
     1   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
     1   0.1, 0.1, 0.0999, 0.0999, 0.0999, 0.0999, 0.0999,
     1   0.0998, 0.0998, 0.0998, 0.0997, 0.0996, 0.0995,
     1   0.0995, 0.0994, 0.0993, 0.0991, 0.0986, 0.0978,
     1   0.0968, 0.0963, 0.0954, 0.0936, 0.0914, 0.0887,
     1   0.0853, 0.0813, 0.0766, 0.0651, 0.0512, 0.0355,
     1   0.0188, 0.0022, -0.0135, -0.0275, -0.0399, -0.0504,
     1   -0.0591, -0.0722, -0.0808, -0.084, -0.0866, -0.0905,
     1   -0.0931, -0.0949, -0.0962, -0.0967, -0.0971, -0.0978,
     1   -0.0982, -0.0986, -0.0989, -0.0991, -0.0993, -0.0994,
     1   -0.0996, -0.0998, -0.0998, -0.0999, -0.0999, -0.0999,
     1   -0.1, -0.1, -0.1, -0.1 /

      data c1b   / -0.255, -0.0626, -0.255, -0.255, -0.255, -0.255, -0.255, -0.255,
     1   -0.255, -0.255, -0.255, -0.255, -0.255, -0.255,
     1   -0.255, -0.255, -0.255, -0.255, -0.255, -0.255,
     1   -0.2547, -0.254, -0.254, -0.254, -0.254, -0.254,
     1   -0.254, -0.253, -0.253, -0.2529, -0.252, -0.251,
     1   -0.251, -0.2504, -0.25, -0.249, -0.248, -0.247,
     1   -0.246, -0.2449, -0.2428, -0.24, -0.2382, -0.237,
     1   -0.2343, -0.2328, -0.2313, -0.2275, -0.2247, -0.2226,
     1   -0.2214, -0.218, -0.2146, -0.2107, -0.2073, -0.2054,
     1   -0.2037, -0.2008, -0.1972, -0.1889, -0.1814, -0.1744,
     1   -0.1722, -0.168, -0.162, -0.1564, -0.1511, -0.1472,
     1   -0.1432, -0.14, -0.1337, -0.1282, -0.1246, -0.1214,
     1   -0.1184, -0.1166, -0.114, -0.1125, -0.1111, -0.11,
     1   -0.108, -0.107, -0.106, -0.106, -0.105, -0.104, -0.104,
     1   -0.103, -0.103, -0.103, -0.102, -0.102, -0.102, -0.102,
     1   -0.102, -0.101, -0.101, -0.101, -0.101, -0.101, -0.101,
     1   -0.101, -0.1, -0.1, -0.1, -0.1, -0.1 /

      data cn    / 2.996, 1.648, 2.996, 3.2924, 3.3516, 3.4293, 3.5012, 3.5137,
     1   3.5331, 3.5512, 3.5549, 3.563, 3.5627, 3.5607,
     1   3.5594, 3.5574, 3.5526, 3.5473, 3.5308, 3.5129,
     1   3.493, 3.4844, 3.4714, 3.448, 3.4232, 3.3966,
     1   3.3689, 3.3407, 3.312, 3.2549, 3.1992, 3.1447,
     1   3.1288, 3.0932, 3.0436, 2.997, 2.9522, 2.91,
     1   2.8701, 2.8312, 2.7596, 2.6916, 2.6579, 2.6256,
     1   2.5637, 2.5334, 2.5048, 2.4487, 2.397, 2.3719,
     1   2.348, 2.3034, 2.2611, 2.2218, 2.1848, 2.1672,
     1   2.15, 2.1178, 2.0868, 2.0174, 1.957, 1.9036,
     1   1.8868, 1.8554, 1.8119, 1.7727, 1.7368, 1.7039,
     1   1.6747, 1.648, 1.6046, 1.5717, 1.5462, 1.5263,
     1   1.511, 1.4984, 1.4889, 1.4814, 1.4744, 1.4698,
     1   1.4625, 1.458, 1.4562, 1.456, 1.455, 1.4557, 1.4565,
     1   1.4581, 1.4594, 1.4606, 1.463, 1.4652, 1.4676,
     1   1.4703, 1.4733, 1.4752, 1.4779, 1.4831, 1.4878,
     1   1.4923, 1.4955, 1.4975, 1.499, 1.5, 1.501, 1.501, 1.502 /

      data cM    / 4.184, 4.2979, 4.184, 4.1879, 4.1828, 4.1734, 4.1593, 4.1556,
     1   4.1485, 4.1382, 4.1351, 4.1226, 4.1174, 4.1123, 4.1104,
     1   4.1084, 4.1038, 4.1011, 4.094, 4.0892, 4.0867, 4.086,
     1   4.086, 4.086, 4.0873, 4.0899, 4.0938, 4.0985, 4.103,
     1   4.1144, 4.1277, 4.1416, 4.1459, 4.1565, 4.1717, 4.1871,
     1   4.2023, 4.2172, 4.2323, 4.2476, 4.2759, 4.3042, 4.3184,
     1   4.332, 4.3584, 4.3712, 4.3844, 4.4086, 4.4323, 4.4441,
     1   4.4557, 4.4768, 4.4979, 4.5172, 4.5361, 4.5452, 4.5545,
     1   4.5712, 4.5881, 4.6273, 4.6632, 4.6959, 4.7071, 4.7276,
     1   4.7571, 4.7851, 4.8114, 4.8362, 4.8597, 4.882, 4.9245,
     1   4.9641, 5.0013, 5.0367, 5.0697, 5.1019, 5.1325, 5.1623,
     1   5.1905, 5.2173, 5.2691, 5.3173, 5.3393, 5.361, 5.4013,
     1   5.4385, 5.4737, 5.5069, 5.5229, 5.5382, 5.5687, 5.5977,
     1   5.6252, 5.6518, 5.6776, 5.7027, 5.7276, 5.7855, 5.8404,
     1   5.8924, 5.9422, 5.9891, 6.0339, 6.077, 6.1172, 6.1561, 6.193 /

      data c5    / 6.16, 5.17, 6.16, 6.158, 6.158, 6.157, 6.1558, 6.155, 6.1545,
     1   6.153, 6.153, 6.1508, 6.1497, 6.1487, 6.1477, 6.147,
     1   6.1459, 6.1441, 6.1409, 6.1362, 6.1314, 6.1294, 6.126,
     1   6.12, 6.1144, 6.1072, 6.1007, 6.0929, 6.085, 6.0683,
     1   6.0494, 6.0296, 6.0237, 6.0087, 5.9871, 5.9647, 5.9416,
     1   5.9177, 5.8942, 5.8699, 5.8231, 5.7767, 5.7547, 5.7335,
     1   5.6917, 5.6719, 5.6527, 5.6163, 5.5832, 5.5681, 5.5528,
     1   5.5252, 5.4997, 5.4764, 5.4555, 5.4458, 5.4362, 5.4189,
     1   5.4029, 5.3697, 5.3431, 5.3213, 5.3149, 5.3045, 5.29,
     1   5.2788, 5.2692, 5.2607, 5.2537, 5.248, 5.2387, 5.2321,
     1   5.2266, 5.2224, 5.2194, 5.2166, 5.214, 5.2125, 5.2111,
     1   5.2099, 5.208, 5.206, 5.206, 5.205, 5.2043, 5.204, 5.203,
     1   5.203, 5.203, 5.2024, 5.202, 5.202, 5.202, 5.2017, 5.201,
     1   5.201, 5.201, 5.201, 5.201, 5.201, 5.201, 5.2, 5.2, 5.2,
     1   5.2, 5.2, 5.2 /

      data c6    / 0.4893, 0.4407, 0.4893, 0.4892, 0.4892, 0.4891, 0.4891, 0.489, 0.489,
     1   0.4889, 0.4889, 0.4888, 0.4887, 0.4887, 0.4886, 0.4886, 0.4885,
     1   0.4884, 0.4883, 0.488, 0.4878, 0.4876, 0.4875, 0.4872, 0.4869,
     1   0.4865, 0.4862, 0.4858, 0.4854, 0.4846, 0.4837, 0.4828, 0.4825,
     1   0.4818, 0.4808, 0.4797, 0.4787, 0.4776, 0.4765, 0.4755, 0.4735,
     1   0.4715, 0.4706, 0.4698, 0.468, 0.4673, 0.4665, 0.4651, 0.4638,
     1   0.4632, 0.4626, 0.4616, 0.4607, 0.4598, 0.4591, 0.4587, 0.4583,
     1   0.4578, 0.4571, 0.456, 0.455, 0.4542, 0.454, 0.4536, 0.4531,
     1   0.4528, 0.4524, 0.4522, 0.4519, 0.4517, 0.4514, 0.4511, 0.451,
     1   0.4508, 0.4507, 0.4506, 0.4505, 0.4504, 0.4504, 0.4504, 0.4503,
     1   0.4502, 0.4502, 0.4502, 0.4502, 0.4501, 0.4501, 0.4501, 0.4501,
     1   0.4501, 0.4501, 0.4501, 0.4501, 0.4501, 0.4501, 0.45, 0.45,
     1   0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.45 /

      data c7    / 0.0512, 0.0207, 0.0512, 0.0512, 0.0512, 0.0512, 0.0511, 0.0511, 0.0511, 0.051,
     1   0.0509, 0.0508, 0.0507, 0.0506, 0.0506, 0.0505, 0.0505, 0.0504,
     1   0.0502, 0.05, 0.0499, 0.0498, 0.0497, 0.0495, 0.0494, 0.0492,
     1   0.0491, 0.049, 0.0489, 0.0486, 0.0484, 0.0482, 0.0482, 0.0481,
     1   0.0479, 0.0477, 0.0476, 0.0474, 0.0473, 0.0471, 0.0468, 0.0466,
     1   0.0464, 0.0463, 0.046, 0.0459, 0.0458, 0.0455, 0.0453, 0.0452,
     1   0.045, 0.0448, 0.0445, 0.0442, 0.0439, 0.0437, 0.0436, 0.0432,
     1   0.0429, 0.0421, 0.0412, 0.0404, 0.0401, 0.0395, 0.0387, 0.0379,
     1   0.0372, 0.0364, 0.0357, 0.035, 0.0336, 0.0322, 0.0308, 0.0294,
     1   0.028, 0.0266, 0.0253, 0.024, 0.0227, 0.0213, 0.0188, 0.0165,
     1   0.0154, 0.0144, 0.0124, 0.0106, 0.009, 0.0076, 0.0069, 0.0063,
     1   0.0052, 0.0041, 0.0033, 0.0025, 0.0019, 0.0014, 0.001, 0.0002,
     1   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /

      data c9    / 0.79, 0.3079, 0.79, 0.8129, 0.8188, 0.828, 0.8407, 0.8439, 0.8502, 0.8594,
     1   0.8624, 0.874, 0.8795, 0.8848, 0.8874, 0.8899, 0.8949, 0.8996,
     1   0.9105, 0.9204, 0.9292, 0.9325, 0.9371, 0.9442, 0.9505, 0.9559,
     1   0.9606, 0.9645, 0.9677, 0.9718, 0.9733, 0.9725, 0.9719, 0.9699,
     1   0.966, 0.9609, 0.9549, 0.9482, 0.941, 0.9334, 0.9179, 0.9023,
     1   0.8946, 0.8871, 0.8726, 0.8657, 0.859, 0.8462, 0.8342, 0.8284,
     1   0.8228, 0.8121, 0.8019, 0.7922, 0.783, 0.7786, 0.7743, 0.7659,
     1   0.7578, 0.7391, 0.7221, 0.7065, 0.7015, 0.6922, 0.6788, 0.6662,
     1   0.654, 0.6423, 0.6308, 0.6196, 0.5975, 0.5756, 0.5538, 0.532,
     1   0.5101, 0.4877, 0.4649, 0.4412, 0.4169, 0.3917, 0.339, 0.2833,
     1   0.2546, 0.2262, 0.1722, 0.1244, 0.0846, 0.0538, 0.042, 0.0322,
     1   0.0177, 0.0086, 0.0031, 0.0004, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /

      data c9a   / 1.5005, 2.6690, 1.500502, 1.502755, 1.503506, 1.504559, 1.506667, 1.507119,
     1   1.508175, 1.510438, 1.511043, 1.513765, 1.515734, 1.517706,
     1   1.518617, 1.519528, 1.521353, 1.523027, 1.529743, 1.535875,
     1   1.542802, 1.546354, 1.551621, 1.55971, 1.567842, 1.579171,
     1   1.590105, 1.600474, 1.610428, 1.638367, 1.664459, 1.692658,
     1   1.702334, 1.724608, 1.754879, 1.784789, 1.819388, 1.852804,
     1   1.884759, 1.915732, 1.9806, 2.041531, 2.070935, 2.098242,
     1   2.150499, 2.175808, 2.200534, 2.246784, 2.284621, 2.302971,
     1   2.321004, 2.355846, 2.388582, 2.412588, 2.435617, 2.446846,
     1   2.457882, 2.479359, 2.500023, 2.533749, 2.564594, 2.589332,
     1   2.595295, 2.606478, 2.622426, 2.636626, 2.645606, 2.65382,
     1   2.661527, 2.66899, 2.677276, 2.685052, 2.690965, 2.694735,
     1   2.698511, 2.701481, 2.703372, 2.705265, 2.706889, 2.708514,
     1   2.710139, 2.711766, 2.712308, 2.712851, 2.713665, 2.714479,
     1   2.715022, 2.715293, 2.715565, 2.715836, 2.716108, 2.71638,
     1   2.716651, 2.716651, 2.716923, 2.716923, 2.717195, 2.717466,
     1   2.717466, 2.717738, 2.717738, 2.717738, 2.71801, 2.71801,
     1   2.71801, 2.71801, 2.71801 /

      data gamma1  / -0.00804, -0.00275, -0.00804, -0.008113, -0.008155, -0.00823, -0.008351,
     1      -0.008387, -0.008454, -0.008564, -0.008599, -0.008754,
     1      -0.008833, -0.008906, -0.008945, -0.008984, -0.00905,
     1      -0.009121, -0.009288, -0.009433, -0.009561, -0.009603,
     1      -0.009656, -0.009733, -0.009782, -0.009808, -0.009809,
     1      -0.009788, -0.009753, -0.009627, -0.00946, -0.009269,
     1      -0.009205, -0.009054, -0.008832, -0.00861, -0.008398,
     1      -0.008183, -0.007976, -0.007776, -0.007397, -0.007044,
     1      -0.006877, -0.006715, -0.006408, -0.006263, -0.006123,
     1      -0.005859, -0.005614, -0.005497, -0.005386, -0.005175,
     1      -0.00498, -0.004799, -0.004632, -0.004552, -0.004477,
     1      -0.004332, -0.004199, -0.003903, -0.003652, -0.003435,
     1      -0.003368, -0.003246, -0.003078, -0.002929, -0.002795,
     1      -0.002674, -0.002564, -0.002464, -0.002287, -0.002138,
     1      -0.00201, -0.001898, -0.001802, -0.001717, -0.001643,
     1      -0.001578, -0.001519, -0.001467, -0.001381, -0.001311,
     1      -0.001281, -0.001255, -0.001209, -0.001172, -0.001142,
     1      -0.001117, -0.001106, -0.001096, -0.001079, -0.001065,
     1      -0.001052, -0.001042, -0.001032, -0.001024, -0.001016,
     1      -0.000999, -0.000987, -0.000977, -0.000968, -0.000961,
     1      -0.000955, -0.00095, -0.000945, -0.000941, -0.000937 /

      data gamma2  / -0.00785, -0.00625, -0.00785, -0.007921, -0.007962, -0.008035, -0.008154,
     1      -0.008189, -0.008255, -0.008362, -0.008396, -0.008547,
     1      -0.008624, -0.008696, -0.008734, -0.008771, -0.008836,
     1      -0.008906, -0.009068, -0.00921, -0.009335, -0.009376,
     1      -0.009428, -0.009503, -0.00955, -0.009577, -0.009577,
     1      -0.009557, -0.009522, -0.0094, -0.009236, -0.00905,
     1      -0.008988, -0.00884, -0.008623, -0.008406, -0.008199,
     1      -0.007989, -0.007787, -0.007592, -0.007222, -0.006878,
     1      -0.006714, -0.006556, -0.006257, -0.006115, -0.005979,
     1      -0.00572, -0.005481, -0.005368, -0.005259, -0.005053,
     1      -0.004862, -0.004686, -0.004522, -0.004445, -0.004371,
     1      -0.00423, -0.0041, -0.003811, -0.003565, -0.003354,
     1      -0.003288, -0.003169, -0.003005, -0.00286, -0.002729,
     1      -0.002611, -0.002504, -0.002406, -0.002233, -0.002087,
     1      -0.001962, -0.001854, -0.001759, -0.001677, -0.001604,
     1      -0.00154, -0.001483, -0.001433, -0.001348, -0.00128,
     1      -0.001251, -0.001225, -0.001181, -0.001145, -0.001115,
     1      -0.001091, -0.00108, -0.001071, -0.001054, -0.00104,
     1      -0.001027, -0.001017, -0.001007, -0.000999, -0.000992,
     1       -0.000976, -0.000964, -0.000954, -0.000945, -0.000938,
     1      -0.000933, -0.000927, -0.000923, -0.000919, -0.000914 /

      data phi1   / -0.4417, -0.7861, -0.4417, -0.434, -0.4313, -0.4267, -0.4196, -0.4177,
     1    -0.4139, -0.4082, -0.4064, -0.4, -0.3973, -0.3949, -0.3939,
     1    -0.393, -0.3914, -0.3903, -0.3892, -0.3903, -0.3934, -0.3951,
     1    -0.3981, -0.404, -0.4108, -0.4182, -0.4261, -0.4341, -0.4423,
     1    -0.4585, -0.4743, -0.4892, -0.4935, -0.5032, -0.5162, -0.5283,
     1    -0.5396, -0.5502, -0.5602, -0.5697, -0.5873, -0.6034, -0.6109,
     1    -0.6182, -0.6319, -0.6383, -0.6444, -0.6559, -0.6665, -0.6715,
     1    -0.6762, -0.685, -0.6931, -0.7005, -0.7072, -0.7104, -0.7135,
     1    -0.7193, -0.7246, -0.7365, -0.7468, -0.7557, -0.7585, -0.7636,
     1    -0.7708, -0.7773, -0.7833, -0.7888, -0.7941, -0.799, -0.8082,
     1    -0.8165, -0.8243, -0.8315, -0.8382, -0.8445, -0.8504, -0.856,
     1    -0.8613, -0.8663, -0.8755, -0.8836, -0.8874, -0.8909, -0.8974,
     1    -0.9032, -0.9083, -0.913, -0.9151, -0.917, -0.9205, -0.9231,
     1    -0.9249, -0.9257, -0.9255, -0.9243, -0.9222, -0.9129, -0.8982,
     1    -0.8791, -0.8572, -0.8346, -0.8126, -0.7914, -0.7711, -0.7517, -0.7332 /

      data phi2   / -0.1417, -0.0699, -0.1417, -0.1364, -0.1361, -0.1365, -0.1392, -0.1403, -0.143,
     1    -0.1482, -0.1502, -0.1591, -0.1641, -0.1694, -0.1721, -0.1748,
     1    -0.1804, -0.1862, -0.2008, -0.2153, -0.2291, -0.2344, -0.242,
     1    -0.2538, -0.2644, -0.2739, -0.2819, -0.2887, -0.2943, -0.3025,
     1    -0.3077, -0.3106, -0.3111, -0.3118, -0.3113, -0.3093, -0.3062,
     1    -0.3022, -0.2976, -0.2927, -0.2823, -0.2716, -0.2662, -0.2609,
     1    -0.2505, -0.2455, -0.2405, -0.231, -0.222, -0.2177, -0.2135,
     1    -0.2053, -0.1975, -0.1901, -0.183, -0.1795, -0.1762, -0.1696,
     1    -0.1633, -0.1487, -0.1353, -0.1232, -0.1194, -0.1124, -0.1028,
     1    -0.0943, -0.0869, -0.0805, -0.0748, -0.0699, -0.0617, -0.0552,
     1    -0.0501, -0.0459, -0.0425, -0.0395, -0.0369, -0.0346, -0.0323,
     1    -0.0302, -0.0262, -0.0225, -0.0207, -0.019, -0.0159, -0.0129,
     1    -0.0102, -0.0077, -0.0066, -0.0055, -0.0036, -0.0016, 0.0, 0.0,
     1    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /

      data phi3   / -0.00701, -0.008444, -0.00701, -0.007279, -0.007301, -0.007364, -0.007378, -0.007354,
     1    -0.007281, -0.007162, -0.007129, -0.006977, -0.006878, -0.006765,
     1    -0.00671, -0.006656, -0.006556, -0.006467, -0.006279, -0.006117,
     1    -0.00597, -0.005914, -0.005835, -0.005734, -0.00567, -0.005632,
     1    -0.005607, -0.005597, -0.005604, -0.005644, -0.005696, -0.005744,
     1    -0.005758, -0.005794, -0.005845, -0.005901, -0.005959, -0.006019,
     1    -0.00608, -0.006141, -0.006262, -0.006381, -0.006439, -0.006495,
     1    -0.006604, -0.006655, -0.006704, -0.006795, -0.006882, -0.006923,
     1    -0.006965, -0.007047, -0.007125, -0.007194, -0.007259, -0.00729,
     1    -0.00732, -0.007378, -0.007435, -0.007579, -0.00772, -0.007863,
     1    -0.007911, -0.008001, -0.00812, -0.008223, -0.008313, -0.008381,
     1    -0.008423, -0.008444, -0.0085, -0.008478, -0.008307, -0.008042,
     1    -0.007707, -0.007317, -0.006862, -0.006265, -0.005541, -0.004792,
     1    -0.003555, -0.002764, -0.002497, -0.002292, -0.002007, -0.001828,
     1    -0.001713, -0.001636, -0.001608, -0.001585, -0.001549, -0.001523,
     1    -0.001501, -0.001483, -0.001467, -0.001453, -0.00144, -0.001416,
     1    -0.001397, -0.001384, -0.001375, -0.001369, -0.001364, -0.001362,
     1    -0.00136, -0.00136, -0.001361 /

      data phi4   / 0.102151, 5.41, 0.102151, 0.10836, 0.110372, 0.11371, 0.1186, 0.119888, 0.122493,
     1    0.12654, 0.127926, 0.133641, 0.136572, 0.139596, 0.141112, 0.142659,
     1    0.145774, 0.148927, 0.157001, 0.165249, 0.173635, 0.177001, 0.182082,
     1    0.190596, 0.199129, 0.207505, 0.215628, 0.223398, 0.230662, 0.243315,
     1    0.253169, 0.260175, 0.261767, 0.264504, 0.266468, 0.266468, 0.26506,
     1    0.262501, 0.259163, 0.255253, 0.246252, 0.236525, 0.231541, 0.22657,
     1    0.216796, 0.211993, 0.207277, 0.198077, 0.189304, 0.185074, 0.18092,
     1    0.172976, 0.165464, 0.158358, 0.151662, 0.148466, 0.145352, 0.139415,
     1    0.133828, 0.121226, 0.110339, 0.100842, 0.097891, 0.092504, 0.085153,
     1    0.078622, 0.072788, 0.067563, 0.06285, 0.058595, 0.051206, 0.045054,
     1    0.039879, 0.035504, 0.031787, 0.028613, 0.02589, 0.023537, 0.021496,
     1    0.019716, 0.016771, 0.014434, 0.013436, 0.012534, 0.010962, 0.009643,
     1    0.008521, 0.007561, 0.00713, 0.00673, 0.006008, 0.005379, 0.00483,
     1    0.004349, 0.003925, 0.003553, 0.003223, 0.002551, 0.002047, 0.001662,
     1    0.001366, 0.001134, 0.000952, 0.000806, 0.000689, 0.000593, 0.000515 /

      data phi5   / 0.2289, 0.2899, 0.2289, 0.2289, 0.2289, 0.2289, 0.2289, 0.2289, 0.2289, 0.2289, 0.2289,
     1    0.2289, 0.2289, 0.229, 0.229, 0.229, 0.229, 0.229, 0.229, 0.229, 0.2291,
     1    0.2291, 0.2291, 0.2292, 0.2293, 0.2294, 0.2295, 0.2296, 0.2297, 0.2302,
     1    0.2305, 0.2311, 0.2313, 0.2319, 0.2326, 0.2334, 0.2348, 0.2361, 0.2374,
     1    0.2386, 0.2433, 0.2477, 0.2497, 0.2533, 0.2606, 0.2641, 0.2674, 0.2746,
     1    0.2847, 0.2895, 0.2942, 0.3032, 0.312, 0.3227, 0.3329, 0.3378, 0.3427,
     1    0.352, 0.361, 0.381, 0.3993, 0.4142, 0.418, 0.4252, 0.4353, 0.4444,
     1    0.4494, 0.4542, 0.4587, 0.4629, 0.4668, 0.4703, 0.4729, 0.4743, 0.4756,
     1    0.4767, 0.4772, 0.4777, 0.4781, 0.4785, 0.4789, 0.4792, 0.4793, 0.4794,
     1    0.4795, 0.4796, 0.4797, 0.4798, 0.4798, 0.4798, 0.4798, 0.4799, 0.4799,
     1    0.4799, 0.4799, 0.4799, 0.4799, 0.48, 0.48, 0.48, 0.48, 0.48, 0.48,
     1    0.48, 0.48, 0.48, 0.48 /

      data phi6   / 0.014996, 0.006718, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996,
     1    0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996,
     1    0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996,
     1    0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014994,
     1    0.014994, 0.014993, 0.014993, 0.014991, 0.014988, 0.014987, 0.014981,
     1    0.014975, 0.01497, 0.014964, 0.014928, 0.014895, 0.014881, 0.014832,
     1    0.014731, 0.014684, 0.014639, 0.014513, 0.014239, 0.01411, 0.013985,
     1    0.013747, 0.013493, 0.012938, 0.012429, 0.01219, 0.011962, 0.011532,
     1    0.011133, 0.009769, 0.00866, 0.007829, 0.00762, 0.007244, 0.006739,
     1    0.006325, 0.006163, 0.006014, 0.005876, 0.005749, 0.005678, 0.005613,
     1    0.005573, 0.005558, 0.005544, 0.005533, 0.005529, 0.005527, 0.005524,
     1    0.005521, 0.005519, 0.005518, 0.005518, 0.005518, 0.005517, 0.005517,
     1    0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517,
     1    0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517,
     1    0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517 /

      data phi7   / 580.0, 459.0, 580.0, 580.0, 580.0, 580.0, 580.0, 580.0, 580.0, 580.0, 580.0,
     1    579.9, 579.9, 579.9, 579.9, 579.9, 579.9, 579.9, 579.8, 579.8,
     1    579.8, 579.7, 579.7, 579.6, 579.6, 579.5, 579.4, 579.3, 579.2,
     1    578.8, 578.6, 578.2, 578.0, 577.7, 577.2, 576.7, 576.0, 575.2,
     1    574.6, 573.9, 571.6, 569.5, 568.5, 566.9, 563.6, 562.0, 560.5,
     1    557.3, 552.6, 550.4, 548.3, 544.1, 540.0, 534.0, 528.4, 525.7,
     1    523.0, 517.8, 512.9, 497.1, 482.7, 468.7, 463.9, 454.8, 441.9,
     1    429.9, 419.5, 409.8, 400.5, 391.8, 379.6, 368.5, 359.8, 353.7,
     1    348.1, 343.1, 340.2, 337.5, 334.9, 332.5, 330.0, 327.8, 326.7,
     1    326.1, 325.1, 324.1, 323.3, 322.9, 322.7, 322.5, 322.1, 321.7,
     1    321.6, 321.4, 321.2, 321.1, 320.9, 320.7, 320.6, 320.4, 320.4,
     1    320.3, 320.2, 320.2, 320.2, 320.1, 320.1 /

      data phi8   / 0.07, 0.1138, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07,
     1    0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.0698, 0.0696, 0.0694,
     1    0.0692, 0.0686, 0.0679, 0.0671, 0.0662, 0.0654, 0.0646, 0.0635,
     1    0.0625, 0.0602, 0.0592, 0.056, 0.0494, 0.0407, 0.0306, 0.0199,
     1    0.0089, -0.0019, -0.0223, -0.0401, -0.0479, -0.0548, -0.0665,
     1    -0.0713, -0.0756, -0.0825, -0.0875, -0.0895, -0.0912, -0.0939,
     1    -0.096, -0.0975, -0.0987, -0.0991, -0.0994, -0.0998, -0.0998,
     1    -0.0983, -0.0948, -0.0896, -0.0876, -0.0834, -0.0765, -0.0693,
     1    -0.062, -0.0549, -0.0479, -0.0412, -0.0285, -0.0167, -0.0057,
     1    0.0045, 0.014, 0.0229, 0.0313, 0.0393, 0.0469, 0.0544, 0.0687,
     1    0.0826, 0.0895, 0.0963, 0.1098, 0.1232, 0.1366, 0.1498, 0.1562,
     1    0.1625, 0.1746, 0.1859, 0.1964, 0.206, 0.2147, 0.2225, 0.2295,
     1    0.2435, 0.2532, 0.2595, 0.2635, 0.266, 0.2675, 0.2683, 0.2686,
     1    0.2685, 0.2682 /

      data tau1   / 0.3437, 0.2539, 0.3437, 0.3471, 0.3505, 0.3538, 0.3571, 0.3603, 0.3633, 0.3663,
     1    0.3691, 0.3718, 0.3744, 0.3768, 0.3791, 0.3811, 0.3831, 0.3848,
     1    0.3863, 0.3876, 0.3877, 0.3881, 0.3883, 0.3878, 0.3872, 0.3865,
     1    0.3856, 0.3846, 0.3835, 0.3816, 0.3795, 0.3775, 0.3761, 0.3742,
     1    0.3719, 0.3696, 0.3672, 0.3649, 0.3626, 0.3601, 0.3572, 0.3543,
     1    0.3522, 0.35, 0.3474, 0.3455, 0.3438, 0.3417, 0.3398, 0.3386,
     1    0.3375, 0.3362, 0.3351, 0.3344, 0.3339, 0.334, 0.3344, 0.3346,
     1    0.3353, 0.3354, 0.336, 0.3369, 0.339, 0.3409, 0.3429, 0.3452,
     1    0.3478, 0.3508, 0.3541, 0.3577, 0.3608, 0.3644, 0.3682, 0.3725,
     1    0.3769, 0.3816, 0.3865, 0.3916, 0.3968, 0.4023, 0.4085, 0.4149,
     1    0.4212, 0.4277, 0.4341, 0.4406, 0.447, 0.4534, 0.4598, 0.4661,
     1    0.4723, 0.4784, 0.4845, 0.4904, 0.4962, 0.5019, 0.5074, 0.5128,
     1    0.5181, 0.5232, 0.5281, 0.5328, 0.5374, 0.5419, 0.5461, 0.5502, 0.5542 /

      data tau2   / 0.2637, 0.2381, 0.2637, 0.2671, 0.2705, 0.2738, 0.2771, 0.2803, 0.2833, 0.2863,
     1    0.2891, 0.2918, 0.2944, 0.2968, 0.2991, 0.3011, 0.3031, 0.3048,
     1    0.3063, 0.3076, 0.3095, 0.3106, 0.3118, 0.3129, 0.3138, 0.3145,
     1    0.3149, 0.3151, 0.3152, 0.3154, 0.3153, 0.3151, 0.3143, 0.3135,
     1    0.3128, 0.312, 0.311, 0.31, 0.3089, 0.3076, 0.3068, 0.306, 0.3047,
     1    0.3034, 0.3026, 0.3015, 0.3005, 0.2999, 0.2993, 0.2988, 0.2983,
     1    0.2983, 0.2984, 0.2987, 0.2993, 0.2999, 0.3008, 0.3021, 0.3036,
     1    0.306, 0.3085, 0.3113, 0.3139, 0.3169, 0.3205, 0.3243, 0.3283,
     1    0.3326, 0.3371, 0.3419, 0.3472, 0.3527, 0.3584, 0.3643, 0.3703,
     1    0.3765, 0.3828, 0.3892, 0.3957, 0.4023, 0.4085, 0.4149, 0.4212,
     1    0.4277, 0.4341, 0.4406, 0.447, 0.4534, 0.4598, 0.4661, 0.4723,
     1    0.4784, 0.4845, 0.4904, 0.4962, 0.5019, 0.5074, 0.5128, 0.5181,
     1    0.5232, 0.5281, 0.5328, 0.5374, 0.5419, 0.5461, 0.5502, 0.5542 /

      data sigma1  / 0.4458, 0.4496, 0.4458, 0.4458, 0.4476, 0.45, 0.4529, 0.4535, 0.4547, 0.4564,
     1     0.4569, 0.4589, 0.4598, 0.4607, 0.4611, 0.4615, 0.4623, 0.463,
     1     0.4647, 0.4663, 0.4677, 0.4682, 0.469, 0.4702, 0.4712, 0.4722,
     1     0.4731, 0.474, 0.4747, 0.4761, 0.4773, 0.4782, 0.4785, 0.4791,
     1     0.4798, 0.4803, 0.4808, 0.4811, 0.4814, 0.4816, 0.4817, 0.4816,
     1     0.4815, 0.4813, 0.4808, 0.4805, 0.4801, 0.4794, 0.4786, 0.4781,
     1     0.4777, 0.4768, 0.4758, 0.4748, 0.4738, 0.4734, 0.4729, 0.4719,
     1     0.471, 0.4688, 0.4667, 0.465, 0.4644, 0.4634, 0.4621, 0.461,
     1     0.46, 0.4592, 0.4586, 0.4581, 0.4555, 0.4535, 0.4518, 0.4505,
     1     0.4493, 0.4484, 0.4476, 0.4469, 0.4463, 0.4459, 0.4451, 0.4444,
     1     0.4442, 0.444, 0.4436, 0.4433, 0.443, 0.4428, 0.4427, 0.4426,
     1     0.4425, 0.4424, 0.4423, 0.4422, 0.4421, 0.442, 0.442, 0.4418,
     1     0.4417, 0.4417, 0.4416, 0.4416, 0.4415, 0.4415, 0.4415, 0.4415,
     1     0.4414 /

      data sigma2  / 0.3459, 0.3554, 0.3459, 0.3459, 0.3477, 0.3502, 0.353, 0.3537, 0.3549, 0.3566,
     1     0.3572, 0.3592, 0.3602, 0.3611, 0.3615, 0.3619, 0.3627, 0.3635,
     1     0.3654, 0.367, 0.3686, 0.3692, 0.37, 0.3713, 0.3726, 0.3738,
     1     0.3749, 0.3759, 0.3769, 0.3787, 0.3804, 0.3819, 0.3824, 0.3834,
     1     0.3847, 0.3859, 0.3871, 0.3882, 0.3893, 0.3902, 0.3921, 0.3938,
     1     0.3946, 0.3953, 0.3967, 0.3974, 0.3981, 0.3993, 0.4005, 0.401,
     1     0.4016, 0.4026, 0.4036, 0.4046, 0.4054, 0.4059, 0.4063, 0.4071,
     1     0.4079, 0.4098, 0.4114, 0.413, 0.4135, 0.4144, 0.4157, 0.417,
     1     0.4181, 0.4192, 0.4203, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213,
     1     0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213,
     1     0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213,
     1     0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213,
     1     0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213 /

      data sigma3  / 0.8, 0.7504, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8,
     1     0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8,
     1     0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8,
     1     0.8, 0.8, 0.7999, 0.7999, 0.7999, 0.7998, 0.7998, 0.7997,
     1     0.7997, 0.7996, 0.7994, 0.7993, 0.7992, 0.799, 0.7988, 0.7983,
     1     0.7979, 0.7976, 0.7974, 0.797, 0.7966, 0.794, 0.7917, 0.7884,
     1     0.7867, 0.7836, 0.7792, 0.7747, 0.7681, 0.7619, 0.756, 0.7504,
     1     0.74, 0.7304, 0.723, 0.7182, 0.7136, 0.7097, 0.708, 0.7064,
     1     0.7049, 0.7035, 0.7025, 0.7017, 0.7012, 0.7011, 0.7008, 0.7006,
     1     0.7004, 0.7003, 0.7003, 0.7002, 0.7002, 0.7001, 0.7001, 0.7001,
     1     0.7001, 0.7001, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7 /

c      data sigma4 /   /

C Find the requested spectral period and corresponding coefficients
      nPer = 107
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         c1T      = c1(1)
         c1aT     = c1a(1)
         c1bT     = c1b(1)
         cnT      = cn(1)
         cmT      = cm(1)
         c5T      = c5(1)
         c6T      = c6(1)
         c7T      = c7(1)
         c9T      = c9(1)
         c9aT     = c9a(1)
         gamma1T  = gamma1(1)
         gamma2T  = gamma2(1)
         phi1T    = phi1(1)
         phi2T    = phi2(1)
         phi3T    = phi3(1)
         phi4T    = phi4(1)
         phi5T    = phi5(1)
         phi6T    = phi6(1)
         phi7T    = phi7(1)
         phi8T    = phi8(1)
         tau1T    = tau1(1)
         tau2T    = tau2(1)
         sigma1T = sigma1(1)
         sigma2T = sigma2(1)
         sigma3T = sigma3(1)
         goto 1011
      elseif (specT .eq. -1.0) then
         period1  = period(2)
         c1T      = c1(2)
         c1aT     = c1a(2)
         c1bT     = c1b(2)
         cnT      = cn(2)
         cmT      = cm(2)
         c5T      = c5(2)
         c6T      = c6(2)
         c7T      = c7(2)
         c9T      = c9(2)
         c9aT     = c9a(2)
         gamma1T  = gamma1(2)
         gamma2T  = gamma2(2)
         phi1T    = phi1(2)
         phi2T    = phi2(2)
         phi3T    = phi3(2)
         phi4T    = phi4(2)
         phi5T    = phi5(2)
         phi6T    = phi6(2)
         phi7T    = phi7(2)
         phi8T    = phi8(2)
         tau1T    = tau1(2)
         tau2T    = tau2(2)
         sigma1T = sigma1(2)
         sigma2T = sigma2(2)
         sigma3T = sigma3(2)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=3,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Chiou and Youngs (NGA-2008) Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),c1(count1),c1(count2),
     +                   specT,c1T,iflag)
            call interp (period(count1),period(count2),c1a(count1),c1a(count2),
     +                   specT,c1aT,iflag)
            call interp (period(count1),period(count2),c1b(count1),c1b(count2),
     +                   specT,c1bT,iflag)
            call interp (period(count1),period(count2),cn(count1),cn(count2),
     +                   specT,cnT,iflag)
            call interp (period(count1),period(count2),cm(count1),cm(count2),
     +                   specT,cmT,iflag)
            call interp (period(count1),period(count2),c5(count1),c5(count2),
     +                   specT,c5T,iflag)
            call interp (period(count1),period(count2),c6(count1),c6(count2),
     +                   specT,c6T,iflag)
            call interp (period(count1),period(count2),c7(count1),c7(count2),
     +                   specT,c7T,iflag)
            call interp (period(count1),period(count2),c9(count1),c9(count2),
     +                   specT,c9T,iflag)
            call interp (period(count1),period(count2),c9a(count1),c9a(count2),
     +                   specT,c9aT,iflag)
            call interp (period(count1),period(count2),gamma1(count1),gamma1(count2),
     +                   specT,gamma1T,iflag)
            call interp (period(count1),period(count2),gamma2(count1),gamma2(count2),
     +                   specT,gamma2T,iflag)
            call interp (period(count1),period(count2),phi1(count1),phi1(count2),
     +                   specT,phi1T,iflag)
            call interp (period(count1),period(count2),phi2(count1),phi2(count2),
     +                   specT,phi2T,iflag)
            call interp (period(count1),period(count2),phi3(count1),phi3(count2),
     +                   specT,phi3T,iflag)
            call interp (period(count1),period(count2),phi4(count1),phi4(count2),
     +                   specT,phi4T,iflag)
            call interp (period(count1),period(count2),phi5(count1),phi5(count2),
     +                   specT,phi5T,iflag)
            call interp (period(count1),period(count2),phi6(count1),phi6(count2),
     +                   specT,phi6T,iflag)
            call interp (period(count1),period(count2),phi7(count1),phi7(count2),
     +                   specT,phi7T,iflag)
            call interp (period(count1),period(count2),phi8(count1),phi8(count2),
     +                   specT,phi8T,iflag)
            call interp (period(count1),period(count2),tau1(count1),tau1(count2),
     +                   specT,tau1T,iflag)
            call interp (period(count1),period(count2),tau2(count1),tau2(count2),
     +                   specT,tau2T,iflag)
            call interp (period(count1),period(count2),sigma1(count1),sigma1(count2),
     +                   specT,sigma1T,iflag)
            call interp (period(count1),period(count2),sigma2(count1),sigma2(count2),
     +                   specT,sigma2T,iflag)
            call interp (period(count1),period(count2),sigma3(count1),sigma3(count2),
     +                   specT,sigma3T,iflag)
c            call interp (period(count1),period(count2),sigma4(count1),sigma4(count2),
c     +                   specT,sigma4T,iflag)

 1011 period1 = specT

C     Check for valid spectral periods which are defined: PGA, 0.3 and 1.0sec.
C     Reset necessary coefficients.

      if (specT .eq. 0.0) then
         c1T = -1.2630
         c3  =  1.7267
         cMT = 5.85
         gamma2T = -0.00481
         tau = 0.4481
         sigma = 0.6703
      elseif (specT .gt. 0.2999 .and. specT .lt. 0.3001) then
         c1T = -0.9209
         c3  =  2.1287
         cMT = 5.60
         gamma2T = -0.00295
         tau = 0.4405
         sigma = 0.6792
      elseif (specT .gt. 0.9999 .and. specT .lt. 1.0001) then
         c1T = -2.2637
         c3  =  3.0609
         cMT = 5.35
         gamma2T = -0.00227
         tau = 0.3651
         sigma = 0.6135
      else
C         write (*,*)
C         write (*,*) 'Chiou and Youngs (NGA-2008) Horizontal'
C         write (*,*) 'Southern California small magnitude'
C         write (*,*) 'attenuation model is not defined for a '
C         write (*,*) ' spectral period of: '
C         write (*,*)') ' Period = ',specT
C         write (*,*)
         return
      endif

c     Set the fault mechanism term.
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C      -1       Normal                   -120 < Rake < -60.0
C     1, 0.5    Reverse and Rev/Obl        30 < Rake < 150.0
C     0,-0.5    Strike-Slip and NMl/Obl        Otherwise
         if (ftype .eq. -1) then
            F_RV = 0.0
            F_NM = 1.0
         elseif (ftype .ge. 0.5) then
            F_RV = 1.0
            F_NM = 0.0
         else
            F_RV = 0.0
            F_NM = 0.0
         endif

C HW factors......
c     For now, convert hwflag to an equivalent srcSiteA
c      if ( hwflag .eq. 1 ) then
c        srcSiteA = 90.
c      else
c        srcSiteA = 0.
c      endif
C No longer needed since Rx is computed and passed.
C     Compute Rx value given source to site azimuth
c      if (srcsiteA .eq. 90.0) then
c         Rx = Rrup/sin(abs(delta)*3.14159/180.0) - DTor/tan(abs(delta)*3.14159/180.0)
c      elseif (srcsiteA .gt. 0.0) then
c         Rx = Rbjf*tan(srcSiteA*3.14159/180.0)
c      elseif (srcsiteA .le. 0.0) then
c         Rx = 0.0
c      endif

        c2 = 1.06
c        c3 = 3.45
        c4 = -2.1
        c4a = -0.5
        cRB = 50.0
        cHM = 3.0
        gm = 4.0

        pi = atan(1.0)*4.0
        d2r = pi/180.0

        cc = c5T* cosh(c6T * max((M-cHM),0.0))
        gamma = gamma1T + gamma2T/cosh(max((M-gm),0.0))
        cosDELTA = cos(abs(DELTA)*d2r)

c Magnitude scaling
        r1 = c1T + c2 * (M-6.0) +
     1       (c2-c3)/cnT *
     1             alog(1.0 + exp(-cnT*(M-cMT)))

c Near-field magnitude and distance scaling
        r2 = c4 * alog(Rrup + cc)

c Distance scaling at large distance
        r3 = (c4a-c4)/2.0 *
     1            alog( Rrup*Rrup+cRB*cRB ) +
     1       Rrup * gamma

c More source scaling
        r4 = c1aT*F_RV +
     1       c1bT*F_NM +
     1       c7T*(DTor - 4.0)

c HW effect
        if (HWFlag .eq. 0) then
           hw = 0.0
        else
           hw = c9T * tanh(Rx*cosDelta**2.0/c9aT) *
     1          (1.0 - sqrt(Rbjf**2.0+DTor**2.0)/(Rrup + 0.001))
        endif
c Predicted median Sa on reference condition (Vs=1130 m/sec)
        psa_ref = r1+r2+r3+r4+hw

c Linear soil amplification
        a = phi1T * min(alog(Vs/1130.0), 0.0)

c Nonlinear soil amplification
        b = phi2T *
     1      (exp(phi3T*(min(Vs,1130.0)-360.0)) - exp(phi3T*(1130.0-360.0)))
        c = phi4T

C Deviation from ln(Vs30) scaling: bedrock depth (Z1) effect
C NOTE: max(0,z1-15) is capped at 300 to avoid overflow of function cosh
        rkdepth = phi5T*
     1            (1.0-1.0/cosh(phi6T*max(0.0,depthvs10*1000.0-phi7T))) +
     1            phi8T/cosh(0.15*min(max(0.0,depthvs10*1000.0-15.0),300.0))

c Sa on soil condition
        psa = psa_ref + (a + b * alog((exp(psa_ref)+c)/c)) + rkdepth

C Compute the sigma term
c        NL = b*exp(psa_ref)/(exp(psa_ref)+c)
c        sigma_M = sigma1T + (sigma2T-sigma1T)/2.0*(min(max(M,5.0),7.0)-5.0)
c        if (vs30_class .eq. 0) then
c           sigma = sigma_M*sqrt(sigma3T+(1.0+NL)**2.0)
c        else
c           sigma = sigma_M*sqrt(0.7+(1.0+NL)**2.0)
c        endif
C Compute the tau term
c        tau = tau1T + (tau2T-tau1T)/2.0*(min(max(M,5.0),7.0)-5.0)
c        tau = tau*(1.0+NL)

        sigma = sqrt(tau*tau + sigma*sigma)

C     Convert ground motion to units of gals.
      lnY = psa + 6.89
      period2 = period1

      return
      end

c ---------------------------------------------------------------------
C ** Chiou and Youngs (NGA-2008) Horizontal **
C ** Central California Small Magnitude Model              **
C ** Chiou, Youngs, Abrahamson, an Addo (EQ Spectra, 2010) **
C     Note: Currently only coded for PGA, T=0.3, and 1.0sec
c ---------------------------------------------------------------------
      Subroutine CY_NGA_2008CC ( m, Rrup, Rbjf, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, Delta, DTor, Ftype, depthvs10, vs30_class,
     3                     hwflag, Rx )

      parameter (MAXPER=107)
      REAL Period(MAXPER), C1(MAXPER), C1a(MAXPER), C1b(MAXPER)
      REAL cn(MAXPER), cm(MAXPER), c5(MAXPER), c6(MAXPER)
      REAL c7(MAXPER), c9(MAXPER), gamma1(MAXPER), gamma2(MAXPER)
      REAL phi1(MAXPER), phi2(MAXPER), phi3(MAXPER), phi4(MAXPER)
      REAL phi5(MAXPER), phi6(MAXPER), phi7(MAXPER), phi8(MAXPER)
      REAL tau1(MAXPER), tau2(MAXPER), sigma1(MAXPER), sigma2(MAXPER)
      REAL sigma3(MAXPER), sigma4(MAXPER), c9a(MAXPER)

      REAL c1T, c1aT, c1bT, cnT, cmT, c5T, c6T, c7T, c9T, c9aT
      REAL gamma1T, gamma2T, phi1T, phi2T, phi3T, phi4T, sigma3T, sigma4T
      REAL phi5T, phi6T, phi7T, phi8T, tau1T, tau2T, sigma1T, sigma2T
      REAL c2, c3, c4, c4a, cRB, cHM, gm, pi, d2r, gamma
      real cc, cosdelta, r1, r2, r3, r4, hw, psa_ref, psa, a, b, c
      integer iflag, count1, count2, hwflag, vs30_class
      REAL M, RRUP, RBJF, DTOR, Delta, specT, sigma, Ftype, Rx
      REAL period2, lnY, F_RV, F_NM, depthvs10, sigma_M, tau, NL, rkdepth

      data period / 0.0, -1.0, 0.01, 0.02, 0.022, 0.025, 0.029, 0.03, 0.032, 0.035, 0.036, 0.04,
     1              0.042, 0.044, 0.045, 0.046, 0.048, 0.05, 0.055, 0.06, 0.065, 0.067,
     1              0.07, 0.075, 0.08, 0.085, 0.09, 0.095, 0.1, 0.11, 0.12, 0.13, 0.133,
     1              0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.2, 0.22, 0.24, 0.25, 0.26,
     1              0.28, 0.29, 0.3, 0.32, 0.34, 0.35, 0.36, 0.38, 0.4, 0.42, 0.44,
     1              0.45, 0.46, 0.48, 0.5, 0.55, 0.6, 0.65, 0.667, 0.7, 0.75, 0.8, 0.85,
     1              0.9, 0.95, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.2,
     1              2.4, 2.5, 2.6, 2.8, 3.0, 3.2, 3.4, 3.5, 3.6, 3.8, 4.0, 4.2, 4.4, 4.6,
     1              4.8, 5.0, 5.5, 6.0, 6.5, 7.0, 7.5, 8.0, 8.5, 9.0, 9.5, 10.0 /
      data c1    / -1.2687, 2.2884, -1.268694, -1.251478, -1.238087, -1.216428, -1.18418,
     1   -1.174374, -1.154467, -1.123314, -1.111874, -1.067114,
     1   -1.043071, -1.018824, -1.00656, -0.994327, -0.970216,
     1   -0.946391, -0.889485, -0.836096, -0.787293, -0.769389,
     1   -0.743954, -0.705072, -0.670827, -0.640929, -0.6151,
     1   -0.593104, -0.574699, -0.545283, -0.527572, -0.519988,
     1   -0.520317, -0.522696, -0.530869, -0.544692, -0.562955,
     1   -0.584664, -0.608982, -0.635236, -0.689254, -0.746535,
     1   -0.776564, -0.806831, -0.866612, -0.897204, -0.92776,
     1   -0.987694, -1.046911, -1.076381, -1.10551, -1.162283,
     1   -1.217597, -1.271357, -1.323477, -1.348959, -1.373988,
     1   -1.422616, -1.469453, -1.578991, -1.678576, -1.769127,
     1   -1.797932, -1.8516, -1.927839, -1.998837, -2.06549,
     1   -2.128468, -2.188278, -2.245326, -2.352111, -2.451947,
     1   -2.547437, -2.640124, -2.730652, -2.818867, -2.904397,
     1   -2.986847, -3.065866, -3.141253, -3.281536, -3.409571,
     1   -3.469751, -3.527743, -3.637785, -3.741264, -3.838964,
     1   -3.931396, -3.975878, -4.019205, -4.102464, -4.181358,
     1   -4.256034, -4.326756, -4.39387, -4.457747, -4.518726,
     1   -4.660582, -4.789382, -4.907897, -5.018331, -5.12243,
     1   -5.221536, -5.316573, -5.40817, -5.496751, -5.587222 /

      data c1a   / 0.1, 0.1094, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
     1   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
     1   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
     1   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
     1   0.1, 0.1, 0.0999, 0.0999, 0.0999, 0.0999, 0.0999,
     1   0.0998, 0.0998, 0.0998, 0.0997, 0.0996, 0.0995,
     1   0.0995, 0.0994, 0.0993, 0.0991, 0.0986, 0.0978,
     1   0.0968, 0.0963, 0.0954, 0.0936, 0.0914, 0.0887,
     1   0.0853, 0.0813, 0.0766, 0.0651, 0.0512, 0.0355,
     1   0.0188, 0.0022, -0.0135, -0.0275, -0.0399, -0.0504,
     1   -0.0591, -0.0722, -0.0808, -0.084, -0.0866, -0.0905,
     1   -0.0931, -0.0949, -0.0962, -0.0967, -0.0971, -0.0978,
     1   -0.0982, -0.0986, -0.0989, -0.0991, -0.0993, -0.0994,
     1   -0.0996, -0.0998, -0.0998, -0.0999, -0.0999, -0.0999,
     1   -0.1, -0.1, -0.1, -0.1 /

      data c1b   / -0.255, -0.0626, -0.255, -0.255, -0.255, -0.255, -0.255, -0.255,
     1   -0.255, -0.255, -0.255, -0.255, -0.255, -0.255,
     1   -0.255, -0.255, -0.255, -0.255, -0.255, -0.255,
     1   -0.2547, -0.254, -0.254, -0.254, -0.254, -0.254,
     1   -0.254, -0.253, -0.253, -0.2529, -0.252, -0.251,
     1   -0.251, -0.2504, -0.25, -0.249, -0.248, -0.247,
     1   -0.246, -0.2449, -0.2428, -0.24, -0.2382, -0.237,
     1   -0.2343, -0.2328, -0.2313, -0.2275, -0.2247, -0.2226,
     1   -0.2214, -0.218, -0.2146, -0.2107, -0.2073, -0.2054,
     1   -0.2037, -0.2008, -0.1972, -0.1889, -0.1814, -0.1744,
     1   -0.1722, -0.168, -0.162, -0.1564, -0.1511, -0.1472,
     1   -0.1432, -0.14, -0.1337, -0.1282, -0.1246, -0.1214,
     1   -0.1184, -0.1166, -0.114, -0.1125, -0.1111, -0.11,
     1   -0.108, -0.107, -0.106, -0.106, -0.105, -0.104, -0.104,
     1   -0.103, -0.103, -0.103, -0.102, -0.102, -0.102, -0.102,
     1   -0.102, -0.101, -0.101, -0.101, -0.101, -0.101, -0.101,
     1   -0.101, -0.1, -0.1, -0.1, -0.1, -0.1 /

      data cn    / 2.996, 1.648, 2.996, 3.2924, 3.3516, 3.4293, 3.5012, 3.5137,
     1   3.5331, 3.5512, 3.5549, 3.563, 3.5627, 3.5607,
     1   3.5594, 3.5574, 3.5526, 3.5473, 3.5308, 3.5129,
     1   3.493, 3.4844, 3.4714, 3.448, 3.4232, 3.3966,
     1   3.3689, 3.3407, 3.312, 3.2549, 3.1992, 3.1447,
     1   3.1288, 3.0932, 3.0436, 2.997, 2.9522, 2.91,
     1   2.8701, 2.8312, 2.7596, 2.6916, 2.6579, 2.6256,
     1   2.5637, 2.5334, 2.5048, 2.4487, 2.397, 2.3719,
     1   2.348, 2.3034, 2.2611, 2.2218, 2.1848, 2.1672,
     1   2.15, 2.1178, 2.0868, 2.0174, 1.957, 1.9036,
     1   1.8868, 1.8554, 1.8119, 1.7727, 1.7368, 1.7039,
     1   1.6747, 1.648, 1.6046, 1.5717, 1.5462, 1.5263,
     1   1.511, 1.4984, 1.4889, 1.4814, 1.4744, 1.4698,
     1   1.4625, 1.458, 1.4562, 1.456, 1.455, 1.4557, 1.4565,
     1   1.4581, 1.4594, 1.4606, 1.463, 1.4652, 1.4676,
     1   1.4703, 1.4733, 1.4752, 1.4779, 1.4831, 1.4878,
     1   1.4923, 1.4955, 1.4975, 1.499, 1.5, 1.501, 1.501, 1.502 /

      data cM    / 4.184, 4.2979, 4.184, 4.1879, 4.1828, 4.1734, 4.1593, 4.1556,
     1   4.1485, 4.1382, 4.1351, 4.1226, 4.1174, 4.1123, 4.1104,
     1   4.1084, 4.1038, 4.1011, 4.094, 4.0892, 4.0867, 4.086,
     1   4.086, 4.086, 4.0873, 4.0899, 4.0938, 4.0985, 4.103,
     1   4.1144, 4.1277, 4.1416, 4.1459, 4.1565, 4.1717, 4.1871,
     1   4.2023, 4.2172, 4.2323, 4.2476, 4.2759, 4.3042, 4.3184,
     1   4.332, 4.3584, 4.3712, 4.3844, 4.4086, 4.4323, 4.4441,
     1   4.4557, 4.4768, 4.4979, 4.5172, 4.5361, 4.5452, 4.5545,
     1   4.5712, 4.5881, 4.6273, 4.6632, 4.6959, 4.7071, 4.7276,
     1   4.7571, 4.7851, 4.8114, 4.8362, 4.8597, 4.882, 4.9245,
     1   4.9641, 5.0013, 5.0367, 5.0697, 5.1019, 5.1325, 5.1623,
     1   5.1905, 5.2173, 5.2691, 5.3173, 5.3393, 5.361, 5.4013,
     1   5.4385, 5.4737, 5.5069, 5.5229, 5.5382, 5.5687, 5.5977,
     1   5.6252, 5.6518, 5.6776, 5.7027, 5.7276, 5.7855, 5.8404,
     1   5.8924, 5.9422, 5.9891, 6.0339, 6.077, 6.1172, 6.1561, 6.193 /

      data c5    / 6.16, 5.17, 6.16, 6.158, 6.158, 6.157, 6.1558, 6.155, 6.1545,
     1   6.153, 6.153, 6.1508, 6.1497, 6.1487, 6.1477, 6.147,
     1   6.1459, 6.1441, 6.1409, 6.1362, 6.1314, 6.1294, 6.126,
     1   6.12, 6.1144, 6.1072, 6.1007, 6.0929, 6.085, 6.0683,
     1   6.0494, 6.0296, 6.0237, 6.0087, 5.9871, 5.9647, 5.9416,
     1   5.9177, 5.8942, 5.8699, 5.8231, 5.7767, 5.7547, 5.7335,
     1   5.6917, 5.6719, 5.6527, 5.6163, 5.5832, 5.5681, 5.5528,
     1   5.5252, 5.4997, 5.4764, 5.4555, 5.4458, 5.4362, 5.4189,
     1   5.4029, 5.3697, 5.3431, 5.3213, 5.3149, 5.3045, 5.29,
     1   5.2788, 5.2692, 5.2607, 5.2537, 5.248, 5.2387, 5.2321,
     1   5.2266, 5.2224, 5.2194, 5.2166, 5.214, 5.2125, 5.2111,
     1   5.2099, 5.208, 5.206, 5.206, 5.205, 5.2043, 5.204, 5.203,
     1   5.203, 5.203, 5.2024, 5.202, 5.202, 5.202, 5.2017, 5.201,
     1   5.201, 5.201, 5.201, 5.201, 5.201, 5.201, 5.2, 5.2, 5.2,
     1   5.2, 5.2, 5.2 /

      data c6    / 0.4893, 0.4407, 0.4893, 0.4892, 0.4892, 0.4891, 0.4891, 0.489, 0.489,
     1   0.4889, 0.4889, 0.4888, 0.4887, 0.4887, 0.4886, 0.4886, 0.4885,
     1   0.4884, 0.4883, 0.488, 0.4878, 0.4876, 0.4875, 0.4872, 0.4869,
     1   0.4865, 0.4862, 0.4858, 0.4854, 0.4846, 0.4837, 0.4828, 0.4825,
     1   0.4818, 0.4808, 0.4797, 0.4787, 0.4776, 0.4765, 0.4755, 0.4735,
     1   0.4715, 0.4706, 0.4698, 0.468, 0.4673, 0.4665, 0.4651, 0.4638,
     1   0.4632, 0.4626, 0.4616, 0.4607, 0.4598, 0.4591, 0.4587, 0.4583,
     1   0.4578, 0.4571, 0.456, 0.455, 0.4542, 0.454, 0.4536, 0.4531,
     1   0.4528, 0.4524, 0.4522, 0.4519, 0.4517, 0.4514, 0.4511, 0.451,
     1   0.4508, 0.4507, 0.4506, 0.4505, 0.4504, 0.4504, 0.4504, 0.4503,
     1   0.4502, 0.4502, 0.4502, 0.4502, 0.4501, 0.4501, 0.4501, 0.4501,
     1   0.4501, 0.4501, 0.4501, 0.4501, 0.4501, 0.4501, 0.45, 0.45,
     1   0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.45 /

      data c7    / 0.0512, 0.0207, 0.0512, 0.0512, 0.0512, 0.0512, 0.0511, 0.0511, 0.0511, 0.051,
     1   0.0509, 0.0508, 0.0507, 0.0506, 0.0506, 0.0505, 0.0505, 0.0504,
     1   0.0502, 0.05, 0.0499, 0.0498, 0.0497, 0.0495, 0.0494, 0.0492,
     1   0.0491, 0.049, 0.0489, 0.0486, 0.0484, 0.0482, 0.0482, 0.0481,
     1   0.0479, 0.0477, 0.0476, 0.0474, 0.0473, 0.0471, 0.0468, 0.0466,
     1   0.0464, 0.0463, 0.046, 0.0459, 0.0458, 0.0455, 0.0453, 0.0452,
     1   0.045, 0.0448, 0.0445, 0.0442, 0.0439, 0.0437, 0.0436, 0.0432,
     1   0.0429, 0.0421, 0.0412, 0.0404, 0.0401, 0.0395, 0.0387, 0.0379,
     1   0.0372, 0.0364, 0.0357, 0.035, 0.0336, 0.0322, 0.0308, 0.0294,
     1   0.028, 0.0266, 0.0253, 0.024, 0.0227, 0.0213, 0.0188, 0.0165,
     1   0.0154, 0.0144, 0.0124, 0.0106, 0.009, 0.0076, 0.0069, 0.0063,
     1   0.0052, 0.0041, 0.0033, 0.0025, 0.0019, 0.0014, 0.001, 0.0002,
     1   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /

      data c9    / 0.79, 0.3079, 0.79, 0.8129, 0.8188, 0.828, 0.8407, 0.8439, 0.8502, 0.8594,
     1   0.8624, 0.874, 0.8795, 0.8848, 0.8874, 0.8899, 0.8949, 0.8996,
     1   0.9105, 0.9204, 0.9292, 0.9325, 0.9371, 0.9442, 0.9505, 0.9559,
     1   0.9606, 0.9645, 0.9677, 0.9718, 0.9733, 0.9725, 0.9719, 0.9699,
     1   0.966, 0.9609, 0.9549, 0.9482, 0.941, 0.9334, 0.9179, 0.9023,
     1   0.8946, 0.8871, 0.8726, 0.8657, 0.859, 0.8462, 0.8342, 0.8284,
     1   0.8228, 0.8121, 0.8019, 0.7922, 0.783, 0.7786, 0.7743, 0.7659,
     1   0.7578, 0.7391, 0.7221, 0.7065, 0.7015, 0.6922, 0.6788, 0.6662,
     1   0.654, 0.6423, 0.6308, 0.6196, 0.5975, 0.5756, 0.5538, 0.532,
     1   0.5101, 0.4877, 0.4649, 0.4412, 0.4169, 0.3917, 0.339, 0.2833,
     1   0.2546, 0.2262, 0.1722, 0.1244, 0.0846, 0.0538, 0.042, 0.0322,
     1   0.0177, 0.0086, 0.0031, 0.0004, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /

      data c9a   / 1.5005, 2.6690, 1.500502, 1.502755, 1.503506, 1.504559, 1.506667, 1.507119,
     1   1.508175, 1.510438, 1.511043, 1.513765, 1.515734, 1.517706,
     1   1.518617, 1.519528, 1.521353, 1.523027, 1.529743, 1.535875,
     1   1.542802, 1.546354, 1.551621, 1.55971, 1.567842, 1.579171,
     1   1.590105, 1.600474, 1.610428, 1.638367, 1.664459, 1.692658,
     1   1.702334, 1.724608, 1.754879, 1.784789, 1.819388, 1.852804,
     1   1.884759, 1.915732, 1.9806, 2.041531, 2.070935, 2.098242,
     1   2.150499, 2.175808, 2.200534, 2.246784, 2.284621, 2.302971,
     1   2.321004, 2.355846, 2.388582, 2.412588, 2.435617, 2.446846,
     1   2.457882, 2.479359, 2.500023, 2.533749, 2.564594, 2.589332,
     1   2.595295, 2.606478, 2.622426, 2.636626, 2.645606, 2.65382,
     1   2.661527, 2.66899, 2.677276, 2.685052, 2.690965, 2.694735,
     1   2.698511, 2.701481, 2.703372, 2.705265, 2.706889, 2.708514,
     1   2.710139, 2.711766, 2.712308, 2.712851, 2.713665, 2.714479,
     1   2.715022, 2.715293, 2.715565, 2.715836, 2.716108, 2.71638,
     1   2.716651, 2.716651, 2.716923, 2.716923, 2.717195, 2.717466,
     1   2.717466, 2.717738, 2.717738, 2.717738, 2.71801, 2.71801,
     1   2.71801, 2.71801, 2.71801 /

      data gamma1  / -0.00804, -0.00275, -0.00804, -0.008113, -0.008155, -0.00823, -0.008351,
     1      -0.008387, -0.008454, -0.008564, -0.008599, -0.008754,
     1      -0.008833, -0.008906, -0.008945, -0.008984, -0.00905,
     1      -0.009121, -0.009288, -0.009433, -0.009561, -0.009603,
     1      -0.009656, -0.009733, -0.009782, -0.009808, -0.009809,
     1      -0.009788, -0.009753, -0.009627, -0.00946, -0.009269,
     1      -0.009205, -0.009054, -0.008832, -0.00861, -0.008398,
     1      -0.008183, -0.007976, -0.007776, -0.007397, -0.007044,
     1      -0.006877, -0.006715, -0.006408, -0.006263, -0.006123,
     1      -0.005859, -0.005614, -0.005497, -0.005386, -0.005175,
     1      -0.00498, -0.004799, -0.004632, -0.004552, -0.004477,
     1      -0.004332, -0.004199, -0.003903, -0.003652, -0.003435,
     1      -0.003368, -0.003246, -0.003078, -0.002929, -0.002795,
     1      -0.002674, -0.002564, -0.002464, -0.002287, -0.002138,
     1      -0.00201, -0.001898, -0.001802, -0.001717, -0.001643,
     1      -0.001578, -0.001519, -0.001467, -0.001381, -0.001311,
     1      -0.001281, -0.001255, -0.001209, -0.001172, -0.001142,
     1      -0.001117, -0.001106, -0.001096, -0.001079, -0.001065,
     1      -0.001052, -0.001042, -0.001032, -0.001024, -0.001016,
     1      -0.000999, -0.000987, -0.000977, -0.000968, -0.000961,
     1      -0.000955, -0.00095, -0.000945, -0.000941, -0.000937 /

      data gamma2  / -0.00785, -0.00625, -0.00785, -0.007921, -0.007962, -0.008035, -0.008154,
     1      -0.008189, -0.008255, -0.008362, -0.008396, -0.008547,
     1      -0.008624, -0.008696, -0.008734, -0.008771, -0.008836,
     1      -0.008906, -0.009068, -0.00921, -0.009335, -0.009376,
     1      -0.009428, -0.009503, -0.00955, -0.009577, -0.009577,
     1      -0.009557, -0.009522, -0.0094, -0.009236, -0.00905,
     1      -0.008988, -0.00884, -0.008623, -0.008406, -0.008199,
     1      -0.007989, -0.007787, -0.007592, -0.007222, -0.006878,
     1      -0.006714, -0.006556, -0.006257, -0.006115, -0.005979,
     1      -0.00572, -0.005481, -0.005368, -0.005259, -0.005053,
     1      -0.004862, -0.004686, -0.004522, -0.004445, -0.004371,
     1      -0.00423, -0.0041, -0.003811, -0.003565, -0.003354,
     1      -0.003288, -0.003169, -0.003005, -0.00286, -0.002729,
     1      -0.002611, -0.002504, -0.002406, -0.002233, -0.002087,
     1      -0.001962, -0.001854, -0.001759, -0.001677, -0.001604,
     1      -0.00154, -0.001483, -0.001433, -0.001348, -0.00128,
     1      -0.001251, -0.001225, -0.001181, -0.001145, -0.001115,
     1      -0.001091, -0.00108, -0.001071, -0.001054, -0.00104,
     1      -0.001027, -0.001017, -0.001007, -0.000999, -0.000992,
     1       -0.000976, -0.000964, -0.000954, -0.000945, -0.000938,
     1      -0.000933, -0.000927, -0.000923, -0.000919, -0.000914 /

      data phi1   / -0.4417, -0.7861, -0.4417, -0.434, -0.4313, -0.4267, -0.4196, -0.4177,
     1    -0.4139, -0.4082, -0.4064, -0.4, -0.3973, -0.3949, -0.3939,
     1    -0.393, -0.3914, -0.3903, -0.3892, -0.3903, -0.3934, -0.3951,
     1    -0.3981, -0.404, -0.4108, -0.4182, -0.4261, -0.4341, -0.4423,
     1    -0.4585, -0.4743, -0.4892, -0.4935, -0.5032, -0.5162, -0.5283,
     1    -0.5396, -0.5502, -0.5602, -0.5697, -0.5873, -0.6034, -0.6109,
     1    -0.6182, -0.6319, -0.6383, -0.6444, -0.6559, -0.6665, -0.6715,
     1    -0.6762, -0.685, -0.6931, -0.7005, -0.7072, -0.7104, -0.7135,
     1    -0.7193, -0.7246, -0.7365, -0.7468, -0.7557, -0.7585, -0.7636,
     1    -0.7708, -0.7773, -0.7833, -0.7888, -0.7941, -0.799, -0.8082,
     1    -0.8165, -0.8243, -0.8315, -0.8382, -0.8445, -0.8504, -0.856,
     1    -0.8613, -0.8663, -0.8755, -0.8836, -0.8874, -0.8909, -0.8974,
     1    -0.9032, -0.9083, -0.913, -0.9151, -0.917, -0.9205, -0.9231,
     1    -0.9249, -0.9257, -0.9255, -0.9243, -0.9222, -0.9129, -0.8982,
     1    -0.8791, -0.8572, -0.8346, -0.8126, -0.7914, -0.7711, -0.7517, -0.7332 /

      data phi2   / -0.1417, -0.0699, -0.1417, -0.1364, -0.1361, -0.1365, -0.1392, -0.1403, -0.143,
     1    -0.1482, -0.1502, -0.1591, -0.1641, -0.1694, -0.1721, -0.1748,
     1    -0.1804, -0.1862, -0.2008, -0.2153, -0.2291, -0.2344, -0.242,
     1    -0.2538, -0.2644, -0.2739, -0.2819, -0.2887, -0.2943, -0.3025,
     1    -0.3077, -0.3106, -0.3111, -0.3118, -0.3113, -0.3093, -0.3062,
     1    -0.3022, -0.2976, -0.2927, -0.2823, -0.2716, -0.2662, -0.2609,
     1    -0.2505, -0.2455, -0.2405, -0.231, -0.222, -0.2177, -0.2135,
     1    -0.2053, -0.1975, -0.1901, -0.183, -0.1795, -0.1762, -0.1696,
     1    -0.1633, -0.1487, -0.1353, -0.1232, -0.1194, -0.1124, -0.1028,
     1    -0.0943, -0.0869, -0.0805, -0.0748, -0.0699, -0.0617, -0.0552,
     1    -0.0501, -0.0459, -0.0425, -0.0395, -0.0369, -0.0346, -0.0323,
     1    -0.0302, -0.0262, -0.0225, -0.0207, -0.019, -0.0159, -0.0129,
     1    -0.0102, -0.0077, -0.0066, -0.0055, -0.0036, -0.0016, 0.0, 0.0,
     1    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /

      data phi3   / -0.00701, -0.008444, -0.00701, -0.007279, -0.007301, -0.007364, -0.007378, -0.007354,
     1    -0.007281, -0.007162, -0.007129, -0.006977, -0.006878, -0.006765,
     1    -0.00671, -0.006656, -0.006556, -0.006467, -0.006279, -0.006117,
     1    -0.00597, -0.005914, -0.005835, -0.005734, -0.00567, -0.005632,
     1    -0.005607, -0.005597, -0.005604, -0.005644, -0.005696, -0.005744,
     1    -0.005758, -0.005794, -0.005845, -0.005901, -0.005959, -0.006019,
     1    -0.00608, -0.006141, -0.006262, -0.006381, -0.006439, -0.006495,
     1    -0.006604, -0.006655, -0.006704, -0.006795, -0.006882, -0.006923,
     1    -0.006965, -0.007047, -0.007125, -0.007194, -0.007259, -0.00729,
     1    -0.00732, -0.007378, -0.007435, -0.007579, -0.00772, -0.007863,
     1    -0.007911, -0.008001, -0.00812, -0.008223, -0.008313, -0.008381,
     1    -0.008423, -0.008444, -0.0085, -0.008478, -0.008307, -0.008042,
     1    -0.007707, -0.007317, -0.006862, -0.006265, -0.005541, -0.004792,
     1    -0.003555, -0.002764, -0.002497, -0.002292, -0.002007, -0.001828,
     1    -0.001713, -0.001636, -0.001608, -0.001585, -0.001549, -0.001523,
     1    -0.001501, -0.001483, -0.001467, -0.001453, -0.00144, -0.001416,
     1    -0.001397, -0.001384, -0.001375, -0.001369, -0.001364, -0.001362,
     1    -0.00136, -0.00136, -0.001361 /

      data phi4   / 0.102151, 5.41, 0.102151, 0.10836, 0.110372, 0.11371, 0.1186, 0.119888, 0.122493,
     1    0.12654, 0.127926, 0.133641, 0.136572, 0.139596, 0.141112, 0.142659,
     1    0.145774, 0.148927, 0.157001, 0.165249, 0.173635, 0.177001, 0.182082,
     1    0.190596, 0.199129, 0.207505, 0.215628, 0.223398, 0.230662, 0.243315,
     1    0.253169, 0.260175, 0.261767, 0.264504, 0.266468, 0.266468, 0.26506,
     1    0.262501, 0.259163, 0.255253, 0.246252, 0.236525, 0.231541, 0.22657,
     1    0.216796, 0.211993, 0.207277, 0.198077, 0.189304, 0.185074, 0.18092,
     1    0.172976, 0.165464, 0.158358, 0.151662, 0.148466, 0.145352, 0.139415,
     1    0.133828, 0.121226, 0.110339, 0.100842, 0.097891, 0.092504, 0.085153,
     1    0.078622, 0.072788, 0.067563, 0.06285, 0.058595, 0.051206, 0.045054,
     1    0.039879, 0.035504, 0.031787, 0.028613, 0.02589, 0.023537, 0.021496,
     1    0.019716, 0.016771, 0.014434, 0.013436, 0.012534, 0.010962, 0.009643,
     1    0.008521, 0.007561, 0.00713, 0.00673, 0.006008, 0.005379, 0.00483,
     1    0.004349, 0.003925, 0.003553, 0.003223, 0.002551, 0.002047, 0.001662,
     1    0.001366, 0.001134, 0.000952, 0.000806, 0.000689, 0.000593, 0.000515 /

      data phi5   / 0.2289, 0.2899, 0.2289, 0.2289, 0.2289, 0.2289, 0.2289, 0.2289, 0.2289, 0.2289, 0.2289,
     1    0.2289, 0.2289, 0.229, 0.229, 0.229, 0.229, 0.229, 0.229, 0.229, 0.2291,
     1    0.2291, 0.2291, 0.2292, 0.2293, 0.2294, 0.2295, 0.2296, 0.2297, 0.2302,
     1    0.2305, 0.2311, 0.2313, 0.2319, 0.2326, 0.2334, 0.2348, 0.2361, 0.2374,
     1    0.2386, 0.2433, 0.2477, 0.2497, 0.2533, 0.2606, 0.2641, 0.2674, 0.2746,
     1    0.2847, 0.2895, 0.2942, 0.3032, 0.312, 0.3227, 0.3329, 0.3378, 0.3427,
     1    0.352, 0.361, 0.381, 0.3993, 0.4142, 0.418, 0.4252, 0.4353, 0.4444,
     1    0.4494, 0.4542, 0.4587, 0.4629, 0.4668, 0.4703, 0.4729, 0.4743, 0.4756,
     1    0.4767, 0.4772, 0.4777, 0.4781, 0.4785, 0.4789, 0.4792, 0.4793, 0.4794,
     1    0.4795, 0.4796, 0.4797, 0.4798, 0.4798, 0.4798, 0.4798, 0.4799, 0.4799,
     1    0.4799, 0.4799, 0.4799, 0.4799, 0.48, 0.48, 0.48, 0.48, 0.48, 0.48,
     1    0.48, 0.48, 0.48, 0.48 /

      data phi6   / 0.014996, 0.006718, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996,
     1    0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996,
     1    0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996,
     1    0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014994,
     1    0.014994, 0.014993, 0.014993, 0.014991, 0.014988, 0.014987, 0.014981,
     1    0.014975, 0.01497, 0.014964, 0.014928, 0.014895, 0.014881, 0.014832,
     1    0.014731, 0.014684, 0.014639, 0.014513, 0.014239, 0.01411, 0.013985,
     1    0.013747, 0.013493, 0.012938, 0.012429, 0.01219, 0.011962, 0.011532,
     1    0.011133, 0.009769, 0.00866, 0.007829, 0.00762, 0.007244, 0.006739,
     1    0.006325, 0.006163, 0.006014, 0.005876, 0.005749, 0.005678, 0.005613,
     1    0.005573, 0.005558, 0.005544, 0.005533, 0.005529, 0.005527, 0.005524,
     1    0.005521, 0.005519, 0.005518, 0.005518, 0.005518, 0.005517, 0.005517,
     1    0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517,
     1    0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517,
     1    0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517 /

      data phi7   / 580.0, 459.0, 580.0, 580.0, 580.0, 580.0, 580.0, 580.0, 580.0, 580.0, 580.0,
     1    579.9, 579.9, 579.9, 579.9, 579.9, 579.9, 579.9, 579.8, 579.8,
     1    579.8, 579.7, 579.7, 579.6, 579.6, 579.5, 579.4, 579.3, 579.2,
     1    578.8, 578.6, 578.2, 578.0, 577.7, 577.2, 576.7, 576.0, 575.2,
     1    574.6, 573.9, 571.6, 569.5, 568.5, 566.9, 563.6, 562.0, 560.5,
     1    557.3, 552.6, 550.4, 548.3, 544.1, 540.0, 534.0, 528.4, 525.7,
     1    523.0, 517.8, 512.9, 497.1, 482.7, 468.7, 463.9, 454.8, 441.9,
     1    429.9, 419.5, 409.8, 400.5, 391.8, 379.6, 368.5, 359.8, 353.7,
     1    348.1, 343.1, 340.2, 337.5, 334.9, 332.5, 330.0, 327.8, 326.7,
     1    326.1, 325.1, 324.1, 323.3, 322.9, 322.7, 322.5, 322.1, 321.7,
     1    321.6, 321.4, 321.2, 321.1, 320.9, 320.7, 320.6, 320.4, 320.4,
     1    320.3, 320.2, 320.2, 320.2, 320.1, 320.1 /

      data phi8   / 0.07, 0.1138, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07,
     1    0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.0698, 0.0696, 0.0694,
     1    0.0692, 0.0686, 0.0679, 0.0671, 0.0662, 0.0654, 0.0646, 0.0635,
     1    0.0625, 0.0602, 0.0592, 0.056, 0.0494, 0.0407, 0.0306, 0.0199,
     1    0.0089, -0.0019, -0.0223, -0.0401, -0.0479, -0.0548, -0.0665,
     1    -0.0713, -0.0756, -0.0825, -0.0875, -0.0895, -0.0912, -0.0939,
     1    -0.096, -0.0975, -0.0987, -0.0991, -0.0994, -0.0998, -0.0998,
     1    -0.0983, -0.0948, -0.0896, -0.0876, -0.0834, -0.0765, -0.0693,
     1    -0.062, -0.0549, -0.0479, -0.0412, -0.0285, -0.0167, -0.0057,
     1    0.0045, 0.014, 0.0229, 0.0313, 0.0393, 0.0469, 0.0544, 0.0687,
     1    0.0826, 0.0895, 0.0963, 0.1098, 0.1232, 0.1366, 0.1498, 0.1562,
     1    0.1625, 0.1746, 0.1859, 0.1964, 0.206, 0.2147, 0.2225, 0.2295,
     1    0.2435, 0.2532, 0.2595, 0.2635, 0.266, 0.2675, 0.2683, 0.2686,
     1    0.2685, 0.2682 /

      data tau1   / 0.3437, 0.2539, 0.3437, 0.3471, 0.3505, 0.3538, 0.3571, 0.3603, 0.3633, 0.3663,
     1    0.3691, 0.3718, 0.3744, 0.3768, 0.3791, 0.3811, 0.3831, 0.3848,
     1    0.3863, 0.3876, 0.3877, 0.3881, 0.3883, 0.3878, 0.3872, 0.3865,
     1    0.3856, 0.3846, 0.3835, 0.3816, 0.3795, 0.3775, 0.3761, 0.3742,
     1    0.3719, 0.3696, 0.3672, 0.3649, 0.3626, 0.3601, 0.3572, 0.3543,
     1    0.3522, 0.35, 0.3474, 0.3455, 0.3438, 0.3417, 0.3398, 0.3386,
     1    0.3375, 0.3362, 0.3351, 0.3344, 0.3339, 0.334, 0.3344, 0.3346,
     1    0.3353, 0.3354, 0.336, 0.3369, 0.339, 0.3409, 0.3429, 0.3452,
     1    0.3478, 0.3508, 0.3541, 0.3577, 0.3608, 0.3644, 0.3682, 0.3725,
     1    0.3769, 0.3816, 0.3865, 0.3916, 0.3968, 0.4023, 0.4085, 0.4149,
     1    0.4212, 0.4277, 0.4341, 0.4406, 0.447, 0.4534, 0.4598, 0.4661,
     1    0.4723, 0.4784, 0.4845, 0.4904, 0.4962, 0.5019, 0.5074, 0.5128,
     1    0.5181, 0.5232, 0.5281, 0.5328, 0.5374, 0.5419, 0.5461, 0.5502, 0.5542 /

      data tau2   / 0.2637, 0.2381, 0.2637, 0.2671, 0.2705, 0.2738, 0.2771, 0.2803, 0.2833, 0.2863,
     1    0.2891, 0.2918, 0.2944, 0.2968, 0.2991, 0.3011, 0.3031, 0.3048,
     1    0.3063, 0.3076, 0.3095, 0.3106, 0.3118, 0.3129, 0.3138, 0.3145,
     1    0.3149, 0.3151, 0.3152, 0.3154, 0.3153, 0.3151, 0.3143, 0.3135,
     1    0.3128, 0.312, 0.311, 0.31, 0.3089, 0.3076, 0.3068, 0.306, 0.3047,
     1    0.3034, 0.3026, 0.3015, 0.3005, 0.2999, 0.2993, 0.2988, 0.2983,
     1    0.2983, 0.2984, 0.2987, 0.2993, 0.2999, 0.3008, 0.3021, 0.3036,
     1    0.306, 0.3085, 0.3113, 0.3139, 0.3169, 0.3205, 0.3243, 0.3283,
     1    0.3326, 0.3371, 0.3419, 0.3472, 0.3527, 0.3584, 0.3643, 0.3703,
     1    0.3765, 0.3828, 0.3892, 0.3957, 0.4023, 0.4085, 0.4149, 0.4212,
     1    0.4277, 0.4341, 0.4406, 0.447, 0.4534, 0.4598, 0.4661, 0.4723,
     1    0.4784, 0.4845, 0.4904, 0.4962, 0.5019, 0.5074, 0.5128, 0.5181,
     1    0.5232, 0.5281, 0.5328, 0.5374, 0.5419, 0.5461, 0.5502, 0.5542 /

      data sigma1  / 0.4458, 0.4496, 0.4458, 0.4458, 0.4476, 0.45, 0.4529, 0.4535, 0.4547, 0.4564,
     1     0.4569, 0.4589, 0.4598, 0.4607, 0.4611, 0.4615, 0.4623, 0.463,
     1     0.4647, 0.4663, 0.4677, 0.4682, 0.469, 0.4702, 0.4712, 0.4722,
     1     0.4731, 0.474, 0.4747, 0.4761, 0.4773, 0.4782, 0.4785, 0.4791,
     1     0.4798, 0.4803, 0.4808, 0.4811, 0.4814, 0.4816, 0.4817, 0.4816,
     1     0.4815, 0.4813, 0.4808, 0.4805, 0.4801, 0.4794, 0.4786, 0.4781,
     1     0.4777, 0.4768, 0.4758, 0.4748, 0.4738, 0.4734, 0.4729, 0.4719,
     1     0.471, 0.4688, 0.4667, 0.465, 0.4644, 0.4634, 0.4621, 0.461,
     1     0.46, 0.4592, 0.4586, 0.4581, 0.4555, 0.4535, 0.4518, 0.4505,
     1     0.4493, 0.4484, 0.4476, 0.4469, 0.4463, 0.4459, 0.4451, 0.4444,
     1     0.4442, 0.444, 0.4436, 0.4433, 0.443, 0.4428, 0.4427, 0.4426,
     1     0.4425, 0.4424, 0.4423, 0.4422, 0.4421, 0.442, 0.442, 0.4418,
     1     0.4417, 0.4417, 0.4416, 0.4416, 0.4415, 0.4415, 0.4415, 0.4415,
     1     0.4414 /

      data sigma2  / 0.3459, 0.3554, 0.3459, 0.3459, 0.3477, 0.3502, 0.353, 0.3537, 0.3549, 0.3566,
     1     0.3572, 0.3592, 0.3602, 0.3611, 0.3615, 0.3619, 0.3627, 0.3635,
     1     0.3654, 0.367, 0.3686, 0.3692, 0.37, 0.3713, 0.3726, 0.3738,
     1     0.3749, 0.3759, 0.3769, 0.3787, 0.3804, 0.3819, 0.3824, 0.3834,
     1     0.3847, 0.3859, 0.3871, 0.3882, 0.3893, 0.3902, 0.3921, 0.3938,
     1     0.3946, 0.3953, 0.3967, 0.3974, 0.3981, 0.3993, 0.4005, 0.401,
     1     0.4016, 0.4026, 0.4036, 0.4046, 0.4054, 0.4059, 0.4063, 0.4071,
     1     0.4079, 0.4098, 0.4114, 0.413, 0.4135, 0.4144, 0.4157, 0.417,
     1     0.4181, 0.4192, 0.4203, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213,
     1     0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213,
     1     0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213,
     1     0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213,
     1     0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213 /

      data sigma3  / 0.8, 0.7504, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8,
     1     0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8,
     1     0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8,
     1     0.8, 0.8, 0.7999, 0.7999, 0.7999, 0.7998, 0.7998, 0.7997,
     1     0.7997, 0.7996, 0.7994, 0.7993, 0.7992, 0.799, 0.7988, 0.7983,
     1     0.7979, 0.7976, 0.7974, 0.797, 0.7966, 0.794, 0.7917, 0.7884,
     1     0.7867, 0.7836, 0.7792, 0.7747, 0.7681, 0.7619, 0.756, 0.7504,
     1     0.74, 0.7304, 0.723, 0.7182, 0.7136, 0.7097, 0.708, 0.7064,
     1     0.7049, 0.7035, 0.7025, 0.7017, 0.7012, 0.7011, 0.7008, 0.7006,
     1     0.7004, 0.7003, 0.7003, 0.7002, 0.7002, 0.7001, 0.7001, 0.7001,
     1     0.7001, 0.7001, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7 /

c      data sigma4 /   /

C Find the requested spectral period and corresponding coefficients
      nPer = 107
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         c1T      = c1(1)
         c1aT     = c1a(1)
         c1bT     = c1b(1)
         cnT      = cn(1)
         cmT      = cm(1)
         c5T      = c5(1)
         c6T      = c6(1)
         c7T      = c7(1)
         c9T      = c9(1)
         c9aT     = c9a(1)
         gamma1T  = gamma1(1)
         gamma2T  = gamma2(1)
         phi1T    = phi1(1)
         phi2T    = phi2(1)
         phi3T    = phi3(1)
         phi4T    = phi4(1)
         phi5T    = phi5(1)
         phi6T    = phi6(1)
         phi7T    = phi7(1)
         phi8T    = phi8(1)
         tau1T    = tau1(1)
         tau2T    = tau2(1)
         sigma1T = sigma1(1)
         sigma2T = sigma2(1)
         sigma3T = sigma3(1)
         goto 1011
      elseif (specT .eq. -1.0) then
         period1  = period(2)
         c1T      = c1(2)
         c1aT     = c1a(2)
         c1bT     = c1b(2)
         cnT      = cn(2)
         cmT      = cm(2)
         c5T      = c5(2)
         c6T      = c6(2)
         c7T      = c7(2)
         c9T      = c9(2)
         c9aT     = c9a(2)
         gamma1T  = gamma1(2)
         gamma2T  = gamma2(2)
         phi1T    = phi1(2)
         phi2T    = phi2(2)
         phi3T    = phi3(2)
         phi4T    = phi4(2)
         phi5T    = phi5(2)
         phi6T    = phi6(2)
         phi7T    = phi7(2)
         phi8T    = phi8(2)
         tau1T    = tau1(2)
         tau2T    = tau2(2)
         sigma1T = sigma1(2)
         sigma2T = sigma2(2)
         sigma3T = sigma3(2)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=3,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Chiou and Youngs (NGA-2008) Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),c1(count1),c1(count2),
     +                   specT,c1T,iflag)
            call interp (period(count1),period(count2),c1a(count1),c1a(count2),
     +                   specT,c1aT,iflag)
            call interp (period(count1),period(count2),c1b(count1),c1b(count2),
     +                   specT,c1bT,iflag)
            call interp (period(count1),period(count2),cn(count1),cn(count2),
     +                   specT,cnT,iflag)
            call interp (period(count1),period(count2),cm(count1),cm(count2),
     +                   specT,cmT,iflag)
            call interp (period(count1),period(count2),c5(count1),c5(count2),
     +                   specT,c5T,iflag)
            call interp (period(count1),period(count2),c6(count1),c6(count2),
     +                   specT,c6T,iflag)
            call interp (period(count1),period(count2),c7(count1),c7(count2),
     +                   specT,c7T,iflag)
            call interp (period(count1),period(count2),c9(count1),c9(count2),
     +                   specT,c9T,iflag)
            call interp (period(count1),period(count2),c9a(count1),c9a(count2),
     +                   specT,c9aT,iflag)
            call interp (period(count1),period(count2),gamma1(count1),gamma1(count2),
     +                   specT,gamma1T,iflag)
            call interp (period(count1),period(count2),gamma2(count1),gamma2(count2),
     +                   specT,gamma2T,iflag)
            call interp (period(count1),period(count2),phi1(count1),phi1(count2),
     +                   specT,phi1T,iflag)
            call interp (period(count1),period(count2),phi2(count1),phi2(count2),
     +                   specT,phi2T,iflag)
            call interp (period(count1),period(count2),phi3(count1),phi3(count2),
     +                   specT,phi3T,iflag)
            call interp (period(count1),period(count2),phi4(count1),phi4(count2),
     +                   specT,phi4T,iflag)
            call interp (period(count1),period(count2),phi5(count1),phi5(count2),
     +                   specT,phi5T,iflag)
            call interp (period(count1),period(count2),phi6(count1),phi6(count2),
     +                   specT,phi6T,iflag)
            call interp (period(count1),period(count2),phi7(count1),phi7(count2),
     +                   specT,phi7T,iflag)
            call interp (period(count1),period(count2),phi8(count1),phi8(count2),
     +                   specT,phi8T,iflag)
            call interp (period(count1),period(count2),tau1(count1),tau1(count2),
     +                   specT,tau1T,iflag)
            call interp (period(count1),period(count2),tau2(count1),tau2(count2),
     +                   specT,tau2T,iflag)
            call interp (period(count1),period(count2),sigma1(count1),sigma1(count2),
     +                   specT,sigma1T,iflag)
            call interp (period(count1),period(count2),sigma2(count1),sigma2(count2),
     +                   specT,sigma2T,iflag)
            call interp (period(count1),period(count2),sigma3(count1),sigma3(count2),
     +                   specT,sigma3T,iflag)
c            call interp (period(count1),period(count2),sigma4(count1),sigma4(count2),
c     +                   specT,sigma4T,iflag)

 1011 period1 = specT

C     Check for valid spectral periods which are defined: PGA, 0.3 and 1.0sec.
C     Reset necessary coefficients.
      if (specT .eq. 0.0) then
         c1T = -1.2630
         c3  =  2.1066
         cMT = 5.85
         gamma2T = -0.00481
         tau = 0.4481
         sigma = 0.6703
      elseif (specT .gt. 0.2999 .and. specT .lt. 0.3001) then
         c1T = -0.9209
         c3  =  2.2470
         cMT = 5.60
         gamma2T = -0.00295
         tau = 0.4405
         sigma = 0.6792
      elseif (specT .gt. 0.9999 .and. specT .lt. 1.0001) then
         c1T = -2.2637
         c3  =  3.0241
         cMT = 5.35
         gamma2T = -0.00227
         tau = 0.3651
         sigma = 0.6135
      else
C         write (*,*)
C         write (*,*) 'Chiou and Youngs (NGA-2008) Horizontal'
C         write (*,*) 'Central California small magnitude'
C         write (*,*) 'attenuation model is not defined for a '
C         write (*,*) ' spectral period of: '
C         write (*,*)') ' Period = ',specT
C         write (*,*)
         return
      endif

c     Set the fault mechanism term.
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C      -1       Normal                   -120 < Rake < -60.0
C     1, 0.5    Reverse and Rev/Obl        30 < Rake < 150.0
C     0,-0.5    Strike-Slip and NMl/Obl        Otherwise
         if (ftype .eq. -1) then
            F_RV = 0.0
            F_NM = 1.0
         elseif (ftype .ge. 0.5) then
            F_RV = 1.0
            F_NM = 0.0
         else
            F_RV = 0.0
            F_NM = 0.0
         endif

C HW factors......
c     For now, convert hwflag to an equivalent srcSiteA
c      if ( hwflag .eq. 1 ) then
c        srcSiteA = 90.
c      else
c        srcSiteA = 0.
c      endif
C No longer needed since Rx is computed and passed.
C     Compute Rx value given source to site azimuth
c      if (srcsiteA .eq. 90.0) then
c         Rx = Rrup/sin(abs(delta)*3.14159/180.0) - DTor/tan(abs(delta)*3.14159/180.0)
c      elseif (srcsiteA .gt. 0.0) then
c         Rx = Rbjf*tan(srcSiteA*3.14159/180.0)
c      elseif (srcsiteA .le. 0.0) then
c         Rx = 0.0
c      endif

        c2 = 1.06
c        c3 = 3.45
        c4 = -2.1
        c4a = -0.5
        cRB = 50.0
        cHM = 3.0
        gm = 4.0

        pi = atan(1.0)*4.0
        d2r = pi/180.0

        cc = c5T* cosh(c6T * max((M-cHM),0.0))
        gamma = gamma1T + gamma2T/cosh(max((M-gm),0.0))
        cosDELTA = cos(abs(DELTA)*d2r)

c Magnitude scaling
        r1 = c1T + c2 * (M-6.0) +
     1       (c2-c3)/cnT *
     1             alog(1.0 + exp(-cnT*(M-cMT)))

c Near-field magnitude and distance scaling
        r2 = c4 * alog(Rrup + cc)

c Distance scaling at large distance
        r3 = (c4a-c4)/2.0 *
     1            alog( Rrup*Rrup+cRB*cRB ) +
     1       Rrup * gamma

c More source scaling
        r4 = c1aT*F_RV +
     1       c1bT*F_NM +
     1       c7T*(DTor - 4.0)

c HW effect
        if (HWFlag .eq. 0) then
           hw = 0.0
        else
           hw = c9T * tanh(Rx*cosDelta**2.0/c9aT) *
     1          (1.0 - sqrt(Rbjf**2.0+DTor**2.0)/(Rrup + 0.001))
        endif
c Predicted median Sa on reference condition (Vs=1130 m/sec)
        psa_ref = r1+r2+r3+r4+hw

c Linear soil amplification
        a = phi1T * min(alog(Vs/1130.0), 0.0)

c Nonlinear soil amplification
        b = phi2T *
     1      (exp(phi3T*(min(Vs,1130.0)-360.0)) - exp(phi3T*(1130.0-360.0)))
        c = phi4T

C Deviation from ln(Vs30) scaling: bedrock depth (Z1) effect
C NOTE: max(0,z1-15) is capped at 300 to avoid overflow of function cosh
        rkdepth = phi5T*
     1            (1.0-1.0/cosh(phi6T*max(0.0,depthvs10*1000.0-phi7T))) +
     1            phi8T/cosh(0.15*min(max(0.0,depthvs10*1000.0-15.0),300.0))

c Sa on soil condition
        psa = psa_ref + (a + b * alog((exp(psa_ref)+c)/c)) + rkdepth

C Compute the sigma term
c        NL = b*exp(psa_ref)/(exp(psa_ref)+c)
c        sigma_M = sigma1T + (sigma2T-sigma1T)/2.0*(min(max(M,5.0),7.0)-5.0)
c        if (vs30_class .eq. 0) then
c           sigma = sigma_M*sqrt(sigma3T+(1.0+NL)**2.0)
c        else
c           sigma = sigma_M*sqrt(0.7+(1.0+NL)**2.0)
c        endif
C Compute the tau term
c        tau = tau1T + (tau2T-tau1T)/2.0*(min(max(M,5.0),7.0)-5.0)
c        tau = tau*(1.0+NL)

        sigma = sqrt(tau*tau + sigma*sigma)

C     Convert ground motion to units of gals.
      lnY = psa + 6.89
      period2 = period1

      return
      end

c ---------------------------------------------------------------------
C ** Idriss (NGA-2008) Horizontal, Vs=540-900 m/sec **
c ---------------------------------------------------------------------
      Subroutine I_NGA_2008 ( m, Rrup, ftype, specT,
     1                     period2, lnY, sigma, iflag )

      parameter (MAXPER=32)
      REAL Period(MAXPER), a1mlt675(MAXPER), a2mlt675(MAXPER), b1mlt675(MAXPER), b2mlt675(MAXPER)
      REAL a1(MAXPER), a2(MAXPER), b1(MAXPER), b2(MAXPER)
      real gam(MAXPER), phi(MAXPER)

      REAL M, RRUP
      REAL SOF, period2, lnY, PhiT, gamT, ftype

      real a1T, a2T, b1T, b2T, a1mlt6T, a2mlt6T, b1mlt6T, b2mlt6T
      integer iflag, count1, count2

      Data period / 0.00, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.08,
     1              0.10, 0.15, 0.20, 0.25, 0.30, 0.35, 0.40, 0.45,
     2              0.50, 0.60, 0.70, 0.80, 0.90, 1.00, 1.50, 2.00,
     3		    3.00, 4.00, 5.00, 6.00, 7.00, 8.00, 9.00, 10.00 /
      data a1 / 5.6315, 5.6315, 5.6315, 5.6815, 5.7315, 5.8447, 6.0362,
     1          6.4307, 6.3053, 5.0845, 5.0842, 4.5453, 4.2719, 4.0174,
     2          3.7792, 3.5519, 3.3235, 2.9047, 2.5222, 2.1972, 1.8971,
     3          1.5822, 0.2888, -0.7737, -2.3037, -3.4564, -4.3563,
     4         -5.1145, -5.7538, -6.2921, -6.7588, -7.1679 /
      data a2 / -0.4104, -0.4104, -0.4104, -0.4104, -0.4104, -0.4329,
     1          -0.4551, -0.4831, -0.4359, -0.2566, -0.2393, -0.1850,
     2          -0.1614, -0.1399, -0.1202, -0.1020, -0.0849, -0.0538,
     3          -0.0258, -0.0003, 0.0232, 0.0450, 0.1354, 0.2054,0.3099,
     4	         0.3855, 0.4427, 0.4868, 0.5209, 0.5471, 0.5669, 0.5814 /
      data b1 / 2.9832, 2.9832, 2.9832, 2.9832, 2.9832, 2.9487, 2.9494,
     1          2.9788, 2.9153, 2.4829, 2.5066, 2.3687, 2.3475, 2.3284,
     2          2.3105, 2.2937, 2.2793, 2.2507, 2.2250, 2.2014, 2.1786,
     3          2.1588, 2.0720, 2.0027, 1.8938, 1.8091, 1.7401, 1.6825,
     4          1.6327, 1.5900, 1.5532, 1.5201 /
      data b2 / -0.2339, -0.2339, -0.2339, -0.2339, -0.2339, -0.2346,
     1          -0.2356, -0.2386, -0.2265, -0.1707, -0.1738, -0.1623,
     2          -0.1612, -0.1602, -0.1593, -0.1584, -0.1577, -0.1562,
     3          -0.1549, -0.1537, -0.1525, -0.1515, -0.1471, -0.1436,
     4          -0.1382, -0.1341, -0.1308, -0.1281, -0.1258, -0.1239,
     5          -0.1223, -0.1209 /
      data a1mlt675 / 3.7066, 3.7066, 3.7066, 3.7566, 3.8066, 4.1248,
     1                4.4681, 4.4853, 4.4592, 3.4793, 3.2354, 2.7628,
     2                2.3813, 2.0302, 1.7037, 1.3940, 1.0893, 0.5308,
     3                0.0240, -0.4141, -0.8184, -1.2290, -2.9168,
     4               -4.2783, -6.2431, -7.6967, -8.8110, -9.7232,
     5               -10.4706, -11.0814, -11.5896, -12.0149 /
      data a2mlt675 / -0.1252, -0.1252, -0.1252, -0.1252, -0.1252, -0.1781,
     1                -0.2228, -0.1949, -0.1624, -0.0188, 0.0346, 0.0791,
     2                 0.1187, 0.1545, 0.1873, 0.2177, 0.2461, 0.2979, 0.3443,
     3                 0.3866, 0.4255, 0.4615, 0.6103, 0.7246, 0.8935, 1.0137,
     4                 1.1027, 1.1696, 1.2197, 1.2566, 1.2826, 1.2995 /
      data b1mlt675 / 2.9832, 2.9832, 2.9832, 2.9832, 2.9832, 3.0156, 3.0708,
     1                3.1071, 3.1212, 2.8609, 2.8739, 2.8203, 2.8126, 2.8056,
     2                2.7992, 2.7932, 2.7876, 2.7772, 2.7677, 2.7590, 2.7510,
     3                2.7434, 2.7112, 2.6851, 2.6437, 2.6110, 2.5839, 2.5607,
     4                2.5406, 2.5228, 2.5070, 2.4928 /
      data b2mlt675 / -0.2339, -0.2339, -0.2339, -0.2339, -0.2339, -0.2445,
     1                -0.2536, -0.2576, -0.2570, -0.2267, -0.2282, -0.2292,
     2                -0.2301, -0.2309, -0.2317, -0.2324, -0.2330, -0.2342,
     3                -0.2353, -0.2363, -0.2373, -0.2381, -0.2418, -0.2447,
     4                -0.2493, -0.2529, -0.2558, -0.2582, -0.2603, -0.2621,
     5                -0.2636, -0.2650 /
      data gam / 0.00047, 0.00047, 0.00047, 0.00047, 0.00047, 0.00000,
     1           0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00049,
     2           0.00052, 0.00099, 0.00112, 0.00114, 0.00132, 0.00154,
     3           0.00170, 0.00152, 0.00157, 0.00188, 0.00250, 0.00268,
     4           0.00050, -0.00248, -0.00453, -0.00566, -0.00633,
     5          -0.00671, -0.00689, -0.00709 /
      data phi / 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12,
     1           0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12,
     2           0.12, 0.11, 0.10, 0.06, 0.04, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,
     3           0.00, 0.00 /


C Find the requested spectral period and corresponding coefficients
      nPer = 32
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         a1T     = a1(1)
         a2T     = a2(1)
         b1T     = b1(1)
         b2T     = b2(1)
         a1mlt675T = a1mlt675(1)
         a2mlt675T = a2mlt675(1)
         b1mlt675T = b1mlt675(1)
         b2mlt675T = b2mlt675(1)
         gamT   = gam(1)
         phiT   = phi(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Idriss (NGA-2008) Horizontal Vs=450-900m/s'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),a1(count1),a1(count2),
     +                   specT,a1T,iflag)
            call interp (period(count1),period(count2),a2(count1),a2(count2),
     +                   specT,a2T,iflag)
            call interp (period(count1),period(count2),b1(count1),b1(count2),
     +                   specT,b1T,iflag)
            call interp (period(count1),period(count2),b2(count1),b2(count2),
     +                   specT,b2T,iflag)
            call interp (period(count1),period(count2),a1mlt675(count1),a1mlt675(count2),
     +                   specT,a1mlt675T,iflag)
            call interp (period(count1),period(count2),a2mlt675(count1),a2mlt675(count2),
     +                   specT,a2mlt675T,iflag)
            call interp (period(count1),period(count2),b1mlt675(count1),b1mlt675(count2),
     +                   specT,b1mlt675T,iflag)
            call interp (period(count1),period(count2),b2mlt675(count1),b2mlt675(count2),
     +                   specT,b2mlt675T,iflag)
            call interp (period(count1),period(count2),phi(count1),phi(count2),
     +                   specT,phiT,iflag)
            call interp (period(count1),period(count2),gam(count1),gam(count2),
     +                   specT,gamT,iflag)

 1011 period1 = specT

C.....Compute the Ground motion.......

C.....Set the mechanism term.....................
C     Strike-slip events --> SOF = 0
C     Reverse events     --> SOF = 1
C     Otherwise assume SOF = 0
      if (ftype .eq. 1.0) then
         SOF = 1.0
      else
         SOF = 0.0
      endif

      if (m .lt. 6.75) then
         lnY = a1mlt675T + a2mlt675T*m - (b1mlt675T+b2mlt675T*m) * alog(rrup+10.0) +
     1         gamT*rRup + SOF*phiT
      else
         lnY = a1T + a2T*m - (b1T+b2T*m) * alog(rrup+10.0) +
     1         gamT*rRup + SOF*phiT
      endif

C     Convert ground motion to units of gals.
      lnY = lnY + 6.89

C     Compute Sigma which is Period and magnitude dependent.
      if (specT .le. 0.05) then
         if (m .le. 5.0) then
            sigma = 1.28 +0.05*alog(0.05) - 0.08*5.0
         elseif (m .ge. 7.5) then
            sigma = 1.28 +0.05*alog(0.05) - 0.08*7.5
         else
            sigma = 1.28 +0.05*alog(0.05) - 0.08*m
         endif
      elseif (specT .ge. 3.0) then
         if (m .le. 5.0) then
            sigma = 1.28 +0.05*alog(3.00) - 0.08*5.0
         elseif (m .ge. 7.5) then
            sigma = 1.28 +0.05*alog(3.00) - 0.08*7.5
         else
            sigma = 1.28 +0.05*alog(3.00) - 0.08*m
         endif
      else
         if (m .le. 5.0) then
            sigma = 1.28 +0.05*alog(specT) - 0.08*5.0
         elseif (m .ge. 7.5) then
            sigma = 1.28 +0.05*alog(specT) - 0.08*7.5
         else
            sigma = 1.28 +0.05*alog(specT) - 0.08*m
         endif
      endif

      period2 = period1

      return
      end

c ---------------------------------------------------------------------
C ** Idriss (NGA-2008) Horizontal, Vs>900 m/sec **
c ---------------------------------------------------------------------
      Subroutine I_NGA_2008vsgt900 ( m, Rrup, ftype, specT,
     1                     period2, lnY, sigma, iflag )

      parameter (MAXPER=32)
      REAL Period(MAXPER), a1mlt675(MAXPER), a2mlt675(MAXPER), b1mlt675(MAXPER), b2mlt675(MAXPER)
      REAL a1(MAXPER), a2(MAXPER), b1(MAXPER), b2(MAXPER)
      real gam(MAXPER), phi(MAXPER)

      REAL M, RRUP
      REAL SOF, period2, lnY, PhiT, gamT, ftype

      real a1T, a2T, b1T, b2T, a1mlt6T, a2mlt6T, b1mlt6T, b2mlt6T
      integer iflag, count1, count2

      Data period / 0.00, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.08,
     1              0.10, 0.15, 0.20, 0.25, 0.30, 0.35, 0.40, 0.45,
     2              0.50, 0.60, 0.70, 0.80, 0.90, 1.00, 1.50, 2.00,
     3		    3.00, 4.00, 5.00, 6.00, 7.00, 8.00, 9.00, 10.00 /
      data a1 / 5.4823, 5.4823, 5.4823, 5.5323, 5.5823, 5.6955, 5.8705,
     1          6.2385, 6.0927, 4.8370, 4.8149, 4.2611, 3.9771, 3.7146,
     2          3.4704, 3.2383, 3.0062, 2.5820, 2.1960, 1.8687, 1.5672,
     3          1.2514, -0.0409, -1.0985, -2.6147, -3.7520, -4.6360,
     4         -5.3783, -6.0019, -6.5248, -6.9763, -7.3705 /
      data a2 / -0.4104, -0.4104, -0.4104, -0.4104, -0.4104, -0.4329,
     1          -0.4551, -0.4831, -0.4359, -0.2566, -0.2393, -0.1850,
     2          -0.1614, -0.1399, -0.1202, -0.1020, -0.0849, -0.0538,
     3          -0.0258, -0.0003, 0.0232, 0.0450, 0.1354, 0.2054,0.3099,
     4	         0.3855, 0.4427, 0.4868, 0.5209, 0.5471, 0.5669, 0.5814 /
      data b1 / 2.9832, 2.9832, 2.9832, 2.9832, 2.9832, 2.9487, 2.9494,
     1          2.9788, 2.9153, 2.4829, 2.5066, 2.3687, 2.3475, 2.3284,
     2          2.3105, 2.2937, 2.2793, 2.2507, 2.2250, 2.2014, 2.1786,
     3          2.1588, 2.0720, 2.0027, 1.8938, 1.8091, 1.7401, 1.6825,
     4          1.6327, 1.5900, 1.5532, 1.5201 /
      data b2 / -0.2339, -0.2339, -0.2339, -0.2339, -0.2339, -0.2346,
     1          -0.2356, -0.2386, -0.2265, -0.1707, -0.1738, -0.1623,
     2          -0.1612, -0.1602, -0.1593, -0.1584, -0.1577, -0.1562,
     3          -0.1549, -0.1537, -0.1525, -0.1515, -0.1471, -0.1436,
     4          -0.1382, -0.1341, -0.1308, -0.1281, -0.1258, -0.1239,
     5          -0.1223, -0.1209 /
      data a1mlt675 / 3.5574, 3.5574, 3.5574, 3.6074, 3.6574, 3.9756,
     1                4.3024, 4.2931, 4.2466, 3.2318, 2.9661, 2.4786,
     2                2.0865, 1.7274, 1.3949, 1.0804, 0.7720, 0.2081,
     3               -0.3022, -0.7426, -1.1483, -1.5598, -3.2465,
     4               -4.6031, -6.5541, -7.9923, -9.0907, -9.9870,
     5               -10.7187, -11.3141, -11.8071, -12.2175 /
      data a2mlt675 / -0.1252, -0.1252, -0.1252, -0.1252, -0.1252, -0.1781,
     1                -0.2228, -0.1949, -0.1624, -0.0188, 0.0346, 0.0791,
     2                 0.1187, 0.1545, 0.1873, 0.2177, 0.2461, 0.2979, 0.3443,
     3                 0.3866, 0.4255, 0.4615, 0.6103, 0.7246, 0.8935, 1.0137,
     4                 1.1027, 1.1696, 1.2197, 1.2566, 1.2826, 1.2995 /
      data b1mlt675 / 2.9832, 2.9832, 2.9832, 2.9832, 2.9832, 3.0156, 3.0708,
     1                3.1071, 3.1212, 2.8609, 2.8739, 2.8203, 2.8126, 2.8056,
     2                2.7992, 2.7932, 2.7876, 2.7772, 2.7677, 2.7590, 2.7510,
     3                2.7434, 2.7112, 2.6851, 2.6437, 2.6110, 2.5839, 2.5607,
     4                2.5406, 2.5228, 2.5070, 2.4928 /
      data b2mlt675 / -0.2339, -0.2339, -0.2339, -0.2339, -0.2339, -0.2445,
     1                -0.2536, -0.2576, -0.2570, -0.2267, -0.2282, -0.2292,
     2                -0.2301, -0.2309, -0.2317, -0.2324, -0.2330, -0.2342,
     3                -0.2353, -0.2363, -0.2373, -0.2381, -0.2418, -0.2447,
     4                -0.2493, -0.2529, -0.2558, -0.2582, -0.2603, -0.2621,
     5                -0.2636, -0.2650 /
      data gam / 0.00047, 0.00047, 0.00047, 0.00047, 0.00047, 0.00000,
     1           0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00049,
     2           0.00052, 0.00099, 0.00112, 0.00114, 0.00132, 0.00154,
     3           0.00170, 0.00152, 0.00157, 0.00188, 0.00250, 0.00268,
     4           0.00050, -0.00248, -0.00453, -0.00566, -0.00633,
     5          -0.00671, -0.00689, -0.00709 /
      data phi / 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12,
     1           0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12,
     2           0.12, 0.11, 0.10, 0.06, 0.04, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,
     3           0.00, 0.00 /

C Find the requested spectral period and corresponding coefficients
      nPer = 32
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         a1T     = a1(1)
         a2T     = a2(1)
         b1T     = b1(1)
         b2T     = b2(1)
         a1mlt675T = a1mlt675(1)
         a2mlt675T = a2mlt675(1)
         b1mlt675T = b1mlt675(1)
         b2mlt675T = b2mlt675(1)
         gamT   = gam(1)
         phiT   = phi(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Idriss (NGA-2008) Horizontal Vs>=900m/s'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),a1(count1),a1(count2),
     +                   specT,a1T,iflag)
            call interp (period(count1),period(count2),a2(count1),a2(count2),
     +                   specT,a2T,iflag)
            call interp (period(count1),period(count2),b1(count1),b1(count2),
     +                   specT,b1T,iflag)
            call interp (period(count1),period(count2),b2(count1),b2(count2),
     +                   specT,b2T,iflag)
            call interp (period(count1),period(count2),a1mlt675(count1),a1mlt675(count2),
     +                   specT,a1mlt675T,iflag)
            call interp (period(count1),period(count2),a2mlt675(count1),a2mlt675(count2),
     +                   specT,a2mlt675T,iflag)
            call interp (period(count1),period(count2),b1mlt675(count1),b1mlt675(count2),
     +                   specT,b1mlt675T,iflag)
            call interp (period(count1),period(count2),b2mlt675(count1),b2mlt675(count2),
     +                   specT,b2mlt675T,iflag)
            call interp (period(count1),period(count2),phi(count1),phi(count2),
     +                   specT,phiT,iflag)
            call interp (period(count1),period(count2),gam(count1),gam(count2),
     +                   specT,gamT,iflag)

 1011 period1 = specT

C.....Compute the Ground motion.......

C.....Set the mechanism term.....................
C     Strike-slip events --> SOF = 0
C     Reverse events     --> SOF = 1
C     Otherwise assume SOF = 0
      if (ftype .eq. 1.0) then
         SOF = 1.0
      else
         SOF = 0.0
      endif

      if (m .lt. 6.75) then
         lnY = a1mlt675T + a2mlt675T*m - (b1mlt675T+b2mlt675T*m) * alog(rrup+10.0) +
     1         gamT*rRup + SOF*phiT
      else
         lnY = a1T + a2T*m - (b1T+b2T*m) * alog(rrup+10.0) +
     1         gamT*rRup + SOF*phiT
      endif

C     Convert ground motion to units of gals.
      lnY = lnY + 6.89

C     Compute Sigma which is Period and magnitude dependent.
      if (specT .le. 0.05) then
         if (m .le. 5.0) then
            sigma = 1.28 +0.05*alog(0.05) - 0.08*5.0
         elseif (m .ge. 7.5) then
            sigma = 1.28 +0.05*alog(0.05) - 0.08*7.5
         else
            sigma = 1.28 +0.05*alog(0.05) - 0.08*m
         endif
      elseif (specT .ge. 3.0) then
         if (m .le. 5.0) then
            sigma = 1.28 +0.05*alog(3.00) - 0.08*5.0
         elseif (m .ge. 7.5) then
            sigma = 1.28 +0.05*alog(3.00) - 0.08*7.5
         else
            sigma = 1.28 +0.05*alog(3.00) - 0.08*m
         endif
      else
         if (m .le. 5.0) then
            sigma = 1.28 +0.05*alog(specT) - 0.08*5.0
         elseif (m .ge. 7.5) then
            sigma = 1.28 +0.05*alog(specT) - 0.08*7.5
         else
            sigma = 1.28 +0.05*alog(specT) - 0.08*m
         endif
      endif

      period2 = period1

      return
      end

c ---------------------------------------------------------------------
C     *** Campbell and Bozorgnia NGA (NGA-2008) ***
c ---------------------------------------------------------------------

      subroutine CB_NGA_2008 ( mag, Rrup, Rbjf, Ftype, specT,
     1                     period2, lnY, sigma, iflag, vs,
     2                     depthtop, D25, Dip, phi, tau )

      parameter (MAXPER=24)
      REAL Period(MAXPER), C0(MAXPER), C1(MAXPER), C2(MAXPER), C3(MAXPER), C4(MAXPER), C5(MAXPER)
      REAL C6(MAXPER), C7(MAXPER), C8(MAXPER), C9(MAXPER), C10(MAXPER), C11(MAXPER), C12(MAXPER)
      REAL K1(MAXPER), K2(MAXPER), K3(MAXPER)
      REAL SIG(MAXPER), tlny(MAXPER), slny(MAXPER)
      REAL cort(MAXPER), cors(MAXPER)

      REAL MAG, RRUP, RBJF, VS, D25, FHWR, FHWM, FHWZ, FHWD, PGAROCK, C, N
      real sigmaT, lnY, ftype, ztor, Dip, Dmax, pgasoil, phi, tau
      INTEGER count1, count2

      real c0T, c1T, c2T, c3T, c4T, c5T, c6T, c7T, c8T, c9T, c10T, c11T, c12T
      real k1T, k2T, k3T, sigT
      real tlnyT, slnyT, cortT, corsT
      real alpha, s

C.....MODEL COEFFICIENTS.....................
      data Period /  0.00, -1.0, -2.0, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25,
     &               0.3, 0.4, 0.5, 0.75, 1, 1.5, 2, 3, 4, 5, 7.5, 10. /
      data C0     / -1.715, 0.954, -5.270, -1.715, -1.68, -1.552, -1.209, -0.657, -0.314, -0.133,
     &              -0.486, -0.89, -1.171, -1.466, -2.569, -4.844, -6.406,
     &              -8.692, -9.701, -10.556, -11.212, -11.684, -12.505, -13.087 /
      data C1     /  0.5,0.696, 1.60, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5,
     &               0.656, 0.972, 1.196, 1.513, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6 /
      data c2     / -0.53,-0.309, -0.070, -0.53, -0.53, -0.53, -0.53, -0.53, -0.53, -0.53, -0.446,
     &              -0.362, -0.294, -0.186, -0.304, -0.578, -0.772, -1.046,
     &              -0.978, -0.638, -0.316, -0.07, -0.07, -0.07 /
      data c3     / -0.262, -0.019,  0.000, -0.262, -0.262, -0.262, -0.267, -0.302, -0.324, -0.339,
     &              -0.398, -0.458, -0.511, -0.592, -0.536, -0.406, -0.314,
     &              -0.185, -0.236, -0.491, -0.77, -0.986, -0.656, -0.422 /
      data c4     / -2.118, -2.016, -2.000, -2.118, -2.123, -2.145, -2.199, -2.277, -2.318, -2.309,
     &              -2.22, -2.146, -2.095, -2.066, -2.041, -2.0, -2.0, -2.0,
     &              -2.0, -2.0, -2.0, -2.0, -2.0, -2.0 /
      data c5     /  0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17,
     &               0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17,
     &               0.17, 0.17, 0.17 /
      data c6     /  5.6, 4.00, 4.00, 5.6, 5.6, 5.6, 5.74, 7.09, 8.05, 8.79, 7.6, 6.58,
     &               6.04, 5.3, 4.73, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
     &               4.0, 4.0 /
      data c7     /  0.28, 0.245, 0.000, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28,
     &               0.28, 0.28, 0.28, 0.28, 0.255, 0.161, 0.094, 0.0, 0.0,
     &               0.0, 0.0, 0.0 /
      data c8     / -0.12, 0.00, 0.00, -0.12, -0.12, -0.12, -0.12, -0.12, -0.099, -0.048, -0.012,
     &               0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     &               0.0, 0.0 /
      data c9     /  0.49, 0.358, 0.000, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49,
     &               0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.371, 0.154, 0.0,
     &               0.0, 0.0, 0.0 /
      data c10    /  1.058, 1.694, -0.820, 1.058, 1.102, 1.174, 1.272, 1.438, 1.604, 1.928, 2.194,
     &               2.351, 2.46, 2.587, 2.544, 2.133, 1.571, 0.406, -0.456,
     &              -0.82, -0.82, -0.82, -0.82, -0.82 /
      data c11    /  0.04, 0.092, 0.300, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04,
     &               0.04, 0.04, 0.04, 0.077, 0.15, 0.253, 0.3, 0.3, 0.3,
     &               0.3, 0.3, 0.3 /
      data c12    /  0.61, 1.000, 1.000, 0.61, 0.61, 0.61, 0.61, 0.61, 0.61, 0.61, 0.61, 0.61,
     &               0.61, 0.61, 0.883, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
     &               1.0, 1.0 /
      data k1     /  865., 400.0, 400.0, 865., 865., 908., 1054., 1086., 1032., 878., 748., 654.,
     &               587., 503., 457., 410., 400., 400., 400., 400., 400.,
     &               400., 400., 400. /
      data k2     / -1.186, -1.955, 0.000, -1.186, -1.219, -1.273, -1.346, -1.471, -1.624, -1.931,
     &              -2.188, -2.381, -2.518, -2.657, -2.669, -2.401, -1.955,
     &              -1.025, -0.299, 0.000, 0.000, 0.000, 0.000, 0.000 /
      data k3     /  1.839, 1.929, 2.744, 1.839, 1.84, 1.841, 1.843, 1.845, 1.847, 1.852, 1.856,
     &               1.861, 1.865, 1.874, 1.883, 1.906, 1.929, 1.974, 2.019,
     &               2.11, 2.2, 2.291, 2.517, 2.744 /
      data sig    /  0.526, 0.525, 0.825, 0.526, 0.528, 0.543, 0.572, 0.596, 0.603, 0.601, 0.589,
     &               0.585, 0.585, 0.583, 0.59, 0.612, 0.623, 0.637, 0.643,
     &               0.646, 0.648, 0.7, 0.76, 0.825 /
      data tlny   /  0.219, 0.203, 0.485, 0.219, 0.219, 0.235, 0.258, 0.292, 0.286, 0.280, 0.249,
     &               0.240, 0.215, 0.217, 0.214, 0.227, 0.255, 0.296, 0.296,
     &               0.326, 0.297, 0.359, 0.428, 0.485 /
      data slny   /  0.478, 0.484, 0.667, 0.478, 0.480, 0.489, 0.510, 0.520, 0.531, 0.532, 0.534,
     &               0.534, 0.544, 0.541, 0.550, 0.568, 0.568, 0.564, 0.571,
     &               0.558, 0.576, 0.601, 0.628, 0.667 /
      data cort   /  1.000, 0.538, 0.290, 1.000, 0.994, 0.979, 0.927, 0.880, 0.871, 0.885, 0.913,
     &               0.873, 0.848, 0.756, 0.631, 0.442, 0.290, 0.290, 0.290,
     &               0.290, 0.290, 0.290, 0.290, 0.290 /
      data cors   /  1.000, 0.691, 0.174, 1.000, 0.999, 0.989, 0.963, 0.922, 0.898, 0.890, 0.871,
     &               0.852, 0.831, 0.785, 0.735, 0.628, 0.534, 0.411, 0.331,
     &               0.289, 0.261, 0.200, 0.174, 0.174 /

      nPer = 21
      c = 1.88
      n = 1.18

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c0T = c0(1)
         c1T = c1(1)
         c2T = c2(1)
         c3T = c3(1)
         c4T = c4(1)
         c5T = c5(1)
         c6T = c6(1)
         c7T = c7(1)
         c8T = c8(1)
         c9T = c9(1)
         c10T = c10(1)
         c11T = c11(1)
         c12T = c12(1)
         k1T = k1(1)
         k2T = k2(1)
         k3T = k3(1)
         sigT = sig(1)
         tlnyT = tlny(1)
         slnyT = slny(1)
         cortT = cort(1)
         corsT = cors(1)
         goto 1011
C First check for the PGV case (i.e., specT=-1.0)
      elseif (specT .eq. -1.0) then
         period1 = period(2)
         c0T = c0(2)
         c1T = c1(2)
         c2T = c2(2)
         c3T = c3(2)
         c4T = c4(2)
         c5T = c5(2)
         c6T = c6(2)
         c7T = c7(2)
         c8T = c8(2)
         c9T = c9(2)
         c10T = c10(2)
         c11T = c11(2)
         c12T = c12(2)
         k1T = k1(2)
         k2T = k2(2)
         k3T = k3(2)
         sigT = sig(2)
         tlnyT = tlny(2)
         slnyT = slny(2)
         cortT = cort(2)
         corsT = cors(2)
         goto 1011
C First check for the PGD case (i.e., specT=-2.0)
      elseif (specT .eq. -2.0) then
         period1 = period(3)
         c0T = c0(3)
         c1T = c1(3)
         c2T = c2(3)
         c3T = c3(3)
         c4T = c4(3)
         c5T = c5(3)
         c6T = c6(3)
         c7T = c7(3)
         c8T = c8(3)
         c9T = c9(3)
         c10T = c10(3)
         c11T = c11(3)
         c12T = c12(3)
         k1T = k1(3)
         k2T = k2(3)
         k3T = k3(3)
         sigT = sig(3)
         tlnyT = tlny(3)
         slnyT = slny(3)
         cortT = cort(3)
         corsT = cors(3)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=4,nper-1+3
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Campbell&Bozorgnia (NGA-2008) Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),c0(count1),c0(count2),
     +                   specT,c0T,iflag)
            call interp (period(count1),period(count2),c1(count1),c1(count2),
     +                   specT,c1T,iflag)
            call interp (period(count1),period(count2),c2(count1),c2(count2),
     +                   specT,c2T,iflag)
            call interp (period(count1),period(count2),c3(count1),c3(count2),
     +                   specT,c3T,iflag)
            call interp (period(count1),period(count2),c4(count1),c4(count2),
     +                   specT,c4T,iflag)
            call interp (period(count1),period(count2),c5(count1),c5(count2),
     +                   specT,c5T,iflag)
            call interp (period(count1),period(count2),c6(count1),c6(count2),
     +                   specT,c6T,iflag)
            call interp (period(count1),period(count2),c7(count1),c7(count2),
     +                   specT,c7T,iflag)
            call interp (period(count1),period(count2),c8(count1),c8(count2),
     +                   specT,c8T,iflag)
            call interp (period(count1),period(count2),c9(count1),c9(count2),
     +                   specT,c9T,iflag)
            call interp (period(count1),period(count2),c10(count1),c10(count2),
     +                   specT,c10T,iflag)
            call interp (period(count1),period(count2),c11(count1),c11(count2),
     +                   specT,c11T,iflag)
            call interp (period(count1),period(count2),c12(count1),c12(count2),
     +                   specT,c12T,iflag)
            call interp (period(count1),period(count2),k1(count1),k1(count2),
     +                   specT,k1T,iflag)
            call interp (period(count1),period(count2),k2(count1),k2(count2),
     +                   specT,k2T,iflag)
            call interp (period(count1),period(count2),k3(count1),k3(count2),
     +                   specT,k3T,iflag)
            call interp (period(count1),period(count2),sig(count1),sig(count2),
     +                   specT,sigT,iflag)
            call interp (period(count1),period(count2),tlny(count1),tlny(count2),
     +                   specT,tlnyT,iflag)
            call interp (period(count1),period(count2),slny(count1),slny(count2),
     +                   specT,slnyT,iflag)
            call interp (period(count1),period(count2),cort(count1),cort(count2),
     +                   specT,cortT,iflag)
            call interp (period(count1),period(count2),cors(count1),cors(count2),
     +                   specT,corsT,iflag)
 1011 period1 = specT

C.....COMPUTE ROCK PGA VALUE FIRST.........................
C.....MAGNITUDE DEPENDENCE.................................
      IF (MAG .LE. 5.5) THEN
         TERM1 = C0(1) + C1(1)*MAG
      elseif (mag .le. 6.5) then
         TERM1 = C0(1) + C1(1)*MAG + c2(1)*(mag-5.5)
      ELSE
         TERM1 = C0(1) + C1(1)*MAG + C2(1)*(MAG-5.5)+c3(1)*(mag-6.5)
      ENDIF

C.....Distance dependence......
      R = SQRT( RRUP*RRUP+C6(1)*C6(1) )
      TERM2 = (C4(1) + C5(1)*MAG)*ALOG(R)

C.....SET UP STYLE OF FAULTING TERMS...........
      IF (depthtop .ge. 1.0) THEN
         Ztor = 1.0
      ELSE
         Ztor = depthtop
      ENDIF

C     Set mechanism term and corresponding Frv and Fnm values.
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C    -1,-0.5    Normal and NMl/Obl       -150 < Rake < -30.0
C     1, 0.5    Reverse and Rev/Obl        30 < Rake < 150.0
C       0       Strike-Slip                    Otherwise
      IF (Ftype .EQ. 0.0) THEN
         TERM3 = 0.0
      ELSEIF (Ftype .ge. 0.5) THEN
         TERM3 = C7(1)*Ztor
      ELSEIF (Ftype .le. -0.5) THEN
         TERM3 = C8(1)
      ENDIF

C.....SET UP HANGING WALL TERMS................
      IF (RBJF .EQ. 0.0) THEN
         FHWR = 1.0
      ELSEIF (rbjf .gt. 0.0 .and. depthtop .lt. 1.0) then
         dmax = max(Rrup,sqrt(Rbjf*Rbjf+1))
         FHWR = (dmax - RBJF)/dmax
      ELSEIF (rbjf .gt. 0.0 .and. depthtop .ge. 1.0) then
         FHWR = (Rrup - Rbjf)/Rrup
      ENDIF

      IF (MAG .LE. 6.0) THEN
         FHWM = 0.0
      ELSEIF (MAG .GT. 6.0 .AND. MAG .LT. 6.5) THEN
         FHWM = (MAG-6.0)*2.0
      ELSE
         FHWM = 1.0
      ENDIF

      IF (depthtop .GE. 20.0) THEN
         FHWZ = 0.0
      ELSE
         FHWZ = (20.0-depthtop)/20.0
      ENDIF

      IF (abs(dip) .le. 70.0) THEN
          FHWD = 1.0
      ELSE
         FHWD = (90.0 - abs(Dip))/20.0
      ENDIF

      TERM4 = C9(1)*FHWR*FHWM*FHWZ*FHWD

C.....NOW COMPUTE THE SITE CONDITION FACTORS...............
C.....(FOR PGA ROCK, VS=1100, i.e., Vs>k1)
      TERM5_RK = (C10(1) + K2(1)*n)*ALOG( 1100.0/K1(1) )

C.....NOW COMPUTE THE SEDIMENT DEPTH DEPENDENCE.............
      if (D25 .lt. 1.0) then
         TERM6 = C11(1)*(D25-1.0)
      elseif (D25 .GE. 1.0 .AND. D25 .LE. 3.0) then
         TERM6 = 0.0
      elseif (D25 .GT. 3.0) then
         TERM6 = c12(1)*k3(1)*exp(-0.75)*(1.0-exp(-0.25*(D25-3.0)))
      endif

      PGAROCK = EXP(TERM1+TERM2+TERM3+TERM4+TERM5_RK+TERM6)

C.....(For PGA Soil)
      if (vs .lt. k1(1) ) then
         term5 = c10(1)*alog(vs/k1(1)) +
     1           k2(1)*(alog(pgarock+c*((vs/k1(1))**n)) -
     2           alog(pgarock+c))
      elseif (vs .lt. 1100.0) then
         term5 = (c10(1) + k2(1)*n)*alog(vs/k1(1))
      elseif (vs .ge. 1100.0) then
         term5 = (c10(1) + k2(1)*n)*alog(1100.0/k1(1))
      endif

      pgasoil = alog(pgarock) - term5_rk + term5

C.....NOW COMPUTE THE GROUND MOTION VALUES.................
C.....MAGNITUDE DEPENDENCE.................................
      IF (MAG .LE. 5.5) THEN
         TERM1 = C0T + C1T*MAG
      elseif (mag .le. 6.5) then
         TERM1 = C0T + C1T*MAG + c2T*(mag-5.5)
      ELSE
         TERM1 = C0T + C1T*MAG + C2T*(MAG-5.5)+c3T*(mag-6.5)
      ENDIF

C.....Distance dependence......
      R = SQRT( RRUP*RRUP+C6T*C6T )
      TERM2 = (C4T + C5T*MAG)*ALOG(R)

C.....SET UP STYLE OF FAULTING TERMS...........
      IF (depthtop .GE. 1.0) THEN
         Ztor = 1.0
      ELSE
         Ztor = depthtop
      ENDIF

C     Set mechanism term and corresponding Frv and Fnm values.
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C    -1,-0.5    Normal and NMl/Obl       -150 < Rake < -30.0
C     1, 0.5    Reverse and Rev/Obl        30 < Rake < 150.0
C       0       Strike-Slip                    Otherwise
      IF (Ftype .EQ. 0.0) THEN
         TERM3 = 0.0
      ELSEIF (Ftype .ge. 0.5) THEN
         TERM3 = C7T*Ztor
      ELSEIF (Ftype .le. -0.5) THEN
         TERM3 = C8T
      ENDIF

C.....SET UP HANGING WALL TERMS................
      IF (RBJF .EQ. 0.0) THEN
         FHWR = 1.0
      ELSEIF (rbjf .gt. 0.0 .and. depthtop .lt. 1.0) then
         dmax = max(Rrup,sqrt(Rbjf*Rbjf+1))
         FHWR = (dmax - RBJF)/dmax
      ELSEIF (rbjf .gt. 0.0 .and. depthtop .ge. 1.0) then
         FHWR = (Rrup - Rbjf)/Rrup
      ENDIF

      IF (MAG .LE. 6.0) THEN
         FHWM = 0.0
      ELSEIF (MAG .GT. 6.0 .AND. MAG .LT. 6.5) THEN
         FHWM = (MAG-6.0)*2.0
      ELSE
         FHWM = 1.0
      ENDIF

      IF (depthtop .GE. 20.0) THEN
         FHWZ = 0.0
      ELSE
         FHWZ = (20.0-depthtop)/20.0
      ENDIF

      IF (abs(dip) .le. 70.0) THEN
          FHWD = 1.0
      ELSE
         FHWD = (90.0 - abs(Dip))/20.0
      ENDIF

      TERM4 = C9T*FHWR*FHWM*FHWZ*FHWD

C.....NOW COMPUTE THE SITE CONDITION FACTORS...............
      IF (VS .LT. K1T ) THEN
         TERM5 = C10T*ALOG( VS/K1T ) +
     1           K2T*( ALOG( PGAROCK+c*( (VS/K1T)**N) ) -
     2           ALOG( PGAROCK+c ) )
      ELSEIF (vs .lt. 1100.0) then
         TERM5 = ( C10T+K2T*n )*ALOG( VS/K1T )
      ELSEIF (vs .ge. 1100.0) then
         TERM5 = ( C10T+K2T*n )*ALOG( 1100.0/K1T )
      ENDIF

C.....NOW COMPUTE THE SEDIMENT DEPTH DEPENDENCE.............
      IF (D25 .LT. 1.0) THEN
         TERM6 = C11T*(D25-1.0)
      ELSEIF (D25 .GE. 1.0 .AND. D25 .LE. 3.0) THEN
         TERM6 = 0.0
      ELSEIF (D25 .GT. 3.0)  THEN
         TERM6 = c12T*k3T*exp(-0.75)*( 1.0 - exp(-0.25*(D25-3.0)))
      ENDIF

      LnY = (TERM1+TERM2+TERM3+TERM4+TERM5+TERM6)

C.....Check SA<PGAsoil for periods less than T=0.2 sec. Set SA equal to
C     PGASoil value if this case happens...........
c      pgasoil = exp(alog(pgarock) + term5 + term6)
      IF (period1 .lt. 0.2 .and. exp(lnY) .lt. pgasoil) then
         lnY = alog(pgasoil)
      endif

C.....Now compute the sigma value..........
c      SIGMAT = SIGT

C     Set the Sigma Values
c     Compute parital derivative of alog(soil amp) w.r.t. alog(rock PGA)
      if ( vs .ge. k1T) then
        dAmp_dPGA = 0.
      else
        dAmp_dPGA = k2T*pgaRock * ( -1. / (pgaRock+1.88)
     1              + 1./ (pgaRock + 1.88*(vs/k1T)**(1.18)) )
      endif

C     Compute the tau term
c      tau =   sqrt (tlnYT**2.0 + dAmp_dPGA*dAmp_dPGA*tlnY(1)*tlnY(1) +
c     1            2.0*dAmp_dPGA*cortT*tlnYT*tlnY(1) )
      tau = tlnYt

C     Compute the sigma term (SigmaAF=0.3)
      sigma = sqrt (slnYT**2.0 + dAmp_dPGA*dAmp_dPGA*(slnY(1)*slnY(1)-0.3*0.3) +
     1            2.0*dAmp_dPGA*corsT*sqrt(slnYT*slnYT-0.3*0.3)*sqrt(slnY(1)*slnY(1)-0.3*0.3) )
      phi = sigma

      sigmaT = sqrt (tau*tau + sigma*sigma)

      period2 = period1

C     Convert ground motion to units of gals.
      lnY = lnY + 6.89
      sigma = sigmaT

      return
      END

c ---------------------------------------------------------------------
C     *** Boore and Atkinson NGA (NGA-2008) ***
c ---------------------------------------------------------------------

      subroutine BA_NGA_2008 ( mag, Rbjf, specT,
     1                     period2, lnY, sigma, iflag, vs, ftype, pga4nl,
     1                     phiMT, tauMT )

      parameter (MAXPER=23)
      REAL Period(MAXPER), e01(MAXPER), e02(MAXPER), e03(MAXPER), e04(MAXPER)
      real e05(MAXPER), e06(MAXPER), e07(MAXPER), e08(MAXPER)
      real c01(MAXPER), c02(MAXPER), c03(MAXPER), c04(MAXPER)
      real h(MAXPER), blin(MAXPER), b1(MAXPER), b2(MAXPER)
      real sigt(MAXPER), phiM(MAXPER), tauM(MAXPER)
      real a1, a2, c, d, deltaX, deltaY, specT

      real e01p, e02p, e03p, e04p, e05p, e06p, e07p, e08p, mhp
      real c01p, c02p, c03p, c04p, mrefp, rrefp, hp

      REAL MAG, RBJF, VS, mh(MAXPER), mref, rref, vref, v1, v2, pga_low
      real ftype, Rp
      real sigmaT, lnY, mechS, mechN, mechR, mechU, pga4nl
      INTEGER iFlag, count1, count2

      real e01T, e02T, e03T, e04T, e05T, e06T, e07T, e08T
      real c01T, c02T, c03T, c04T, hT, blinT, b1T, b2T, mhT, tauMT, phiMT
      DATA Period / 0.00, -1.00, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1,
     1              0.15, 0.2, 0.25, 0.3, 0.4, 0.5, 0.75, 1.00, 1.5,
     2              2.00, 3.00, 4.00, 5.00, 7.5, 10.00 /
      DATA e01 / -0.53804, 5.00121, -0.52883, -0.52192, -0.45285,
     1           -0.28476, 0.00767, 0.20109, 0.46128, 0.5718, 0.51884,
     2            0.43825, 0.3922, 0.18957, -0.21338, -0.46896,
     3           -0.86271, -1.22652, -1.82979, -2.24656, -1.28408,
     4           -1.43145, -2.15446 /
      DATA e02 / -0.5035, 5.04727, -0.49429, -0.48508, -0.41831,
     1           -0.25022, 0.04912, 0.23102, 0.48661, 0.59253,
     2            0.53496, 0.44516, 0.40602, 0.19878, -0.19496,
     3           -0.43443, -0.79593, -1.15514, -1.7469, -2.15906,
     4           -1.2127, -1.31632, -2.16137 /
      DATA  e03 / -0.75472, 4.63188, -0.74551, -0.73906, -0.66722,
     1            -0.48462, -0.20578, 0.03058, 0.30185, 0.4086,
     2             0.3388, 0.25356, 0.21398, 0.00967, -0.49176,
     3            -0.78465, -1.20902, -1.57697, -2.22584, -2.58228,
     4            -1.50904, -1.81022, -2.53323 /
      DATA e04 / -0.5097, 5.0821, -0.49966, -0.48895, -0.42229,
     1           -0.26092, 0.02706, 0.22193, 0.49328, 0.61472,
     2            0.57747, 0.5199, 0.4608, 0.26337, -0.10813,
     3           -0.3933, -0.88085, -1.27669, -1.91814, -2.38168,
     4           -1.41632, -1.59217, -2.14635 /
      DATA e05 / 0.28805, 0.18322, 0.28897, 0.25144, 0.17976,
     1           0.06369, 0.0117, 0.04697, 0.1799, 0.52729,
     2           0.6088, 0.64472, 0.7861, 0.76837, 0.75179,
     3           0.6788, 0.70689, 0.77989, 0.77966, 1.24961,
     4           0.14271, 0.52407, 0.40387 /
      DATA e06 / -0.10164, -0.12736, -0.10019, -0.11006, -0.12858,
     1           -0.15752, -0.17051, -0.15948, -0.14539, -0.12964,
     2           -0.13843, -0.15694, -0.07843, -0.09054, -0.14053,
     3           -0.18257, -0.2595, -0.29657, -0.45384, -0.35874,
     4           -0.39006, -0.37578, -0.48492 /
      DATA e07 / 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1           0.00102, 0.08607, 0.10601, 0.02262, 0, 0.10302,
     2           0.05393, 0.19082, 0.29888, 0.67466, 0.79508,
     3           0.0, 0.0, 0.0 /
      DATA e08 / 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     2           0.0, 0.0, 0.0 /
      DATA c01 / -0.6605, -0.8737, -0.6622, -0.666, -0.6901, -0.717,
     1           -0.7205, -0.7081, -0.6961, -0.583, -0.5726, -0.5543,
     2           -0.6443, -0.6914, -0.7408, -0.8183, -0.8303, -0.8285,
     3           -0.7844, -0.6854, -0.5096, -0.3724, -0.09824 /
      DATA c02 / 0.1197, 0.1006, 0.12, 0.1228, 0.1283, 0.1317, 0.1237,
     1           0.1117, 0.09884, 0.04273, 0.02977, 0.01955, 0.04394,
     2           0.0608, 0.07518, 0.1027, 0.09793, 0.09432, 0.07282,
     3           0.03758, -0.02391, -0.06568, -0.138 /
      DATA c03 / -0.01151, -0.00334, -0.01151, -0.01151, -0.01151,
     1           -0.01151, -0.01151, -0.01151, -0.01113, -0.00952,
     2           -0.00837, -0.0075, -0.00626, -0.0054, -0.00409,
     3           -0.00334, -0.00255, -0.00217, -0.00191, -0.00191,
     4           -0.00191, -0.00191, -0.00191 /
      DATA c04 / 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     2           0.0, 0.0, 0.0 /
      DATA h / 1.35, 2.54, 1.35, 1.35, 1.35, 1.35, 1.55, 1.68, 1.86,
     1         1.98, 2.07, 2.14, 2.24, 2.32, 2.46, 2.54, 2.66, 2.73,
     2         2.83, 2.89, 2.93, 3.00, 3.04 /
      DATA blin / -0.36, -0.6, -0.36, -0.34, -0.33, -0.29, -0.23,
     1            -0.25, -0.28, -0.31, -0.39, -0.44, -0.5, -0.6,
     2            -0.69, -0.7, -0.72, -0.73, -0.74, -0.75, -0.75,
     3            -0.692, -0.65 /
      DATA b1 / -0.64, -0.5, -0.64, -0.63, -0.62, -0.64, -0.64,
     1          -0.6, -0.53, -0.52, -0.52, -0.52, -0.51, -0.5,
     2          -0.47, -0.44, -0.4, -0.38, -0.34, -0.31, -0.291,
     3          -0.247, -0.215 /
      DATA b2 / -0.14, -0.06, -0.14, -0.12, -0.11, -0.11, -0.11,
     1          -0.13, -0.18, -0.19, -0.16, -0.14, -0.1, -0.06,
     2           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /
      DATA sigT / 0.564, 0.56, 0.566, 0.566, 0.576, 0.589, 0.606,
     1             0.608, 0.594, 0.596, 0.592, 0.608, 0.603, 0.615,
     2             0.645, 0.647, 0.679, 0.7, 0.695, 0.698, 0.744,
     3             0.787, 0.801 /
      DATA mh / 6.75, 8.5, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75,
     1          6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75,
     2          6.75, 6.75, 8.5, 8.5, 8.5 /

      Data tauM / 0.260, 0.256, 0.262, 0.262, 0.274, 0.286, 0.320,
     1            0.318, 0.290, 0.288, 0.267, 0.269, 0.267, 0.265,
     1            0.299, 0.302, 0.373, 0.389, 0.401, 0.385, 0.437,
     1            0.477, 0.477 /
      data phiM / 0.502, 0.500, 0.502, 0.502, 0.507, 0.516, 0.513,
     1            0.520, 0.518, 0.523, 0.527, 0.546, 0.541, 0.555,
     1            0.571, 0.573, 0.566, 0.580, 0.566, 0.583, 0.601,
     1            0.626, 0.645 /
C     Set parameters
      mref = 4.5
      rref = 1.0
      vref = 760.0
      v1 = 180.0
      v2 = 300.0
      pga_low = 0.06
c     Parameters to compute PGA rock
      e01p = -0.53804
      e02p = -0.50350
      e03p = -0.75472
      e04p = -0.50970
      e05p = 0.28805
      e06p = -0.10164
      e07p = 0.0
      e08p = 0.0
      mhp = 6.75
      c01p = -0.66050
      c02p = 0.11970
      c03p = -0.01151
      c04p = 0.0
      mrefp = 4.5
C    Reference distance for pga4nl cases is set to 1.0km rather than
C    5.0km based on errata published on Boore web site.
      rrefp = 1.0
      hp = 1.35

C First check for the PGA case (i.e., specT=0.0)
      nPer = 21
      if (specT .eq. 0.0) then
         period1 = period(1)
         e01T = e01(1)
         e02T = e02(1)
         e03T = e03(1)
         e04T = e04(1)
         e05T = e05(1)
         e06T = e06(1)
         e07T = e07(1)
         e08T = e08(1)
         c01T = c01(1)
         c02T = c02(1)
         c03T = c03(1)
         c04T = c04(1)
         hT = h(1)
         blinT = blin(1)
         b1T = b1(1)
         b2T = b2(1)
         sigmaT = sigT(1)
         mhT = mh(1)
         phimT = phiM(1)
         taumT = tauM(1)
         goto 1011
C Check for the PGV case (i.e., specT=-1.0)
      elseif (specT .eq. -1.0) then
         period1 = period(2)
         e01T = e01(2)
         e02T = e02(2)
         e03T = e03(2)
         e04T = e04(2)
         e05T = e05(2)
         e06T = e06(2)
         e07T = e07(2)
         e08T = e08(2)
         c01T = c01(2)
         c02T = c02(2)
         c03T = c03(2)
         c04T = c04(2)
         hT = h(2)
         blinT = blin(2)
         b1T = b1(2)
         b2T = b2(2)
         sigmaT = sigT(2)
         mhT = mh(2)
         phimT = phiM(2)
         taumT = tauM(2)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=3,nper-1+2
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Boore&Atkinson (NGA-2008) Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),e01(count1),e01(count2),
     +                   specT,e01T,iflag)
            call interp (period(count1),period(count2),e02(count1),e02(count2),
     +                   specT,e02T,iflag)
            call interp (period(count1),period(count2),e03(count1),e03(count2),
     +                   specT,e03T,iflag)
            call interp (period(count1),period(count2),e04(count1),e04(count2),
     +                   specT,e04T,iflag)
            call interp (period(count1),period(count2),e05(count1),e05(count2),
     +                   specT,e05T,iflag)
            call interp (period(count1),period(count2),e06(count1),e06(count2),
     +                   specT,e06T,iflag)
            call interp (period(count1),period(count2),e07(count1),e07(count2),
     +                   specT,e07T,iflag)
            call interp (period(count1),period(count2),e08(count1),e08(count2),
     +                   specT,e08T,iflag)
            call interp (period(count1),period(count2),c01(count1),c01(count2),
     +                   specT,c01T,iflag)
            call interp (period(count1),period(count2),c02(count1),c02(count2),
     +                   specT,c02T,iflag)
            call interp (period(count1),period(count2),c03(count1),c03(count2),
     +                   specT,c03T,iflag)
            call interp (period(count1),period(count2),c04(count1),c04(count2),
     +                   specT,c04T,iflag)
            call interp (period(count1),period(count2),h(count1),h(count2),
     +                   specT,hT,iflag)
            call interp (period(count1),period(count2),blin(count1),blin(count2),
     +                   specT,blinT,iflag)
            call interp (period(count1),period(count2),b1(count1),b1(count2),
     +                   specT,b1T,iflag)
            call interp (period(count1),period(count2),b2(count1),b2(count2),
     +                   specT,b2T,iflag)
            call interp (period(count1),period(count2),mh(count1),mh(count2),
     +                   specT,mhT,iflag)
            call interp (period(count1),period(count2),sigT(count1),sigT(count2),
     +                   specT,sigmaT,iflag)
            call interp (period(count1),period(count2),phiM(count1),phiM(count2),
     +                   specT,phiMT,iflag)
            call interp (period(count1),period(count2),tauM(count1),tauM(count2),
     +                   specT,tauMT,iflag)
 1011 period1 = specT

C.....Set the mechanism terms based on ftype............
C     Set mechanism term and corresponding Frv and Fnm values.
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C      -1       Normal                    -120 < Rake <  -60
C     -0.5      Normal/Oblique            -150 < Rake < -120
C                                          -60 < Rake <  -30
C       0       Strike-Slip               -180 < Rake < -150
C                                          -30 < Rake <   30
C                                          150 < Rake <  180
C      0.5      Reverse/Oblique             30 < Rake <   60
C                                          120 < Rake <  150
C       1       Reverse                     60 < Rake <  120
      if (ftype .eq. -1.0) then
         mechS = 0.0
         mechN = 1.0
         mechR = 0.0
         mechU = 0.0
      elseif (ftype .eq. -0.5) then
         mechS = 0.0
         mechN = 1.0
         mechR = 0.0
         mechU = 0.0
      elseif (ftype .eq. 0.0) then
         mechS = 1.0
         mechN = 0.0
         mechR = 0.0
         mechU = 0.0
      elseif (ftype .eq. 0.5) then
         mechS = 0.0
         mechN = 0.0
         mechR = 1.0
         mechU = 0.0
      elseif (ftype .eq. 1.0) then
         mechS = 0.0
         mechN = 0.0
         mechR = 1.0
         mechU = 0.0
      endif

C.....First compute the Reference Rock PGA value.........
C.....MAGNITUDE DEPENDENCE.................................
      if (mag .le. mhp) then
         term1 = e01p*mechU + e02p*mechS + e03p*mechN + e04p*mechR +
     1           e05p*(mag-mhp) + e06p*(mag-mhp)**2.0
      else
         term1 = e01p*mechU + e02p*mechS + e03p*mechN + e04p*mechR +
     1           e07p*(mag-mhp) + e08p*(mag-mhp)**2.0
      endif
C.....Distance dependence......
      Rp = SQRT( Rbjf*Rbjf+hp*hp )

      TERM2 = ( c01p + c02p*(mag-mrefp) ) * alog(Rp/rrefp) +
     1        ( c03p + c04p*(mag-mrefp) ) * (Rp-rrefp)
      pga4nl = exp(term1+term2)

C.....Now compute the requested ground motion value........
C.....MAGNITUDE DEPENDENCE.................................
      if (mag .le. mhT) then
         term1 = e01T*mechU + e02T*mechS + e03T*mechN + e04T*mechR +
     1           e05T*(mag-mhT) + e06T*(mag-mhT)**2.0
      else
         term1 = e01T*mechU + e02T*mechS + e03T*mechN + e04T*mechR +
     1           e07T*(mag-mhT) + e08T*(mag-mhT)**2.0
      endif

C.....Distance dependence......
      R = SQRT( Rbjf*Rbjf+hT*hT )

      TERM2 = ( c01T + c02T*(mag-mref) ) * alog(R/rref) +
     1        ( c03T + c04T*(mag-mref) ) * (R-rref)

C.....Site Response Term.........
C.....First compute Bnl slope term......
      if (vs .le. v1) then
         bnl = b1T
      elseif (vs .le. v2) then
        bnl = (b1T-b2T)*(alog(vs/v2)/alog(v1/v2)) + b2T
      elseif (vs .lt. vref) then
        bnl = b2t*alog(vs/vref)/alog(v2/vref)
      else
        bnl = 0.0
      endif

c.....next compute the slope coefficients for model....
      a1 = 0.03
      a2 = 0.09
      deltaX = alog(a2/a1)
      deltaY = bnl*alog(a2/pga_low)
      c = (3.0*deltaY-bnl*deltaX)/(deltaX*deltaX)
      d = -1.0*(2.0*deltaY-bnl*deltaX)/(deltaX*deltaX*deltaX)

C.....Now compute the site term........
      if (pga4nl .le. a1) then
          TERM3 = blinT*alog(vs/vref) + bnl*alog(pga_low/0.1)
      elseif (pga4nl .le. a2) then
          TERM3 = blinT*alog(vs/vref) + bnl*alog(pga_low/0.1)
     1            + c*(alog(pga4nl/a1))**2.0
     2            + d*(alog(pga4nl/a1))**3.0
      elseif (pga4nl .gt. a2) then
          TERM3 = blinT*alog(vs/vref) + bnl*alog(pga4nl/0.1)
      endif

      lnY = term1 + term2 + term3

      period2 = period1

C     Convert ground motion to units of gals.
      lnY = lnY + 6.89
      sigma = sigmaT

      return
      END




C   ***** This file includes the regional or global GMPEs for Turkey *******

C  ***** PEER NGA MODELS ADJUSTED FOR TURKEY **********

c ------------------------------------------------------------------
C *** Abrahamson and Silva (NGA-2008 Model) Horizontal ************
c ------------------------------------------------------------------
      subroutine AS_NGA_2008TR ( mag, dip, fType, width, rRup, rjb,
     1                     vs30, hwflag, lnSa, sigma1,
     2                     specT, period1, depthtop, iflag, vs30_class,
     3                     depthvs10, Rx )

      real mag, dip, fType, aspectratio, rRup, rjb, vs30, pgaRock,
     1       Rx, lnSa, sigma, tau, period1, sigma1, depthtop, width,
     2       depthvs10, lnSaTD, lnSa1, lnSa2, lnSaRock
      integer hwflag, iflag, vs30_class

c     VS30 class is to distinguish between the sigma if the VS30 is measured
c     vs the VS30 being estimated from surface geology.
c         Vs30_class = 1 for measured
c         Vs30_class = 0 for estimated

c     For now, convert ftype to an equivalent rake
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C      -1       Normal                   -120 < Rake < -60.0
C     1, 0.5    Reverse and Rev/Obl        30 < Rake < 150.0
C     0,-0.5    Strike-Slip and NMl/Obl        Otherwise
C
      if ( fType .eq. 1.0 ) then
        Frv = 1.0
        Fn = 0.0
      elseif ( fType .eq. 0.5 ) then
        Frv = 1.0
        Fn = 0.0
      elseif ( fType .eq. -1.0 ) then
        Frv = 0.0
        Fn = 1.0
      else
        Frv = 0.0
        Fn = 0.0
      endif

C HW factors......
c     For now, convert hwflag to an equivalent srcSiteA
c      if ( hwflag .eq. 1 ) then
c        srcSiteA = 90.
c      else
c        srcSiteA = 0.
c      endif

c     compute pga on rock
      period0 = 0.0
      pgaRock = 0.0
      vs30_rock = 1100.
      depthvs10rock = 0.006
      call AS_072007_modelTR ( mag, dip, rake, width, rRup, rjb,
     1                     vs30_rock, pgaRock, Rx, lnSa, sigma, tau,
     2                     period0, depthTop, Frv, Fn, iflag, vs30_class,
     3                     depthvs10rock, hwflag )

      pgaRock = exp(lnSa)

c     Compute the spectral period for the constant displacement model
c     (Eq. 21)
c      TD = 10**(-1.25+0.3*mag)
c      if (specT .ge. TD) then
c         Compute Sa at TD spectral period for Vs30=1,100m/sec
c          call AS_072007_model ( mag, dip, rake, width, rRup, rjb,
c     1                     vs30_rock, pgaRock, Rx, lnSaTD, sigmaX, tauX,
c     2                     TD, depthtop, Frv, Fn, iflag, vs30_class,
c     3                     depthvs10rock, hwflag )

c          lnSaRock = lnSaTD + alog((TD*TD)/(specT*specT))

c         Compute Sa at spectral period for Vs30
c          call AS_072007_model ( mag, dip, rake, width, rRup, rjb,
c     1                     vs30, pgaRock, Rx, lnSa1, sigma, tau,
c     2                     specT, depthtop, Frv, Fn, iflag, vs30_class,
c     3                     depthvs10, hwflag )
c         Compute Sa at spectral period for Vs30=1,100m/sec
c          call AS_072007_model ( mag, dip, rake, width, rRup, rjb,
c     1                     vs30_rock, pgaRock, Rx, lnSa2, sigmaX, tauX,
c     2                     specT, depthtop, Frv, Fn, iflag, vs30_class,
c     3                     depthvs10rock, hwflag )
C         Compute soil amplification (i.e., 'lnSa1-lnSa2') and add to Constant displcaement rock spectrum
c          lnSa = lnSaRock + (lnSa1-lnSa2)

c      else
C         For cases where specT < TD compute regular ground motions.
          call AS_072007_modelTR ( mag, dip, rake, width, rRup, rjb,
     1                     vs30, pgaRock, Rx, lnSa, sigma, tau,
     2                     specT, depthtop, Frv, Fn, iflag, vs30_class,
     3                     depthvs10, hwflag )
c      endif

c     compute Sa (given the PGA rock value)
      sigma1 = sqrt( sigma**2 + tau**2 )
      period1 = specT

c     Convert units spectral acceleration in gal
      lnSa = lnSa + 6.89
      return
      end
c ----------------------------------------------------------------------

      subroutine AS_072007_modelTR ( mag, dip, rake, width, rRup, rjb,
     1                     vs30, pgaRock, Rx, lnSa, sigma, tau,
     2                     specT, depthtop, Frv, Fn, iflag, vs30_class,
     3                     z10, hwflag )

      parameter (MAXPER=107)
      real a1(MAXPER), a2(MAXPER), a3(MAXPER), a4(MAXPER), a5(MAXPER),
     1     a8(MAXPER), c3_TA(MAXPER), a10(MAXPER), a11(MAXPER),
     1     a12(MAXPER), a13(MAXPER), a14(MAXPER), a15(MAXPER),
     1     c4(MAXPER), a16(MAXPER), a18(MAXPER),
     2     s1e(MAXPER), s2e(MAXPER), s1m(MAXPER), s2m(MAXPER), s3(MAXPER), s4(MAXPER)
      real period(MAXPER), b_soil(MAXPER), vLin(MAXPER), M1
      real sigma, tau,lnSa, pgaRock, vs30, rjb, rRup, aspectratio, rake,
     1     dip, mag, sigcorr(MAXPER), taucorr(MAXPER)
c      real sig1(MAXPER), sig2(MAXPER), tau1(MAXPER), tau2(MAXPER)
c      real tauCorr, sigCorr
      real taper1, taper2, taper3, taper4, taper5
      real a1T, a2T, a3T, a5T, a8T, c3_TAT
      real a10T, a11T, a12T, a13T, a14T, a15T, a18T
      real c4T, M1T, a4T, vHingeT
      real s1eT, s2eT, s1mT, s2mT, s3T, s4T, s1T, s2T
      real sigcorrT, taucorrT, vLinT, b_soilT, sum, Frv, Fn
      real damp_dpga, sigamp, width, testv1, soilampTR
      real sigmanot, sigmanotPGA, taunot, taunotPGA, sigmaB, sigmaBPGA
      integer count1, count2, iflag, vs30_class, hwflag
      real n, c, z10, c2, e2, a21, a22, test, zhat
      real  vHinge

      data period / 0.0, -1.0, 0.01, 0.02, 0.022, 0.025, 0.029,
     1              0.03, 0.032, 0.035, 0.036, 0.04, 0.042, 0.044,
     2              0.045, 0.046, 0.048, 0.05, 0.055, 0.06, 0.065,
     3              0.067, 0.07, 0.075, 0.08, 0.085, 0.09, 0.095, 0.1,
     4              0.11, 0.12, 0.13, 0.133, 0.14, 0.15, 0.16, 0.17,
     5              0.18, 0.19, 0.2, 0.22, 0.24, 0.25, 0.26, 0.28, 0.29,
     6              0.3, 0.32, 0.34, 0.35, 0.36, 0.38, 0.4, 0.42, 0.44,
     7              0.45, 0.46, 0.48, 0.5, 0.55, 0.6, 0.65, 0.667, 0.7,
     8              0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.1, 1.2, 1.3, 1.4,
     9              1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.2, 2.4, 2.5, 2.6, 2.8,
     1              3.0, 3.2, 3.4, 3.5, 3.6, 3.8, 4.0, 4.2, 4.4, 4.6, 4.8,
     1              5.0, 5.5, 6.0, 6.5, 7.0, 7.5, 8.0, 8.5, 9.0, 9.5, 10.0 /
      data Vlin / 865.1, 400.0, 865.1, 865.1, 865.1, 865.1, 898.6,
     1            907.8, 926.4, 953.6, 962.3, 994.5, 1008.9, 1022.0,
     2           1028.0, 1033.8, 1044.3, 1053.5, 1071.5, 1082.8, 1088.3,
     3           1089.1, 1089, 1085.7, 1079.2, 1070.1, 1059.0, 1046.3,
     4           1032.5, 1002.5, 970.9, 939.1, 929.7, 907.8, 877.6,
     5            848.7, 821.2, 795.3, 771.0, 748.2, 706.8, 670.6,
     6            654.3, 639.0, 611.4, 598.9, 587.1, 565.9, 547.1,
     7            538.6, 530.6, 516.0, 503.0, 491.5, 481.2, 476.5,
     8            472.1, 463.9, 456.6, 441.6, 430.3, 421.7, 419.3,
     9            415.2, 410.5, 407.0, 404.6, 402.9, 401.8, 400.0, 400.0,
     1            400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0,
     1            400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0,
     2            400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0,
     3            400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0,
     4            400.0, 400.0, 400.0, 400.0 /
      data b_soil / -1.186, -1.955, -1.186, -1.219, -1.232, -1.25,
     1              -1.269, -1.273, -1.281, -1.291, -1.295, -1.308,
     2              -1.315, -1.323, -1.326, -1.33, -1.338, -1.346,
     3              -1.367, -1.391, -1.416, -1.426, -1.443, -1.471,
     4              -1.5, -1.53, -1.561, -1.592, -1.624, -1.687, -1.751,
     5              -1.813, -1.831, -1.873, -1.931, -1.988, -2.041,
     6              -2.093, -2.141, -2.188, -2.272, -2.347, -2.381,
     7              -2.412, -2.469, -2.494, -2.518, -2.558, -2.592,
     8              -2.607, -2.62, -2.641, -2.657, -2.668, -2.674,
     9              -2.676, -2.676, -2.675, -2.669, -2.643, -2.599,
     1              -2.543, -2.521, -2.476, -2.401, -2.319, -2.233,
     1              -2.142, -2.049, -1.955, -1.762, -1.57, -1.382,
     2              -1.199, -1.025, -0.859, -0.703, -0.558, -0.423,
     3              -0.299, -0.086, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     4               0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     5               0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /

      data c4 / 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5,
     1          4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5,
     2          4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5,
     3          4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5,
     4          4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5,
     5          4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5,
     6          4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5,
     7          4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5,
     8          4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5,
     9          4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5 /


      data a1 / 0.8039, 5.7578, 0.8109, 0.8554, 0.8785, 0.9139, 0.9520, 0.9617,
     1          0.9747, 0.9953, 1.0031, 1.0370, 1.0556, 1.0754, 1.0860, 1.0950,
     2          1.1146, 1.1331, 1.1850, 1.2374, 1.2867, 1.3040, 1.3296, 1.3751,
     3          1.4158, 1.4538, 1.4877, 1.5278, 1.5628, 1.6179, 1.6603, 1.6889,
     4          1.6953, 1.7051, 1.7155, 1.7190, 1.7141, 1.7064, 1.6991, 1.6870,
     5          1.6716, 1.6550, 1.6463, 1.6374, 1.6193, 1.6101, 1.6008, 1.5845,
     6          1.5605, 1.5507, 1.5443, 1.5289, 1.5105, 1.4921, 1.4696, 1.4572,
     7          1.4449, 1.4207, 1.3972, 1.3406, 1.2866, 1.2349, 1.2178, 1.1851,
     8          1.1370, 1.0903, 1.0449, 1.0006, 0.9574, 0.9152, 0.8276, 0.7517,
     9          0.6653, 0.5850, 0.5099, 0.4394, 0.3727, 0.3094, 0.2492, 0.1917,
     1          0.0837, -0.0163, -0.0637, -0.1096, -0.1973, -0.2801, -0.3586,
     1         -0.4335, -0.4696, -0.5050, -0.5735, -0.6394, -0.7029, -0.7641,
     2         -0.8234, -0.8808, -0.9364, -1.0689, -1.1931, -1.3102, -1.4212,
     3         -1.5268, -1.6277, -1.7243, -1.8171, -1.9065, -1.9928 /

      data a2 / -0.9679, -0.9046, -0.9679, -0.9774, -0.9816, -0.9889, -0.9996, -1.0024,
     1          -1.0079, -1.0160, -1.0187, -1.0289, -1.0337, -1.0383, -1.0406, -1.0427,
     2          -1.0469, -1.0508, -1.0596, -1.0669, -1.0728, -1.0749, -1.0775, -1.0810,
     3          -1.0833, -1.0847, -1.0851, -1.0847, -1.0833, -1.0781, -1.0702, -1.0600,
     4          -1.0567, -1.0484, -1.0357, -1.0224, -1.0089, -0.9956, -0.9825, -0.9700,
     5          -0.9473, -0.9282, -0.9202, -0.9133, -0.9030, -0.8997, -0.8974, -0.8906,
     6          -0.8842, -0.8812, -0.8783, -0.8728, -0.8677, -0.8630, -0.8587, -0.8566,
     7          -0.8546, -0.8509, -0.8475, -0.8400, -0.8338, -0.8286, -0.8270, -0.8242,
     8          -0.8206, -0.8175, -0.8148, -0.8125, -0.8106, -0.8088, -0.8060, -0.8038,
     9          -0.8020, -0.8006, -0.7995, -0.7985, -0.7977, -0.7970, -0.7965, -0.7960,
     1          -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, -0.7960,
     1          -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, -0.7960,
     2          -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, -0.7960, -0.7960,
     3          -0.7960, -0.7960, -0.7960 /

      data a3 / 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265,
     1          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265,
     2          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265,
     3          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265,
     4          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265,
     5          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265,
     6          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265,
     7          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265,
     8          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265,
     9          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265,
     1          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265,
     1          0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265, 0.265 /

      data a4 / 0.470, 0.000, 0.470, 0.470, 0.470, 0.470, 0.470,
     1     0.470, 0.470, 0.470, 0.470, 0.470, 0.470, 0.470, 0.470,
     2     0.470, 0.470, 0.470, 0.470, 0.470, 0.470, 0.470, 0.470,
     3     0.470, 0.470, 0.470, 0.470, 0.470, 0.470, 0.470, 0.470,
     4     0.470, 0.470, 0.470, 0.470, 0.470, 0.470, 0.470, 0.468,
     5     0.466, 0.463, 0.460, 0.459, 0.458, 0.455, 0.454, 0.453,
     6     0.450, 0.448, 0.447, 0.446, 0.445, 0.443, 0.441, 0.440,
     7     0.439, 0.438, 0.437, 0.435, 0.432, 0.429, 0.426, 0.426,
     8     0.424, 0.422, 0.419, 0.417, 0.415, 0.414, 0.412, 0.407,
     9     0.403, 0.400, 0.396, 0.393, 0.390, 0.387, 0.385, 0.382,
     1     0.380, 0.371, 0.362, 0.358, 0.354, 0.347, 0.340, 0.333,
     1     0.327, 0.324, 0.322, 0.316, 0.311, 0.306, 0.302, 0.297,
     2     0.293, 0.289, 0.279, 0.271, 0.263, 0.255, 0.249, 0.242,
     3     0.236, 0.230, 0.225, 0.220 /

      data a5 / -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398,
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398,
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398,
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398,
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398,
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398,
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398,
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398,
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398,
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398,
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398,
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398,
     1     -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398, -0.398,
     1     -0.398, -0.398, -0.398, -0.398 /

      data a8 / -0.0372, -0.1200, -0.0372, -0.0372, -0.0372, -0.0372, -0.0372,
     1          -0.0372, -0.0359, -0.0341, -0.0336, -0.0315, -0.0305, -0.0296,
     2          -0.0292, -0.0287, -0.0279, -0.0271, -0.0252, -0.0235, -0.0219,
     3          -0.0213, -0.0204, -0.0191, -0.0178, -0.0166, -0.0155, -0.0161,
     4          -0.0166, -0.0177, -0.0187, -0.0196, -0.0205, -0.0226, -0.0254,
     5          -0.0281, -0.0305, -0.0329, -0.0363, -0.0396, -0.0457, -0.0513,
     6          -0.0539, -0.0564, -0.0612, -0.0634, -0.0656, -0.0690, -0.0722,
     7          -0.0737, -0.0752, -0.0780, -0.0807, -0.0833, -0.0857, -0.0869,
     8          -0.0881, -0.0903, -0.0924, -0.0975, -0.1020, -0.1062, -0.1076,
     9          -0.1101, -0.1137, -0.1171, -0.1203, -0.1233, -0.1262, -0.1289,
     1          -0.1346, -0.1399, -0.1447, -0.1492, -0.1534, -0.1573, -0.1610,
     1          -0.1645, -0.1677, -0.1708, -0.1766, -0.1819, -0.1844, -0.1867,
     2          -0.1912, -0.1954, -0.1993, -0.2030, -0.2047, -0.2064, -0.2097,
     3          -0.2128, -0.2158, -0.2186, -0.2213, -0.2239, -0.2263, -0.2321,
     4          -0.2374, -0.2422, -0.2467, -0.2509, -0.2548, -0.2585, -0.2619,
     5          -0.2652, -0.2683 /

      data c3_TA / -0.1806, 0.0000, -0.1806, -0.1818, -0.1760, -0.1682, -0.1591, -0.1570, -0.1523, -0.1457,
     1          -0.1437, -0.1360, -0.1325, -0.1292, -0.1276, -0.1260, -0.1229, -0.1200, -0.1139, -0.1083, -0.1031,
     2          -0.1012, -0.0983, -0.0939, -0.0930, -0.0922, -0.0914, -0.0907, -0.0900, -0.0966, -0.1026, -0.1081,
     3          -0.1097, -0.1132, -0.1180, -0.1293, -0.1399, -0.1498, -0.1593, -0.1682, -0.1921, -0.2139, -0.2242,
     4          -0.2308, -0.2433, -0.2493, -0.2550, -0.2629, -0.2702, -0.2738, -0.2772, -0.2838, -0.2900, -0.2944,
     5          -0.2985, -0.3006, -0.3025, -0.3063, -0.3100, -0.3152, -0.3199, -0.3242, -0.3256, -0.3283, -0.3320,
     6          -0.3309, -0.3298, -0.3288, -0.3279, -0.3270, -0.3167, -0.3072, -0.2985, -0.2905, -0.2830, -0.2689,
     7          -0.2556, -0.2431, -0.2312, -0.2200, -0.1965, -0.1750, -0.1650, -0.1553, -0.1370, -0.1200, -0.0953,
     8          -0.0721, -0.0611, -0.0503, -0.0296, -0.0100, -0.0078, -0.0057, -0.0037, -0.0018, 0.0000, 0.0000,
     9          0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000 /

      data a10 / 0.9445, 1.5390, 0.9445, 0.9834, 0.9988, 1.0200, 1.0424, 1.0471,
     1           1.0566, 1.0684, 1.0731, 1.0884, 1.0967, 1.1061, 1.1097, 1.1144,
     2           1.1238, 1.1333, 1.1581, 1.1864, 1.2159, 1.2277, 1.2477, 1.2808,
     3           1.3150, 1.3504, 1.3870, 1.4236, 1.4613, 1.5357, 1.6112, 1.6843,
     4           1.7030, 1.7466, 1.8071, 1.8670, 1.9225, 1.9773, 2.0277, 2.0773,
     5           2.1655, 2.2440, 2.2794, 2.3114, 2.3702, 2.3956, 2.4201, 2.4598,
     6           2.4930, 2.5074, 2.5195, 2.5380, 2.5510, 2.5584, 2.5601, 2.5599,
     7           2.5574, 2.5513, 2.5395, 2.4914, 2.4236, 2.3429, 2.3123, 2.2504,
     8           2.1493, 2.0407, 1.9282, 1.8104, 1.6908, 1.5705, 1.3254, 1.0829,
     9           0.8465, 0.6170, 0.3991, 0.1914, -0.0037, -0.1852, -0.3544, -0.6072,
     1          -0.8585, -0.9600, -0.9600, -0.9600, -0.9600, -0.9600, -0.9600, -0.9600,
     1          -0.9600, -0.9600, -0.9600, -0.9600, -0.9600, -0.9600, -0.9518, -0.9360,
     2          -0.9208, -0.8854, -0.8530, -0.8232, -0.7956, -0.7700, -0.7460, -0.7234,
     3          -0.7021, -0.6820, -0.6630 /

      data a11 / 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     2           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     3           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     4           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     5           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     6           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     7           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     8           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     9           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /

      data a12 / 0.0000, 0.0800, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
     1           0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
     2           0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
     3           0.0000, 0.0000, 0.0043, 0.0081, 0.0117, 0.0127, 0.0150, 0.0181, 0.0210,
     4           0.0237, 0.0262, 0.0287, 0.0309, 0.0352, 0.0391, 0.0409, 0.0427, 0.0460,
     5           0.0475, 0.0491, 0.0519, 0.0546, 0.0559, 0.0572, 0.0596, 0.0619, 0.0641,
     6           0.0662, 0.0672, 0.0681, 0.0700, 0.0719, 0.0761, 0.0800, 0.0800, 0.0800,
     7           0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800,
     8           0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800,
     9           0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800,
     1           0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800,
     1           0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0800 /
      data a13 / -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600,
     1           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600,
     2           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600,
     3           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600,
     4           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600,
     5           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600,
     6           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600,
     7           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600,
     8           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600,
     9           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600,
     1           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600,
     1           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600,
     2           -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600, -0.0600,
     3           -0.0600, -0.0600, -0.0600 /

      data a14 / 1.08, 0.7, 1.08, 1.08, 1.0925, 1.1092, 1.1287,
     1         1.1331, 1.1416, 1.1533, 1.157, 1.1708, 1.1772, 1.1833,
     1         1.1862, 1.1891, 1.1947, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2,
     1         1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.1886, 1.1854,
     1         1.1781, 1.1683, 1.1591, 1.1505, 1.1424, 1.1347, 1.1274,
     1         1.1138, 1.1015, 1.0956, 1.0901, 1.0795, 1.0745, 1.0697,
     1         1.0605, 1.0519, 1.0478, 1.0438, 1.0361, 1.0288, 1.0219,
     1         1.0153, 1.0121, 1.009, 1.0029, 0.9971, 0.9835, 0.9712,
     1         0.9598, 0.9561, 0.9493, 0.9395, 0.9303, 0.9217, 0.9135,
     1         0.9058, 0.8985, 0.885, 0.8726, 0.8612, 0.8507, 0.8409,
     1         0.8317, 0.8231, 0.815, 0.8073, 0.8, 0.7246, 0.6558,
     1         0.6235, 0.5925, 0.5339, 0.4793, 0.4283, 0.3804, 0.3574,
     1         0.3352, 0.2924, 0.2518, 0.2133, 0.1765, 0.1413, 0.1077,
     1         0.0754, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /

      data a15 / -0.3500, -0.3900, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500,
     1           -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500,
     2           -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500,
     3           -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500,
     4           -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500,
     5           -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500,
     6           -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500, -0.3500,
     7           -0.3500, -0.3500, -0.3500, -0.3500, -0.3432, -0.3368, -0.3337,
     8           -0.3306, -0.3247, -0.3191, -0.3059, -0.2938, -0.2827, -0.2791,
     9           -0.2725, -0.2629, -0.2539, -0.2455, -0.2376, -0.2301, -0.2230,
     1           -0.2098, -0.1978, -0.1867, -0.1764, -0.1668, -0.1579, -0.1495,
     1           -0.1416, -0.1341, -0.1270, -0.1138, -0.1017, -0.0961, -0.0906,
     2           -0.0803, -0.0708, -0.0618, -0.0534, -0.0494, -0.0455, -0.0380,
     3           -0.0309, -0.0242, -0.0177, -0.0116, -0.0057, 0.0000, 0.0000, 0.0000,
     4            0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000 /

      data a16 / 0.9000, 0.6300, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000,
     1           0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000,
     2           0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000,
     3           0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000,
     4           0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.9000,
     5           0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.8878, 0.8644, 0.8423, 0.8212,
     6           0.8010, 0.7913, 0.7818, 0.7634, 0.7458, 0.7045, 0.6669, 0.6323, 0.6211,
     7           0.6002, 0.5704, 0.5425, 0.5163, 0.4916, 0.4682, 0.4460, 0.4048, 0.3672,
     8           0.3325, 0.3005, 0.2707, 0.2427, 0.2165, 0.1918, 0.1684, 0.1463, 0.1050,
     9           0.0674, 0.0498, 0.0328, 0.0007, -0.0291, -0.0570, -0.0832, -0.0958, -0.1079,
     1          -0.1313, -0.1535, -0.1746, -0.1947, -0.2139, -0.2323, -0.2500, -0.2500, -0.2500,
     1          -0.2500, -0.2500, -0.2500, -0.2500, -0.2500, -0.2500, -0.2500, -0.2500 /

      data a18 / -0.0040, 0.0000, -0.0040, -0.0040, -0.0040, -0.0040, -0.0040, -0.0040, -0.0040,
     1           -0.0040, -0.0040, -0.0040, -0.0042, -0.0044, -0.0045, -0.0046, -0.0048, -0.0050,
     2           -0.0055, -0.0059, -0.0063, -0.0064, -0.0066, -0.0069, -0.0072, -0.0075, -0.0075,
     3           -0.0075, -0.0075, -0.0075, -0.0075, -0.0075, -0.0075, -0.0075, -0.0075, -0.0075,
     4           -0.0075, -0.0075, -0.0071, -0.0067, -0.0060, -0.0054, -0.0051, -0.0048, -0.0042,
     5           -0.0040, -0.0037, -0.0033, -0.0028, -0.0026, -0.0024, -0.0020, -0.0016, -0.0013,
     6           -0.0009, -0.0007, -0.0006, -0.0003, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
     7           0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
     8            0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
     9            0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
     1            0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
     1            0.0000, 0.0000, 0.0000, 0.0000 /

      data s1e / 0.590, 0.590, 0.590, 0.590, 0.593, 0.598, 0.604, 0.605, 0.607, 0.610, 0.611,
     1           0.615, 0.617, 0.619, 0.620, 0.620, 0.622, 0.623, 0.627, 0.630, 0.630, 0.630,
     2           0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630,
     3           0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630,
     4           0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630,
     5           0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630,
     6           0.630, 0.630, 0.630, 0.630, 0.626, 0.623, 0.620, 0.617, 0.615, 0.612, 0.610,
     7           0.608, 0.606, 0.604, 0.601, 0.597, 0.596, 0.594, 0.592, 0.589, 0.587, 0.584,
     8           0.583, 0.582, 0.580, 0.578, 0.576, 0.575, 0.573, 0.572, 0.570, 0.580, 0.588,
     9           0.596, 0.604, 0.611, 0.617, 0.624, 0.629, 0.635, 0.640 /

      data s2e / 0.470, 0.470, 0.470, 0.470, 0.472, 0.474, 0.477, 0.478, 0.479, 0.481, 0.481,
     1           0.483, 0.484, 0.485, 0.486, 0.486, 0.487, 0.488, 0.489, 0.491, 0.493, 0.493,
     2           0.494, 0.495, 0.497, 0.498, 0.499, 0.500, 0.501, 0.503, 0.504, 0.506, 0.506,
     3           0.507, 0.509, 0.510, 0.511, 0.512, 0.513, 0.514, 0.516, 0.518, 0.518, 0.519,
     4           0.521, 0.521, 0.522, 0.523, 0.524, 0.525, 0.525, 0.526, 0.527, 0.528, 0.529,
     5           0.530, 0.530, 0.531, 0.532, 0.534, 0.535, 0.537, 0.537, 0.538, 0.539, 0.541,
     6           0.542, 0.543, 0.544, 0.545, 0.547, 0.548, 0.550, 0.551, 0.552, 0.553, 0.555,
     7           0.556, 0.557, 0.558, 0.559, 0.561, 0.562, 0.562, 0.564, 0.565, 0.566, 0.567,
     8           0.568, 0.568, 0.569, 0.570, 0.574, 0.577, 0.581, 0.584, 0.587, 0.594, 0.601,
     9           0.607, 0.613, 0.618, 0.623, 0.628, 0.632, 0.636, 0.640 /

      data s3 / 0.470, 0.420, 0.420, 0.420, 0.430, 0.443, 0.459, 0.462, 0.469, 0.478, 0.481,
     1          0.492, 0.497, 0.502, 0.504, 0.506, 0.511, 0.515, 0.525, 0.534, 0.542, 0.545,
     2          0.550, 0.550, 0.550, 0.550, 0.550, 0.550, 0.550, 0.550, 0.550, 0.550, 0.550,
     3          0.550, 0.550, 0.543, 0.537, 0.531, 0.526, 0.520, 0.511, 0.502, 0.497, 0.493,
     4          0.486, 0.482, 0.479, 0.472, 0.466, 0.463, 0.460, 0.454, 0.449, 0.444, 0.439,
     5          0.437, 0.435, 0.430, 0.426, 0.416, 0.408, 0.399, 0.397, 0.392, 0.385, 0.378,
     6          0.372, 0.366, 0.360, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350,
     7          0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350,
     8          0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350,
     9          0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350 /

      data s4 / 0.300, 0.300, 0.300, 0.300, 0.301, 0.303, 0.305, 0.305, 0.306, 0.307, 0.308,
     1          0.309, 0.309, 0.310, 0.310, 0.311, 0.311, 0.312, 0.313, 0.314, 0.315, 0.315,
     2          0.316, 0.317, 0.318, 0.318, 0.319, 0.320, 0.321, 0.322, 0.323, 0.324, 0.324,
     3          0.325, 0.326, 0.327, 0.327, 0.328, 0.329, 0.329, 0.331, 0.332, 0.332, 0.333,
     4          0.334, 0.334, 0.335, 0.335, 0.336, 0.337, 0.337, 0.338, 0.338, 0.339, 0.340,
     5          0.340, 0.340, 0.341, 0.341, 0.342, 0.343, 0.344, 0.345, 0.345, 0.346, 0.347,
     6          0.348, 0.349, 0.349, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350,
     7          0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350,
     8          0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350,
     9          0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350, 0.350 /

      data s1m / 0.576, 0.576, 0.576, 0.576, 0.580, 0.585, 0.590, 0.591, 0.594, 0.597, 0.598,
     1           0.602, 0.604, 0.606, 0.607, 0.607, 0.609, 0.610, 0.614, 0.617, 0.617, 0.617,
     2           0.617, 0.617, 0.617, 0.617, 0.617, 0.617, 0.617, 0.617, 0.617, 0.617, 0.617,
     3           0.617, 0.616, 0.616, 0.615, 0.615, 0.615, 0.614, 0.613, 0.613, 0.612, 0.612,
     4           0.611, 0.611, 0.611, 0.610, 0.610, 0.610, 0.609, 0.609, 0.608, 0.608, 0.608,
     5           0.607, 0.607, 0.607, 0.606, 0.606, 0.605, 0.604, 0.604, 0.603, 0.602, 0.600,
     6           0.598, 0.597, 0.595, 0.594, 0.588, 0.582, 0.576, 0.571, 0.566, 0.561, 0.556,
     7           0.552, 0.548, 0.544, 0.540, 0.536, 0.534, 0.533, 0.530, 0.527, 0.524, 0.522,
     8           0.520, 0.519, 0.517, 0.515, 0.513, 0.511, 0.509, 0.509, 0.510, 0.525, 0.539,
     9           0.551, 0.562, 0.572, 0.581, 0.590, 0.598, 0.605, 0.612 /

      data s2m / 0.453, 0.453, 0.453, 0.453, 0.455, 0.457, 0.460, 0.461, 0.462, 0.464, 0.464,
     1           0.466, 0.467, 0.468, 0.469, 0.469, 0.470, 0.471, 0.473, 0.475, 0.476, 0.477,
     2           0.478, 0.479, 0.480, 0.481, 0.483, 0.484, 0.485, 0.487, 0.488, 0.490, 0.490,
     3           0.491, 0.491, 0.492, 0.493, 0.493, 0.494, 0.495, 0.496, 0.496, 0.497, 0.497,
     4           0.498, 0.498, 0.499, 0.499, 0.500, 0.500, 0.500, 0.501, 0.501, 0.502, 0.502,
     5           0.503, 0.503, 0.503, 0.504, 0.504, 0.505, 0.506, 0.506, 0.506, 0.506, 0.505,
     6           0.505, 0.504, 0.504, 0.503, 0.502, 0.501, 0.499, 0.498, 0.497, 0.496, 0.495,
     7           0.493, 0.492, 0.491, 0.493, 0.495, 0.496, 0.497, 0.498, 0.500, 0.501, 0.502,
     8           0.503, 0.503, 0.504, 0.505, 0.510, 0.514, 0.517, 0.523, 0.529, 0.541, 0.552,
     9           0.562, 0.571, 0.579, 0.587, 0.594, 0.601, 0.607, 0.612 /

      data sigcorr / 1.000, 0.74, 1.000, 1.000, 0.998, 0.996, 0.992,
     1               0.991, 0.989, 0.987, 0.986, 0.982, 0.98, 0.978, 0.978,
     2               0.977, 0.975, 0.973, 0.969, 0.965, 0.961, 0.96, 0.957,
     3               0.952, 0.946, 0.942, 0.937, 0.933, 0.929, 0.921, 0.914,
     4               0.908, 0.906, 0.902, 0.896, 0.891, 0.886, 0.882, 0.878,
     5               0.874, 0.866, 0.859, 0.856, 0.853, 0.847, 0.844, 0.841,
     6               0.836, 0.831, 0.829, 0.827, 0.823, 0.818, 0.815, 0.811,
     7               0.81, 0.804, 0.794, 0.783, 0.759, 0.737, 0.717, 0.71,
     8               0.698, 0.68, 0.664, 0.648, 0.634, 0.62, 0.607, 0.583,
     9               0.561, 0.541, 0.522, 0.504, 0.488, 0.472, 0.458, 0.444,
     1               0.431, 0.407, 0.385, 0.374, 0.364, 0.346, 0.328, 0.312,
     2               0.296, 0.289, 0.282, 0.268, 0.255, 0.243, 0.231, 0.22,
     3               0.209, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 /
      data taucorr / 1.000, 0.74, 1.000, 1.000, 0.998, 0.996, 0.992,
     1               0.991, 0.989, 0.987, 0.986, 0.982, 0.98, 0.978, 0.978,
     2               0.977, 0.975, 0.973, 0.969, 0.965, 0.961, 0.96, 0.957,
     3               0.952, 0.946, 0.942, 0.937, 0.933, 0.929, 0.921, 0.914,
     4               0.908, 0.906, 0.902, 0.896, 0.891, 0.886, 0.882, 0.878,
     5               0.874, 0.866, 0.859, 0.856, 0.853, 0.847, 0.844, 0.841,
     6               0.836, 0.831, 0.829, 0.827, 0.823, 0.818, 0.815, 0.811,
     7               0.81, 0.804, 0.794, 0.783, 0.759, 0.737, 0.717, 0.71,
     8               0.698, 0.68, 0.664, 0.648, 0.634, 0.62, 0.607, 0.583,
     9               0.561, 0.541, 0.522, 0.504, 0.488, 0.472, 0.458, 0.444,
     1               0.431, 0.407, 0.385, 0.374, 0.364, 0.346, 0.328, 0.312,
     2               0.296, 0.289, 0.282, 0.268, 0.255, 0.243, 0.231, 0.22,
     3               0.209, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2 /

C      data vHinge / 470.0, 400.0, 470.0, 470.0, 470.0, 470.0, 470.0,
C    1            470.0, 470.0, 470.0, 470.0, 470.0, 470.0, 470.0,
C     2           470.0, 470.0, 470.0, 470.0, 470.0, 470.0, 470.0,
C     3           470.0, 470.0, 470.0, 470.0, 470.0, 470.0, 470.0,
C     4           470.0, 470.0, 470.0, 470.0, 470.0, 470.0, 470.0,
C     5            470.0, 470.0, 470.0, 470.0, 470.0, 470.0, 470.0,
C     6            470.0, 470.0, 470.0, 470.0, 470.0, 465.1, 460.4,
C     7            458.2, 456.1, 451.9, 448.0, 444.3, 440.7, 439.0,
C     8            437.3, 434.1, 431.0, 423.7, 417.0, 410.9, 409.0,
C     9            405.3, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0,
C     1            400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0,
C     1            400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0,
C     2            400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0,
C     3            400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0,
C     4            400.0, 400.0, 400.0, 400.0 /

      n = 1.18
      c = 1.88
      sigamp = 0.30
      vHinge = 450

C Find the requested spectral period and corresponding coefficients
      nPer = 105

C First check for the PGA, PGV, PGD cases
      if (specT .le. 0.0) then
        if ( specT .eq. 0.0 ) i1=1
        if ( specT .eq. -1. ) i1=2
         period1 = period(i1)
         a1T = a1(i1)
         a2T = a2(i1)
         a3T = a3(i1)
         a4T = a4(i1)
         a5T = a5(i1)
         a8T = a8(i1)
         c3_TAT = c3_TA(i1)
         a10T = a10(i1)
         a11T = a11(i1)
         a12T = a12(i1)
         a13T = a13(i1)
         a14T = a14(i1)
         a15T = a15(i1)
         a16T = a16(i1)
         a18T = a18(i1)
         c4T = c4(i1)
         b_soilT = b_soil(i1)
         vLinT   = vLin(i1)
c         vHingeT   = vHinge(i1)
         if (vs30_class .eq. 0) then
            s1T = s1e(i1)
            s2T = s2e(i1)
         elseif (vs30_class .eq. 1) then
            s1T = s1m(i1)
            s2T = s2m(i1)
         endif
         s3T = s3(i1)
         s4T = s4(i1)
         taucorrT = taucorr(i1)
         sigcorrT = sigcorr(i1)
         goto 1011
      endif

C   For other periods, loop over the spectral period range of the attenuation relationship.
      do i=3,nper-1+2
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Abrahamson and Silva (NGA-2008-TR) Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),a1(count1),a1(count2),
     +                   specT,a1T,iflag)
            call interp (period(count1),period(count2),a2(count1),a2(count2),
     +                   specT,a2T,iflag)
            call interp (period(count1),period(count2),a3(count1),a3(count2),
     +                   specT,a3T,iflag)
            call interp (period(count1),period(count2),a4(count1),a4(count2),
     +                   specT,a4T,iflag)
            call interp (period(count1),period(count2),a5(count1),a5(count2),
     +                   specT,a5T,iflag)
            call interp (period(count1),period(count2),a8(count1),a8(count2),
     +                   specT,a8T,iflag)
            call interp (period(count1),period(count2),c3_TA(count1),c3_TA(count2),
     +                   specT,c3_TAT,iflag)
            call interp (period(count1),period(count2),a10(count1),a10(count2),
     +                   specT,a10T,iflag)
            call interp (period(count1),period(count2),a11(count1),a11(count2),
     +                   specT,a11T,iflag)
            call interp (period(count1),period(count2),a12(count1),a12(count2),
     +                   specT,a12T,iflag)
            call interp (period(count1),period(count2),a13(count1),a13(count2),
     +                   specT,a13T,iflag)
            call interp (period(count1),period(count2),a14(count1),a14(count2),
     +                   specT,a14T,iflag)
            call interp (period(count1),period(count2),a15(count1),a15(count2),
     +                   specT,a15T,iflag)
            call interp (period(count1),period(count2),a16(count1),a16(count2),
     +                   specT,a16T,iflag)
            call interp (period(count1),period(count2),a18(count1),a18(count2),
     +                   specT,a18T,iflag)
            call interp (period(count1),period(count2),c4(count1),c4(count2),
     +                   specT,c4T,iflag)
            call interp (period(count1),period(count2),b_soil(count1),b_soil(count2),
     +                   specT,b_soilT,iflag)
            call interp (period(count1),period(count2),vLin(count1),vLin(count2),
     +                   specT,vLinT,iflag)
c            call interp (period(count1),period(count2),vHinge(count1),vHinge(count2),
c     +                   specT,vHingeT,iflag)

            if (vs30_class .eq. 0) then
               call interp (period(count1),period(count2),s1e(count1),s1e(count2),
     +                   specT,s1T,iflag)
               call interp (period(count1),period(count2),s2e(count1),s2e(count2),
     +                   specT,s2T,iflag)
            elseif (vs30_class .eq. 1) then
               call interp (period(count1),period(count2),s1m(count1),s1m(count2),
     +                   specT,s1T,iflag)
               call interp (period(count1),period(count2),s2m(count1),s2m(count2),
     +                   specT,s2T,iflag)
            endif
            call interp (period(count1),period(count2),s3(count1),s3(count2),
     +                   specT,s3T,iflag)
            call interp (period(count1),period(count2),s4(count1),s4(count2),
     +                   specT,s4T,iflag)
            call interp (period(count1),period(count2),sigcorr(count1),sigcorr(count2),
     +                   specT,sigcorrT,iflag)
            call interp (period(count1),period(count2),taucorr(count1),taucorr(count2),
     +                   specT,taucorrT,iflag)

 1011 period1 = specT

c 	write (*,*) specT, a4T

c     Set distance (Eq. 3)
      R = sqrt(rRup**2 + c4T**2)

C     Set the 5 taper models (Eq. 8-12)
C     Taper 1 (Eq. 8)
      if ( rjb .ge. 30. ) then
         taper1 = 0.
      else
         taper1 = (30. - rjb) / 30.
      endif

c     Taper 2 (Eq. 9)
      if ( abs(dip) .eq. 90.0 .or. Rx .gt. width*cos(abs(dip)*3.14159/180.0) ) then
         taper2 = 1.
       else
         taper2 = 0.5 + Rx/(2.0*width*cos(abs(dip)*3.14159/180.0))
       endif

c     Set Taper 3 (Eq. 10)
      if (Rx .ge. DepthTop) then
         taper3 = 1.0
      else
         taper3 = Rx/depthTop
      endif

c     Set Taper 4 (Eq. 11)
      if ( mag .ge. 7. ) then
        taper4 = 1.0
      elseif ( mag .gt. 6.0) then
        taper4 = (mag-6.0)
      else
        taper4 = 0.0
      endif

c     Set Taper 5 (Eq. 12)
c      if ( abs(dip) .lt. 70. ) then
c        taper5 = 1.
c      else
c        taper5 = 1. - (abs(dip)-70.)/20.
c      endif
C     Modification of Taper5 model from N. Abrahamson (per com. 6/2010)
      if ( abs(dip) .lt. 30. ) then
        taper5 = 1.
      else
        taper5 = 1. - (abs(dip)-30.)/60.
      endif

C     Base Model (Eq. 2)
      c1 = 6.75
       if ( mag .le. c1 ) then
        sum = a1T + a4T*(Mag-c1) + a8T*(8.5-Mag)**2 + (a2T + a3T*(Mag-c1))*alog(R)
       else
        sum = a1T + a5T*(Mag-c1) + a8T*(8.5-Mag)**2 + (a2T + a3T*(Mag-c1))*alog(R)
       endif

c     style of faulting
      sum = sum + a12T*Frv + a13T*Fn

c     Site response
c     Set Velocity for break in slope (Eq. 6)
      if ( specT .ge. 2.0) then
	    v1 = 700.
      elseif ( specT .gt. 1.00 ) then
	    v1 = exp(6.76-0.297*alog(specT))
      elseif ( specT .gt. 0.50 ) then
	    v1 = exp(8.0-0.795*alog(specT/0.21))
      elseif (specT .eq. -1.0) then
	    v1 = 862.0
      elseif (specT .eq. -2.0) then
	    v1 = 700.0
      else
            v1 = 1500.
      endif

C     Set the Vs30* (Eq. 5)
      if ( vs30 .lt. v1 ) then
	    vs = vs30
      else
	    vs = v1
      endif

c     Compute site amplification (Eq. 4)
      if (vs30 .lt. vLinT) then
          soilamp = a10T*alog(vs/vLinT) - 1.0*b_soilT*alog(c+pgaRock)
     1              + b_soilT*alog(pgaRock+c*((vs/vLinT)**(n)) )
      else
     	  soilamp = (a10T + b_soilT*n) * alog(vs/vLinT)
      endif
      sum = sum + soilamp

c     Add Turkey site amplification correction

c      if (vs30 .lt. vHingeT) then
c          soilampTR = 0
c      else
     	  soilampTR = (c3_TAT) * alog(vs/vHinge)
c      endif
      sum = sum + soilampTR

C     Soil Depth Model
C     (Eq. 17)
      if (vs30 .lt. 180) then
         zhat = exp(6.745)
      elseif (vs30 .le. 500.0) then
         zhat = exp(6.745-1.35*alog(vs30/180.0) )
      else
         zhat = exp(5.394-4.48*alog(vs30/500.0) )
      endif

C     (Eq. 19)
      if (vs30 .gt. 1000 .or. specT .lt. 0.35) then
         e2 = 0.0
      elseif (specT .ge. 0.35 .and. specT .le. 2.0) then
         e2 = -0.25*alog(vs30/1000)*alog(specT/0.35)
      else
         e2 = -0.25*alog(vs30/1000)*alog(2.00/0.35)
      endif

C     (Eq. 20)
      if (specT .ge. 2.0) then
         a22 = 0.0625*(specT-2.00)
      else
         a22 = 0.0
      endif

C     Test Value for Eq. 18
      c2 = 50.0
      if (v1 .lt. 1000.0) then
         testv1 = v1
      else
         testv1 = 1000.0
      endif

      test = (a10T+b_soilT*n)*alog(vs/(testv1)) +
     1        e2*alog((z10*1000.0+c2)/(zhat+c2))

C     (Eq. 18)
      if (vs30 .ge. 1000.0) then
         a21 = 0.0
      elseif (test .lt. 0.0) then
         a21 = -1.0*(a10T+b_soilT*n)*alog(vs/testv1) /
     1           alog((z10*1000.0+c2)/(zhat+c2))
      else
         a21 = e2
      endif

C     (Eq. 16)
      if (z10*1000.0 .ge. 200) then
         sum = sum + a21*alog((z10*1000.0+c2)/(zhat+c2)) +
     1               a22*alog(z10*1000.0/200.0)
      else
         sum = sum+ a21*alog((z10*1000.0+c2)/(zhat+c2))
      endif

c     Hanging wall Model (Eq. 7)
      if ( HWFlag .eq. 1 ) then
        sum = sum + a14T * taper1 * taper2 * taper3 * taper4 * taper5
      endif

c     Depth to top of Rupture Model
C     (Eq. 13)
      if (depthTop .le. 10.) then
            sum = sum +a16T*depthtop/10.0
         else
            sum = sum + a16T
      endif

C     Large Distance Model
C     (Eq. 15)
      if (mag .lt. 5.5) then
         T6 = 1.0
      elseif (mag .le. 6.5) then
         T6 = 0.5*(6.5 - mag) + 0.5
      else
         T6 = 0.5
      endif
C     (Eq. 14)
      if (Rrup .lt. 100.0) then
         sum = sum
      else
         sum = sum + a18T*(Rrup - 100.0)*T6
      endif

C     Set the Sigma Values
c     Compute parital derivative of alog(soil amp) w.r.t. alog(rock PGA)
c     (Eq. 26)
      if ( vs30 .ge. vLinT) then
        dAmp_dPGA = 0.
      else
        dAmp_dPGA = b_soilT*pgaRock * ( -1. / (pgaRock+c)
     1              + 1./ (pgaRock + c*(vs30/vLinT)**(n)) )
      endif

c     (Eq. 27)
      if (mag .lt. 5.0) then
         sigmanot = s1T
         if (vs30_class .eq. 0) then
            sigmanotPGA = s1e(1)
         else
            sigmanotPGA = s1m(1)
         endif
      elseif (mag .le. 7.0) then
         sigmanot = s1T + ((s2T-s1T)/2.0)*(mag-5.0)
         if (vs30_class .eq. 0) then
            sigmanotPGA = s1e(1) + ((s2e(1)-s1e(1))/2.0)*(mag-5.0)
         else
            sigmanotPGA = s1m(1) + ((s2m(1)-s1m(1))/2.0)*(mag-5.0)
         endif
      else
         sigmanot = s2T
         if (vs30_class .eq. 0) then
            sigmanotPGA = s2e(1)
         else
            sigmanotPGA = s2m(1)
         endif
      endif

c     (Eq. 28)
      if (mag .lt. 5.0) then
         taunot = s3T
         taunotPGA = s3(1)
      elseif (mag .le. 7.0) then
         taunot = s3T + ((s4T-s3T)/2.0)*(mag-5.0)
         taunotPGA = s3(1) + ((s4(1)-s3(1))/2.0)*(mag-5.0)
      else
         taunot = s4T
         taunotPGA = s4(1)
      endif

C     (Eq. 23)
      sigmaB = sqrt(sigmanot*sigmanot - sigamp*sigamp)
      sigmaBPGA = sqrt(sigmanotPGA*sigmanotPGA - sigamp*sigamp)

C     (Eq. 24)
      sigma = sqrt( sigmaB**2 + sigAmp**2 + (dAmp_dPGA * sigmaBPGA)**2
     1        + 2. * dAmp_dPGA * sigmaBPGA * sigmaB * sigCorrT )

C     (Eq. 25)
      tau = sqrt( taunot**2 + (dAmp_dPGA * taunotPGA)**2
     1        + 2. * dAmp_dPGA * taunotPGA * taunot * tauCorrT )

c     Set total to return
      lnSa = sum

      return
      end

c ---------------------------------------------------------------------
C ** Chiou and Youngs (NGA-2008 Model) Horizontal **
c ---------------------------------------------------------------------
      Subroutine CY_NGA_2008TR ( m, Rrup, Rbjf, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, Delta, DTor, Ftype, depthvs10, vs30_class,
     3                     hwflag, Rx )

      parameter (MAXPER=107)
      REAL Period(MAXPER), C1(MAXPER), C1a(MAXPER), C1b(MAXPER)
      REAL cn(MAXPER), cm(MAXPER), c5(MAXPER), c6(MAXPER)
      REAL c7(MAXPER), c9(MAXPER), gamma1(MAXPER), gamma2(MAXPER)
      REAL c1_TA(MAXPER), c2_TA(MAXPER), c3_TA(MAXPER)
      REAL phi1(MAXPER), phi2(MAXPER), phi3(MAXPER), phi4(MAXPER)
      REAL phi5(MAXPER), phi6(MAXPER), phi7(MAXPER), phi8(MAXPER)
      REAL tau1(MAXPER), tau2(MAXPER), sigma1(MAXPER), sigma2(MAXPER)
      REAL sigma3(MAXPER), sigma4(MAXPER), c9a(MAXPER)

      REAL c1T, c1aT, c1bT, cnT, cmT, c5T, c6T, c7T, c9T, c9aT
      REAL c1_TAT, c3_TAT, c2_TAT, d, vHinge
      REAL gamma1T, gamma2T, phi1T, phi2T, phi3T, phi4T, sigma3T, sigma4T
      REAL phi5T, phi6T, phi7T, phi8T, tau1T, tau2T, sigma1T, sigma2T
      REAL c2, c3, c4, c4a, cRB, cHM, gm, pi, d2r, gamma
      real cc, cosdelta, r1, r2, r3, r4, hw, psa_ref, psa, a, b, c
      integer iflag, count1, count2, hwflag, vs30_class
      REAL M, RRUP, RBJF, DTOR, Delta, specT, sigma, Ftype, Rx
      REAL period2, lnY, F_RV, F_NM, depthvs10, sigma_M, tau, NL, rkdepth

      data period / 0.0, -1.0, 0.01, 0.02, 0.022, 0.025, 0.029, 0.03, 0.032, 0.035, 0.036, 0.04,
     1              0.042, 0.044, 0.045, 0.046, 0.048, 0.05, 0.055, 0.06, 0.065, 0.067,
     1              0.07, 0.075, 0.08, 0.085, 0.09, 0.095, 0.1, 0.11, 0.12, 0.13, 0.133,
     1              0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.2, 0.22, 0.24, 0.25, 0.26,
     1              0.28, 0.29, 0.3, 0.32, 0.34, 0.35, 0.36, 0.38, 0.4, 0.42, 0.44,
     1              0.45, 0.46, 0.48, 0.5, 0.55, 0.6, 0.65, 0.667, 0.7, 0.75, 0.8, 0.85,
     1              0.9, 0.95, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.2,
     1              2.4, 2.5, 2.6, 2.8, 3.0, 3.2, 3.4, 3.5, 3.6, 3.8, 4.0, 4.2, 4.4, 4.6,
     1              4.8, 5.0, 5.5, 6.0, 6.5, 7.0, 7.5, 8.0, 8.5, 9.0, 9.5, 10.0 /
      data c1    / -1.2687, 2.2884, -1.268694, -1.251478, -1.238087, -1.216428, -1.18418,
     1   -1.174374, -1.154467, -1.123314, -1.111874, -1.067114,
     1   -1.043071, -1.018824, -1.00656, -0.994327, -0.970216,
     1   -0.946391, -0.889485, -0.836096, -0.787293, -0.769389,
     1   -0.743954, -0.705072, -0.670827, -0.640929, -0.6151,
     1   -0.593104, -0.574699, -0.545283, -0.527572, -0.519988,
     1   -0.520317, -0.522696, -0.530869, -0.544692, -0.562955,
     1   -0.584664, -0.608982, -0.635236, -0.689254, -0.746535,
     1   -0.776564, -0.806831, -0.866612, -0.897204, -0.92776,
     1   -0.987694, -1.046911, -1.076381, -1.10551, -1.162283,
     1   -1.217597, -1.271357, -1.323477, -1.348959, -1.373988,
     1   -1.422616, -1.469453, -1.578991, -1.678576, -1.769127,
     1   -1.797932, -1.8516, -1.927839, -1.998837, -2.06549,
     1   -2.128468, -2.188278, -2.245326, -2.352111, -2.451947,
     1   -2.547437, -2.640124, -2.730652, -2.818867, -2.904397,
     1   -2.986847, -3.065866, -3.141253, -3.281536, -3.409571,
     1   -3.469751, -3.527743, -3.637785, -3.741264, -3.838964,
     1   -3.931396, -3.975878, -4.019205, -4.102464, -4.181358,
     1   -4.256034, -4.326756, -4.39387, -4.457747, -4.518726,
     1   -4.660582, -4.789382, -4.907897, -5.018331, -5.12243,
     1   -5.221536, -5.316573, -5.40817, -5.496751, -5.587222 /

      data c1a   / 0.1, 0.1094, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
     1   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
     1   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
     1   0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
     1   0.1, 0.1, 0.0999, 0.0999, 0.0999, 0.0999, 0.0999,
     1   0.0998, 0.0998, 0.0998, 0.0997, 0.0996, 0.0995,
     1   0.0995, 0.0994, 0.0993, 0.0991, 0.0986, 0.0978,
     1   0.0968, 0.0963, 0.0954, 0.0936, 0.0914, 0.0887,
     1   0.0853, 0.0813, 0.0766, 0.0651, 0.0512, 0.0355,
     1   0.0188, 0.0022, -0.0135, -0.0275, -0.0399, -0.0504,
     1   -0.0591, -0.0722, -0.0808, -0.084, -0.0866, -0.0905,
     1   -0.0931, -0.0949, -0.0962, -0.0967, -0.0971, -0.0978,
     1   -0.0982, -0.0986, -0.0989, -0.0991, -0.0993, -0.0994,
     1   -0.0996, -0.0998, -0.0998, -0.0999, -0.0999, -0.0999,
     1   -0.1, -0.1, -0.1, -0.1 /

      data c1b   / -0.2550, -0.0626, -0.255, -0.255, -0.255, -0.255, -0.255, -0.255,
     1   -0.255, -0.255, -0.255, -0.255, -0.255, -0.255,
     1   -0.255, -0.255, -0.255, -0.255, -0.255, -0.255,
     1   -0.2547, -0.254, -0.254, -0.254, -0.254, -0.254,
     1   -0.254, -0.253, -0.253, -0.2529, -0.252, -0.251,
     1   -0.251, -0.2504, -0.25, -0.249, -0.248, -0.247,
     1   -0.246, -0.2449, -0.2428, -0.24, -0.2382, -0.237,
     1   -0.2343, -0.2328, -0.2313, -0.2275, -0.2247, -0.2226,
     1   -0.2214, -0.218, -0.2146, -0.2107, -0.2073, -0.2054,
     1   -0.2037, -0.2008, -0.1972, -0.1889, -0.1814, -0.1744,
     1   -0.1722, -0.168, -0.162, -0.1564, -0.1511, -0.1472,
     1   -0.1432, -0.14, -0.1337, -0.1282, -0.1246, -0.1214,
     1   -0.1184, -0.1166, -0.114, -0.1125, -0.1111, -0.11,
     1   -0.108, -0.107, -0.106, -0.106, -0.105, -0.104, -0.104,
     1   -0.103, -0.103, -0.103, -0.102, -0.102, -0.102, -0.102,
     1   -0.102, -0.101, -0.101, -0.101, -0.101, -0.101, -0.101,
     1   -0.101, -0.1, -0.1, -0.1, -0.1, -0.1 /

      data cn    / 2.996, 1.648, 2.996, 3.2924, 3.3516, 3.4293, 3.5012, 3.5137,
     1   3.5331, 3.5512, 3.5549, 3.563, 3.5627, 3.5607,
     1   3.5594, 3.5574, 3.5526, 3.5473, 3.5308, 3.5129,
     1   3.493, 3.4844, 3.4714, 3.448, 3.4232, 3.3966,
     1   3.3689, 3.3407, 3.312, 3.2549, 3.1992, 3.1447,
     1   3.1288, 3.0932, 3.0436, 2.997, 2.9522, 2.91,
     1   2.8701, 2.8312, 2.7596, 2.6916, 2.6579, 2.6256,
     1   2.5637, 2.5334, 2.5048, 2.4487, 2.397, 2.3719,
     1   2.348, 2.3034, 2.2611, 2.2218, 2.1848, 2.1672,
     1   2.15, 2.1178, 2.0868, 2.0174, 1.957, 1.9036,
     1   1.8868, 1.8554, 1.8119, 1.7727, 1.7368, 1.7039,
     1   1.6747, 1.648, 1.6046, 1.5717, 1.5462, 1.5263,
     1   1.511, 1.4984, 1.4889, 1.4814, 1.4744, 1.4698,
     1   1.4625, 1.458, 1.4562, 1.456, 1.455, 1.4557, 1.4565,
     1   1.4581, 1.4594, 1.4606, 1.463, 1.4652, 1.4676,
     1   1.4703, 1.4733, 1.4752, 1.4779, 1.4831, 1.4878,
     1   1.4923, 1.4955, 1.4975, 1.499, 1.5, 1.501, 1.501, 1.502 /

      data cM    / 4.1840, 4.2979, 4.184, 4.1879, 4.1828, 4.1734, 4.1593, 4.1556,
     1   4.1485, 4.1382, 4.1351, 4.1226, 4.1174, 4.1123, 4.1104,
     1   4.1084, 4.1038, 4.1011, 4.094, 4.0892, 4.0867, 4.086,
     1   4.086, 4.086, 4.0873, 4.0899, 4.0938, 4.0985, 4.103,
     1   4.1144, 4.1277, 4.1416, 4.1459, 4.1565, 4.1717, 4.1871,
     1   4.2023, 4.2172, 4.2323, 4.2476, 4.2759, 4.3042, 4.3184,
     1   4.332, 4.3584, 4.3712, 4.3844, 4.4086, 4.4323, 4.4441,
     1   4.4557, 4.4768, 4.4979, 4.5172, 4.5361, 4.5452, 4.5545,
     1   4.5712, 4.5881, 4.6273, 4.6632, 4.6959, 4.7071, 4.7276,
     1   4.7571, 4.7851, 4.8114, 4.8362, 4.8597, 4.882, 4.9245,
     1   4.9641, 5.0013, 5.0367, 5.0697, 5.1019, 5.1325, 5.1623,
     1   5.1905, 5.2173, 5.2691, 5.3173, 5.3393, 5.361, 5.4013,
     1   5.4385, 5.4737, 5.5069, 5.5229, 5.5382, 5.5687, 5.5977,
     1   5.6252, 5.6518, 5.6776, 5.7027, 5.7276, 5.7855, 5.8404,
     1   5.8924, 5.9422, 5.9891, 6.0339, 6.077, 6.1172, 6.1561, 6.193 /

      data c5    / 6.16, 5.17, 6.16, 6.158, 6.158, 6.157, 6.1558, 6.155, 6.1545,
     1   6.153, 6.153, 6.1508, 6.1497, 6.1487, 6.1477, 6.147,
     1   6.1459, 6.1441, 6.1409, 6.1362, 6.1314, 6.1294, 6.126,
     1   6.12, 6.1144, 6.1072, 6.1007, 6.0929, 6.085, 6.0683,
     1   6.0494, 6.0296, 6.0237, 6.0087, 5.9871, 5.9647, 5.9416,
     1   5.9177, 5.8942, 5.8699, 5.8231, 5.7767, 5.7547, 5.7335,
     1   5.6917, 5.6719, 5.6527, 5.6163, 5.5832, 5.5681, 5.5528,
     1   5.5252, 5.4997, 5.4764, 5.4555, 5.4458, 5.4362, 5.4189,
     1   5.4029, 5.3697, 5.3431, 5.3213, 5.3149, 5.3045, 5.29,
     1   5.2788, 5.2692, 5.2607, 5.2537, 5.248, 5.2387, 5.2321,
     1   5.2266, 5.2224, 5.2194, 5.2166, 5.214, 5.2125, 5.2111,
     1   5.2099, 5.208, 5.206, 5.206, 5.205, 5.2043, 5.204, 5.203,
     1   5.203, 5.203, 5.2024, 5.202, 5.202, 5.202, 5.2017, 5.201,
     1   5.201, 5.201, 5.201, 5.201, 5.201, 5.201, 5.2, 5.2, 5.2,
     1   5.2, 5.2, 5.2 /

      data c6    / 0.4893, 0.4407, 0.4893, 0.4892, 0.4892, 0.4891, 0.4891, 0.489, 0.489,
     1   0.4889, 0.4889, 0.4888, 0.4887, 0.4887, 0.4886, 0.4886, 0.4885,
     1   0.4884, 0.4883, 0.488, 0.4878, 0.4876, 0.4875, 0.4872, 0.4869,
     1   0.4865, 0.4862, 0.4858, 0.4854, 0.4846, 0.4837, 0.4828, 0.4825,
     1   0.4818, 0.4808, 0.4797, 0.4787, 0.4776, 0.4765, 0.4755, 0.4735,
     1   0.4715, 0.4706, 0.4698, 0.468, 0.4673, 0.4665, 0.4651, 0.4638,
     1   0.4632, 0.4626, 0.4616, 0.4607, 0.4598, 0.4591, 0.4587, 0.4583,
     1   0.4578, 0.4571, 0.456, 0.455, 0.4542, 0.454, 0.4536, 0.4531,
     1   0.4528, 0.4524, 0.4522, 0.4519, 0.4517, 0.4514, 0.4511, 0.451,
     1   0.4508, 0.4507, 0.4506, 0.4505, 0.4504, 0.4504, 0.4504, 0.4503,
     1   0.4502, 0.4502, 0.4502, 0.4502, 0.4501, 0.4501, 0.4501, 0.4501,
     1   0.4501, 0.4501, 0.4501, 0.4501, 0.4501, 0.4501, 0.45, 0.45,
     1   0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.45 /

      data c7    / 0.0512, 0.0207, 0.0512, 0.0512, 0.0512, 0.0512, 0.0511, 0.0511, 0.0511, 0.051,
     1   0.0509, 0.0508, 0.0507, 0.0506, 0.0506, 0.0505, 0.0505, 0.0504,
     1   0.0502, 0.05, 0.0499, 0.0498, 0.0497, 0.0495, 0.0494, 0.0492,
     1   0.0491, 0.049, 0.0489, 0.0486, 0.0484, 0.0482, 0.0482, 0.0481,
     1   0.0479, 0.0477, 0.0476, 0.0474, 0.0473, 0.0471, 0.0468, 0.0466,
     1   0.0464, 0.0463, 0.046, 0.0459, 0.0458, 0.0455, 0.0453, 0.0452,
     1   0.045, 0.0448, 0.0445, 0.0442, 0.0439, 0.0437, 0.0436, 0.0432,
     1   0.0429, 0.0421, 0.0412, 0.0404, 0.0401, 0.0395, 0.0387, 0.0379,
     1   0.0372, 0.0364, 0.0357, 0.035, 0.0336, 0.0322, 0.0308, 0.0294,
     1   0.028, 0.0266, 0.0253, 0.024, 0.0227, 0.0213, 0.0188, 0.0165,
     1   0.0154, 0.0144, 0.0124, 0.0106, 0.009, 0.0076, 0.0069, 0.0063,
     1   0.0052, 0.0041, 0.0033, 0.0025, 0.0019, 0.0014, 0.001, 0.0002,
     1   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /

      data c9    / 0.79, 0.3079, 0.79, 0.8129, 0.8188, 0.828, 0.8407, 0.8439, 0.8502, 0.8594,
     1   0.8624, 0.874, 0.8795, 0.8848, 0.8874, 0.8899, 0.8949, 0.8996,
     1   0.9105, 0.9204, 0.9292, 0.9325, 0.9371, 0.9442, 0.9505, 0.9559,
     1   0.9606, 0.9645, 0.9677, 0.9718, 0.9733, 0.9725, 0.9719, 0.9699,
     1   0.966, 0.9609, 0.9549, 0.9482, 0.941, 0.9334, 0.9179, 0.9023,
     1   0.8946, 0.8871, 0.8726, 0.8657, 0.859, 0.8462, 0.8342, 0.8284,
     1   0.8228, 0.8121, 0.8019, 0.7922, 0.783, 0.7786, 0.7743, 0.7659,
     1   0.7578, 0.7391, 0.7221, 0.7065, 0.7015, 0.6922, 0.6788, 0.6662,
     1   0.654, 0.6423, 0.6308, 0.6196, 0.5975, 0.5756, 0.5538, 0.532,
     1   0.5101, 0.4877, 0.4649, 0.4412, 0.4169, 0.3917, 0.339, 0.2833,
     1   0.2546, 0.2262, 0.1722, 0.1244, 0.0846, 0.0538, 0.042, 0.0322,
     1   0.0177, 0.0086, 0.0031, 0.0004, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /

      data c9a   / 1.5005, 2.6690, 1.500502, 1.502755, 1.503506, 1.504559, 1.506667, 1.507119,
     1   1.508175, 1.510438, 1.511043, 1.513765, 1.515734, 1.517706,
     1   1.518617, 1.519528, 1.521353, 1.523027, 1.529743, 1.535875,
     1   1.542802, 1.546354, 1.551621, 1.55971, 1.567842, 1.579171,
     1   1.590105, 1.600474, 1.610428, 1.638367, 1.664459, 1.692658,
     1   1.702334, 1.724608, 1.754879, 1.784789, 1.819388, 1.852804,
     1   1.884759, 1.915732, 1.9806, 2.041531, 2.070935, 2.098242,
     1   2.150499, 2.175808, 2.200534, 2.246784, 2.284621, 2.302971,
     1   2.321004, 2.355846, 2.388582, 2.412588, 2.435617, 2.446846,
     1   2.457882, 2.479359, 2.500023, 2.533749, 2.564594, 2.589332,
     1   2.595295, 2.606478, 2.622426, 2.636626, 2.645606, 2.65382,
     1   2.661527, 2.66899, 2.677276, 2.685052, 2.690965, 2.694735,
     1   2.698511, 2.701481, 2.703372, 2.705265, 2.706889, 2.708514,
     1   2.710139, 2.711766, 2.712308, 2.712851, 2.713665, 2.714479,
     1   2.715022, 2.715293, 2.715565, 2.715836, 2.716108, 2.71638,
     1   2.716651, 2.716651, 2.716923, 2.716923, 2.717195, 2.717466,
     1   2.717466, 2.717738, 2.717738, 2.717738, 2.71801, 2.71801,
     1   2.71801, 2.71801, 2.71801 /

      data gamma1  / -0.00804, -0.00275, -0.00804, -0.008113, -0.008155, -0.00823, -0.008351,
     1      -0.008387, -0.008454, -0.008564, -0.008599, -0.008754,
     1      -0.008833, -0.008906, -0.008945, -0.008984, -0.00905,
     1      -0.009121, -0.009288, -0.009433, -0.009561, -0.009603,
     1      -0.009656, -0.009733, -0.009782, -0.009808, -0.009809,
     1      -0.009788, -0.009753, -0.009627, -0.00946, -0.009269,
     1      -0.009205, -0.009054, -0.008832, -0.00861, -0.008398,
     1      -0.008183, -0.007976, -0.007776, -0.007397, -0.007044,
     1      -0.006877, -0.006715, -0.006408, -0.006263, -0.006123,
     1      -0.005859, -0.005614, -0.005497, -0.005386, -0.005175,
     1      -0.00498, -0.004799, -0.004632, -0.004552, -0.004477,
     1      -0.004332, -0.004199, -0.003903, -0.003652, -0.003435,
     1      -0.003368, -0.003246, -0.003078, -0.002929, -0.002795,
     1      -0.002674, -0.002564, -0.002464, -0.002287, -0.002138,
     1      -0.00201, -0.001898, -0.001802, -0.001717, -0.001643,
     1      -0.001578, -0.001519, -0.001467, -0.001381, -0.001311,
     1      -0.001281, -0.001255, -0.001209, -0.001172, -0.001142,
     1      -0.001117, -0.001106, -0.001096, -0.001079, -0.001065,
     1      -0.001052, -0.001042, -0.001032, -0.001024, -0.001016,
     1      -0.000999, -0.000987, -0.000977, -0.000968, -0.000961,
     1      -0.000955, -0.00095, -0.000945, -0.000941, -0.000937 /

      data gamma2  / -0.00785, -0.00625, -0.00785, -0.007921, -0.007962, -0.008035, -0.008154,
     1      -0.008189, -0.008255, -0.008362, -0.008396, -0.008547,
     1      -0.008624, -0.008696, -0.008734, -0.008771, -0.008836,
     1      -0.008906, -0.009068, -0.00921, -0.009335, -0.009376,
     1      -0.009428, -0.009503, -0.00955, -0.009577, -0.009577,
     1      -0.009557, -0.009522, -0.0094, -0.009236, -0.00905,
     1      -0.008988, -0.00884, -0.008623, -0.008406, -0.008199,
     1      -0.007989, -0.007787, -0.007592, -0.007222, -0.006878,
     1      -0.006714, -0.006556, -0.006257, -0.006115, -0.005979,
     1      -0.00572, -0.005481, -0.005368, -0.005259, -0.005053,
     1      -0.004862, -0.004686, -0.004522, -0.004445, -0.004371,
     1      -0.00423, -0.0041, -0.003811, -0.003565, -0.003354,
     1      -0.003288, -0.003169, -0.003005, -0.00286, -0.002729,
     1      -0.002611, -0.002504, -0.002406, -0.002233, -0.002087,
     1      -0.001962, -0.001854, -0.001759, -0.001677, -0.001604,
     1      -0.00154, -0.001483, -0.001433, -0.001348, -0.00128,
     1      -0.001251, -0.001225, -0.001181, -0.001145, -0.001115,
     1      -0.001091, -0.00108, -0.001071, -0.001054, -0.00104,
     1      -0.001027, -0.001017, -0.001007, -0.000999, -0.000992,
     1       -0.000976, -0.000964, -0.000954, -0.000945, -0.000938,
     1      -0.000933, -0.000927, -0.000923, -0.000919, -0.000914 /

      data phi1   / -0.4417, -0.7861, -0.4417, -0.434, -0.4313, -0.4267, -0.4196, -0.4177,
     1    -0.4139, -0.4082, -0.4064, -0.4, -0.3973, -0.3949, -0.3939,
     1    -0.393, -0.3914, -0.3903, -0.3892, -0.3903, -0.3934, -0.3951,
     1    -0.3981, -0.404, -0.4108, -0.4182, -0.4261, -0.4341, -0.4423,
     1    -0.4585, -0.4743, -0.4892, -0.4935, -0.5032, -0.5162, -0.5283,
     1    -0.5396, -0.5502, -0.5602, -0.5697, -0.5873, -0.6034, -0.6109,
     1    -0.6182, -0.6319, -0.6383, -0.6444, -0.6559, -0.6665, -0.6715,
     1    -0.6762, -0.685, -0.6931, -0.7005, -0.7072, -0.7104, -0.7135,
     1    -0.7193, -0.7246, -0.7365, -0.7468, -0.7557, -0.7585, -0.7636,
     1    -0.7708, -0.7773, -0.7833, -0.7888, -0.7941, -0.799, -0.8082,
     1    -0.8165, -0.8243, -0.8315, -0.8382, -0.8445, -0.8504, -0.856,
     1    -0.8613, -0.8663, -0.8755, -0.8836, -0.8874, -0.8909, -0.8974,
     1    -0.9032, -0.9083, -0.913, -0.9151, -0.917, -0.9205, -0.9231,
     1    -0.9249, -0.9257, -0.9255, -0.9243, -0.9222, -0.9129, -0.8982,
     1    -0.8791, -0.8572, -0.8346, -0.8126, -0.7914, -0.7711, -0.7517, -0.7332 /

      data phi2   / -0.1417, -0.0699, -0.1417, -0.1364, -0.1361, -0.1365, -0.1392, -0.1403, -0.143,
     1    -0.1482, -0.1502, -0.1591, -0.1641, -0.1694, -0.1721, -0.1748,
     1    -0.1804, -0.1862, -0.2008, -0.2153, -0.2291, -0.2344, -0.242,
     1    -0.2538, -0.2644, -0.2739, -0.2819, -0.2887, -0.2943, -0.3025,
     1    -0.3077, -0.3106, -0.3111, -0.3118, -0.3113, -0.3093, -0.3062,
     1    -0.3022, -0.2976, -0.2927, -0.2823, -0.2716, -0.2662, -0.2609,
     1    -0.2505, -0.2455, -0.2405, -0.231, -0.222, -0.2177, -0.2135,
     1    -0.2053, -0.1975, -0.1901, -0.183, -0.1795, -0.1762, -0.1696,
     1    -0.1633, -0.1487, -0.1353, -0.1232, -0.1194, -0.1124, -0.1028,
     1    -0.0943, -0.0869, -0.0805, -0.0748, -0.0699, -0.0617, -0.0552,
     1    -0.0501, -0.0459, -0.0425, -0.0395, -0.0369, -0.0346, -0.0323,
     1    -0.0302, -0.0262, -0.0225, -0.0207, -0.019, -0.0159, -0.0129,
     1    -0.0102, -0.0077, -0.0066, -0.0055, -0.0036, -0.0016, 0.0, 0.0,
     1    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /

      data phi3   / -0.007010, -0.008444, -0.00701, -0.007279, -0.007301, -0.007364, -0.007378, -0.007354,
     1    -0.007281, -0.007162, -0.007129, -0.006977, -0.006878, -0.006765,
     1    -0.00671, -0.006656, -0.006556, -0.006467, -0.006279, -0.006117,
     1    -0.00597, -0.005914, -0.005835, -0.005734, -0.00567, -0.005632,
     1    -0.005607, -0.005597, -0.005604, -0.005644, -0.005696, -0.005744,
     1    -0.005758, -0.005794, -0.005845, -0.005901, -0.005959, -0.006019,
     1    -0.00608, -0.006141, -0.006262, -0.006381, -0.006439, -0.006495,
     1    -0.006604, -0.006655, -0.006704, -0.006795, -0.006882, -0.006923,
     1    -0.006965, -0.007047, -0.007125, -0.007194, -0.007259, -0.00729,
     1    -0.00732, -0.007378, -0.007435, -0.007579, -0.00772, -0.007863,
     1    -0.007911, -0.008001, -0.00812, -0.008223, -0.008313, -0.008381,
     1    -0.008423, -0.008444, -0.0085, -0.008478, -0.008307, -0.008042,
     1    -0.007707, -0.007317, -0.006862, -0.006265, -0.005541, -0.004792,
     1    -0.003555, -0.002764, -0.002497, -0.002292, -0.002007, -0.001828,
     1    -0.001713, -0.001636, -0.001608, -0.001585, -0.001549, -0.001523,
     1    -0.001501, -0.001483, -0.001467, -0.001453, -0.00144, -0.001416,
     1    -0.001397, -0.001384, -0.001375, -0.001369, -0.001364, -0.001362,
     1    -0.00136, -0.00136, -0.001361 /

      data phi4   / 0.102151, 5.4100, 0.102151, 0.10836, 0.110372, 0.11371, 0.1186, 0.119888, 0.122493,
     1    0.12654, 0.127926, 0.133641, 0.136572, 0.139596, 0.141112, 0.142659,
     1    0.145774, 0.148927, 0.157001, 0.165249, 0.173635, 0.177001, 0.182082,
     1    0.190596, 0.199129, 0.207505, 0.215628, 0.223398, 0.230662, 0.243315,
     1    0.253169, 0.260175, 0.261767, 0.264504, 0.266468, 0.266468, 0.26506,
     1    0.262501, 0.259163, 0.255253, 0.246252, 0.236525, 0.231541, 0.22657,
     1    0.216796, 0.211993, 0.207277, 0.198077, 0.189304, 0.185074, 0.18092,
     1    0.172976, 0.165464, 0.158358, 0.151662, 0.148466, 0.145352, 0.139415,
     1    0.133828, 0.121226, 0.110339, 0.100842, 0.097891, 0.092504, 0.085153,
     1    0.078622, 0.072788, 0.067563, 0.06285, 0.058595, 0.051206, 0.045054,
     1    0.039879, 0.035504, 0.031787, 0.028613, 0.02589, 0.023537, 0.021496,
     1    0.019716, 0.016771, 0.014434, 0.013436, 0.012534, 0.010962, 0.009643,
     1    0.008521, 0.007561, 0.00713, 0.00673, 0.006008, 0.005379, 0.00483,
     1    0.004349, 0.003925, 0.003553, 0.003223, 0.002551, 0.002047, 0.001662,
     1    0.001366, 0.001134, 0.000952, 0.000806, 0.000689, 0.000593, 0.000515 /

      data phi5   / 0.2289, 0.2899, 0.2289, 0.2289, 0.2289, 0.2289, 0.2289, 0.2289, 0.2289, 0.2289, 0.2289,
     1    0.2289, 0.2289, 0.229, 0.229, 0.229, 0.229, 0.229, 0.229, 0.229, 0.2291,
     1    0.2291, 0.2291, 0.2292, 0.2293, 0.2294, 0.2295, 0.2296, 0.2297, 0.2302,
     1    0.2305, 0.2311, 0.2313, 0.2319, 0.2326, 0.2334, 0.2348, 0.2361, 0.2374,
     1    0.2386, 0.2433, 0.2477, 0.2497, 0.2533, 0.2606, 0.2641, 0.2674, 0.2746,
     1    0.2847, 0.2895, 0.2942, 0.3032, 0.312, 0.3227, 0.3329, 0.3378, 0.3427,
     1    0.352, 0.361, 0.381, 0.3993, 0.4142, 0.418, 0.4252, 0.4353, 0.4444,
     1    0.4494, 0.4542, 0.4587, 0.4629, 0.4668, 0.4703, 0.4729, 0.4743, 0.4756,
     1    0.4767, 0.4772, 0.4777, 0.4781, 0.4785, 0.4789, 0.4792, 0.4793, 0.4794,
     1    0.4795, 0.4796, 0.4797, 0.4798, 0.4798, 0.4798, 0.4798, 0.4799, 0.4799,
     1    0.4799, 0.4799, 0.4799, 0.4799, 0.48, 0.48, 0.48, 0.48, 0.48, 0.48,
     1    0.48, 0.48, 0.48, 0.48 /

      data phi6   / 0.014996, 0.006718, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996,
     1    0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996,
     1    0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996,
     1    0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014996, 0.014994,
     1    0.014994, 0.014993, 0.014993, 0.014991, 0.014988, 0.014987, 0.014981,
     1    0.014975, 0.01497, 0.014964, 0.014928, 0.014895, 0.014881, 0.014832,
     1    0.014731, 0.014684, 0.014639, 0.014513, 0.014239, 0.01411, 0.013985,
     1    0.013747, 0.013493, 0.012938, 0.012429, 0.01219, 0.011962, 0.011532,
     1    0.011133, 0.009769, 0.00866, 0.007829, 0.00762, 0.007244, 0.006739,
     1    0.006325, 0.006163, 0.006014, 0.005876, 0.005749, 0.005678, 0.005613,
     1    0.005573, 0.005558, 0.005544, 0.005533, 0.005529, 0.005527, 0.005524,
     1    0.005521, 0.005519, 0.005518, 0.005518, 0.005518, 0.005517, 0.005517,
     1    0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517,
     1    0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517,
     1    0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517, 0.005517 /

      data phi7   / 580.0, 459.0, 580.0, 580.0, 580.0, 580.0, 580.0, 580.0, 580.0, 580.0, 580.0,
     1    579.9, 579.9, 579.9, 579.9, 579.9, 579.9, 579.9, 579.8, 579.8,
     1    579.8, 579.7, 579.7, 579.6, 579.6, 579.5, 579.4, 579.3, 579.2,
     1    578.8, 578.6, 578.2, 578.0, 577.7, 577.2, 576.7, 576.0, 575.2,
     1    574.6, 573.9, 571.6, 569.5, 568.5, 566.9, 563.6, 562.0, 560.5,
     1    557.3, 552.6, 550.4, 548.3, 544.1, 540.0, 534.0, 528.4, 525.7,
     1    523.0, 517.8, 512.9, 497.1, 482.7, 468.7, 463.9, 454.8, 441.9,
     1    429.9, 419.5, 409.8, 400.5, 391.8, 379.6, 368.5, 359.8, 353.7,
     1    348.1, 343.1, 340.2, 337.5, 334.9, 332.5, 330.0, 327.8, 326.7,
     1    326.1, 325.1, 324.1, 323.3, 322.9, 322.7, 322.5, 322.1, 321.7,
     1    321.6, 321.4, 321.2, 321.1, 320.9, 320.7, 320.6, 320.4, 320.4,
     1    320.3, 320.2, 320.2, 320.2, 320.1, 320.1 /

      data phi8   / 0.070, 0.1138, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07,
     1    0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.07, 0.0698, 0.0696, 0.0694,
     1    0.0692, 0.0686, 0.0679, 0.0671, 0.0662, 0.0654, 0.0646, 0.0635,
     1    0.0625, 0.0602, 0.0592, 0.056, 0.0494, 0.0407, 0.0306, 0.0199,
     1    0.0089, -0.0019, -0.0223, -0.0401, -0.0479, -0.0548, -0.0665,
     1    -0.0713, -0.0756, -0.0825, -0.0875, -0.0895, -0.0912, -0.0939,
     1    -0.096, -0.0975, -0.0987, -0.0991, -0.0994, -0.0998, -0.0998,
     1    -0.0983, -0.0948, -0.0896, -0.0876, -0.0834, -0.0765, -0.0693,
     1    -0.062, -0.0549, -0.0479, -0.0412, -0.0285, -0.0167, -0.0057,
     1    0.0045, 0.014, 0.0229, 0.0313, 0.0393, 0.0469, 0.0544, 0.0687,
     1    0.0826, 0.0895, 0.0963, 0.1098, 0.1232, 0.1366, 0.1498, 0.1562,
     1    0.1625, 0.1746, 0.1859, 0.1964, 0.206, 0.2147, 0.2225, 0.2295,
     1    0.2435, 0.2532, 0.2595, 0.2635, 0.266, 0.2675, 0.2683, 0.2686,
     1    0.2685, 0.2682 /

      data tau1   / 0.3437, 0.2539, 0.3437, 0.3471, 0.3505, 0.3538, 0.3571, 0.3603, 0.3633, 0.3663,
     1    0.3691, 0.3718, 0.3744, 0.3768, 0.3791, 0.3811, 0.3831, 0.3848,
     1    0.3863, 0.3876, 0.3877, 0.3881, 0.3883, 0.3878, 0.3872, 0.3865,
     1    0.3856, 0.3846, 0.3835, 0.3816, 0.3795, 0.3775, 0.3761, 0.3742,
     1    0.3719, 0.3696, 0.3672, 0.3649, 0.3626, 0.3601, 0.3572, 0.3543,
     1    0.3522, 0.35, 0.3474, 0.3455, 0.3438, 0.3417, 0.3398, 0.3386,
     1    0.3375, 0.3362, 0.3351, 0.3344, 0.3339, 0.334, 0.3344, 0.3346,
     1    0.3353, 0.3354, 0.336, 0.3369, 0.339, 0.3409, 0.3429, 0.3452,
     1    0.3478, 0.3508, 0.3541, 0.3577, 0.3608, 0.3644, 0.3682, 0.3725,
     1    0.3769, 0.3816, 0.3865, 0.3916, 0.3968, 0.4023, 0.4085, 0.4149,
     1    0.4212, 0.4277, 0.4341, 0.4406, 0.447, 0.4534, 0.4598, 0.4661,
     1    0.4723, 0.4784, 0.4845, 0.4904, 0.4962, 0.5019, 0.5074, 0.5128,
     1    0.5181, 0.5232, 0.5281, 0.5328, 0.5374, 0.5419, 0.5461, 0.5502, 0.5542 /

      data tau2   / 0.2637, 0.2381, 0.2637, 0.2671, 0.2705, 0.2738, 0.2771, 0.2803, 0.2833, 0.2863,
     1    0.2891, 0.2918, 0.2944, 0.2968, 0.2991, 0.3011, 0.3031, 0.3048,
     1    0.3063, 0.3076, 0.3095, 0.3106, 0.3118, 0.3129, 0.3138, 0.3145,
     1    0.3149, 0.3151, 0.3152, 0.3154, 0.3153, 0.3151, 0.3143, 0.3135,
     1    0.3128, 0.312, 0.311, 0.31, 0.3089, 0.3076, 0.3068, 0.306, 0.3047,
     1    0.3034, 0.3026, 0.3015, 0.3005, 0.2999, 0.2993, 0.2988, 0.2983,
     1    0.2983, 0.2984, 0.2987, 0.2993, 0.2999, 0.3008, 0.3021, 0.3036,
     1    0.306, 0.3085, 0.3113, 0.3139, 0.3169, 0.3205, 0.3243, 0.3283,
     1    0.3326, 0.3371, 0.3419, 0.3472, 0.3527, 0.3584, 0.3643, 0.3703,
     1    0.3765, 0.3828, 0.3892, 0.3957, 0.4023, 0.4085, 0.4149, 0.4212,
     1    0.4277, 0.4341, 0.4406, 0.447, 0.4534, 0.4598, 0.4661, 0.4723,
     1    0.4784, 0.4845, 0.4904, 0.4962, 0.5019, 0.5074, 0.5128, 0.5181,
     1    0.5232, 0.5281, 0.5328, 0.5374, 0.5419, 0.5461, 0.5502, 0.5542 /

      data sigma1  / 0.4458, 0.4496, 0.4458, 0.4458, 0.4476, 0.45, 0.4529, 0.4535, 0.4547, 0.4564,
     1     0.4569, 0.4589, 0.4598, 0.4607, 0.4611, 0.4615, 0.4623, 0.463,
     1     0.4647, 0.4663, 0.4677, 0.4682, 0.469, 0.4702, 0.4712, 0.4722,
     1     0.4731, 0.474, 0.4747, 0.4761, 0.4773, 0.4782, 0.4785, 0.4791,
     1     0.4798, 0.4803, 0.4808, 0.4811, 0.4814, 0.4816, 0.4817, 0.4816,
     1     0.4815, 0.4813, 0.4808, 0.4805, 0.4801, 0.4794, 0.4786, 0.4781,
     1     0.4777, 0.4768, 0.4758, 0.4748, 0.4738, 0.4734, 0.4729, 0.4719,
     1     0.471, 0.4688, 0.4667, 0.465, 0.4644, 0.4634, 0.4621, 0.461,
     1     0.46, 0.4592, 0.4586, 0.4581, 0.4555, 0.4535, 0.4518, 0.4505,
     1     0.4493, 0.4484, 0.4476, 0.4469, 0.4463, 0.4459, 0.4451, 0.4444,
     1     0.4442, 0.444, 0.4436, 0.4433, 0.443, 0.4428, 0.4427, 0.4426,
     1     0.4425, 0.4424, 0.4423, 0.4422, 0.4421, 0.442, 0.442, 0.4418,
     1     0.4417, 0.4417, 0.4416, 0.4416, 0.4415, 0.4415, 0.4415, 0.4415,
     1     0.4414 /

      data sigma2  / 0.3459, 0.3554, 0.3459, 0.3459, 0.3477, 0.3502, 0.353, 0.3537, 0.3549, 0.3566,
     1     0.3572, 0.3592, 0.3602, 0.3611, 0.3615, 0.3619, 0.3627, 0.3635,
     1     0.3654, 0.367, 0.3686, 0.3692, 0.37, 0.3713, 0.3726, 0.3738,
     1     0.3749, 0.3759, 0.3769, 0.3787, 0.3804, 0.3819, 0.3824, 0.3834,
     1     0.3847, 0.3859, 0.3871, 0.3882, 0.3893, 0.3902, 0.3921, 0.3938,
     1     0.3946, 0.3953, 0.3967, 0.3974, 0.3981, 0.3993, 0.4005, 0.401,
     1     0.4016, 0.4026, 0.4036, 0.4046, 0.4054, 0.4059, 0.4063, 0.4071,
     1     0.4079, 0.4098, 0.4114, 0.413, 0.4135, 0.4144, 0.4157, 0.417,
     1     0.4181, 0.4192, 0.4203, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213,
     1     0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213,
     1     0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213,
     1     0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213,
     1     0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213, 0.4213 /

      data sigma3  / 0.80, 0.7504, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8,
     1     0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8,
     1     0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8,
     1     0.8, 0.8, 0.7999, 0.7999, 0.7999, 0.7998, 0.7998, 0.7997,
     1     0.7997, 0.7996, 0.7994, 0.7993, 0.7992, 0.799, 0.7988, 0.7983,
     1     0.7979, 0.7976, 0.7974, 0.797, 0.7966, 0.794, 0.7917, 0.7884,
     1     0.7867, 0.7836, 0.7792, 0.7747, 0.7681, 0.7619, 0.756, 0.7504,
     1     0.74, 0.7304, 0.723, 0.7182, 0.7136, 0.7097, 0.708, 0.7064,
     1     0.7049, 0.7035, 0.7025, 0.7017, 0.7012, 0.7011, 0.7008, 0.7006,
     1     0.7004, 0.7003, 0.7003, 0.7002, 0.7002, 0.7001, 0.7001, 0.7001,
     1     0.7001, 0.7001, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7 /

      data c1_TA    / 0.4550, 0.0, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550,
     1   0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550,
     1   0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550,
     1   0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550,
     1   0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550,
     1   0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550,
     1   0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550,
     1   0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550,
     1   0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550,
     1   0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550,
     1   0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550, 0.4550,
     1   0.4550, 0.4550, 0.4416, 0.4293, 0.4235, 0.4180, 0.4075,
     1   0.3978, 0.3887, 0.3801, 0.3760, 0.3721, 0.3644, 0.3572,
     1   0.3503, 0.3438, 0.3375, 0.3315, 0.3257, 0.3123, 0.3000,
     1   0.2530, 0.2095, 0.1690, 0.1310, 0.0954, 0.0619, 0.0301, 0.0000 /

      data c3_TA   / -0.1600, 0.0, -0.1600, -0.1600, -0.1548, -0.1478, -0.1397, -0.1378, -0.1343,
     1    -0.1294, -0.1279, -0.1221, -0.1194, -0.1169, -0.1157, -0.1145,
     1    -0.1121, -0.1099, -0.1047, -0.0999, -0.0956, -0.0939, -0.0915,
     1    -0.0877, -0.0842, -0.0809, -0.0778, -0.0748, -0.0720, -0.0720,
     1    -0.0720, -0.0720, -0.0720, -0.0720, -0.0720, -0.0783, -0.0843,
     1    -0.0899, -0.0952, -0.1002, -0.1095, -0.1181, -0.1221, -0.1259,
     1    -0.1332, -0.1366, -0.1399, -0.1463, -0.1522, -0.1550, -0.1578, -0.1631, -0.1681, -0.1729,
     1    -0.1775, -0.1797, -0.1818, -0.1860, -0.1900, -0.1900, -0.1900,
     1    -0.1900, -0.1900, -0.1900, -0.1900, -0.1900, -0.1900, -0.1900,
     1    -0.1900, -0.1900, -0.1735, -0.1585, -0.1446, -0.1318, -0.1199,
     1    -0.1087, -0.0982, -0.0883, -0.0790, -0.0701, -0.0536, -0.0386,
     1    -0.0315, -0.0247, -0.0119, 0.0000, 0.0000, 0.0000, 0.0000,
     1    0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
     1    0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000 /

c      data vHinge / 492.7, 492.7, 492.7, 492.7, 492.7, 492.7, 492.7, 492.7,
c     1   492.7, 492.7, 492.7, 492.7, 492.7, 492.7, 492.7,
c     1   492.7, 492.7, 492.7, 492.7, 492.7, 492.7, 492.7,
c     1   492.7, 492.7, 492.7, 492.7, 492.7, 492.7, 492.7,
c     1   492.7, 492.7, 492.7, 492.7, 492.7, 492.7, 492.7,
c     1   492.7, 492.7, 492.7, 492.7, 492.7, 492.7, 492.7,
c     1   491.3, 488.5, 487.2, 485.9, 483.5, 481.3, 480.2,
c     1   479.1, 477.1, 475.2, 473.4, 471.6, 470.8, 470.0,
c     1   468.4, 466.9, 463.3, 460.1, 457.1, 456.1, 454.3,
c     1   451.7, 449.3, 447.1, 444.9, 442.9, 441.0, 437.4,
c     1   434.2, 431.2, 428.4, 425.9, 423.5, 421.2, 419.1,
c     1   417.0, 415.1, 411.6, 408.3, 406.8, 405.3, 402.6,
c     1   400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0,
c     1   400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0,
c     1   400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0 /

      data c2_TA   / 0.00360, 0.0, 0.00360, 0.00360, 0.00360, 0.00360, 0.00360,
     1      0.00360, 0.00360, 0.00360, 0.00360, 0.00360,
     1      0.00360, 0.00360, 0.00360, 0.00360, 0.00360,
     1      0.00360, 0.00350, 0.00333, 0.00322, 0.00317,
     1      0.00311, 0.00301, 0.00292, 0.00283, 0.00274,
     1      0.00267, 0.00259, 0.00245, 0.00232, 0.00221,
     1      0.00218, 0.00210, 0.00200, 0.00200, 0.00200,
     1      0.00200, 0.00200, 0.00200, 0.00200, 0.00200,
     1      0.00200, 0.00200, 0.00200, 0.00200, 0.00200,
     1      0.00200, 0.00200, 0.00200, 0.00200, 0.00200,
     1      0.00200, 0.00200, 0.00200, 0.00200, 0.00200,
     1      0.00200, 0.00200, 0.00200, 0.00200, 0.00200,
     1      0.00200, 0.00200, 0.00200, 0.00200, 0.00200,
     1      0.00200, 0.00200, 0.00200, 0.00200, 0.00200,
     1      0.00200, 0.00200, 0.00200, 0.00189, 0.00179,
     1      0.00170, 0.00161, 0.00152, 0.00136, 0.00122,
     1      0.00115, 0.00109, 0.00096, 0.00085, 0.00074,
     1      0.00064, 0.00059, 0.00055, 0.00046, 0.00037,
     1      0.00029, 0.00021, 0.00014, 0.00007, 0.00000,
     1      0.00000, 0.00000, 0.00000, 0.00000, 0.00000,
     1      0.00000, 0.00000, 0.00000, 0.00000, 0.00000 /

c      Note: Sigma4 only used for Aftershock cases which is not currently coded.
c      data sigma4 /   /
           vHinge=450
C Find the requested spectral period and corresponding coefficients
      nPer = 107
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         c1T      = c1(1)
         c1aT     = c1a(1)
         c1bT     = c1b(1)
         cnT      = cn(1)
         cmT      = cm(1)
         c5T      = c5(1)
         c6T      = c6(1)
         c7T      = c7(1)
         c9T      = c9(1)
         c9aT     = c9a(1)
         c1_TAT     = c1_TA(1)
         gamma1T  = gamma1(1)
         gamma2T  = gamma2(1)
         c2_TAT = c2_TA(1)
c         vHingeT = vHinge(1)
         phi1T    = phi1(1)
         phi2T    = phi2(1)
         phi3T    = phi3(1)
         phi4T    = phi4(1)
         phi5T    = phi5(1)
         phi6T    = phi6(1)
         phi7T    = phi7(1)
         phi8T    = phi8(1)
         c3_TAT    = c3_TA(1)
         tau1T    = tau1(1)
         tau2T    = tau2(1)
         sigma1T = sigma1(1)
         sigma2T = sigma2(1)
         sigma3T = sigma3(1)
         goto 1011
      elseif (specT .eq. -1.0) then
         period1  = period(2)
         c1T      = c1(2)
         c1aT     = c1a(2)
         c1bT     = c1b(2)
         cnT      = cn(2)
         cmT      = cm(2)
         c5T      = c5(2)
         c6T      = c6(2)
         c7T      = c7(2)
         c9T      = c9(2)
         c9aT     = c9a(2)
         c1_TAT     = c1_TA(2)
         gamma1T  = gamma1(2)
         gamma2T  = gamma2(2)
         c2_TAT = c2_TA(2)
c         vHingeT = vHinge(2)
         phi1T    = phi1(2)
         phi2T    = phi2(2)
         phi3T    = phi3(2)
         phi4T    = phi4(2)
         phi5T    = phi5(2)
         phi6T    = phi6(2)
         phi7T    = phi7(2)
         phi8T    = phi8(2)
         c3_TAT    = c3_TA(2)
         tau1T    = tau1(2)
         tau2T    = tau2(2)
         sigma1T = sigma1(2)
         sigma2T = sigma2(2)
         sigma3T = sigma3(2)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=3,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Chiou and Youngs (NGA-2008-TR) Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),c1(count1),c1(count2),
     +                   specT,c1T,iflag)
            call interp (period(count1),period(count2),c1a(count1),c1a(count2),
     +                   specT,c1aT,iflag)
            call interp (period(count1),period(count2),c1b(count1),c1b(count2),
     +                   specT,c1bT,iflag)
            call interp (period(count1),period(count2),cn(count1),cn(count2),
     +                   specT,cnT,iflag)
            call interp (period(count1),period(count2),cm(count1),cm(count2),
     +                   specT,cmT,iflag)
            call interp (period(count1),period(count2),c5(count1),c5(count2),
     +                   specT,c5T,iflag)
            call interp (period(count1),period(count2),c6(count1),c6(count2),
     +                   specT,c6T,iflag)
            call interp (period(count1),period(count2),c7(count1),c7(count2),
     +                   specT,c7T,iflag)
            call interp (period(count1),period(count2),c9(count1),c9(count2),
     +                   specT,c9T,iflag)
            call interp (period(count1),period(count2),c1_TA(count1),c1_TA(count2),
     +                   specT,c1_TAT,iflag)
            call interp (period(count1),period(count2),c3_TA(count1),c3_TA(count2),
     +                   specT,c3_TAT,iflag)
c            call interp (period(count1),period(count2),vHinge(count1),vHinge(count2),
c     +                   specT,vHingeT,iflag)
            call interp (period(count1),period(count2),c2_TA(count1),c2_TA(count2),
     +                   specT,c2_TAT,iflag)
            call interp (period(count1),period(count2),c9a(count1),c9a(count2),
     +                   specT,c9aT,iflag)
            call interp (period(count1),period(count2),gamma1(count1),gamma1(count2),
     +                   specT,gamma1T,iflag)
            call interp (period(count1),period(count2),gamma2(count1),gamma2(count2),
     +                   specT,gamma2T,iflag)
            call interp (period(count1),period(count2),phi1(count1),phi1(count2),
     +                   specT,phi1T,iflag)
            call interp (period(count1),period(count2),phi2(count1),phi2(count2),
     +                   specT,phi2T,iflag)
            call interp (period(count1),period(count2),phi3(count1),phi3(count2),
     +                   specT,phi3T,iflag)
            call interp (period(count1),period(count2),phi4(count1),phi4(count2),
     +                   specT,phi4T,iflag)
            call interp (period(count1),period(count2),phi5(count1),phi5(count2),
     +                   specT,phi5T,iflag)
            call interp (period(count1),period(count2),phi6(count1),phi6(count2),
     +                   specT,phi6T,iflag)
            call interp (period(count1),period(count2),phi7(count1),phi7(count2),
     +                   specT,phi7T,iflag)
            call interp (period(count1),period(count2),phi8(count1),phi8(count2),
     +                   specT,phi8T,iflag)
            call interp (period(count1),period(count2),tau1(count1),tau1(count2),
     +                   specT,tau1T,iflag)
            call interp (period(count1),period(count2),tau2(count1),tau2(count2),
     +                   specT,tau2T,iflag)
            call interp (period(count1),period(count2),sigma1(count1),sigma1(count2),
     +                   specT,sigma1T,iflag)
            call interp (period(count1),period(count2),sigma2(count1),sigma2(count2),
     +                   specT,sigma2T,iflag)
            call interp (period(count1),period(count2),sigma3(count1),sigma3(count2),
     +                   specT,sigma3T,iflag)
c            call interp (period(count1),period(count2),sigma4(count1),sigma4(count2),
c     +                   specT,sigma4T,iflag)

 1011 period1 = specT

c     Set the fault mechanism term.
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C      -1       Normal                   -120 < Rake < -60.0
C     1, 0.5    Reverse and Rev/Obl        30 < Rake < 150.0
C     0,-0.5    Strike-Slip and NMl/Obl        Otherwise
         if (ftype .eq. -1) then
            F_RV = 0.0
            F_NM = 1.0
         elseif (ftype .ge. 0.5) then
            F_RV = 1.0
            F_NM = 0.0
         else
            F_RV = 0.0
            F_NM = 0.0
         endif

C HW factors......
c     For now, convert hwflag to an equivalent srcSiteA
c      if ( hwflag .eq. 1 ) then
c        srcSiteA = 90.
c      else
c        srcSiteA = 0.
c      endif
C No longer needed since Rx is computed and passed.
C     Compute Rx value given source to site azimuth
c      if (srcsiteA .eq. 90.0) then
c         Rx = Rrup/sin(abs(delta)*3.14159/180.0) - DTor/tan(abs(delta)*3.14159/180.0)
c      elseif (srcsiteA .gt. 0.0) then
c         Rx = Rbjf*tan(srcSiteA*3.14159/180.0)
c      elseif (srcsiteA .le. 0.0) then
c         Rx = 0.0
c      endif

        c2 = 1.06
        c3 = 3.45
        c4 = -2.1
        c4a = -0.5
        cRB = 50.0
        cHM = 3.0
        gm = 4.0

        pi = atan(1.0)*4.0
        d2r = pi/180.0

        cc = c5T* cosh(c6T * max((M-cHM),0.0))
        gamma = gamma1T + gamma2T/cosh(max((M-gm),0.0))
        cosDELTA = cos(abs(DELTA)*d2r)

c Magnitude scaling
        r1 = c1T + c2 * (M-6.0) +
     1       (c2-c3)/cnT *
     1             alog(1.0 + exp(-cnT*(M-cMT)))

C Turkey magnitude scaling adjustment:
      	if (M .le. 6.75) then
      	r1 = r1 + c1_TAT*(M-6.75)
      	endif


c Near-field magnitude and distance scaling
        r2 = c4 * alog(Rrup + cc)

c Distance scaling at large distance
        r3 = (c4a-c4)/2.0 *
     1            alog( Rrup*Rrup+cRB*cRB ) +
     1       Rrup * gamma

C Turkey gamma adjustment:

	if (Rrup .gt. 100) then
      	r3 = r3 + c2_TAT*(Rrup-100)
      	endif

c More source scaling
        r4 = c1aT*F_RV +
     1       c1bT*F_NM +
     1       c7T*(DTor - 4.0)

c HW effect
        if (HWFlag .eq. 0) then
           hw = 0.0
        else
           hw = c9T * tanh(Rx*cosDelta**2.0/c9aT) *
     1          (1.0 - sqrt(Rbjf**2.0+DTor**2.0)/(Rrup + 0.001))
        endif
c Predicted median Sa on reference condition (Vs=1130 m/sec)
        psa_ref = r1+r2+r3+r4+hw

c Linear soil amplification
        a = phi1T * min(alog(Vs/1130.0), 0.0)

c Nonlinear soil amplification
        b = phi2T *
     1      (exp(phi3T*(min(Vs,1130.0)-360.0)) - exp(phi3T*(1130.0-360.0)))
        c = phi4T

c  Turkey site amplification

c      if (Vs .lt. vHingeT) then
c          d = 0
c      else
     	  d = (c3_TAT) * alog(Vs/vHinge)
c      endif

C Deviation from ln(Vs30) scaling: bedrock depth (Z1) effect
C NOTE: max(0,z1-15) is capped at 300 to avoid overflow of function cosh
        rkdepth = phi5T*
     1            (1.0-1.0/cosh(phi6T*max(0.0,depthvs10*1000.0-phi7T))) +
     1            phi8T/cosh(0.15*min(max(0.0,depthvs10*1000.0-15.0),300.0))

c Sa on soil condition
        psa = psa_ref + (a + b * alog((exp(psa_ref)+c)/c)) + rkdepth + d

C Compute the sigma term
        NL = b*exp(psa_ref)/(exp(psa_ref)+c)
        sigma_M = sigma1T + (sigma2T-sigma1T)/2.0*(min(max(M,5.0),7.0)-5.0)
        if (vs30_class .eq. 0) then
           sigma = sigma_M*sqrt(sigma3T+(1.0+NL)**2.0)
        else
           sigma = sigma_M*sqrt(0.7+(1.0+NL)**2.0)
        endif
C Compute the tau term
        tau = tau1T + (tau2T-tau1T)/2.0*(min(max(M,5.0),7.0)-5.0)
        tau = tau*(1.0+NL)

        sigma = sqrt(tau*tau + sigma*sigma)

C     Convert ground motion to units of gals.
      lnY = psa + 6.89
      period2 = period1

      return
      end


c ---------------------------------------------------------------------
C ** Idriss (NGA-2008) Horizontal, Vs=540-900 m/sec **
c ---------------------------------------------------------------------
      Subroutine I_NGA_2008TR ( m, Rrup, ftype, specT,
     1                     period2, lnY, sigma, iflag )

      parameter (MAXPER=32)
      REAL Period(MAXPER), a1mlt675(MAXPER), a2mlt675(MAXPER), b1mlt675(MAXPER), b2mlt675(MAXPER)
      REAL a1(MAXPER), a2(MAXPER), b1(MAXPER), b2(MAXPER)
      real gam(MAXPER), phi(MAXPER), c1_TA(MAXPER)

      REAL M, RRUP
      REAL SOF, period2, lnY, PhiT, gamT, ftype

      real a1T, a2T, b1T, b2T, a1mlt6T, a2mlt6T, b1mlt6T, b2mlt6T, c1_TAT
      integer iflag, count1, count2

      Data period / 0.00, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.08,
     1              0.10, 0.15, 0.20, 0.25, 0.30, 0.35, 0.40, 0.45,
     2              0.50, 0.60, 0.70, 0.80, 0.90, 1.00, 1.50, 2.00,
     3		    3.00, 4.00, 5.00, 6.00, 7.00, 8.00, 9.00, 10.00 /
      data a1 / 5.6315, 5.6315, 5.6315, 5.6815, 5.7315, 5.8447, 6.0362,
     1          6.4307, 6.3053, 5.0845, 5.0842, 4.5453, 4.2719, 4.0174,
     2          3.7792, 3.5519, 3.3235, 2.9047, 2.5222, 2.1972, 1.8971,
     3          1.5822, 0.2888, -0.7737, -2.3037, -3.4564, -4.3563,
     4         -5.1145, -5.7538, -6.2921, -6.7588, -7.1679 /
      data a2 / -0.4104, -0.4104, -0.4104, -0.4104, -0.4104, -0.4329,
     1          -0.4551, -0.4831, -0.4359, -0.2566, -0.2393, -0.1850,
     2          -0.1614, -0.1399, -0.1202, -0.1020, -0.0849, -0.0538,
     3          -0.0258, -0.0003, 0.0232, 0.0450, 0.1354, 0.2054,0.3099,
     4	         0.3855, 0.4427, 0.4868, 0.5209, 0.5471, 0.5669, 0.5814 /
      data c1_TA / 0.4750, 0.4750, 0.4750, 0.4750, 0.4750, 0.4750,
     1         0.4750, 0.4187, 0.3750, 0.3750, 0.3750, 0.3750,
     2          0.4070, 0.4341, 0.4576, 0.4782, 0.4968, 0.5288,
     3          0.5559, 0.5793, 0.600, 0.6000, 0.6000, 0.5166, 0.3990,
     4	        0.3156, 0.2510, 0.1981, 0.1534, 0.1147, 0.0805, 0.0500 /
      data b1 / 2.9832, 2.9832, 2.9832, 2.9832, 2.9832, 2.9487, 2.9494,
     1          2.9788, 2.9153, 2.4829, 2.5066, 2.3687, 2.3475, 2.3284,
     2          2.3105, 2.2937, 2.2793, 2.2507, 2.2250, 2.2014, 2.1786,
     3          2.1588, 2.0720, 2.0027, 1.8938, 1.8091, 1.7401, 1.6825,
     4          1.6327, 1.5900, 1.5532, 1.5201 /
      data b2 / -0.2339, -0.2339, -0.2339, -0.2339, -0.2339, -0.2346,
     1          -0.2356, -0.2386, -0.2265, -0.1707, -0.1738, -0.1623,
     2          -0.1612, -0.1602, -0.1593, -0.1584, -0.1577, -0.1562,
     3          -0.1549, -0.1537, -0.1525, -0.1515, -0.1471, -0.1436,
     4          -0.1382, -0.1341, -0.1308, -0.1281, -0.1258, -0.1239,
     5          -0.1223, -0.1209 /
      data a1mlt675 / 3.7066, 3.7066, 3.7066, 3.7566, 3.8066, 4.1248,
     1                4.4681, 4.4853, 4.4592, 3.4793, 3.2354, 2.7628,
     2                2.3813, 2.0302, 1.7037, 1.3940, 1.0893, 0.5308,
     3                0.0240, -0.4141, -0.8184, -1.2290, -2.9168,
     4               -4.2783, -6.2431, -7.6967, -8.8110, -9.7232,
     5               -10.4706, -11.0814, -11.5896, -12.0149 /
      data a2mlt675 / -0.1252, -0.1252, -0.1252, -0.1252, -0.1252, -0.1781,
     1                -0.2228, -0.1949, -0.1624, -0.0188, 0.0346, 0.0791,
     2                 0.1187, 0.1545, 0.1873, 0.2177, 0.2461, 0.2979, 0.3443,
     3                 0.3866, 0.4255, 0.4615, 0.6103, 0.7246, 0.8935, 1.0137,
     4                 1.1027, 1.1696, 1.2197, 1.2566, 1.2826, 1.2995 /
      data b1mlt675 / 2.9832, 2.9832, 2.9832, 2.9832, 2.9832, 3.0156, 3.0708,
     1                3.1071, 3.1212, 2.8609, 2.8739, 2.8203, 2.8126, 2.8056,
     2                2.7992, 2.7932, 2.7876, 2.7772, 2.7677, 2.7590, 2.7510,
     3                2.7434, 2.7112, 2.6851, 2.6437, 2.6110, 2.5839, 2.5607,
     4                2.5406, 2.5228, 2.5070, 2.4928 /
      data b2mlt675 / -0.2339, -0.2339, -0.2339, -0.2339, -0.2339, -0.2445,
     1                -0.2536, -0.2576, -0.2570, -0.2267, -0.2282, -0.2292,
     2                -0.2301, -0.2309, -0.2317, -0.2324, -0.2330, -0.2342,
     3                -0.2353, -0.2363, -0.2373, -0.2381, -0.2418, -0.2447,
     4                -0.2493, -0.2529, -0.2558, -0.2582, -0.2603, -0.2621,
     5                -0.2636, -0.2650 /
      data gam / 0.00047, 0.00047, 0.00047, 0.00047, 0.00047, 0.00000,
     1           0.00000, 0.00000, 0.00000, 0.00000, 0.00000, -0.00049,
     2           0.00052, 0.00099, 0.00112, 0.00114, 0.00132, 0.00154,
     3           0.00170, 0.00152, 0.00157, 0.00188, 0.00250, 0.00268,
     4           0.00050, -0.00248, -0.00453, -0.00566, -0.00633,
     5          -0.00671, -0.00689, -0.00709 /
      data phi / 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12,
     1           0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12,
     2           0.12, 0.11, 0.10, 0.06, 0.04, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,
     3           0.00, 0.00 /


C Find the requested spectral period and corresponding coefficients
      nPer = 32
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         a1T     = a1(1)
         a2T     = a2(1)
         c1_TAT     = c1_TA(1)
         b1T     = b1(1)
         b2T     = b2(1)
         a1mlt675T = a1mlt675(1)
         a2mlt675T = a2mlt675(1)
         b1mlt675T = b1mlt675(1)
         b2mlt675T = b2mlt675(1)
         gamT   = gam(1)
         phiT   = phi(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Idriss (NGA-2008-TR) Horizontal Vs=450-900m/s'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),a1(count1),a1(count2),
     +                   specT,a1T,iflag)
            call interp (period(count1),period(count2),a2(count1),a2(count2),
     +                   specT,a2T,iflag)
            call interp (period(count1),period(count2),c1_TA(count1),c1_TA(count2),
     +                   specT,c1_TAT,iflag)
            call interp (period(count1),period(count2),b1(count1),b1(count2),
     +                   specT,b1T,iflag)
            call interp (period(count1),period(count2),b2(count1),b2(count2),
     +                   specT,b2T,iflag)
            call interp (period(count1),period(count2),a1mlt675(count1),a1mlt675(count2),
     +                   specT,a1mlt675T,iflag)
            call interp (period(count1),period(count2),a2mlt675(count1),a2mlt675(count2),
     +                   specT,a2mlt675T,iflag)
            call interp (period(count1),period(count2),b1mlt675(count1),b1mlt675(count2),
     +                   specT,b1mlt675T,iflag)
            call interp (period(count1),period(count2),b2mlt675(count1),b2mlt675(count2),
     +                   specT,b2mlt675T,iflag)
            call interp (period(count1),period(count2),phi(count1),phi(count2),
     +                   specT,phiT,iflag)
            call interp (period(count1),period(count2),gam(count1),gam(count2),
     +                   specT,gamT,iflag)

 1011 period1 = specT

C.....Compute the Ground motion.......

C.....Set the mechanism term.....................
C     Strike-slip events --> SOF = 0
C     Reverse events     --> SOF = 1
C     Otherwise assume SOF = 0
      if (ftype .eq. 1.0) then
         SOF = 1.0
      else
         SOF = 0.0
      endif

      if (m .lt. 6.75) then
         lnY = a1mlt675T + a2mlt675T*m - (b1mlt675T+b2mlt675T*m) * alog(rrup+10.0) +
     1         gamT*rRup + SOF*phiT + c1_TAT*(m-6.75)
      else
         lnY = a1T + a2T*m - (b1T+b2T*m) * alog(rrup+10.0) +
     1         gamT*rRup + SOF*phiT
      endif

C     Convert ground motion to units of gals.
      lnY = lnY + 6.89

C     Compute Sigma which is Period and magnitude dependent.
      if (specT .le. 0.05) then
         if (m .le. 5.0) then
            sigma = 1.28 +0.05*alog(0.05) - 0.08*5.0
         elseif (m .ge. 7.5) then
            sigma = 1.28 +0.05*alog(0.05) - 0.08*7.5
         else
            sigma = 1.28 +0.05*alog(0.05) - 0.08*m
         endif
      elseif (specT .ge. 3.0) then
         if (m .le. 5.0) then
            sigma = 1.28 +0.05*alog(3.00) - 0.08*5.0
         elseif (m .ge. 7.5) then
            sigma = 1.28 +0.05*alog(3.00) - 0.08*7.5
         else
            sigma = 1.28 +0.05*alog(3.00) - 0.08*m
         endif
      else
         if (m .le. 5.0) then
            sigma = 1.28 +0.05*alog(specT) - 0.08*5.0
         elseif (m .ge. 7.5) then
            sigma = 1.28 +0.05*alog(specT) - 0.08*7.5
         else
            sigma = 1.28 +0.05*alog(specT) - 0.08*m
         endif
      endif

      period2 = period1

      return
      end


c ---------------------------------------------------------------------
C     *** Campbell and Bozorgnia NGA (NGA-2008) ***
c ---------------------------------------------------------------------

      subroutine CB_NGA_2008TR ( mag, Rrup, Rbjf, Ftype, specT,
     1                     period2, lnY, sigma, iflag, vs,
     2                     depthtop, D25, Dip )

      parameter (MAXPER=24)
      REAL Period(MAXPER), C0(MAXPER), C1(MAXPER), C2(MAXPER), C3(MAXPER), C4(MAXPER), C5(MAXPER)
      REAL C6(MAXPER), C7(MAXPER), C8(MAXPER), C9(MAXPER), C10(MAXPER), C11(MAXPER), C12(MAXPER)
      REAL K1(MAXPER), K2(MAXPER), K3(MAXPER), c1_TA(MAXPER)
      REAL SIG(MAXPER), tlny(MAXPER), slny(MAXPER)
      REAL cort(MAXPER), cors(MAXPER)

      REAL MAG, RRUP, RBJF, VS, D25, FHWR, FHWM, FHWZ, FHWD, PGAROCK, C, N
      real sigmaT, lnY, ftype, ztor, Dip, Dmax, pgasoil
      INTEGER count1, count2

      real c0T, c1T, c2T, c3T, c4T, c5T, c6T, c7T, c8T, c9T, c10T, c11T, c12T
      real k1T, k2T, k3T, sigT, c1_TAT
      real tlnyT, slnyT, cortT, corsT
      real alpha, tau, s

C.....MODEL COEFFICIENTS.....................
      data Period /  0.00, -1.0, -2.0, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25,
     &               0.3, 0.4, 0.5, 0.75, 1, 1.5, 2, 3, 4, 5, 7.5, 10. /
      data C0     / -1.715, 0.954, -5.270, -1.715, -1.68, -1.552, -1.209, -0.657, -0.314, -0.133,
     &              -0.486, -0.89, -1.171, -1.466, -2.569, -4.844, -6.406,
     &              -8.692, -9.701, -10.556, -11.212, -11.684, -12.505, -13.087 /
      data C1     /  0.5,0.696, 1.60, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5,
     &               0.656, 0.972, 1.196, 1.513, 1.6, 1.6, 1.6, 1.6, 1.6, 1.6 /
      data c2     / -0.53,-0.309, -0.070, -0.53, -0.53, -0.53, -0.53, -0.53, -0.53, -0.53, -0.446,
     &              -0.362, -0.294, -0.186, -0.304, -0.578, -0.772, -1.046,
     &              -0.978, -0.638, -0.316, -0.07, -0.07, -0.07 /
      data c3     / -0.262, -0.019,  0.000, -0.262, -0.262, -0.262, -0.267, -0.302, -0.324, -0.339,
     &              -0.398, -0.458, -0.511, -0.592, -0.536, -0.406, -0.314,
     &              -0.185, -0.236, -0.491, -0.77, -0.986, -0.656, -0.422 /
      data c4     / -2.118, -2.016, -2.000, -2.118, -2.123, -2.145, -2.199, -2.277, -2.318, -2.309,
     &              -2.22, -2.146, -2.095, -2.066, -2.041, -2.0, -2.0, -2.0,
     &              -2.0, -2.0, -2.0, -2.0, -2.0, -2.0 /
      data c5     /  0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17,
     &               0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17,
     &               0.17, 0.17, 0.17 /
      data c6     /  5.6, 4.00, 4.00, 5.6, 5.6, 5.6, 5.74, 7.09, 8.05, 8.79, 7.6, 6.58,
     &               6.04, 5.3, 4.73, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0,
     &               4.0, 4.0 /
      data c7     /  0.28, 0.245, 0.000, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28,
     &               0.28, 0.28, 0.28, 0.28, 0.255, 0.161, 0.094, 0.0, 0.0,
     &               0.0, 0.0, 0.0 /
      data c8     / -0.12, 0.00, 0.00, -0.12, -0.12, -0.12, -0.12, -0.12, -0.099, -0.048, -0.012,
     &               0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     &               0.0, 0.0 /
      data c9     /  0.49, 0.358, 0.000, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49,
     &               0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.371, 0.154, 0.0,
     &               0.0, 0.0, 0.0 /
      data c10    /  1.058, 1.694, -0.820, 1.058, 1.102, 1.174, 1.272, 1.438, 1.604, 1.928, 2.194,
     &               2.351, 2.46, 2.587, 2.544, 2.133, 1.571, 0.406, -0.456,
     &              -0.82, -0.82, -0.82, -0.82, -0.82 /
      data c11    /  0.04, 0.092, 0.300, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04,
     &               0.04, 0.04, 0.04, 0.077, 0.15, 0.253, 0.3, 0.3, 0.3,
     &               0.3, 0.3, 0.3 /
      data c12    /  0.61, 1.000, 1.000, 0.61, 0.61, 0.61, 0.61, 0.61, 0.61, 0.61, 0.61, 0.61,
     &               0.61, 0.61, 0.883, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
     &               1.0, 1.0 /
      data k1     /  865., 400.0, 400.0, 865., 865., 908., 1054., 1086., 1032., 878., 748., 654.,
     &               587., 503., 457., 410., 400., 400., 400., 400., 400.,
     &               400., 400., 400. /
      data k2     / -1.186, -1.955, 0.000, -1.186, -1.219, -1.273, -1.346, -1.471, -1.624, -1.931,
     &              -2.188, -2.381, -2.518, -2.657, -2.669, -2.401, -1.955,
     &              -1.025, -0.299, 0.000, 0.000, 0.000, 0.000, 0.000 /
      data k3     /  1.839, 1.929, 2.744, 1.839, 1.84, 1.841, 1.843, 1.845, 1.847, 1.852, 1.856,
     &               1.861, 1.865, 1.874, 1.883, 1.906, 1.929, 1.974, 2.019,
     &               2.11, 2.2, 2.291, 2.517, 2.744 /
      data sig    /  0.526, 0.525, 0.825, 0.526, 0.528, 0.543, 0.572, 0.596, 0.603, 0.601, 0.589,
     &               0.585, 0.585, 0.583, 0.59, 0.612, 0.623, 0.637, 0.643,
     &               0.646, 0.648, 0.7, 0.76, 0.825 /
      data tlny   /  0.219, 0.203, 0.485, 0.219, 0.219, 0.235, 0.258, 0.292, 0.286, 0.280, 0.249,
     &               0.240, 0.215, 0.217, 0.214, 0.227, 0.255, 0.296, 0.296,
     &               0.326, 0.297, 0.359, 0.428, 0.485 /
      data slny   /  0.478, 0.484, 0.667, 0.478, 0.480, 0.489, 0.510, 0.520, 0.531, 0.532, 0.534,
     &               0.534, 0.544, 0.541, 0.550, 0.568, 0.568, 0.564, 0.571,
     &               0.558, 0.576, 0.601, 0.628, 0.667 /
      data cort   /  1.000, 0.538, 0.290, 1.000, 0.994, 0.979, 0.927, 0.880, 0.871, 0.885, 0.913,
     &               0.873, 0.848, 0.756, 0.631, 0.442, 0.290, 0.290, 0.290,
     &               0.290, 0.290, 0.290, 0.290, 0.290 /
      data cors   /  1.000, 0.691, 0.174, 1.000, 0.999, 0.989, 0.963, 0.922, 0.898, 0.890, 0.871,
     &               0.852, 0.831, 0.785, 0.735, 0.628, 0.534, 0.411, 0.331,
     &               0.289, 0.261, 0.200, 0.174, 0.174 /
      data c1_TA    /  0.690, 0.000, 0.000, 0.690, 0.690, 0.690, 0.690, 0.690, 0.690, 0.690,
     &               0.690, 0.690, 0.6806, 0.6658, 0.6543, 0.6334, 0.6186,
     &               0.5977, 0.5829, 0.5620, 0.5472, 0.5357, 0.5148, 0.5000 /

      nPer = 21
      c = 1.88
      n = 1.18

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c0T = c0(1)
         c1T = c1(1)
         c2T = c2(1)
         c3T = c3(1)
         c4T = c4(1)
         c5T = c5(1)
         c6T = c6(1)
         c7T = c7(1)
         c8T = c8(1)
         c9T = c9(1)
         c10T = c10(1)
         c11T = c11(1)
         c12T = c12(1)
         c1_TAT = c1_TA(1)
         k1T = k1(1)
         k2T = k2(1)
         k3T = k3(1)
         sigT = sig(1)
         tlnyT = tlny(1)
         slnyT = slny(1)
         cortT = cort(1)
         corsT = cors(1)
         goto 1011
C First check for the PGV case (i.e., specT=-1.0)
      elseif (specT .eq. -1.0) then
         period1 = period(2)
         c0T = c0(2)
         c1T = c1(2)
         c2T = c2(2)
         c3T = c3(2)
         c4T = c4(2)
         c5T = c5(2)
         c6T = c6(2)
         c7T = c7(2)
         c8T = c8(2)
         c9T = c9(2)
         c10T = c10(2)
         c11T = c11(2)
         c12T = c12(2)
         c1_TAT = c1_TA(2)
         k1T = k1(2)
         k2T = k2(2)
         k3T = k3(2)
         sigT = sig(2)
         tlnyT = tlny(2)
         slnyT = slny(2)
         cortT = cort(2)
         corsT = cors(2)
         goto 1011
C First check for the PGD case (i.e., specT=-2.0)
      elseif (specT .eq. -2.0) then
         period1 = period(3)
         c0T = c0(3)
         c1T = c1(3)
         c2T = c2(3)
         c3T = c3(3)
         c4T = c4(3)
         c5T = c5(3)
         c6T = c6(3)
         c7T = c7(3)
         c8T = c8(3)
         c9T = c9(3)
         c10T = c10(3)
         c11T = c11(3)
         c12T = c12(3)
         c1_TAT = c1_TA(3)
         k1T = k1(3)
         k2T = k2(3)
         k3T = k3(3)
         sigT = sig(3)
         tlnyT = tlny(3)
         slnyT = slny(3)
         cortT = cort(3)
         corsT = cors(3)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=4,nper-1+3
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Campbell&Bozorgnia (NGA-2008-TR) Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),c0(count1),c0(count2),
     +                   specT,c0T,iflag)
            call interp (period(count1),period(count2),c1(count1),c1(count2),
     +                   specT,c1T,iflag)
            call interp (period(count1),period(count2),c2(count1),c2(count2),
     +                   specT,c2T,iflag)
            call interp (period(count1),period(count2),c3(count1),c3(count2),
     +                   specT,c3T,iflag)
            call interp (period(count1),period(count2),c4(count1),c4(count2),
     +                   specT,c4T,iflag)
            call interp (period(count1),period(count2),c5(count1),c5(count2),
     +                   specT,c5T,iflag)
            call interp (period(count1),period(count2),c6(count1),c6(count2),
     +                   specT,c6T,iflag)
            call interp (period(count1),period(count2),c7(count1),c7(count2),
     +                   specT,c7T,iflag)
            call interp (period(count1),period(count2),c8(count1),c8(count2),
     +                   specT,c8T,iflag)
            call interp (period(count1),period(count2),c9(count1),c9(count2),
     +                   specT,c9T,iflag)
            call interp (period(count1),period(count2),c10(count1),c10(count2),
     +                   specT,c10T,iflag)
            call interp (period(count1),period(count2),c11(count1),c11(count2),
     +                   specT,c11T,iflag)
            call interp (period(count1),period(count2),c12(count1),c12(count2),
     +                   specT,c12T,iflag)
            call interp (period(count1),period(count2),c1_TA(count1),c1_TA(count2),
     +                   specT,c1_TAT,iflag)
            call interp (period(count1),period(count2),k1(count1),k1(count2),
     +                   specT,k1T,iflag)
            call interp (period(count1),period(count2),k2(count1),k2(count2),
     +                   specT,k2T,iflag)
            call interp (period(count1),period(count2),k3(count1),k3(count2),
     +                   specT,k3T,iflag)
            call interp (period(count1),period(count2),sig(count1),sig(count2),
     +                   specT,sigT,iflag)
            call interp (period(count1),period(count2),tlny(count1),tlny(count2),
     +                   specT,tlnyT,iflag)
            call interp (period(count1),period(count2),slny(count1),slny(count2),
     +                   specT,slnyT,iflag)
            call interp (period(count1),period(count2),cort(count1),cort(count2),
     +                   specT,cortT,iflag)
            call interp (period(count1),period(count2),cors(count1),cors(count2),
     +                   specT,corsT,iflag)
 1011 period1 = specT

C.....COMPUTE ROCK PGA VALUE FIRST.........................
C.....MAGNITUDE DEPENDENCE.................................
      IF (MAG .LE. 5.5) THEN
         TERM1 = C0(1) + C1(1)*MAG + c1_TA(1)*(mag-6.5)
      elseif (mag .le. 6.5) then
         TERM1 = C0(1) + C1(1)*MAG + c2(1)*(mag-5.5) + c1_TA(1)*(mag-6.5)
      ELSE
         TERM1 = C0(1) + C1(1)*MAG + C2(1)*(MAG-5.5)+c3(1)*(mag-6.5)
      ENDIF

C.....Distance dependence......
      R = SQRT( RRUP*RRUP+C6(1)*C6(1) )
      TERM2 = (C4(1) + C5(1)*MAG)*ALOG(R)

C.....SET UP STYLE OF FAULTING TERMS...........
      IF (depthtop .ge. 1.0) THEN
         Ztor = 1.0
      ELSE
         Ztor = depthtop
      ENDIF

C     Set mechanism term and corresponding Frv and Fnm values.
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C    -1,-0.5    Normal and NMl/Obl       -150 < Rake < -30.0
C     1, 0.5    Reverse and Rev/Obl        30 < Rake < 150.0
C       0       Strike-Slip                    Otherwise
      IF (Ftype .EQ. 0.0) THEN
         TERM3 = 0.0
      ELSEIF (Ftype .ge. 0.5) THEN
         TERM3 = C7(1)*Ztor
      ELSEIF (Ftype .le. -0.5) THEN
         TERM3 = C8(1)
      ENDIF

C.....SET UP HANGING WALL TERMS................
      IF (RBJF .EQ. 0.0) THEN
         FHWR = 1.0
      ELSEIF (rbjf .gt. 0.0 .and. depthtop .lt. 1.0) then
         dmax = max(Rrup,sqrt(Rbjf*Rbjf+1))
         FHWR = (dmax - RBJF)/dmax
      ELSEIF (rbjf .gt. 0.0 .and. depthtop .ge. 1.0) then
         FHWR = (Rrup - Rbjf)/Rrup
      ENDIF

      IF (MAG .LE. 6.0) THEN
         FHWM = 0.0
      ELSEIF (MAG .GT. 6.0 .AND. MAG .LT. 6.5) THEN
         FHWM = (MAG-6.0)*2.0
      ELSE
         FHWM = 1.0
      ENDIF

      IF (depthtop .GE. 20.0) THEN
         FHWZ = 0.0
      ELSE
         FHWZ = (20.0-depthtop)/20.0
      ENDIF

      IF (abs(dip) .le. 70.0) THEN
          FHWD = 1.0
      ELSE
         FHWD = (90.0 - abs(Dip))/20.0
      ENDIF

      TERM4 = C9(1)*FHWR*FHWM*FHWZ*FHWD

C.....NOW COMPUTE THE SITE CONDITION FACTORS...............
C.....(FOR PGA ROCK, VS=1100, i.e., Vs>k1)
      TERM5_RK = (C10(1) + K2(1)*n)*ALOG( 1100.0/K1(1) )

C.....NOW COMPUTE THE SEDIMENT DEPTH DEPENDENCE.............
      if (D25 .lt. 1.0) then
         TERM6 = C11(1)*(D25-1.0)
      elseif (D25 .GE. 1.0 .AND. D25 .LE. 3.0) then
         TERM6 = 0.0
      elseif (D25 .GT. 3.0) then
         TERM6 = c12(1)*k3(1)*exp(-0.75)*(1.0-exp(-0.25*(D25-3.0)))
      endif

      PGAROCK = EXP(TERM1+TERM2+TERM3+TERM4+TERM5_RK+TERM6)

C.....(For PGA Soil)
      if (vs .lt. k1(1) ) then
         term5 = c10(1)*alog(vs/k1(1)) +
     1           k2(1)*(alog(pgarock+c*((vs/k1(1))**n)) -
     2           alog(pgarock+c))
      elseif (vs .lt. 1100.0) then
         term5 = (c10(1) + k2(1)*n)*alog(vs/k1(1))
      elseif (vs .ge. 1100.0) then
         term5 = (c10(1) + k2(1)*n)*alog(1100.0/k1(1))
      endif

      pgasoil = alog(pgarock) - term5_rk + term5

C.....NOW COMPUTE THE GROUND MOTION VALUES.................
C.....MAGNITUDE DEPENDENCE.................................
      IF (MAG .LE. 5.5) THEN
         TERM1 = C0T + C1T*MAG + c1_TAT*(mag-6.5)
      elseif (mag .le. 6.5) then
         TERM1 = C0T + C1T*MAG + c2T*(mag-5.5)+ c1_TAT*(mag-6.5)
      ELSE
         TERM1 = C0T + C1T*MAG + C2T*(MAG-5.5)+c3T*(mag-6.5)
      ENDIF

C.....Distance dependence......
      R = SQRT( RRUP*RRUP+C6T*C6T )
      TERM2 = (C4T + C5T*MAG)*ALOG(R)

C.....SET UP STYLE OF FAULTING TERMS...........
      IF (depthtop .GE. 1.0) THEN
         Ztor = 1.0
      ELSE
         Ztor = depthtop
      ENDIF

C     Set mechanism term and corresponding Frv and Fnm values.
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C    -1,-0.5    Normal and NMl/Obl       -150 < Rake < -30.0
C     1, 0.5    Reverse and Rev/Obl        30 < Rake < 150.0
C       0       Strike-Slip                    Otherwise
      IF (Ftype .EQ. 0.0) THEN
         TERM3 = 0.0
      ELSEIF (Ftype .ge. 0.5) THEN
         TERM3 = C7T*Ztor
      ELSEIF (Ftype .le. -0.5) THEN
         TERM3 = C8T
      ENDIF

C.....SET UP HANGING WALL TERMS................
      IF (RBJF .EQ. 0.0) THEN
         FHWR = 1.0
      ELSEIF (rbjf .gt. 0.0 .and. depthtop .lt. 1.0) then
         dmax = max(Rrup,sqrt(Rbjf*Rbjf+1))
         FHWR = (dmax - RBJF)/dmax
      ELSEIF (rbjf .gt. 0.0 .and. depthtop .ge. 1.0) then
         FHWR = (Rrup - Rbjf)/Rrup
      ENDIF

      IF (MAG .LE. 6.0) THEN
         FHWM = 0.0
      ELSEIF (MAG .GT. 6.0 .AND. MAG .LT. 6.5) THEN
         FHWM = (MAG-6.0)*2.0
      ELSE
         FHWM = 1.0
      ENDIF

      IF (depthtop .GE. 20.0) THEN
         FHWZ = 0.0
      ELSE
         FHWZ = (20.0-depthtop)/20.0
      ENDIF

      IF (abs(dip) .le. 70.0) THEN
          FHWD = 1.0
      ELSE
         FHWD = (90.0 - abs(Dip))/20.0
      ENDIF

      TERM4 = C9T*FHWR*FHWM*FHWZ*FHWD

C.....NOW COMPUTE THE SITE CONDITION FACTORS...............
      IF (VS .LT. K1T ) THEN
         TERM5 = C10T*ALOG( VS/K1T ) +
     1           K2T*( ALOG( PGAROCK+c*( (VS/K1T)**N) ) -
     2           ALOG( PGAROCK+c ) )
      ELSEIF (vs .lt. 1100.0) then
         TERM5 = ( C10T+K2T*n )*ALOG( VS/K1T )
      ELSEIF (vs .ge. 1100.0) then
         TERM5 = ( C10T+K2T*n )*ALOG( 1100.0/K1T )
      ENDIF

C.....NOW COMPUTE THE SEDIMENT DEPTH DEPENDENCE.............
      IF (D25 .LT. 1.0) THEN
         TERM6 = C11T*(D25-1.0)
      ELSEIF (D25 .GE. 1.0 .AND. D25 .LE. 3.0) THEN
         TERM6 = 0.0
      ELSEIF (D25 .GT. 3.0)  THEN
         TERM6 = c12T*k3T*exp(-0.75)*( 1.0 - exp(-0.25*(D25-3.0)))
      ENDIF

      LnY = (TERM1+TERM2+TERM3+TERM4+TERM5+TERM6)

C.....Check SA<PGAsoil for periods less than T=0.2 sec. Set SA equal to
C     PGASoil value if this case happens...........
c      pgasoil = exp(alog(pgarock) + term5 + term6)
      IF (period1 .lt. 0.2 .and. exp(lnY) .lt. pgasoil) then
         lnY = alog(pgasoil)
      endif

C.....Now compute the sigma value..........
c      SIGMAT = SIGT

C     Set the Sigma Values
c     Compute parital derivative of alog(soil amp) w.r.t. alog(rock PGA)
      if ( vs .ge. k1T) then
        dAmp_dPGA = 0.
      else
        dAmp_dPGA = k2T*pgaRock * ( -1. / (pgaRock+1.88)
     1              + 1./ (pgaRock + 1.88*(vs/k1T)**(1.18)) )
      endif

C     Compute the tau term
c      tau =   sqrt (tlnYT**2.0 + dAmp_dPGA*dAmp_dPGA*tlnY(1)*tlnY(1) +
c     1            2.0*dAmp_dPGA*cortT*tlnYT*tlnY(1) )
      tau = tlnYt

C     Compute the sigma term (SigmaAF=0.3)
      sigma = sqrt (slnYT**2.0 + dAmp_dPGA*dAmp_dPGA*(slnY(1)*slnY(1)-0.3*0.3) +
     1            2.0*dAmp_dPGA*corsT*sqrt(slnYT*slnYT-0.3*0.3)*sqrt(slnY(1)*slnY(1)-0.3*0.3) )

      sigmaT = sqrt (tau*tau + sigma*sigma)

      period2 = period1

C     Convert ground motion to units of gals.
      lnY = lnY + 6.89
      sigma = sigmaT

      return
      END

c ---------------------------------------------------------------------
C     *** Boore and Atkinson NGA (NGA-2008) ***
c ---------------------------------------------------------------------

      subroutine BA_NGA_2008TR ( mag, Rbjf, specT,
     1                     period2, lnY, sigma, iflag, vs, ftype, pga4nl )

      parameter (MAXPER=23)
      REAL Period(MAXPER), e01(MAXPER), e02(MAXPER), e03(MAXPER), e04(MAXPER)
      real e05(MAXPER), e06(MAXPER), e07(MAXPER), e08(MAXPER)
      real c01(MAXPER), c02(MAXPER), c03(MAXPER), c04(MAXPER)
      real h(MAXPER), blin(MAXPER), b1(MAXPER), b2(MAXPER)
      real sigt(MAXPER), c1_TA(MAXPER)
      real a1, a2, c, d, deltaX, deltaY, specT

      real e01p, e02p, e03p, e04p, e05p, e06p, e07p, e08p, mhp
      real c01p, c02p, c03p, c04p, rrefp, hp, c1_TAp
      real mrefp

      REAL MAG, RBJF, VS, mh(MAXPER), mref, rref, vref, v1, v2, pga_low
      real ftype, Rp
      real sigmaT, lnY, mechS, mechN, mechR, mechU, pga4nl
      INTEGER iFlag, count1, count2

      real e01T, e02T, e03T, e04T, e05T, e06T, e07T, e08T
      real c01T, c02T, c03T, c04T, hT, blinT, b1T, b2T, mhT
      real c1_TAT
      DATA Period / 0.00, -1.00, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1,
     1              0.15, 0.2, 0.25, 0.3, 0.4, 0.5, 0.75, 1.00, 1.5,
     2              2.00, 3.00, 4.00, 5.00, 7.5, 10.00 /
      DATA e01 / -0.53804, 5.00121, -0.52883, -0.52192, -0.45285,
     1           -0.28476, 0.00767, 0.20109, 0.46128, 0.5718, 0.51884,
     2            0.43825, 0.3922, 0.18957, -0.21338, -0.46896,
     3           -0.86271, -1.22652, -1.82979, -2.24656, -1.28408,
     4           -1.43145, -2.15446 /
      DATA e02 / -0.5035, 5.04727, -0.49429, -0.48508, -0.41831,
     1           -0.25022, 0.04912, 0.23102, 0.48661, 0.59253,
     2            0.53496, 0.44516, 0.40602, 0.19878, -0.19496,
     3           -0.43443, -0.79593, -1.15514, -1.7469, -2.15906,
     4           -1.2127, -1.31632, -2.16137 /
      DATA  e03 / -0.75472, 4.63188, -0.74551, -0.73906, -0.66722,
     1            -0.48462, -0.20578, 0.03058, 0.30185, 0.4086,
     2             0.3388, 0.25356, 0.21398, 0.00967, -0.49176,
     3            -0.78465, -1.20902, -1.57697, -2.22584, -2.58228,
     4            -1.50904, -1.81022, -2.53323 /
      DATA e04 / -0.5097, 5.0821, -0.49966, -0.48895, -0.42229,
     1           -0.26092, 0.02706, 0.22193, 0.49328, 0.61472,
     2            0.57747, 0.5199, 0.4608, 0.26337, -0.10813,
     3           -0.3933, -0.88085, -1.27669, -1.91814, -2.38168,
     4           -1.41632, -1.59217, -2.14635 /
      DATA e05 / 0.28805, 0.18322, 0.28897, 0.25144, 0.17976,
     1           0.06369, 0.0117, 0.04697, 0.1799, 0.52729,
     2           0.6088, 0.64472, 0.7861, 0.76837, 0.75179,
     3           0.6788, 0.70689, 0.77989, 0.77966, 1.24961,
     4           0.14271, 0.52407, 0.40387 /
      DATA e06 / -0.10164, -0.12736, -0.10019, -0.11006, -0.12858,
     1           -0.15752, -0.17051, -0.15948, -0.14539, -0.12964,
     2           -0.13843, -0.15694, -0.07843, -0.09054, -0.14053,
     3           -0.18257, -0.2595, -0.29657, -0.45384, -0.35874,
     4           -0.39006, -0.37578, -0.48492 /
      DATA e07 / 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1           0.00102, 0.08607, 0.10601, 0.02262, 0, 0.10302,
     2           0.05393, 0.19082, 0.29888, 0.67466, 0.79508,
     3           0.0, 0.0, 0.0 /
      DATA e08 / 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     2           0.0, 0.0, 0.0 /
      DATA c01 / -0.6605, -0.8737, -0.6622, -0.666, -0.6901, -0.717,
     1           -0.7205, -0.7081, -0.6961, -0.583, -0.5726, -0.5543,
     2           -0.6443, -0.6914, -0.7408, -0.8183, -0.8303, -0.8285,
     3           -0.7844, -0.6854, -0.5096, -0.3724, -0.09824 /
      DATA c02 / 0.1197, 0.1006, 0.12, 0.1228, 0.1283, 0.1317, 0.1237,
     1           0.1117, 0.09884, 0.04273, 0.02977, 0.01955, 0.04394,
     2           0.0608, 0.07518, 0.1027, 0.09793, 0.09432, 0.07282,
     3           0.03758, -0.02391, -0.06568, -0.138 /
      DATA c03 / -0.01151, -0.00334, -0.01151, -0.01151, -0.01151,
     1           -0.01151, -0.01151, -0.01151, -0.01113, -0.00952,
     2           -0.00837, -0.0075, -0.00626, -0.0054, -0.00409,
     3           -0.00334, -0.00255, -0.00217, -0.00191, -0.00191,
     4           -0.00191, -0.00191, -0.00191 /
      DATA c04 / 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     2           0.0, 0.0, 0.0 /
      DATA h / 1.35, 2.54, 1.35, 1.35, 1.35, 1.35, 1.55, 1.68, 1.86,
     1         1.98, 2.07, 2.14, 2.24, 2.32, 2.46, 2.54, 2.66, 2.73,
     2         2.83, 2.89, 2.93, 3.00, 3.04 /
      DATA blin / -0.36, -0.6, -0.36, -0.34, -0.33, -0.29, -0.23,
     1            -0.25, -0.28, -0.31, -0.39, -0.44, -0.5, -0.6,
     2            -0.69, -0.7, -0.72, -0.73, -0.74, -0.75, -0.75,
     3            -0.692, -0.65 /
      DATA b1 / -0.64, -0.5, -0.64, -0.63, -0.62, -0.64, -0.64,
     1          -0.6, -0.53, -0.52, -0.52, -0.52, -0.51, -0.5,
     2          -0.47, -0.44, -0.4, -0.38, -0.34, -0.31, -0.291,
     3          -0.247, -0.215 /
      DATA b2 / -0.14, -0.06, -0.14, -0.12, -0.11, -0.11, -0.11,
     1          -0.13, -0.18, -0.19, -0.16, -0.14, -0.1, -0.06,
     2           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /
      DATA sigT / 0.564, 0.56, 0.566, 0.566, 0.576, 0.589, 0.606,
     1             0.608, 0.594, 0.596, 0.592, 0.608, 0.603, 0.615,
     2             0.645, 0.647, 0.679, 0.7, 0.695, 0.698, 0.744,
     3             0.787, 0.801 /
      DATA mh / 6.75, 8.5, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75,
     1          6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75,
     2          6.75, 6.75, 8.5, 8.5, 8.5 /
      DATA c1_TA / 0.5500, 0.00, 0.5500, 0.5500, 0.5500,
     1           0.5500, 0.5500, 0.5500, 0.5500, 0.5500,
     2           0.5500, 0.5500, 0.5500, 0.5500, 0.5149,
     3           0.4900, 0.4549, 0.4300, 0.3949, 0.3700,
     4           0.3091, 0.2190, 0.1500 /

C     Set parameters
      mref = 4.5
      rref = 1.0
      vref = 760.0
      v1 = 180.0
      v2 = 300.0
      pga_low = 0.06
c     Parameters to compute PGA rock
      e01p = -0.53804
      e02p = -0.50350
      e03p = -0.75472
      e04p = -0.50970
      e05p = 0.28805
      e06p = -0.10164
      e07p = 0.0
      e08p = 0.0
      mhp = 6.75
      c01p = -0.66050
      c02p = 0.11970
      c03p = -0.01151
      c04p = 0.0
      mrefp = 4.5
      c1_TAp=0.55
C    Reference distance for pga4nl cases is set to 1.0km rather than
C    5.0km based on errata published on Boore web site.
      rrefp = 1.0
      hp = 1.35

C First check for the PGA case (i.e., specT=0.0)
      nPer = 21
      if (specT .eq. 0.0) then
         period1 = period(1)
         e01T = e01(1)
         e02T = e02(1)
         e03T = e03(1)
         e04T = e04(1)
         e05T = e05(1)
         e06T = e06(1)
         e07T = e07(1)
         e08T = e08(1)
         c01T = c01(1)
         c02T = c02(1)
         c03T = c03(1)
         c04T = c04(1)
         hT = h(1)
         blinT = blin(1)
         b1T = b1(1)
         b2T = b2(1)
         sigmaT = sigT(1)
         mhT = mh(1)
         c1_TAT=c1_TA(1)
         goto 1011
C Check for the PGV case (i.e., specT=-1.0)
      elseif (specT .eq. -1.0) then
         period1 = period(2)
         e01T = e01(2)
         e02T = e02(2)
         e03T = e03(2)
         e04T = e04(2)
         e05T = e05(2)
         e06T = e06(2)
         e07T = e07(2)
         e08T = e08(2)
         c01T = c01(2)
         c02T = c02(2)
         c03T = c03(2)
         c04T = c04(2)
         hT = h(2)
         blinT = blin(2)
         b1T = b1(2)
         b2T = b2(2)
         sigmaT = sigT(2)
         mhT = mh(2)
         c1_TAT=c1_TA(2)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=3,nper-1+2
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Boore&Atkinson (NGA-2008-TR) Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),e01(count1),e01(count2),
     +                   specT,e01T,iflag)
            call interp (period(count1),period(count2),e02(count1),e02(count2),
     +                   specT,e02T,iflag)
            call interp (period(count1),period(count2),e03(count1),e03(count2),
     +                   specT,e03T,iflag)
            call interp (period(count1),period(count2),e04(count1),e04(count2),
     +                   specT,e04T,iflag)
            call interp (period(count1),period(count2),e05(count1),e05(count2),
     +                   specT,e05T,iflag)
            call interp (period(count1),period(count2),e06(count1),e06(count2),
     +                   specT,e06T,iflag)
            call interp (period(count1),period(count2),e07(count1),e07(count2),
     +                   specT,e07T,iflag)
            call interp (period(count1),period(count2),e08(count1),e08(count2),
     +                   specT,e08T,iflag)
            call interp (period(count1),period(count2),c01(count1),c01(count2),
     +                   specT,c01T,iflag)
            call interp (period(count1),period(count2),c02(count1),c02(count2),
     +                   specT,c02T,iflag)
            call interp (period(count1),period(count2),c03(count1),c03(count2),
     +                   specT,c03T,iflag)
            call interp (period(count1),period(count2),c04(count1),c04(count2),
     +                   specT,c04T,iflag)
            call interp (period(count1),period(count2),h(count1),h(count2),
     +                   specT,hT,iflag)
            call interp (period(count1),period(count2),blin(count1),blin(count2),
     +                   specT,blinT,iflag)
            call interp (period(count1),period(count2),b1(count1),b1(count2),
     +                   specT,b1T,iflag)
            call interp (period(count1),period(count2),b2(count1),b2(count2),
     +                   specT,b2T,iflag)
            call interp (period(count1),period(count2),mh(count1),mh(count2),
     +                   specT,mhT,iflag)
            call interp (period(count1),period(count2),sigT(count1),sigT(count2),
     +                   specT,sigmaT,iflag)
            call interp (period(count1),period(count2),c1_TA(count1),c1_TA(count2),
     +                   specT,c1_TAT,iflag)
 1011 period1 = specT

C.....Set the mechanism terms based on ftype............
C     Set mechanism term and corresponding Frv and Fnm values.
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C      -1       Normal                    -120 < Rake <  -60
C     -0.5      Normal/Oblique            -150 < Rake < -120
C                                          -60 < Rake <  -30
C       0       Strike-Slip               -180 < Rake < -150
C                                          -30 < Rake <   30
C                                          150 < Rake <  180
C      0.5      Reverse/Oblique             30 < Rake <   60
C                                          120 < Rake <  150
C       1       Reverse                     60 < Rake <  120
      if (ftype .eq. -1.0) then
         mechS = 0.0
         mechN = 1.0
         mechR = 0.0
         mechU = 0.0
      elseif (ftype .eq. -0.5) then
         mechS = 0.0
         mechN = 1.0
         mechR = 0.0
         mechU = 0.0
      elseif (ftype .eq. 0.0) then
         mechS = 1.0
         mechN = 0.0
         mechR = 0.0
         mechU = 0.0
      elseif (ftype .eq. 0.5) then
         mechS = 0.0
         mechN = 0.0
         mechR = 1.0
         mechU = 0.0
      elseif (ftype .eq. 1.0) then
         mechS = 0.0
         mechN = 0.0
         mechR = 1.0
         mechU = 0.0
      endif

C.....First compute the Reference Rock PGA value.........
C.....MAGNITUDE DEPENDENCE.................................
      if (mag .le. mhp) then
         term1 = e01p*mechU + e02p*mechS + e03p*mechN + e04p*mechR +
     1           e05p*(mag-mhp) + e06p*(mag-mhp)**2.0+ c1_TAp*(mag-mhp)
      else
         term1 = e01p*mechU + e02p*mechS + e03p*mechN + e04p*mechR +
     1           e07p*(mag-mhp) + e08p*(mag-mhp)**2.0
      endif
C.....Distance dependence......
      Rp = SQRT( Rbjf*Rbjf+hp*hp )

      TERM2 = ( c01p + c02p*(mag-mrefp) ) * alog(Rp/rrefp) +
     1        ( c03p + c04p*(mag-mrefp) ) * (Rp-rrefp)
      pga4nl = exp(term1+term2)

C.....Now compute the requested ground motion value........
C.....MAGNITUDE DEPENDENCE.................................
      if (mag .le. mhT) then
         term1 = e01T*mechU + e02T*mechS + e03T*mechN + e04T*mechR +
     1           e05T*(mag-mhT) + e06T*(mag-mhT)**2.0+ c1_TAT*(mag-mhT)
      else
         term1 = e01T*mechU + e02T*mechS + e03T*mechN + e04T*mechR +
     1           e07T*(mag-mhT) + e08T*(mag-mhT)**2.0
      endif

C.....Distance dependence......
      R = SQRT( Rbjf*Rbjf+hT*hT )

      TERM2 = ( c01T + c02T*(mag-mref) ) * alog(R/rref) +
     1        ( c03T + c04T*(mag-mref) ) * (R-rref)

C.....Site Response Term.........
C.....First compute Bnl slope term......
      if (vs .le. v1) then
         bnl = b1T
      elseif (vs .le. v2) then
        bnl = (b1T-b2T)*(alog(vs/v2)/alog(v1/v2)) + b2T
      elseif (vs .lt. vref) then
        bnl = b2t*alog(vs/vref)/alog(v2/vref)
      else
        bnl = 0.0
      endif

c.....next compute the slope coefficients for model....
      a1 = 0.03
      a2 = 0.09
      deltaX = alog(a2/a1)
      deltaY = bnl*alog(a2/pga_low)
      c = (3.0*deltaY-bnl*deltaX)/(deltaX*deltaX)
      d = -1.0*(2.0*deltaY-bnl*deltaX)/(deltaX*deltaX*deltaX)

C.....Now compute the site term........
      if (pga4nl .le. a1) then
          TERM3 = blinT*alog(vs/vref) + bnl*alog(pga_low/0.1)
      elseif (pga4nl .le. a2) then
          TERM3 = blinT*alog(vs/vref) + bnl*alog(pga_low/0.1)
     1            + c*(alog(pga4nl/a1))**2.0
     2            + d*(alog(pga4nl/a1))**3.0
      elseif (pga4nl .gt. a2) then
          TERM3 = blinT*alog(vs/vref) + bnl*alog(pga4nl/0.1)
      endif

      lnY = term1 + term2 + term3

      period2 = period1

C     Convert ground motion to units of gals.
      lnY = lnY + 6.89
      sigma = sigmaT

      return
      END





C  ***** PEER NGA-West 2 MODELS (2013) **********

c ---------------------------------------------------------------------
C ** Idriss (NGA-2013) Horizontal **
C     PEER Report 2013/08
C        "NGA-West2 Model for Estimating Average Horizontal Values of
C            Pseudo-Absolute Spectral Accelerations Generated by
C            Crustal Earthquakes"
C         I. M. Idriss
C     Notes:
C        Applicable Range (see Abstract):
C           5 <= M <= 8.5
C           Vs>=450 m/sec
C              for Vs>1200 use Vs=1200
C           Rrup <= 150 km
C        Mechanisms: Strike-slip and Norml (0)
C                    Reverse and Oblique (1)
c ---------------------------------------------------------------------
      Subroutine I_NGAWest2_2013 ( m, Rrup, ftype, vs30, specT,
     1                     period2, lnY, sigma, iflag )

C     Last Updated: 5/18/13

      parameter (MAXPER=23)
      REAL Period(MAXPER), a1mlt675(MAXPER), a2mlt675(MAXPER), a3mlt675(MAXPER)
      REAL b1mlt675(MAXPER), b2mlt675(MAXPER)
      REAL a1(MAXPER), a2(MAXPER), a3(MAXPER), b1(MAXPER), b2(MAXPER)
      real gam(MAXPER), phi(MAXPER), xsi(MAXPER)

      REAL M, Rrup, Vs30
      REAL SOF, period2, lnY, PhiT, gamT, XsiT, ftype

      real a1T, a2T, a3T, b1T, b2T, a1mlt675T, a2mlt675T, a3mlt675T, b1mlt675T, b2mlt675T
      integer iflag, count1, count2

      data Period / 0.0, 0.01, 0.02, 0.03, 0.04, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25,
     1              0.3, 0.4, 0.5, 0.75, 1.0, 1.5, 2.0, 3.0, 4.0, 5.0, 7.5, 10.0 /
      data a1mlt675 / 7.0887, 7.0887, 7.1157, 7.2087, 7.3287, 6.2638, 5.9051,
     1                7.5791, 8.019, 9.2812, 9.5804, 9.8912, 9.5342, 9.2142,
     2                8.3517, 7.0453, 5.1307, 3.361, 0.1784, -2.4301, -4.357,
     3               -7.8275, -9.2857 /
      data a2mlt675 / 0.2058, 0.2058, 0.2058, 0.2058, 0.2058, 0.0625, 0.1128,
     1                0.0848, 0.1713, 0.1041, 0.0875, 0.0003, 0.0027, 0.0399,
     2                0.0689, 0.16, 0.2429, 0.3966, 0.756, 0.9283, 1.1209,
     3                1.4016, 1.5574 /
      data a3mlt675 / 0.0589, 0.0589, 0.0589, 0.0589, 0.0589, 0.0417, 0.0527,
     1                0.0442, 0.0329, 0.0188, 0.0095, -0.0039, -0.0133, -0.0224,
     2               -0.0267, -0.0198, -0.0367, -0.0291, -0.0214, -0.024, -0.0202,
     3               -0.0219, -0.0035 /
      data b1mlt675 / 2.9935, 2.9935, 2.9935, 2.9935, 2.9935, 2.8664, 2.9406,
     1                3.019, 2.7871, 2.8611, 2.8289, 2.8423, 2.83, 2.856, 2.7544,
     2                2.7339, 2.68, 2.6837, 2.6907, 2.5782, 2.5468, 2.4478, 2.3922 /
      data b2mlt675 / -0.2287, -0.2287, -0.2287, -0.2287, -0.2287, -0.2418,
     1                -0.2513, -0.2516, -0.2236, -0.2229, -0.22, -0.2284, -0.2318,
     2                -0.2337, -0.2392, -0.2398, -0.2417, -0.245, -0.2389, -0.2514,
     3                -0.2541, -0.2593, -0.2586 /
      data xsi / -0.854, -0.854, -0.854, -0.854, -0.854, -0.631, -0.591, -0.757,
     1           -0.911, -0.998, -1.042, -1.03, -1.019, -1.023, -1.056, -1.009,
     2           -0.898, -0.851, -0.761, -0.675, -0.629, -0.531, -0.586 /
      data gam / -0.0027, -0.0027, -0.0027, -0.0027, -0.0027, -0.0061, -0.0056,
     1           -0.0042, -0.0046, -0.003, -0.0028, -0.0029, -0.0028, -0.0021,
     2           -0.0029, -0.0032, -0.0033, -0.0032, -0.0031, -0.0051, -0.0059,
     3           -0.0057, -0.0061 /
      data phi / 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08,
     1           0.08, 0.08, 0.08, 0.08, 0.06, 0.04, 0.02, 0.02, 0.0, 0.0, 0.0, 0.0 /


      data a1 / 9.0138, 9.0138, 9.0408, 9.1338, 9.2538, 7.9837, 7.756, 9.4252,
     1          9.6242, 11.13, 11.3629, 11.7818, 11.6097, 11.4484, 10.9065,
     2          9.8565, 8.3363, 6.8656, 4.1178, 1.8102, 0.0977, -3.0563, -4.4387 /
      data a2 / -0.0794, -0.0794, -0.0794, -0.0794, -0.0794, -0.1923, -0.1614,
     1          -0.1887, -0.0665, -0.1698, -0.1766, -0.2798, -0.3048, -0.2911,
     2          -0.3097, -0.2565, -0.232, -0.1226, 0.1724, 0.3001, 0.4609,
     3           0.6948, 0.8393 /
      data a3 / 0.0589, 0.0589, 0.0589, 0.0589, 0.0589, 0.0417, 0.0527, 0.0442,
     1          0.0329, 0.0188, 0.0095, -0.0039, -0.0133, -0.0224, -0.0267,
     2         -0.0198, -0.0367, -0.0291, -0.0214, -0.024, -0.0202,
     3         -0.0219, -0.0035 /
      data b1 / 2.9935, 2.9935, 2.9935, 2.9935, 2.9935, 2.7995, 2.8143,
     1          2.8131, 2.4091, 2.4938, 2.3773, 2.3772, 2.3413, 2.3477, 2.2042,
     2          2.1493, 2.0408, 2.0013, 1.9408, 1.7763, 1.703, 1.5212, 1.4195 /
      data b2 / -0.2287, -0.2287, -0.2287, -0.2287, -0.2287, -0.2319, -0.2326,
     1          -0.2211, -0.1676, -0.1685, -0.1531, -0.1595, -0.1594, -0.1584,
     2          -0.1577, -0.1532, -0.147, -0.1439, -0.1278, -0.1326, -0.1291,
     3          -0.122, -0.1145 /


C Find the requested spectral period and corresponding coefficients
      nPer = 23
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         a1T     = a1(1)
         a2T     = a2(1)
         a3T     = a3(1)
         b1T     = b1(1)
         b2T     = b2(1)
         a1mlt675T = a1mlt675(1)
         a2mlt675T = a2mlt675(1)
         a3mlt675T = a3mlt675(1)
         b1mlt675T = b1mlt675(1)
         b2mlt675T = b2mlt675(1)
         xsiT   = xsi(1)
         gamT   = gam(1)
         phiT   = phi(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Idriss (NGA West2-2013) Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),a1(count1),a1(count2),
     +                   specT,a1T,iflag)
            call interp (period(count1),period(count2),a2(count1),a2(count2),
     +                   specT,a2T,iflag)
            call interp (period(count1),period(count2),a3(count1),a3(count2),
     +                   specT,a3T,iflag)
            call interp (period(count1),period(count2),b1(count1),b1(count2),
     +                   specT,b1T,iflag)
            call interp (period(count1),period(count2),b2(count1),b2(count2),
     +                   specT,b2T,iflag)
            call interp (period(count1),period(count2),a1mlt675(count1),a1mlt675(count2),
     +                   specT,a1mlt675T,iflag)
            call interp (period(count1),period(count2),a2mlt675(count1),a2mlt675(count2),
     +                   specT,a2mlt675T,iflag)
            call interp (period(count1),period(count2),a3mlt675(count1),a3mlt675(count2),
     +                   specT,a3mlt675T,iflag)
            call interp (period(count1),period(count2),b1mlt675(count1),b1mlt675(count2),
     +                   specT,b1mlt675T,iflag)
            call interp (period(count1),period(count2),b2mlt675(count1),b2mlt675(count2),
     +                   specT,b2mlt675T,iflag)
            call interp (period(count1),period(count2),phi(count1),phi(count2),
     +                   specT,phiT,iflag)
            call interp (period(count1),period(count2),gam(count1),gam(count2),
     +                   specT,gamT,iflag)
            call interp (period(count1),period(count2),xsi(count1),xsi(count2),
     +                   specT,xsiT,iflag)

 1011 period1 = specT

C.....Compute the Ground motion.......

C.....Set the mechanism term.....................
C     Strike-slip and normal events --> SOF = 0
C     Reverse and oblique events     --> SOF = 1
C     Otherwise assume SOF = 0
      if (ftype .eq. 1.0) then
         SOF = 1.0
      else
         SOF = 0.0
      endif

      if (m .lt. 6.75) then
         lnY = a1mlt675T + a2mlt675T*m + a3mlt675T*(8.5 - m)**2.0 - (b1mlt675T+b2mlt675T*m) * alog(Rrup+10.0) +
     1         xsiT*alog(Vs30) + gamT*rRup + SOF*phiT
      else
         lnY = a1T + a2T*m + a3T*(8.5 - m)**2.0 - (b1T+b2T*m) * alog(Rrup+10.0) +
     1         xsiT*alog(Vs30) + gamT*rRup + SOF*phiT
      endif

C     Convert ground motion to units of gals.
      lnY = lnY + 6.89

C     Compute Sigma which is Period and magnitude dependent.
C     Note report does not state a limit on sigma for M<5 but
C     Since model is only applicable for M>=5 a limit is retained
C     for sigma with M<5 equal to M=5 values.
      if (specT .le. 0.05) then
         if (m .le. 5.0) then
            sigma = 1.18 + 0.035*alog(0.05) - 0.06*5.0
         elseif (m .ge. 7.5) then
            sigma = 1.18 + 0.035*alog(0.05) - 0.06*7.5
         else
            sigma = 1.18 + 0.035*alog(0.05) - 0.06*m
         endif
      elseif (specT .ge. 3.0) then
         if (m .le. 5.0) then
            sigma = 1.18 + 0.035*alog(3.00) - 0.06*5.0
         elseif (m .ge. 7.5) then
            sigma = 1.18 + 0.035*alog(3.00) - 0.06*7.5
         else
            sigma = 1.18 + 0.035*alog(3.00) - 0.06*m
         endif
      else
         if (m .le. 5.0) then
            sigma = 1.18 + 0.035*alog(specT) - 0.06*5.0
         elseif (m .ge. 7.5) then
            sigma = 1.18 + 0.035*alog(specT) - 0.06*7.5
         else
            sigma = 1.18 + 0.035*alog(specT) - 0.06*m
         endif
      endif

      period2 = period1

      return
      end


c ---------------------------------------------------------------------------
C     *** Boore, Stewart, Seyhan and Atkinson NGA West 2 (NGA West2-2013) ***
C         Earthquake Spectra Report:
C            "NGA-West2 Equations for Predicting PGA, PGV, and 5%-Damped
C                PSA for Shallow Crustal Earthquakes."
C             D. M. Boore, J. P. Stewart, E. Seyhan, and G. M. Atkinson
C     Notes:
C        Applicable Range:
C            3.0 < M < 8.5 (Strike-Slip)
C            3.0 < M < 7.0 (Normal)
C            Distance < 300km
C            150 < Vs < 1500 m/s
C            0.0 < Z1 < 3.0 km
C            Region Flag:
C               0 = Global
C               1 = China-Turkey
C               2 = Italy-Japan
c ---------------------------------------------------------------------------

      subroutine BSSA_NGAWest2_2013 ( mag, Rbjf, specT,
     1        period2, lnY, sigma, iflag, vs, ftype, pga4nl, z10, regionflag, basinflag,
     1        phi, tau )

C     Last Updated: 9/16/13

      parameter (MAXPER=107)
      REAL Period(MAXPER), c1(MAXPER), c2(MAXPER), c3(MAXPER)
      real h(MAXPER), DC3ChinaTrk(MAXPER), DC3ItalyJapan(MAXPER), e0(MAXPER)
      real e1(MAXPER), e2(MAXPER), e3(MAXPER), e4(MAXPER)
      real e5(MAXPER), e6(MAXPER), mh(MAXPER), c(MAXPER), Vc(MAXPER)
      real phi2(MAXPER), phi3(MAXPER), f4(MAXPER)
      real l1(MAXPER), l2(MAXPER), t1(MAXPER), t2(MAXPER)
      real f5(MAXPER), rjbbar(MAXPER), Dfr(MAXPER), Dfv(MAXPER)
      real R1(MAXPER), R2(MAXPER), DC3Global(MAXPER), f6(MAXPER), f7(MAXPER)

      real Mref, Rref, Vref, f1, f3, DC3Glb, specT
      REAL MAG, RBJF, VS, z10
      real ftype, Rp, R
      INTEGER iFlag, count1, count2, regionflag, basinflag
      real sigmaT, lnY, mechS, mechN, mechR, pga4nl
      real f2, flin, fBasin, phi, tau
      real c1T, c2T, c3T, hT, Dc3ctkT, Dc3JpnT, e0T, e1T, e2T, e3T, e4T
      real e5T, e6T, mhT, cT, VcT, phi2T, phi3T, f4T, l1T, l2T, t1T, t2T
      real deltaz1, f5T, rjbbarT, DfrT, DfvT, R1T, R2T, DC3GlobalT
      real DC3ChinaTrkT, DC3ItalyJapanT, f6T, f7T

      Data Period / 0.0, -1.0, 0.01, 0.02, 0.022, 0.025, 0.029, 0.03, 0.032, 0.035, 0.036, 0.04, 0.042,
     1     0.044, 0.045, 0.046, 0.048, 0.05, 0.055, 0.06, 0.065, 0.067, 0.07, 0.075, 0.08, 0.085, 0.09,
     1     0.095, 0.1, 0.11, 0.12, 0.13, 0.133, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.2, 0.22, 0.24, 0.25,
     1     0.26, 0.28, 0.29, 0.3, 0.32, 0.34, 0.35, 0.36, 0.38, 0.4, 0.42, 0.44, 0.45, 0.46, 0.48, 0.5, 0.55,
     1     0.6, 0.65, 0.667, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9,
     1     2.0, 2.2, 2.4, 2.5, 2.6, 2.8, 3.0, 3.2, 3.4, 3.5, 3.6, 3.8, 4.0, 4.2, 4.4, 4.6, 4.8, 5.0, 5.5, 6.0,
     1     6.5, 7.0, 7.5, 8.0, 8.5, 9.0, 9.5, 10.0 /
      Data e0 / 0.4473, 5.037, 0.4534, 0.48598, 0.49866, 0.52283, 0.55949, 0.56916, 0.58802, 0.61636, 0.62554,
     1     0.66281, 0.68087, 0.69882, 0.70822, 0.71779, 0.73574, 0.75436, 0.7996, 0.84394, 0.88655, 0.9027, 0.92652,
     1     0.96447, 1.0003, 1.034, 1.0666, 1.0981, 1.1268, 1.1785, 1.223, 1.2596, 1.2692, 1.2883, 1.3095, 1.3235,
     1     1.3306, 1.3327, 1.3307, 1.3255, 1.3091, 1.2881, 1.2766, 1.2651, 1.2429, 1.2324, 1.2217, 1.2007, 1.179,
     1     1.1674, 1.1558, 1.1305, 1.1046, 1.0782, 1.0515, 1.0376, 1.0234, 0.99719, 0.96991, 0.9048, 0.84165, 0.78181,
     1     0.76262, 0.72513, 0.66903, 0.61346, 0.55853, 0.50296, 0.44701, 0.3932, 0.28484, 0.1734, 0.06152, -0.04575,
     1    -0.14954, -0.2486, -0.34145, -0.42975, -0.51276, -0.58669, -0.72143, -0.8481, -0.90966, -0.96863, -1.0817,
     1    -1.1898, -1.2914, -1.386, -1.4332, -1.4762, -1.5617, -1.6388, -1.7116, -1.7798, -1.8469, -1.9063, -1.966,
     1    -2.1051, -2.2421, -2.3686, -2.4827, -2.5865, -2.6861, -2.782, -2.8792, -2.9769, -3.0702  /
      Data e1 / 0.4856, 5.078, 0.4916, 0.52359, 0.53647, 0.5613, 0.59923, 0.6092, 0.62875, 0.65818, 0.66772,
     1     0.70604, 0.72443, 0.74277, 0.75232, 0.76202, 0.78015, 0.79905, 0.8445, 0.88884, 0.93116, 0.94711,
     1     0.97057, 1.0077, 1.0426, 1.0755, 1.1076, 1.1385, 1.1669, 1.2179, 1.2621, 1.2986, 1.3082, 1.327, 1.3481,
     1     1.3615, 1.3679, 1.3689, 1.3656, 1.359, 1.3394, 1.315, 1.3017, 1.2886, 1.2635, 1.2517, 1.2401, 1.2177,
     1     1.1955, 1.1836, 1.172, 1.1468, 1.1214, 1.0955, 1.0697, 1.0562, 1.0426, 1.0172, 0.99106, 0.9283, 0.86715,
     1     0.80876, 0.78994, 0.75302, 0.69737, 0.64196, 0.58698, 0.53136, 0.47541, 0.4218, 0.31374, 0.20259, 0.09106,
     1    -0.0157, -0.11866, -0.21672, -0.3084, -0.39558, -0.47731, -0.55003, -0.6822, -0.8069, -0.86765, -0.92577,
     1    -1.0367, -1.142, -1.2406, -1.3322, -1.3778, -1.4193, -1.5014, -1.5748, -1.6439, -1.7089, -1.7731, -1.8303,
     1    -1.8882, -2.0232, -2.1563, -2.2785, -2.3881, -2.4874, -2.5829, -2.6752, -2.7687, -2.8634, -2.9537  /
      Data e2 / 0.2459, 4.849, 0.2519, 0.29707, 0.31347, 0.34426, 0.39146, 0.40391, 0.42788, 0.46252, 0.47338, 0.51532,
     1     0.53445, 0.55282, 0.56222, 0.57166, 0.58888, 0.60652, 0.6477, 0.68562, 0.71941, 0.73171, 0.7494, 0.77678,
     1     0.80161, 0.82423, 0.84591, 0.86703, 0.8871, 0.92702, 0.96616, 1.0031, 1.0135, 1.036, 1.0648, 1.0876, 1.104,
     1     1.1149, 1.1208, 1.122, 1.1133, 1.0945, 1.0828, 1.071, 1.0476, 1.0363, 1.0246, 1.0011, 0.97677, 0.9638, 0.9512,
     1     0.9244, 0.89765, 0.87067, 0.84355, 0.82941, 0.81509, 0.7886, 0.7615, 0.6984, 0.63875, 0.58231, 0.56422, 0.52878,
     1     0.47523, 0.42173, 0.36813, 0.31376, 0.25919, 0.207, 0.10182, -0.006195, -0.11345, -0.2155, -0.3138, -0.40682,
     1    -0.49295, -0.57388, -0.64899, -0.71466, -0.83003, -0.9326, -0.98228, -1.0313, -1.1301, -1.23, -1.3255, -1.415,
     1    -1.4599, -1.5014, -1.5865, -1.6673, -1.7451, -1.8192, -1.8923, -1.9573, -2.0245, -2.1908, -2.3659, -2.5322,
     1    -2.6818, -2.8176, -2.9438, -3.0597, -3.1713, -3.2785, -3.3776  /
      Data  e3 / 0.4539, 5.033, 0.4599, 0.48875, 0.49973, 0.51999, 0.54995, 0.55783, 0.5733, 0.59704, 0.60496, 0.63828,
     1     0.65505, 0.67225, 0.68139, 0.69076, 0.70854, 0.72726, 0.7737, 0.82067, 0.86724, 0.88526, 0.91227, 0.9563,
     1     0.99818, 1.0379, 1.0762, 1.1127, 1.1454, 1.203, 1.2502, 1.2869, 1.2961, 1.3137, 1.3324, 1.3437, 1.3487, 1.3492,
     1     1.3463, 1.3414, 1.3281, 1.3132, 1.3052, 1.2972, 1.2815, 1.2736, 1.2653, 1.2479, 1.2286, 1.2177, 1.2066, 1.1816,
     1     1.1552, 1.1276, 1.0995, 1.0847, 1.0696, 1.0415, 1.012, 0.9417, 0.87351, 0.80948, 0.78916, 0.74985, 0.69173,
     1     0.63519, 0.57969, 0.52361, 0.46706, 0.4124, 0.30209, 0.18866, 0.07433, -0.03607, -0.1437, -0.24708, -0.34465,
     1    -0.43818, -0.52682, -0.60658, -0.75402, -0.8941, -0.96187, -1.0266, -1.1495, -1.2664, -1.376, -1.4786, -1.5297,
     1    -1.5764, -1.6685, -1.7516, -1.829, -1.9011, -1.9712, -2.0326, -2.0928, -2.2288, -2.3579, -2.477, -2.5854, -2.6854,
     1    -2.7823, -2.8776, -2.9759, -3.076, -3.1726  /
      Data  e4 / 1.431, 1.073, 1.421, 1.4331, 1.4336, 1.4328, 1.4279, 1.4261, 1.4227, 1.4174, 1.4158, 1.409, 1.4059,
     1     1.4033, 1.4021, 1.4009, 1.3991, 1.3974, 1.3947, 1.3954, 1.4004, 1.4032, 1.4082, 1.4174, 1.4261, 1.4322, 1.435,
     1     1.4339, 1.4293, 1.411, 1.3831, 1.3497, 1.3395, 1.3162, 1.2844, 1.2541, 1.2244, 1.1941, 1.1635, 1.1349, 1.0823,
     1     1.0366, 1.0166, 0.99932, 0.97282, 0.96348, 0.95676, 0.95004, 0.94956, 0.95077, 0.95278, 0.95899, 0.96766, 0.97862,
     1     0.99144, 0.99876, 1.0064, 1.0215, 1.0384, 1.0833, 1.1336, 1.1861, 1.2035, 1.2375, 1.2871, 1.3341, 1.378, 1.4208,
     1     1.4623, 1.5004, 1.569, 1.6282, 1.6794, 1.7239, 1.7622, 1.7955, 1.8259, 1.8564, 1.8868, 1.9152, 1.9681, 2.017, 2.0406,
     1     2.0628, 2.1014, 2.1323, 2.1545, 2.1704, 2.1775, 2.1834, 2.1938, 2.204, 2.2123, 2.2181, 2.223, 2.2268, 2.2299, 2.2389,
     1     2.2377, 2.215, 2.172, 2.1187, 2.0613, 2.0084, 1.9605, 1.9189, 1.8837  /
      Data  e5 / 0.05053, -0.1536, 0.04932, 0.053388, 0.054888, 0.057529, 0.060732, 0.061444, 0.062806, 0.064559, 0.065028,
     1     0.066183, 0.066438, 0.066663, 0.066774, 0.066891, 0.067127, 0.067357, 0.067797, 0.068591, 0.070127, 0.070895,
     1     0.072075, 0.073549, 0.073735, 0.07194, 0.068097, 0.062327, 0.055231, 0.037389, 0.016373, -0.005158, -0.011354,
     1    -0.024711, -0.042065, -0.057593, -0.071861, -0.08564, -0.098884, -0.11096, -0.133, -0.15299, -0.16213, -0.17041,
     1    -0.18463, -0.19057, -0.1959, -0.20454, -0.21134, -0.21446, -0.21716, -0.22214, -0.22608, -0.22924, -0.23166,
     1    -0.23263, -0.2335, -0.23464, -0.23522, -0.23449, -0.23128, -0.22666, -0.22497, -0.22143, -0.21591, -0.21047,
     1    -0.20528, -0.20011, -0.1949, -0.18983, -0.18001, -0.1709, -0.16233, -0.15413, -0.1467, -0.13997, -0.13361,
     1    -0.12686, -0.11959, -0.11237, -0.098017, -0.083765, -0.076308, -0.068925, -0.055229, -0.04332, -0.03444,
     1    -0.027889, -0.024997, -0.022575, -0.018362, -0.014642, -0.012248, -0.011459, -0.01176, -0.012879, -0.014855,
     1    -0.019502, -0.026383, -0.039505, -0.05914, -0.081606, -0.10382, -0.12114, -0.13407, -0.14364, -0.15096  /
      Data  e6 / -0.1662, 0.2252, -0.1659, -0.16561, -0.1652, -0.16499, -0.16632, -0.1669, -0.16813, -0.17015, -0.17083,
     1    -0.17357, -0.17485, -0.17619, -0.17693, -0.17769, -0.1792, -0.18082, -0.1848, -0.18858, -0.19176, -0.19291,
     1    -0.19451, -0.19665, -0.19816, -0.19902, -0.19929, -0.199, -0.19838, -0.19601, -0.19265, -0.18898, -0.18792,
     1    -0.18566, -0.18234, -0.17853, -0.17421, -0.16939, -0.16404, -0.15852, -0.14704, -0.13445, -0.12784, -0.12115,
     1    -0.10714, -0.10011, -0.092855, -0.078923, -0.065134, -0.057921, -0.05104, -0.036755, -0.023189, -0.010417,
     1     0.0011678, 0.0065887, 0.011871, 0.020767, 0.029119, 0.046932, 0.062667, 0.077997, 0.083058, 0.093185, 0.10829,
     1     0.12256, 0.13608, 0.14983, 0.16432, 0.17895, 0.21042, 0.2441, 0.27799, 0.30956, 0.33896, 0.36616, 0.39065,
     1     0.41244, 0.43151, 0.44788, 0.48024, 0.51873, 0.53883, 0.5581, 0.59394, 0.62694, 0.65811, 0.68755, 0.70216,
     1     0.71523, 0.74028, 0.76303, 0.78552, 0.80792, 0.83126, 0.8524, 0.87314, 0.91466, 0.9487, 0.97643, 0.99757,
     1     1.0121, 1.0232, 1.0335, 1.0453, 1.0567, 1.0651  /
      Data  Mh / 5.5, 6.2, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5,
     1     5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.51, 5.52, 5.53, 5.54, 5.57, 5.62, 5.66, 5.67, 5.7, 5.74, 5.78,
     1     5.82, 5.85, 5.89, 5.92, 5.97, 6.03, 6.05, 6.07, 6.11, 6.12, 6.14, 6.16, 6.18, 6.18, 6.19, 6.19, 6.2,
     1     6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2,
     1     6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2,
     1     6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2  /
      Data  c1 / -1.134, -1.243, -1.134, -1.1394, -1.1405, -1.1419, -1.1423, -1.1421, -1.1412, -1.1388,
     1     -1.1378, -1.1324, -1.1292, -1.1259, -1.1242, -1.1224, -1.1192, -1.1159, -1.1082, -1.1009,
     1     -1.0942, -1.0918, -1.0884, -1.0831, -1.0785, -1.0745, -1.0709, -1.0678, -1.0652, -1.0607,
     1     -1.0572, -1.0549, -1.0545, -1.0537, -1.0532, -1.0533, -1.0541, -1.0556, -1.0579, -1.0607,
     1     -1.067, -1.0737, -1.0773, -1.0808, -1.0879, -1.0913, -1.0948, -1.1013, -1.1074, -1.1105,
     1     -1.1133, -1.119, -1.1243, -1.1291, -1.1337, -1.1359, -1.1381, -1.142, -1.1459, -1.1543,
     1     -1.1615, -1.1676, -1.1694, -1.1728, -1.1777, -1.1819, -1.1854, -1.1884, -1.1909, -1.193,
     1     -1.1966, -1.1996, -1.2018, -1.2039, -1.2063, -1.2086, -1.2106, -1.2123, -1.2141, -1.2159,
     1     -1.219, -1.2202, -1.2201, -1.2198, -1.2189, -1.2179, -1.2169, -1.216, -1.2156, -1.2156,
     1     -1.2158, -1.2162, -1.2165, -1.2169, -1.2175, -1.2182, -1.2189, -1.2204, -1.2232, -1.2299,
     1     -1.2408, -1.2543, -1.2688, -1.2839, -1.2989, -1.313, -1.3253  /
      Data  c2 / 0.1917, 0.1489, 0.1916, 0.18962, 0.18924, 0.18875, 0.18844, 0.18842, 0.1884, 0.18839,
     1     0.18837, 0.18816, 0.18797, 0.18775, 0.18764, 0.18752, 0.1873, 0.18709, 0.18655, 0.18582,
     1     0.18485, 0.18442, 0.18369, 0.18225, 0.18052, 0.17856, 0.17643, 0.1742, 0.17203, 0.1677,
     1     0.16352, 0.15982, 0.15882, 0.15672, 0.15401, 0.15158, 0.14948, 0.14768, 0.14616, 0.14489,
     1     0.14263, 0.14035, 0.13925, 0.13818, 0.13604, 0.13499, 0.13388, 0.13179, 0.12984, 0.1289,
     1     0.12806, 0.12647, 0.12512, 0.12389, 0.12278, 0.12227, 0.12177, 0.12093, 0.12015, 0.11847,
     1     0.11671, 0.11465, 0.11394, 0.11253, 0.11054, 0.10873, 0.10709, 0.10548, 0.10389, 0.10248,
     1     0.10016, 0.098482, 0.097375, 0.096743, 0.096445, 0.096338, 0.096254, 0.096207, 0.096255,
     1     0.096361, 0.096497, 0.096198, 0.096106, 0.096136, 0.096667, 0.097638, 0.098649, 0.099553,
     1     0.099989, 0.10043, 0.10142, 0.10218, 0.10269, 0.10304, 0.10324, 0.10337, 0.10353, 0.1046,
     1     0.1075, 0.11231, 0.11853, 0.12507, 0.13146, 0.13742, 0.14294, 0.14781, 0.15183 /
      Data  c3 / -0.008088, -0.00344, -0.008088, -0.008074, -0.008095, -0.008153, -0.00829, -0.008336,
     1    -0.008445, -0.008642, -0.008715, -0.00903, -0.009195, -0.00936, -0.009441, -0.009521, -0.009676,
     1    -0.009819, -0.01012, -0.01033, -0.01048, -0.01052, -0.01056, -0.01058, -0.01056, -0.01051, -0.01042,
     1    -0.01032, -0.0102, -0.009964, -0.009722, -0.009476, -0.009402, -0.009228, -0.008977, -0.008725,
     1    -0.008472, -0.008219, -0.007967, -0.007717, -0.007224, -0.006747, -0.006517, -0.006293,
     1    -0.005866, -0.005666, -0.005475, -0.005122, -0.004808, -0.004663, -0.004527, -0.004276,
     1    -0.004053, -0.003853, -0.003673, -0.00359, -0.00351, -0.00336, -0.00322, -0.002897,
     1    -0.00261, -0.002356, -0.002276, -0.002131, -0.001931, -0.001754, -0.001597, -0.001456,
     1    -0.001328, -0.00121, -0.000994, -0.000803, -0.000635, -0.00049, -0.000365, -0.000259,
     1    -0.000171, -0.000099, -0.000042, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.000023, -0.00004,
     1    -0.000045, -0.000049, -0.000053, -0.000052, -0.000047, -0.000039, -0.000027, -0.000014,
     1     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  /
      Data  h / 4.5, 5.3, 4.5, 4.5, 4.5, 4.5, 4.5, 4.49, 4.45, 4.4, 4.38, 4.32, 4.29, 4.27,
     1    4.25, 4.24, 4.22, 4.2, 4.15, 4.11, 4.08, 4.07, 4.06, 4.04, 4.02, 4.03, 4.07, 4.1,
     1    4.13, 4.19, 4.24, 4.29, 4.3, 4.34, 4.39, 4.44, 4.49, 4.53, 4.57, 4.61, 4.68, 4.75,
     1    4.78, 4.82, 4.88, 4.9, 4.93, 4.98, 5.03, 5.06, 5.08, 5.12, 5.16, 5.2, 5.24, 5.25,
     1    5.27, 5.3, 5.34, 5.41, 5.48, 5.53, 5.54, 5.56, 5.6, 5.63, 5.66, 5.69, 5.72, 5.74,
     1    5.82, 5.92, 6.01, 6.1, 6.18, 6.26, 6.33, 6.4, 6.48, 6.54, 6.66, 6.73, 6.77, 6.81,
     1    6.87, 6.93, 6.99, 7.08, 7.12, 7.16, 7.24, 7.32, 7.39, 7.46, 7.52, 7.64, 7.78, 8.07,
     1    8.48, 8.9, 9.2, 9.48, 9.57, 9.62, 9.66, 9.66, 9.66  /
      Data  Dc3Global / 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1     0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  /
      Data  Dc3ChinaTrk / 0.002857567, 0.004345, 0.002815856, 0.002779513, 0.002759652, 0.002754174, 0.002761597, 0.00276458,
     1     0.00276913, 0.00278369, 0.00280098, 0.00282191, 0.00284648, 0.00287378, 0.00290017, 0.00292292, 0.00294385,
     1     0.00295659, 0.00296387, 0.00296751, 0.00296842, 0.00296751, 0.00296387, 0.00295659, 0.00294476, 0.0029302,
     1     0.00291382, 0.00289653, 0.00287924, 0.00286286, 0.00284648, 0.00283101, 0.00281645, 0.00280189, 0.00278642,
     1     0.00276458, 0.00273364, 0.00269906, 0.00265993, 0.0026117, 0.00255983, 0.00250523, 0.00244426, 0.00237965,
     1     0.00231413, 0.00225043, 0.00219583, 0.00215488, 0.00212394, 0.00210392, 0.00209664, 0.00209755, 0.00210665,
     1     0.00212667, 0.00216034, 0.0022022, 0.00224952, 0.00229775, 0.0023478, 0.00239876, 0.00245154, 0.00250796,
     1     0.00256802, 0.00262899, 0.00268996, 0.00274638, 0.00279734, 0.00284284, 0.0028847, 0.0029211, 0.00295386,
     1     0.00298207, 0.00300664, 0.00302575, 0.0030394, 0.00304122, 0.00302575, 0.00300027, 0.00296751, 0.00292292,
     1     0.00287014, 0.00281463, 0.00276094, 0.00270816, 0.00265811, 0.00261625, 0.00258804, 0.0025753, 0.00257166,
     1     0.00257348, 0.00258622, 0.00260533, 0.00261898, 0.00262353, 0.00262171, 0.00261534, 0.00260351, 0.00259077,
     1     0.00258349, 0.00258622, 0.0026026, 0.0026, 0.00263, 0.00267, 0.00276, 0.00289, 0.00303 /
      Data  Dc3ItalyJapan / -0.00255, -0.00033, -0.002436667, -0.00234, -0.002288571, -0.00225, -0.002214545,
     1    -0.00216762, -0.00211666, -0.00209573, -0.0020748, -0.00205387, -0.00203476, -0.00201565, -0.00200109,
     1    -0.0019929, -0.00198835, -0.00199108, -0.00200109, -0.00201929, -0.00204477, -0.00207662, -0.00211484,
     1    -0.00215943, -0.00221221, -0.00226954, -0.00232687, -0.00238329, -0.0024388, -0.00249158, -0.00253981,
     1    -0.0025844, -0.00262626, -0.0026663, -0.00270634, -0.00275093, -0.00280189, -0.00285467, -0.00291109,
     1    -0.00297024, -0.00302848, -0.0030849, -0.0031395, -0.00318955, -0.00323505, -0.00327418, -0.00329693,
     1    -0.0033033, -0.00329966, -0.00328692, -0.0032669, -0.00324233, -0.0032123, -0.00317681, -0.00313222,
     1    -0.00307944, -0.0030212, -0.00296387, -0.00290654, -0.0028483, -0.00278915, -0.00272727, -0.00266175,
     1    -0.00259532, -0.00252707, -0.00245609, -0.00237874, -0.0022932, -0.00219583, -0.00208936, -0.00197743,
     1    -0.00186186, -0.00174538, -0.00162981, -0.00151788, -0.00141141, -0.00132314, -0.00125307, -0.0012012,
     1    -0.00117026, -0.00115661, -0.00115479, -0.00115934, -0.00116844, -0.00118027, -0.00118846, -0.0011921,
     1    -0.00118664, -0.0011739, -0.00115388, -0.00112294, -0.0010829, -0.00102466, -0.0009464, -0.00084448,
     1    -0.00071799, -0.00057148, -0.00040768, -0.00022841, -0.0000364, 0.00016835, 0.00038493, 0.00072, 0.00094,
     1     0.00113, 0.00131, 0.00149  /
      Data  c / -0.6, -0.84, -0.603721973, -0.573875667, -0.566752279, -0.555197163, -0.538497033, -0.534143553,
     1    -0.525291966, -0.511923959, -0.507518438, -0.490646419, -0.482903339, -0.475723249, -0.472356517,
     1    -0.469145165, -0.463208107, -0.457951091, -0.447868462, -0.441861646, -0.43951233, -0.439503002,
     1    -0.440402202, -0.444112949, -0.450201502, -0.458125772, -0.467318914, -0.477214082, -0.487244431,
     1    -0.506318022, -0.524378592, -0.542139779, -0.547516445, -0.560315222, -0.579618559, -0.600520122,
     1    -0.622517009, -0.644863016, -0.666811933, -0.687617555, -0.72431141, -0.756461552, -0.771774699,
     1    -0.786969142, -0.816133148, -0.829498623, -0.841650351, -0.86175209, -0.877260496, -0.883751522,
     1    -0.889645401, -0.900376636, -0.910924032, -0.922413076, -0.93459188, -0.940753619, -0.94686421,
     1    -0.958633835, -0.969304522, -0.989249151, -1.001214084, -1.007814444, -1.009301181, -1.01166535,
     1    -1.015381923, -1.020991723, -1.028172052, -1.036012654, -1.043603269, -1.050033639, -1.057333673,
     1    -1.058435992, -1.055424896, -1.050384681, -1.045399647, -1.042113359, -1.040406454, -1.03971884,
     1    -1.039490421, -1.039161103, -1.036792003, -1.032293817, -1.029407219, -1.026181432, -1.018969732,
     1    -1.011173605, -1.003211399, -0.995115318, -0.99099697, -0.986821029, -0.9782642, -0.969380498, -0.960119456,
     1    -0.950486073, -0.940499213, -0.93017774, -0.919540518, -0.891762036, -0.862855832, -0.833549707, -0.804571467,
     1    -0.776648914, -0.750329102, -0.725436082, -0.701613157, -0.678503629, -0.655750799  /
      Data  Vc / 1500, 1300, 1500.201617, 1500.361025, 1500.677261, 1501.037995, 1501.258061, 1502.954014, 1503.117309,
     1     1503.238882, 1503.315564, 1503.348394, 1503.335313, 1503.125148, 1502.84162, 1502.474189, 1502.006843,
     1     1501.42407, 1500.709379, 1499.82835, 1498.744966, 1497.421638, 1495.849038, 1493.996829, 1491.824848,
     1     1489.292214, 1486.358303, 1482.982534, 1479.123815, 1474.74145, 1469.754986, 1464.088325, 1457.758978,
     1     1450.711732, 1442.854605, 1434.221674, 1424.854574, 1414.76993, 1403.993193, 1392.611037, 1380.715909,
     1     1368.509262, 1356.213377, 1343.894304, 1331.672205, 1319.833647, 1308.468996, 1297.649994, 1287.501604,
     1     1278.056394, 1269.187123, 1260.738035, 1252.656788, 1244.799597, 1237.031362, 1229.225574, 1221.164101,
     1     1212.743387, 1203.907562, 1194.594168, 1184.92666, 1175.185012, 1165.686403, 1156.455103, 1147.587208,
     1     1139.208933, 1131.337078, 1123.914989, 1116.831532, 1109.947082, 1103.070401, 1096.038941, 1088.666571,
     1     1080.77314, 1072.388357, 1061.772378, 1049.291238, 1036.418535, 1023.143794, 1009.49373, 995.5184397,
     1     981.3309345, 966.9378275, 952.3379474, 937.5231841, 922.4304827, 908.7902245, 896.1527649, 883.1598664,
     1     870.0472783, 857.0733474, 844.4757455, 832.454304, 821.1814444, 810.7946349, 801.4123822, 793.1312281,
     1     785.7331967, 779.9122405, 775.6002501, 772.6812408, 771.0093237, 760.810005, 764.5003506, 768.0682561,
     1     771.5545347, 775.0  /
      Data  f4 / -0.15, -0.1, -0.148333333, -0.1471, -0.147742857, -0.149588889, -0.152490909, -0.1548547,
     1     -0.1574391, -0.1606605, -0.164073, -0.1677676, -0.1715259, -0.1760031, -0.1809899, -0.186186,
     1     -0.191464, -0.1963325, -0.2014012, -0.2065973, -0.2120391, -0.2176447, -0.2232048, -0.2286648,
     1     -0.233688, -0.2382016, -0.2421328, -0.2458274, -0.249158, -0.251888, -0.2540356, -0.2556008,
     1     -0.2566291, -0.2571296, -0.2571296, -0.2562014, -0.254436, -0.2522247, -0.2496949, -0.2465827,
     1     -0.2432066, -0.2396485, -0.2357446, -0.2315495, -0.2273544, -0.2231866, -0.2191189, -0.2151968,
     1     -0.2111655, -0.2070341, -0.2032667, -0.1995903, -0.1958229, -0.1922284, -0.1883609, -0.1840384,
     1     -0.1793337, -0.1748565, -0.1704066, -0.1657929, -0.1610063, -0.1558375, -0.1502956, -0.1445717,
     1     -0.1386567, -0.1325233, -0.1261897, -0.119665, -0.1125943, -0.1052142, -0.0977431, -0.0902265,
     1     -0.0827281, -0.0752843, -0.0679406, -0.060424, -0.0533897, -0.047047, -0.0413504, -0.0361361,
     1     -0.031395, -0.0270725, -0.023114, -0.0195923, -0.0164619, -0.0135772, -0.0112294, -0.0092729,
     1     -0.007462, -0.0057876, -0.0043862, -0.0032123, -0.0022932, -0.0016107, -0.0010374, -0.0005551,
     1     -0.0002548, -0.0001001, -0.0000455, -0.0000364, -0.0000455, -0.0000546, 0.0001, 0.0001, 0.0001,
     1      0.0001, 0.0  /
      Data  f5 / -0.00701, -0.00844, -0.00701, -0.00728, -0.00732, -0.00736, -0.00737, -0.00735, -0.00731,
     1     -0.00721, -0.00717, -0.00698, -0.00687, -0.00677, -0.00672, -0.00667, -0.00656, -0.00647, -0.00625,
     1     -0.00607, -0.00593, -0.00588, -0.00582, -0.00573, -0.00567, -0.00563, -0.00561, -0.0056, -0.0056,
     1     -0.00562, -0.00567, -0.00572, -0.00574, -0.00578, -0.00585, -0.00591, -0.00597, -0.00602, -0.00608,
     1     -0.00614, -0.00626, -0.00638, -0.00644, -0.0065, -0.0066, -0.00665, -0.0067, -0.0068, -0.00689,
     1     -0.00693, -0.00697, -0.00705, -0.00713, -0.00719, -0.00726, -0.00729, -0.00732, -0.00738, -0.00744,
     1     -0.00758, -0.00773, -0.00787, -0.00792, -0.008, -0.00812, -0.00822, -0.0083, -0.00836, -0.00841,
     1     -0.00844, -0.00847, -0.00842, -0.00829, -0.00806, -0.00771, -0.00723, -0.00666, -0.00603, -0.0054,
     1     -0.00479, -0.00378, -0.00302, -0.00272, -0.00246, -0.00208, -0.00183, -0.00167, -0.00158, -0.00155,
     1     -0.00154, -0.00152, -0.00152, -0.00152, -0.0015, -0.00148, -0.00146, -0.00144, -0.0014, -0.00138,
     1     -0.00137, -0.00137, -0.00137, -0.00137, -0.00137, -0.00137, -0.00136, -0.00136  /
      Data  f6 / -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9,
     1      -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9,
     1      -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9,
     1      -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9,
     1      -9.9, -9.9, 0.005828594, 0.026445503, 0.055495036, 0.092259036, 0.140404486, 0.194954971,
     1       0.25203482, 0.309399196, 0.366954397, 0.424517299, 0.481161353, 0.535968267, 0.588318983,
     1       0.637893676, 0.688890073, 0.735781413, 0.779920766, 0.824265713, 0.871376753, 0.920327295,
     1       0.969309177, 1.016723853, 1.060103429, 1.09899486, 1.134793579, 1.163774071, 1.188166647,
     1       1.211437922, 1.233642439, 1.253424259, 1.27110697, 1.286957162, 1.300439228, 1.312470713,
     1       1.322538099, 1.328863194, 1.344999719, 1.349625795, 1.348905674, 1.342176853, 1.32877683,
     1       1.308397977, 1.28215216, 1.251506122, 1.217926602, 1.182880341  /
      Data  f7  / -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9,
     1      -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9,
     1      -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9,
     1      -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, -9.9,
     1      -9.9, -9.9, -9.9, -9.9, -9.9, -9.9, 0.00376198, 0.017099524, 0.035727688, 0.059023688,
     1       0.088480942, 0.120292256, 0.151586304, 0.180774958, 0.207894202, 0.233095306, 0.256059658,
     1       0.276475905, 0.294236955, 0.309439975, 0.324490532, 0.337199059, 0.349628672, 0.364131615,
     1       0.382450146, 0.404017146, 0.427420811, 0.451423337, 0.47422331, 0.495355417, 0.515851214,
     1       0.534106657, 0.551448338, 0.569813289, 0.589323461, 0.60918484, 0.62938684, 0.65157128,
     1       0.674207041, 0.696976687, 0.718876747, 0.73805695, 0.777903392, 0.802777241, 0.814799392,
     1       0.816147696, 0.809, 0.795381782, 0.776709043, 0.754245413, 0.729254522, 0.703  /
      Data  R1 / 110, 105, 111.6666667, 113.1049769, 113.365134, 113.0730437, 112.3626778, 112.1334015,
     1       111.649752, 110.6393557, 109.5292026, 108.2841996, 106.991052, 105.4058905, 103.6093099,
     1       101.702388, 99.75578729, 97.92699525, 96.02975863, 94.095103, 92.07864539, 90.0051328,
     1        87.96898961, 85.98934118, 84.23192283, 82.73832083, 81.5414182, 80.46255966, 79.58653623,
     1        79.04686861, 78.85033023, 78.99499127, 79.47021873, 80.25667639, 81.32632483, 82.85748095,
     1        84.71789203, 86.67450587, 88.726045, 90.90707909, 93.03884764, 95.07698571, 97.03859501,
     1        98.87495843, 100.5322872, 102.0095808, 103.1519179, 103.9974686, 104.6999207, 105.2612709,
     1       105.6123877, 105.8666708, 106.0179016, 106.0284851, 105.9218534, 105.7931301, 105.6885583,
     1       105.5855206, 105.5360087, 105.6057595, 105.8268681, 106.2043227, 106.7482103, 107.4783404,
     1       108.3883404, 109.6153201, 111.0800633, 112.7113815, 114.5005392, 116.3880882, 118.2980535,
     1       120.1853199, 122.0128003, 123.7514352, 125.3801935, 126.8996072, 128.1360898, 129.1139085,
     1       129.8589263, 130.3687486, 130.6712208, 130.8051591, 130.8085281, 130.721677, 130.5673434,
     1       130.3648553, 130.12523, 129.9030418, 129.7128463, 129.5637958, 129.4894929, 129.4894929,
     1       129.5715517, 129.7087991, 129.8714112, 130.0466063, 130.2244428, 130.3891852, 130.5283358,
     1       130.6326348, 130.6960606, 130.7158297, 130.873965, 130.7100966, 130.4994086, 130.2575075, 130.0  /
      Data  R2 / 270, 272, 270, 270, 269.9997543, 269.9992309, 269.9983922, 269.9981809, 269.9977811,
     1       269.9972914, 269.9971716, 269.9970038, 269.9971562, 269.9975038, 269.9977596, 269.9980747,
     1       269.9988974, 270, 270.0040574, 270.0098275, 270.0170967, 270.0203763, 270.0256516, 270.0352787,
     1       270.0457645, 270.0568956, 270.0684584, 270.0802395, 270.0920255, 270.1147579, 270.1349479,
     1       270.1508876, 270.1545854, 270.1608691, 270.1631848, 270.1561266, 270.1379869, 270.1070578,
     1       270.0616314, 270, 269.8250997, 269.5877388, 269.4485078, 269.2971082, 268.9623989, 268.7813869,
     1       268.5928018, 268.1975077, 267.7857076, 267.57649, 267.3665924, 266.9493531, 266.5431804, 266.1572654,
     1       265.800799, 265.6364811, 265.482972, 265.2129753, 265, 264.7422542, 264.8313969, 265.2004904,
     1       265.3778612, 265.782597, 266.510779, 267.3180986, 268.1376183, 268.9024002, 269.5455067, 270.0,
     1       270.1791373, 269.4230155, 267.8185789, 265.4527717, 262.4125382, 258.7848227, 254.6565695,
     1       250.1147229, 245.2462272, 240.1380267, 229.5502883, 219.0470621, 214.0445018, 209.3239025,
     1       201.0763636, 195, 191.6136929, 190.7296319, 191.1120427, 191.9833337, 195.0103148, 199.446092,
     1       204.9261818, 211.0861009, 217.5613658, 223.9874933, 230, 241.8599813, 249.3431264, 252.9357504,
     1       253.1241685, 250.3946958, 245.2336475, 238.1273386, 229.5620843, 220.0241997, 210.0  /
      Data  Dfr / 0.1, 0.082, 0.096, 0.091556303, 0.088356963, 0.085930921, 0.083774947, 0.081223653, 0.078450218,
     1       0.076699698, 0.075050821, 0.073489313, 0.072059045, 0.07036674, 0.068529339, 0.06670742, 0.064913586,
     1       0.063379806, 0.062101875, 0.061276478, 0.060989702, 0.06133913, 0.062433193, 0.064253193, 0.067384107,
     1       0.071538679, 0.076452754, 0.081554497, 0.086987015, 0.092720015, 0.098560479, 0.104347708, 0.109955172,
     1       0.115290504, 0.120295504, 0.124574223, 0.12813777, 0.131112496, 0.133926359, 0.136382309, 0.138372212,
     1       0.139861579, 0.140667227, 0.140708243, 0.14020071, 0.139212607, 0.137527587, 0.135418947, 0.133021345,
     1       0.130412765, 0.127758217, 0.125076732, 0.122353451, 0.11979987, 0.117403432, 0.115021796, 0.112681769,
     1       0.110724177, 0.10905305, 0.107537651, 0.106110511, 0.104652438, 0.103172943, 0.101745588, 0.100380588,
     1       0.099271998, 0.098511921, 0.098154151, 0.098108335, 0.098414462, 0.099072372, 0.100016376, 0.101173456,
     1       0.102461958, 0.103791594, 0.104918523, 0.105585288, 0.105844726, 0.105606577, 0.104550166, 0.102730166,
     1       0.100295607, 0.09739545, 0.094271022, 0.0909955, 0.087543726, 0.084141798, 0.08096985, 0.077858707,
     1       0.074831719, 0.072192082, 0.069917082, 0.067800173, 0.065899225, 0.064137445, 0.062563893, 0.061283667,
     1       0.060261764, 0.05948127, 0.058928134, 0.058585237, 0.058432387, 0.058770303, 0.059293737, 0.05963202,
     1       0.059846869, 0.06  /
      Data  Dfv / 0.07, 0.08, 0.07, 0.03, 0.027159957, 0.026237399, 0.028339447, 0.029, 0.030097364, 0.031181748,
     1       0.031409017, 0.031751013, 0.031636307, 0.031372686, 0.031194772, 0.030991317, 0.030523366, 0.03,
     1       0.028577736, 0.027035261, 0.025403918, 0.024733518, 0.02371505, 0.022, 0.020290275, 0.01861804,
     1       0.017015622, 0.015515351, 0.014149555, 0.011950702, 0.010677692, 0.010589153, 0.010832228, 0.011943713,
     1       0.015, 0.019857769, 0.025981273, 0.032675893, 0.039247009, 0.045, 0.052435395, 0.055236451, 0.055341803,
     1       0.05481981, 0.052602113, 0.051260568, 0.05, 0.048175615, 0.047273115, 0.04713309, 0.047182157, 0.047792402,
     1       0.048993507, 0.050675131, 0.052726934, 0.05385717, 0.055038574, 0.057499709, 0.06, 0.065861445, 0.070535071,
     1       0.073277974, 0.073638741, 0.073347252, 0.07, 0.062845201, 0.052899385, 0.041530968, 0.030108368, 0.02,
     1       0.006941622, 0.002013136, 0.00261384, 0.006143029, 0.01, 0.012102633, 0.012443147, 0.011532345,
     1       0.009881028, 0.008, 0.004880563, 0.002703168, 0.00191076, 0.001285492, 0.00044521, 0.0, 0.0, 0.0,
     1       0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  /
      Data  l1 / 0.695051846, 0.643957111, 0.698006309, 0.701782868, 0.706548506, 0.711195123, 0.715957974,
     1      0.721228156, 0.725942427, 0.730195711, 0.734334083, 0.738239534, 0.741598585, 0.744979853,
     1      0.747973129, 0.750188754, 0.75209786, 0.753056971, 0.753304669, 0.75281229, 0.751695457, 0.749966473,
     1      0.747587664, 0.74467779, 0.741109596, 0.737430282, 0.734030858, 0.730795089, 0.727910373, 0.725618992,
     1      0.723867585, 0.722567618, 0.721619586, 0.720913015, 0.720326459, 0.719605374, 0.718334246, 0.716582057,
     1      0.714396303, 0.711263893, 0.707527789, 0.703315207, 0.698360929, 0.69279583, 0.687088675, 0.681296181,
     1      0.675439264, 0.669671543, 0.663799354, 0.657924575, 0.652668626, 0.647663884, 0.642782715, 0.638426045,
     1      0.634108934, 0.629382098, 0.62422, 0.619437355, 0.614715708, 0.60976365, 0.604598073, 0.599098137, 0.59331998,
     1      0.587439352, 0.581472705, 0.575542921, 0.56974676, 0.564165911, 0.558374926, 0.55272515, 0.547545691,
     1      0.542855555, 0.538656813, 0.534944688, 0.531707555, 0.529040997, 0.527287131, 0.526285195, 0.525960554,
     1      0.526307836, 0.527166224, 0.52834572, 0.529680229, 0.531034833, 0.532338272, 0.533540823, 0.534501454,
     1      0.535195447, 0.53572513, 0.536079697, 0.536152067, 0.535963593, 0.535334938, 0.534237376, 0.532692511,
     1      0.530739791, 0.528478635, 0.526053601, 0.523587452, 0.519579085, 0.515163198, 0.511680885, 0.509575165,
     1      0.508690441, 0.508721463, 0.509362984, 0.510309754  /
      Data  l2 / 0.495071232, 0.551764538, 0.499186122, 0.502296989, 0.504963222, 0.507711953, 0.510432167,
     1      0.513604818, 0.515812524, 0.517910447, 0.519820383, 0.521402475, 0.523129981, 0.524965283, 0.526820259,
     1      0.528708567, 0.530428701, 0.532293889, 0.534221721, 0.536160253, 0.538032763, 0.539754341, 0.541286846,
     1      0.54230586, 0.542737255, 0.542591025, 0.542250646, 0.541620905, 0.54068589, 0.539679771, 0.538779888,
     1      0.538078566, 0.53758311, 0.537215808, 0.536753324, 0.536194907, 0.53588924, 0.535908118, 0.537036817,
     1      0.538800565, 0.541040388, 0.543935168, 0.547119553, 0.550316608, 0.553588111, 0.55729675, 0.561416998,
     1      0.565632437, 0.569784669, 0.573041125, 0.575835249, 0.578362937, 0.580379619, 0.582628329, 0.585348815,
     1      0.588511395, 0.591752878, 0.595223545, 0.598956616, 0.602828209, 0.606867381, 0.611000872, 0.615003616,
     1      0.618790868, 0.621818942, 0.623941399, 0.625112169, 0.625681285, 0.625612877, 0.624981547, 0.623995573,
     1      0.622818294, 0.621570841, 0.620332135, 0.619246543, 0.61833633, 0.617742703, 0.61756745, 0.617771454,
     1      0.618226977, 0.618751361, 0.619191142, 0.619485437, 0.619577577, 0.619420571, 0.618953454, 0.618315241,
     1      0.617611537, 0.616887033, 0.616226985, 0.615704939, 0.615594552, 0.616075661, 0.617144784, 0.618703484,
     1      0.620552902, 0.622345733, 0.623772152, 0.624590185, 0.633513742, 0.635817329, 0.634364218, 0.629589543,
     1      0.622323697, 0.613397069, 0.603640051, 0.603640051  /
      Data  t1 / 0.398193694, 0.400827625, 0.401893456, 0.408676088, 0.418215995, 0.427177711, 0.436070182,
     1      0.444905042, 0.453803323, 0.462101001, 0.470160072, 0.477710678, 0.484117494, 0.490450614, 0.495749173,
     1      0.499225985, 0.5019699, 0.502723139, 0.501716932, 0.498998129, 0.494902796, 0.489481958, 0.482598999,
     1      0.474402161, 0.464064092, 0.452397199, 0.440074986, 0.42776387, 0.41532093, 0.403152947, 0.391532446,
     1      0.380671789, 0.370738923, 0.361857385, 0.354106294, 0.348697556, 0.345545196, 0.34407253, 0.343233924,
     1      0.34359108, 0.344988097, 0.347145162, 0.349972884, 0.353255966, 0.356679848, 0.360119486, 0.363355575,
     1      0.366266916, 0.369220285, 0.372279947, 0.375096598, 0.377930593, 0.381004878, 0.384177876, 0.388083411,
     1      0.392859672, 0.398485375, 0.404140478, 0.410108475, 0.416659177, 0.423725413, 0.431438154, 0.439733967,
     1      0.448335773, 0.457160435, 0.465979626, 0.474518531, 0.482567294, 0.490617708, 0.498251771, 0.50510595,
     1      0.511173165, 0.516462552, 0.52099982, 0.524827245, 0.527976145, 0.530028087, 0.531310584, 0.532064486,
     1      0.532495149, 0.532827717, 0.533264138, 0.533936771, 0.534723951, 0.535652785, 0.536865297, 0.538270252,
     1      0.539706125, 0.540974908, 0.541959278, 0.542571426, 0.542697784, 0.541836187, 0.540132614, 0.537902038,
     1      0.535225635, 0.531984637, 0.528251638, 0.524152448, 0.51703024, 0.514030219, 0.51099634, 0.50724853,
     1      0.502792431, 0.497805116, 0.492463657, 0.486945126  /
      Data  t2 / 0.347961282, 0.346, 0.344624643, 0.346399037, 0.349366743, 0.353738803, 0.359460225, 0.363952874,
     1      0.368811265, 0.373842596, 0.379107128, 0.384262017, 0.390425887, 0.397348031, 0.404643011, 0.412089601,
     1      0.419038179, 0.426287022, 0.433617896, 0.441053708, 0.448398577, 0.455250767, 0.461467608, 0.465817909,
     1      0.467937664, 0.467608429, 0.466420682, 0.46356957, 0.458269257, 0.450717697, 0.441157005, 0.42985318,
     1      0.417096098, 0.403199519, 0.387932255, 0.372064984, 0.356693866, 0.340873973, 0.324302547, 0.308523554,
     1      0.293692632, 0.279508434, 0.266403159, 0.254656614, 0.244164399, 0.235734829, 0.229011128, 0.223109817,
     1      0.218034838, 0.214750474, 0.212270202, 0.210458348, 0.209660515, 0.209761075, 0.210814327, 0.21303599,
     1      0.215644591, 0.218995528, 0.22351873, 0.229084423, 0.235478509, 0.242538306, 0.250154969, 0.258169451,
     1      0.26638574, 0.27414039, 0.28100386, 0.287597367, 0.293500417, 0.298388408, 0.302490095, 0.306026433,
     1      0.309176939, 0.312079691, 0.315069876, 0.317927959, 0.320621219, 0.323280328, 0.32612537, 0.329087419,
     1      0.332035841, 0.334860327, 0.337480621, 0.339873426, 0.342037657, 0.343756785, 0.345102581, 0.346340837,
     1      0.347484261, 0.348366463, 0.349020367, 0.349244347, 0.348718464, 0.34720797, 0.344536399, 0.340620313,
     1      0.335449924, 0.329006892, 0.321283835, 0.312293834, 0.302070431, 0.269937816, 0.277859662, 0.26488399,
     1      0.252029114, 0.239234636, 0.239234636 /

C     Set constant parameters
      mref = 4.5
      rref = 1.0
      vref = 760.0
      f1 = 0.0
      f3 = 0.1
      V1 = 225.0
      V2 = 300.0

C First check for the PGA case (i.e., specT=0.0)
      nPer = 107
      if (specT .eq. 0.0) then
         period1 = period(1)
         e0T = e0(1)
         e1T = e1(1)
         e2T = e2(1)
         e3T = e3(1)
         e4T = e4(1)
         e5T = e5(1)
         e6T = e6(1)
         mhT = mh(1)
         c1T = c1(1)
         c2T = c2(1)
         c3T = c3(1)
         hT = h(1)
         cT = c(1)
         VcT = vc(1)
         phi2T = phi2(1)
         phi3T = phi3(1)
         Dc3GlobalT = DC3global(1)
         Dc3ChinaTrkT = DC3ChinaTrk(1)
         Dc3ItalyJapanT = DC3ItalyJapan(1)
         f4T = f4(1)
         f5T = f5(1)
         f6T = f6(1)
         f7T = f7(1)
         R1T = R1(1)
         R2T = R2(1)
         l1T = l1(1)
         l2T = l2(1)
         t1T = t1(1)
         t2T = t2(1)
         rjbbarT = rjbbar(1)
         DfrT = Dfr(1)
         DfvT = Dfv(1)
         goto 1011
      elseif (specT .eq. -1.0) then
         period1 = period(2)
         e0T = e0(2)
         e1T = e1(2)
         e2T = e2(2)
         e3T = e3(2)
         e4T = e4(2)
         e5T = e5(2)
         e6T = e6(2)
         mhT = mh(2)
         c1T = c1(2)
         c2T = c2(2)
         c3T = c3(2)
         hT = h(2)
         cT = c(2)
         VcT = vc(2)
         phi2T = phi2(2)
         phi3T = phi3(2)
         Dc3GlobalT = DC3global(2)
         Dc3ChinaTrkT = DC3ChinaTrk(2)
         Dc3ItalyJapanT = DC3ItalyJapan(2)
         f4T = f4(2)
         f5T = f5(2)
         f6T = f6(2)
         f7T = f7(2)
         R1T = R1(2)
         R2T = R2(2)
         l1T = l1(2)
         l2T = l2(2)
         t1T = t1(2)
         t2T = t2(2)
         rjbbarT = rjbbar(2)
         DfrT = Dfr(2)
         DfvT = Dfv(2)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=3,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'BSSA (NGA West2-2013) Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),e0(count1),e0(count2),
     +                   specT,e0T,iflag)
            call interp (period(count1),period(count2),e1(count1),e1(count2),
     +                   specT,e1T,iflag)
            call interp (period(count1),period(count2),e2(count1),e2(count2),
     +                   specT,e2T,iflag)
            call interp (period(count1),period(count2),e3(count1),e3(count2),
     +                   specT,e3T,iflag)
            call interp (period(count1),period(count2),e4(count1),e4(count2),
     +                   specT,e4T,iflag)
            call interp (period(count1),period(count2),e5(count1),e5(count2),
     +                   specT,e5T,iflag)
            call interp (period(count1),period(count2),e6(count1),e6(count2),
     +                   specT,e6T,iflag)
            call interp (period(count1),period(count2),mh(count1),mh(count2),
     +                   specT,mhT,iflag)
            call interp (period(count1),period(count2),c1(count1),c1(count2),
     +                   specT,c1T,iflag)
            call interp (period(count1),period(count2),c2(count1),c2(count2),
     +                   specT,c2T,iflag)
            call interp (period(count1),period(count2),c3(count1),c3(count2),
     +                   specT,c3T,iflag)
            call interp (period(count1),period(count2),h(count1),h(count2),
     +                   specT,hT,iflag)
            call interp (period(count1),period(count2),c(count1),c(count2),
     +                   specT,cT,iflag)
            call interp (period(count1),period(count2),phi2(count1),phi2(count2),
     +                   specT,phi2T,iflag)
            call interp (period(count1),period(count2),phi3(count1),phi3(count2),
     +                   specT,phi3T,iflag)
            call interp (period(count1),period(count2),DC3Global(count1),DC3Global(count2),
     +                   specT,DC3GlobalT,iflag)
            call interp (period(count1),period(count2),DC3ChinaTrk(count1),DC3ChinaTrk(count2),
     +                   specT,DC3ChinaTrkT,iflag)
            call interp (period(count1),period(count2),DC3ItalyJapan(count1),DC3ItalyJapan(count2),
     +                   specT,DC3ItalyJapanT,iflag)
            call interp (period(count1),period(count2),Vc(count1),Vc(count2),
     +                   specT,VcT,iflag)
            call interp (period(count1),period(count2),f4(count1),f4(count2),
     +                   specT,f4T,iflag)
            call interp (period(count1),period(count2),f5(count1),f5(count2),
     +                   specT,f5T,iflag)
            call interp (period(count1),period(count2),f6(count1),f6(count2),
     +                   specT,f6T,iflag)
            call interp (period(count1),period(count2),f7(count1),f7(count2),
     +                   specT,f7T,iflag)
            call interp (period(count1),period(count2),R1(count1),R1(count2),
     +                   specT,R1T,iflag)
            call interp (period(count1),period(count2),R2(count1),R2(count2),
     +                   specT,R2T,iflag)
            call interp (period(count1),period(count2),l1(count1),l1(count2),
     +                   specT,l1T,iflag)
            call interp (period(count1),period(count2),l2(count1),l2(count2),
     +                   specT,l2T,iflag)
            call interp (period(count1),period(count2),t1(count1),t1(count2),
     +                   specT,t1T,iflag)
            call interp (period(count1),period(count2),t2(count1),t2(count2),
     +                   specT,t2T,iflag)
            call interp (period(count1),period(count2),rjbbar(count1),rjbbar(count2),
     +                   specT,rjbbarT,iflag)
            call interp (period(count1),period(count2),Dfr(count1),Dfr(count2),
     +                   specT,DfrT,iflag)
            call interp (period(count1),period(count2),Dfv(count1),Dfv(count2),
     +                   specT,DfvT,iflag)
 1011 period1 = specT

C.....Set the mechanism terms based on ftype............
C     Set mechanism term and corresponding Frv and Fnm values.
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C      -1       Normal                    -120 < Rake <  -60
C     -0.5      Normal/Oblique            -150 < Rake < -120
C                                          -60 < Rake <  -30
C       0       Strike-Slip               -180 < Rake < -150
C                                          -30 < Rake <   30
C                                          150 < Rake <  180
C      0.5      Reverse/Oblique             30 < Rake <   60
C                                          120 < Rake <  150
C       1       Reverse                     60 < Rake <  120
C     Note: Unknown Mechanism is not currently coded.
      if (ftype .eq. -1.0) then
         mechS = 0.0
         mechN = 1.0
         mechR = 0.0
      elseif (ftype .eq. -0.5) then
         mechS = 0.0
         mechN = 1.0
         mechR = 0.0
      elseif (ftype .eq. 0.0) then
         mechS = 1.0
         mechN = 0.0
         mechR = 0.0
      elseif (ftype .eq. 0.5) then
         mechS = 0.0
         mechN = 0.0
         mechR = 1.0
      elseif (ftype .eq. 1.0) then
         mechS = 0.0
         mechN = 0.0
         mechR = 1.0
      endif

C.....First compute the Reference Rock PGA value...........
C.....This will include the regional dependence for PGA....
C.....MAGNITUDE DEPENDENCE.................................
      if (mag .le. mh(1)) then
         term1 = e1(1)*mechS + e2(1)*mechN + e3(1)*mechR +
     1           e4(1)*(mag-mh(1)) + e5(1)*(mag-mh(1))**2.0
      else
         term1 = e1(1)*mechS + e2(1)*mechN + e3(1)*mechR +
     1           e6(1)*(mag-mh(1))
      endif
C.....Distance dependence......
      Rp = SQRT( Rbjf*Rbjf+h(1)*h(1) )

C.....Apply Regional term.....
      if (regionflag .eq. 0) then
         TERM2 = ( c1(1) + c2(1)*(mag-mref) ) * alog(Rp/rref) +
     1          ( c3(1) + DC3global(1) ) * (Rp-rref)
      elseif (regionflag .eq. 1) then
         TERM2 = ( c1(1) + c2(1)*(mag-mref) ) * alog(Rp/rref) +
     1          ( c3(1) + DC3ChinaTrk(1) ) * (Rp-rref)
      elseif (regionflag .eq. 2) then
         TERM2 = ( c1(1) + c2(1)*(mag-mref) ) * alog(Rp/rref) +
     1          ( c3(1) + DC3ItalyJapan(1) ) * (Rp-rref)
      endif

      pga4nl = exp(term1+term2)


C.....Now compute the requested ground motion value........
C.....MAGNITUDE DEPENDENCE.................................
      if (mag .le. mhT) then
         term1 = e1T*mechS + e2T*mechN + e3T*mechR +
     1           e4T*(mag-mhT) + e5T*(mag-mhT)**2.0
      else
         term1 = e1T*mechS + e2T*mechN + e3T*mechR +
     1           e6T*(mag-mhT)
      endif

C.....Distance dependence......
      R = SQRT( Rbjf*Rbjf+hT*hT )

C     Now apply the regional attenuation differnece.
C     Global Case
      if (regionflag .eq. 0) then
         TERM2 = ( c1T + c2T*(mag-mref) ) * alog(R/rref) +
     1        c3T * (R-rref) + DC3globalT * (R-rref)
C     China-Turkey Case
      elseif (regionflag .eq. 1) then
         TERM2 = ( c1T + c2T*(mag-mref) ) * alog(R/rref) +
     1        c3T * (R-rref) + DC3ChinaTrkT * (R-rref)
C     Italy-Japan Case
      elseif (regionflag .eq. 2) then
         TERM2 = ( c1T + c2T*(mag-mref) ) * alog(R/rref) +
     1        c3T * (R-rref) + DC3ItalyJapanT * (R-rref)
      endif

C.....Site Response Term.........
C.....Now compute the site term........
C.....First the linear term......
      if (vs .lt. VcT ) then
         flin = cT*alog(Vs/Vref)
      else
         flin = cT*alog(VcT/Vref)
      endif

C.....Next the non-linear term......
      f2 = f4T*(exp(f5T*(min(vs,760.0)-360.0))-exp(f5T*(760.0-360.0)))

C.....Now compute the basin effect term......
C Deviation from ln(Vs30) scaling: bedrock depth (Z1) effect for California.
      if (basinflag .eq. 1) then
c     Compute the DeltaZ1 term. Apply the California model for all regions except for Japan.
         if (regionflag .eq. 2) then
             deltaz1 = z10 -
     1           exp(-5.23/2.0 * alog((vs**2.0 + 412.29**2.0)/(1360.0**2.0 + 412.39**2.0)))/1000.0
         else
             deltaz1 = z10 -
     1           exp(-7.15/4.0 * alog((vs**4.0 + 570.94**4.0)/(1360.0**4.0 + 570.94**4.0)))/1000.0
         endif

         if (specT .lt. 0.65) then
            fbasin = 0.0
         else
            if (deltaZ1 .le. f7T/f6T) then
               fbasin = f6T * deltaZ1
            elseif (deltaZ1 .gt. f7T/f6T) then
               fbasin = f7T
            endif
         endif
      else
         fbasin = 0.0
      endif

      TERM3 = flin + f1 + f2*alog((pga4nl+f3)/f3) + fBasin

      lnY = term1 + term2 + term3

      period2 = period1

c     Now compute the sigma value which is a function of magnitude and Vs
C     Tau (Eq. 4.11)
      if (mag .le. 4.5) then
         tau = t1T
      elseif (mag .gt. 4.5 .and. mag .lt. 5.5) then
         tau = t1T + (t2T - t1T)*(mag - 4.5)
      else
         tau = t2T
      endif

C     Phi - Magnitude (Eq. 4.12)
      if (mag .le. 4.5) then
         phi = l1T
      elseif (mag .gt. 4.5 .and. mag .lt. 5.5) then
         phi = l1T + (l2T - l1T)*(mag - 4.5)
      else
         phi = l2T
      endif

C     Phi - Distance (Eq. 4.13)
      if (rbjf .le. R1T) then
          phi = phi
      elseif (rbjf .gt. R1T .and. rbjf .le. R2T) then
          phi = phi + DfrT*( (alog(rbjf/R1T))/(alog(R2T/R1T)) )
      else
          phi = phi + DfrT
      endif

C     Phi - Vs30 (Eq. 4.14)
      if (vs .ge. V2) then
         phi = phi
      elseif (vs .ge. V1 .and. vs .lt. V2) then
         phi = phi - DfvT*( alog(V2/vs) / alog(V2/V1) )
      else
         phi = phi - DfvT
      endif

      sigma = sqrt (tau**2 + phi**2)

C     Convert ground motion to units of gals.
      lnY = lnY + 6.89

      return
      END

c ---------------------------------------------------------------------
C     *** Campbell and Bozorgnia NGA West2 (NGA-2013) ***
C         Earthquake Spectra Paper:
C            "Campbell-Bozorgnia NGA-West2 ground motion model
C                 for the average horizontal components of PGA,
C                 PGV, and 5%-damped linear Response Spectra"
C             K. W. Campbel and Y. Bozorgnia
C     Notes:
C        Applicable Range:
C            3.3 < M < 8.5 (strike-slip)
C            3.3 < M < 8.0 (reverse)
C            3.3 < M < 7.5 (normal)
C            Distance < 300km
C            150 < Vs30m < 1500 m/s
C            0 < Z25 < 10 km
C            0 < Zhyp < 20 km
C            15 < Dip < 90
C        Report provides formulation for estimating recommended
C           parameters when they are not defined (e.g., Z25 given Vs30m).
C           See Chapter 06 of the report.
c ---------------------------------------------------------------------------

      subroutine CB_NGAWest2_2013 ( mag, Rrup, Rbjf, Ftype, specT,
     1                     period2, lnY, sigma, iflag, vs,
     2                     depthtop, D25, Dip, depth, HWflag, Rx, rupwidth, regionflag, phi, tau )

C     Last Updated: 5/22/14
C     Coefficients updated from PEER Report version to be consistent with EQ Spectra paper in press.
C     Minor change to T=5, 7.5, and 10 sec for coefficient C6

      parameter (MAXPER=23)
      REAL Period(MAXPER), C0(MAXPER), C1(MAXPER), C2(MAXPER), C3(MAXPER), C4(MAXPER), C5(MAXPER)
      REAL C6(MAXPER), C7(MAXPER), C8(MAXPER), C9(MAXPER), C10(MAXPER), C11(MAXPER), C12(MAXPER)
      REAL C13(MAXPER), C14(MAXPER), C15(MAXPER), C16(MAXPER), C17(MAXPER), C18(MAXPER), C19(MAXPER)
      REAL A2(MAXPER), h1(MAXPER), h2(MAXPER), h3(MAXPER), h4(MAXPER)
      REAL h5(MAXPER), h6(MAXPER)
      REAL K1(MAXPER), K2(MAXPER), K3(MAXPER)
      REAL C20(MAXPER), DC20CA(MAXPER), DC20JP(MAXPER), DC20CH(MAXPER)
      REAL T1(MAXPER), T2(MAXPER), phi1(MAXPER), Phi2(MAXPER), phic(MAXPER)
      REAL flnAF(MAXPER), rho(MAXPER)

      REAL MAG, RRUP, RBJF, VS, D25, FHWR, FHWM, FHWZ, FHWD, PGAROCK, C, N
      real sigmaT, lnY, ftype, ztor, Dip, Dmax, pgasoil, Rx, R1, R2, f1, f2
      real fhypH, D25_RK
      INTEGER count1, count2, HWFlag, regionflag

      real c0T, c1T, c2T, c3T, c4T, c5T, c6T, c7T, c8T, c9T, c10T, c11T, c12T
      real c13T, c14T, c15T ,c16T, c17T, c18T, c19T, c20T, Dc20CAT, Dc20JPT, Dc20CHT
      real k1T, k2T, k3T, a2T, h1T, h2T, h3T, h4T, h5T, h6T
      real t1T, t2T, phi1T, phi2T, phicT
      real rhoT, flnAFT

      real alpha, tau, s
      real tau_lnyB, tau_lnPGAB, phi_lnY, phi_lnyB, phi_lnPGAB, phi, sigmatot

C.....MODEL COEFFICIENTS.....................

      data Period / 0.0, -1.0, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25,
     1       0.3, 0.4, 0.5, 0.75, 1.0, 1.5, 2.0, 3.0, 4.0, 5.0, 7.5, 10.0 /
      data c0 / -4.416, -2.895, -4.365, -4.348, -4.024, -3.479, -3.293, -3.666, -4.866,
     1       -5.411, -5.962, -6.403, -7.566, -8.379, -9.841, -11.011, -12.469, -12.969,
     2      -13.306, -14.02, -14.558, -15.509, -15.975 /
      data c1 / 0.984, 1.51, 0.977, 0.976, 0.931, 0.887, 0.902, 0.993, 1.267, 1.366,
     1       1.458, 1.528, 1.739, 1.872, 2.021, 2.18, 2.27, 2.271, 2.15, 2.132, 2.116,
     2       2.223, 2.132  /
      data c2 / 0.537, 0.27, 0.533, 0.549, 0.628, 0.674, 0.726, 0.698, 0.51, 0.447, 0.274,
     1       0.193, -0.02, -0.121, -0.042, -0.069, 0.047, 0.149, 0.368, 0.726, 1.027,
     2       0.169, 0.367  /
      data c3 / -1.499, -1.299, -1.485, -1.488, -1.494, -1.388, -1.469, -1.572, -1.669,
     1      -1.75, -1.711, -1.77, -1.594, -1.577, -1.757, -1.707, -1.621, -1.512, -1.315,
     2      -1.506, -1.721, -0.756, -0.8  /
      data c4 / -0.496, -0.453, -0.499, -0.501, -0.517, -0.615, -0.596, -0.536, -0.49,
     1      -0.451, -0.404, -0.321, -0.426, -0.44, -0.443, -0.527, -0.63, -0.768, -0.89,
     2      -0.885, -0.878, -1.077, -1.282  /
      data c5 / -2.773, -2.466, -2.773, -2.772, -2.782, -2.791, -2.745, -2.633, -2.458,
     1      -2.421, -2.392, -2.376, -2.303, -2.296, -2.232, -2.158, -2.063, -2.104, -2.051,
     2      -1.986, -2.021, -2.179, -2.244  /
      data c6 / 0.248, 0.204, 0.248, 0.247, 0.246, 0.24, 0.227, 0.21, 0.183, 0.182, 0.189,
     1       0.195, 0.185, 0.186, 0.186, 0.169, 0.158, 0.158, 0.148, 0.135, 0.135, 0.165, 0.180  /
      data c7 / 6.768, 5.837, 6.753, 6.502, 6.291, 6.317, 6.861, 7.294, 8.031, 8.385, 7.534,
     1       6.99, 7.012, 6.902, 5.522, 5.65, 5.795, 6.632, 6.759, 7.978, 8.538, 8.468, 6.564  /
      data c8 / 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1       0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  /
      data c9 / -0.212, -0.168, -0.214, -0.208, -0.213, -0.244, -0.266, -0.229, -0.211, -0.163,
     1      -0.15, -0.131, -0.159, -0.153, -0.09, -0.105, -0.058, -0.028, 0.0, 0.0, 0.0, 0.0, 0.0  /
      data c10 / 0.72, 0.305, 0.72, 0.73, 0.759, 0.826, 0.815, 0.831, 0.749, 0.764, 0.716, 0.737,
     1       0.738, 0.718, 0.795, 0.556, 0.48, 0.401, 0.206, 0.105, 0.0, 0.0, 0.0  /
      data c11 / 1.09, 1.713, 1.094, 1.149, 1.29, 1.449, 1.535, 1.615, 1.877, 2.069, 2.205,
     1       2.306, 2.398, 2.355, 1.995, 1.447, 0.33, -0.514, -0.848, -0.793, -0.748,
     2      -0.664, -0.576  /
      data c12 / 2.186, 2.602, 2.191, 2.189, 2.164, 2.138, 2.446, 2.969, 3.544, 3.707,
     1       3.343, 3.334, 3.544, 3.016, 2.616, 2.47, 2.108, 1.327, 0.601, 0.568, 0.356,
     2       0.075, -0.027  /
      data c13 / 1.42, 2.457, 1.416, 1.453, 1.476, 1.549, 1.772, 1.916, 2.161, 2.465,
     1       2.766, 3.011, 3.203, 3.333, 3.054, 2.562, 1.453, 0.657, 0.367, 0.306, 0.268,
     2       0.374, 0.297 /
      data c14 / -0.0064, 0.106, -0.007, -0.0167, -0.0422, -0.0663, -0.0794, -0.0294,
     1       0.0642, 0.0968, 0.1441, 0.1597, 0.141, 0.1474, 0.1764, 0.2593, 0.2881,
     2       0.3112, 0.3478, 0.3747, 0.3382, 0.3754, 0.3506  /
      data c15 / -0.202, 0.332, -0.207, -0.199, -0.202, -0.339, -0.404, -0.416, -0.407,
     1      -0.311, -0.172, -0.084, 0.085, 0.233, 0.411, 0.479, 0.566, 0.562, 0.534,
     2       0.522, 0.477, 0.321, 0.174  /
      data c16 / 0.393, 0.585, 0.39, 0.387, 0.378, 0.295, 0.322, 0.384, 0.417, 0.404,
     1       0.466, 0.528, 0.54, 0.638, 0.776, 0.771, 0.748, 0.763, 0.686, 0.691,
     2       0.67, 0.757, 0.621  /
      data c17 / 0.0977, 0.0517, 0.0981, 0.1009, 0.1095, 0.1226, 0.1165, 0.0998, 0.076,
     1       0.0571, 0.0437, 0.0323, 0.0209, 0.0092, -0.0082, -0.0131, -0.0187, -0.0258,
     2      -0.0311, -0.0413, -0.0281, -0.0205, 0.0009  /
      data c18 / 0.0333, 0.0327, 0.0334, 0.0327, 0.0331, 0.027, 0.0288, 0.0325, 0.0388,
     1       0.0437, 0.0463, 0.0508, 0.0432, 0.0405, 0.042, 0.0426, 0.038, 0.0252, 0.0236,
     2       0.0102, 0.0034, 0.005, 0.0099  /
      data c19 / 0.00757, 0.00613, 0.00755, 0.00759, 0.0079, 0.00803, 0.00811, 0.00744,
     1       0.00716, 0.00688, 0.00556, 0.00458, 0.00401, 0.00388, 0.0042, 0.00409, 0.00424,
     2       0.00448, 0.00345, 0.00603, 0.00805, 0.0028, 0.00458  /
      data k1 / 865.0, 400.0, 865.0, 865.0, 908.0, 1054.0, 1086.0, 1032.0, 878.0, 748.0, 654.0,
     1       587.0, 503.0, 457.0, 410.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0, 400.0  /
      data k2 / -1.186, -1.955, -1.186, -1.219, -1.273, -1.346, -1.471, -1.624, -1.931, -2.188,
     1      -2.381, -2.518, -2.657, -2.669, -2.401, -1.955, -1.025, -0.299, 0.0, 0.0,
     2       0.0, 0.0, 0.0  /
      data k3 / 1.839, 1.929, 1.839, 1.84, 1.841, 1.843, 1.845, 1.847, 1.852, 1.856, 1.861,
     1       1.865, 1.874, 1.883, 1.906, 1.929, 1.974, 2.019, 2.11, 2.2, 2.291, 2.517, 2.744  /
      data a2 / 0.167, 0.596, 0.168, 0.166, 0.167, 0.173, 0.198, 0.174, 0.198, 0.204, 0.185, 0.164,
     1       0.16, 0.184, 0.216, 0.596, 0.596, 0.596, 0.596, 0.596, 0.596, 0.596, 0.596  /
      data h1 / 0.241, 0.117, 0.242, 0.244, 0.246, 0.251, 0.26, 0.259, 0.254, 0.237, 0.206, 0.21,
     1       0.226, 0.217, 0.154, 0.117, 0.117, 0.117, 0.117, 0.117, 0.117, 0.117, 0.117  /
      data h2 / 1.474, 1.616, 1.471, 1.467, 1.467, 1.449, 1.435, 1.449, 1.461, 1.484, 1.581,
     1       1.586, 1.544, 1.554, 1.626, 1.616, 1.616, 1.616, 1.616, 1.616, 1.616, 1.616, 1.616  /
      data h3 / -0.715, -0.733, -0.714, -0.711, -0.713, -0.701, -0.695, -0.708, -0.715, -0.721,
     1      -0.787, -0.795, -0.77, -0.77, -0.78, -0.733, -0.733, -0.733, -0.733, -0.733, -0.733,
     2      -0.733, -0.733 /
      data h4 / 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
     1       1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0  /
      data h5 / -0.337, -0.128, -0.336, -0.339, -0.338, -0.338, -0.347, -0.391, -0.449, -0.393,
     1      -0.339, -0.447, -0.525, -0.407, -0.371, -0.128, -0.128, -0.128, -0.128, -0.128,
     2      -0.128, -0.128, -0.128  /
      data h6 / -0.27, -0.756, -0.27, -0.263, -0.259, -0.263, -0.219, -0.201, -0.099, -0.198,
     1      -0.21, -0.121, -0.086, -0.281, -0.285, -0.756, -0.756, -0.756, -0.756, -0.756,
     2      -0.756, -0.756, -0.756  /
      data c20 / -0.0055, -0.0017, -0.0055, -0.0055, -0.0057, -0.0063, -0.007, -0.0073,
     1      -0.0069, -0.006, -0.0055, -0.0049, -0.0037, -0.0027, -0.0016, -0.0006, 0.0,
     2       0.0, 0.0, 0.0, 0.0, 0.0, 0.0  /
      data Dc20CA / 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1       0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  /
      data Dc20JP / -0.0035, -0.0006, -0.0035, -0.0035, -0.0034, -0.0037, -0.0037,
     1      -0.0034, -0.003, -0.0031, -0.0033, -0.0035, -0.0034, -0.0034, -0.0032,
     2      -0.003, -0.0019, -0.0005, 0.0, 0.0, 0.0, 0.0, 0.0  /
      data Dc20CH / 0.0036, 0.0017, 0.0036, 0.0036, 0.0037, 0.004, 0.0039, 0.0042,
     1       0.0042, 0.0041, 0.0036, 0.0031, 0.0028, 0.0025, 0.0016, 0.0006, 0.0,
     2       0.0, 0.0, 0.0, 0.0, 0.0, 0.0  /
      data t1 / 0.409, 0.317, 0.404, 0.417, 0.446, 0.508, 0.504, 0.445, 0.382, 0.339,
     1          0.34, 0.34, 0.356, 0.379, 0.43, 0.47, 0.497, 0.499, 0.5, 0.543, 0.534,
     2          0.523, 0.466  /
      data t2 / 0.322, 0.297, 0.325, 0.326, 0.344, 0.377, 0.418, 0.426, 0.387, 0.338,
     1          0.316, 0.3, 0.264, 0.263, 0.326, 0.353, 0.399, 0.4, 0.417, 0.393,
     2          0.421, 0.438, 0.438  /
      data phi1 / 0.734, 0.655, 0.734, 0.738, 0.747, 0.777, 0.782, 0.769, 0.769,
     1            0.761, 0.744, 0.727, 0.69, 0.663, 0.606, 0.579, 0.541, 0.529, 0.527,
     2            0.521, 0.502, 0.457, 0.441  /
      data phi2 / 0.492, 0.494, 0.492, 0.496, 0.503, 0.52, 0.535, 0.543, 0.543, 0.552,
     1            0.545, 0.568, 0.593, 0.611, 0.633, 0.628, 0.603, 0.588, 0.578, 0.559,
     2            0.551, 0.546, 0.543  /
      data flnaf / 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3,
     1             0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3  /
      data phic / 0.166, 0.19, 0.166, 0.166, 0.165, 0.162, 0.158, 0.17, 0.18, 0.186,
     1            0.191, 0.198, 0.206, 0.208, 0.221, 0.225, 0.222, 0.226, 0.229,
     2            0.237, 0.237, 0.271, 0.29  /
      data rho / 1.00, 0.684, 1.00, 0.998, 0.986, 0.938, 0.887, 0.87, 0.876, 0.87,
     1           0.85, 0.819, 0.743, 0.684, 0.562, 0.467, 0.364, 0.298, 0.234, 0.202,
     1           0.184, 0.176, 0.154 /

      nPer = 23
      c = 1.88
      n = 1.18

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c0T = c0(1)
         c1T = c1(1)
         c2T = c2(1)
         c3T = c3(1)
         c4T = c4(1)
         c5T = c5(1)
         c6T = c6(1)
         c7T = c7(1)
         c8T = c8(1)
         c9T = c9(1)
         c10T = c10(1)
         c11T = c11(1)
         c12T = c12(1)
         c13T = c13(1)
         c14T = c14(1)
         c15T = c15(1)
         c16T = c16(1)
         c17T = c17(1)
         c18T = c18(1)
         c19T = c19(1)

         a2T = a2(1)
         h1T = h1(1)
         h2T = h2(1)
         h3T = h3(1)
         h4T = h4(1)
         h5T = h5(1)
         h6T = h6(1)

         k1T = k1(1)
         k2T = k2(1)
         k3T = k3(1)
         c20T = c20(1)
         Dc20CAT = Dc20CA(1)
         Dc20JPT = Dc20JP(1)
         Dc20CHT = Dc20CH(1)

         phi1T = phi1(1)
         phi2T = phi2(1)
         t1T = t1(1)
         t2T = t2(1)
         flnAFT = flnaf(1)
         phicT = phic(1)
         rhoT = rho(1)

         goto 1011
      elseif (specT .eq. -1.0) then
         period1 = period(2)
        c0T = c0(2)
         c1T = c1(2)
         c2T = c2(2)
         c3T = c3(2)
         c4T = c4(2)
         c5T = c5(2)
         c6T = c6(2)
         c7T = c7(2)
         c8T = c8(2)
         c9T = c9(2)
         c10T = c10(2)
         c11T = c11(2)
         c12T = c12(2)
         c13T = c13(2)
         c14T = c14(2)
         c15T = c15(2)
         c16T = c16(2)
         c17T = c17(2)
         c18T = c18(2)
         c19T = c19(2)

         a2T = a2(2)
         h1T = h1(2)
         h2T = h2(2)
         h3T = h3(2)
         h4T = h4(2)
         h5T = h5(2)
         h6T = h6(2)

         k1T = k1(2)
         k2T = k2(2)
         k3T = k3(2)
         c20T = c20(2)
         Dc20CAT = Dc20CA(2)
         Dc20JPT = Dc20JP(2)
         Dc20CHT = Dc20CH(2)

         phi1T = phi1(2)
         phi2T = phi2(2)
         t1T = t1(2)
         t2T = t2(2)
         flnAFT = flnaf(2)
         phicT = phic(2)
         rhoT = rho(2)

         goto 1011

      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=3,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Campbell&Bozorgnia (NGA West2-2013) Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),c0(count1),c0(count2),
     +                   specT,c0T,iflag)
            call interp (period(count1),period(count2),c1(count1),c1(count2),
     +                   specT,c1T,iflag)
            call interp (period(count1),period(count2),c2(count1),c2(count2),
     +                   specT,c2T,iflag)
            call interp (period(count1),period(count2),c3(count1),c3(count2),
     +                   specT,c3T,iflag)
            call interp (period(count1),period(count2),c4(count1),c4(count2),
     +                   specT,c4T,iflag)
            call interp (period(count1),period(count2),c5(count1),c5(count2),
     +                   specT,c5T,iflag)
            call interp (period(count1),period(count2),c6(count1),c6(count2),
     +                   specT,c6T,iflag)
            call interp (period(count1),period(count2),c7(count1),c7(count2),
     +                   specT,c7T,iflag)
            call interp (period(count1),period(count2),c8(count1),c8(count2),
     +                   specT,c8T,iflag)
            call interp (period(count1),period(count2),c9(count1),c9(count2),
     +                   specT,c9T,iflag)
            call interp (period(count1),period(count2),c10(count1),c10(count2),
     +                   specT,c10T,iflag)
            call interp (period(count1),period(count2),c11(count1),c11(count2),
     +                   specT,c11T,iflag)
            call interp (period(count1),period(count2),c12(count1),c12(count2),
     +                   specT,c12T,iflag)
            call interp (period(count1),period(count2),c13(count1),c13(count2),
     +                   specT,c13T,iflag)
            call interp (period(count1),period(count2),c14(count1),c14(count2),
     +                   specT,c14T,iflag)
            call interp (period(count1),period(count2),c15(count1),c15(count2),
     +                   specT,c15T,iflag)
            call interp (period(count1),period(count2),c16(count1),c16(count2),
     +                   specT,c16T,iflag)
            call interp (period(count1),period(count2),c17(count1),c17(count2),
     +                   specT,c17T,iflag)
            call interp (period(count1),period(count2),c18(count1),c18(count2),
     +                   specT,c18T,iflag)
            call interp (period(count1),period(count2),c19(count1),c19(count2),
     +                   specT,c19T,iflag)
            call interp (period(count1),period(count2),a2(count1),a2(count2),
     +                   specT,a2T,iflag)
            call interp (period(count1),period(count2),h1(count1),h1(count2),
     +                   specT,h1T,iflag)
            call interp (period(count1),period(count2),h2(count1),h2(count2),
     +                   specT,h2T,iflag)
            call interp (period(count1),period(count2),h3(count1),h3(count2),
     +                   specT,h3T,iflag)
            call interp (period(count1),period(count2),h4(count1),h4(count2),
     +                   specT,h4T,iflag)
            call interp (period(count1),period(count2),h5(count1),h5(count2),
     +                   specT,h5T,iflag)
            call interp (period(count1),period(count2),h6(count1),h6(count2),
     +                   specT,h6T,iflag)

            call interp (period(count1),period(count2),k1(count1),k1(count2),
     +                   specT,k1T,iflag)
            call interp (period(count1),period(count2),k2(count1),k2(count2),
     +                   specT,k2T,iflag)
            call interp (period(count1),period(count2),k3(count1),k3(count2),
     +                   specT,k3T,iflag)

            call interp (period(count1),period(count2),c20(count1),c20(count2),
     +                   specT,c20T,iflag)
            call interp (period(count1),period(count2),Dc20CA(count1),Dc20CA(count2),
     +                   specT,Dc20CAT,iflag)
            call interp (period(count1),period(count2),Dc20JP(count1),Dc20JP(count2),
     +                   specT,Dc20JPT,iflag)
            call interp (period(count1),period(count2),Dc20CH(count1),Dc20CH(count2),
     +                   specT,Dc20CHT,iflag)

            call interp (period(count1),period(count2),phi1(count1),phi1(count2),
     +                   specT,phi1T,iflag)
            call interp (period(count1),period(count2),phi2(count1),phi2(count2),
     +                   specT,phi2T,iflag)
            call interp (period(count1),period(count2),t1(count1),t1(count2),
     +                   specT,t1T,iflag)
            call interp (period(count1),period(count2),t2(count1),t2(count2),
     +                   specT,t2T,iflag)
            call interp (period(count1),period(count2),flnAF(count1),flnAF(count2),
     +                   specT,flnAfT,iflag)
            call interp (period(count1),period(count2),phic(count1),phic(count2),
     +                   specT,phicT,iflag)
            call interp (period(count1),period(count2),rho(count1),rho(count2),
     +                   specT,rhoT,iflag)

 1011 period1 = specT

C.....COMPUTE ROCK PGA VALUE FIRST.........................
C.....MAGNITUDE DEPENDENCE (Eq 3.2)........................
      IF (MAG .LE. 4.5) THEN
         TERM1 = C0(1) + C1(1)*MAG
      elseif (mag .le. 5.5) then
         TERM1 = C0(1) + c1(1)*MAG + c2(1)*(MAG-4.5)
      elseif (mag .le. 6.5) then
         TERM1 = C0(1) + C1(1)*MAG + c2(1)*(MAG-4.5) + c3(1)*(mag-5.5)
      ELSE
         TERM1 = C0(1) + C1(1)*MAG + c2(1)*(MAG-4.5) + C3(1)*(MAG-5.5) + c4(1)*(mag-6.5)
      ENDIF

C.....Distance dependence (Eq 3.3).....
      R = SQRT( RRUP*RRUP+C7(1)*C7(1) )
      TERM2 = (C5(1) + C6(1)*MAG)*ALOG(R)

C.....SET UP STYLE OF FAULTING TERMS (Eq 3.4, 3.5, and 3.6).........

C     Set mechanism term and corresponding Frv and Fnm values.
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C    -1,-0.5    Normal and NMl/Obl       -150 < Rake < -30.0
C     1, 0.5    Reverse and Rev/Obl        30 < Rake < 150.0
C       0       Strike-Slip                    Otherwise
      IF (Ftype .EQ. 0.0) THEN
         TERM3 = 0.0
      ELSEIF (Ftype .ge. 0.5) THEN
         if (mag .le. 4.5) then
            TERM3 = 0.0
         elseif (mag .le. 5.5) then
            TERM3 = C8(1)*(mag-4.5)
         else
            TERM3 = c8(1)
         endif
      ELSEIF (Ftype .le. -0.5) THEN
         if (mag .le. 4.5) then
            TERM3 = 0.0
         elseif (mag .le. 5.5) then
            TERM3 = C9(1)*(mag-4.5)
         else
            TERM3 = C9(1)
         endif
      ENDIF

C.....SET UP HANGING WALL TERMS (Eq 3.7)..............
      if (HWflag .eq. 1) then
         R1 = rupwidth*cos(abs(dip)*3.14159/180.0)
         R2 = 62.0*mag - 350.0
         f1 = h1(1) + h2(1)*(Rx/R1) + h3(1)*(Rx/R1)**2.0
         f2 = h4(1) + h5(1)*((Rx-R1)/(R2-R1)) + h6(1)*((Rx-R1)/(R2-R1))**2.0
         if (Rrup .eq. 0.0) then
            fhwrrup = 1.0
         else
            fhwrrup = ((Rrup-Rbjf)/Rrup)
         endif
         if (Rx .lt. R1) Then
            fhwr = f1*fhwrrup
         else
            fhwr = max(f2,0.0)*fhwrrup
         endif
         if (mag .le. 5.5) then
            fhwm = 0.0
         elseif (mag .le. 6.5) then
            fhwm = (mag-5.5)*(1.0+a2(1)*(mag-6.5))
         else
            fhwm = 1.0 + a2(1)*(mag-6.5)
         endif
         if (depthtop .le. 16.66) then
            fhwz = 1.0 - 0.06*depthtop
         else
            fhwz = 0.0
         endif
         fhwd = (90.0 - dip)/45.0
         TERM4 = c10(1)*fhwr*fhwm*fhwz*fhwd
      else
         term4 = 0.0
      endif

C.....NOW COMPUTE THE SITE CONDITION FACTORS...............
C.....(FOR PGA ROCK, VS=1100, i.e., Vs>k1)
      TERM5_RK = (C11(1) + K2(1)*n)*ALOG( 1100.0/K1(1) )
      if (regionflag .eq. 1) then
         TERM5_RK = TERM5_RK + (C13(1) + K2(1)*n)*ALOG( 1100.0/K1(1) )
      endif
C.....NOW COMPUTE THE SEDIMENT DEPTH DEPENDENCE (Eq 3.17)............
C     For Rock PGA the D25 value should be set at the recommended value of D25=0.398
      D25_RK = 0.398
      if (D25_RK .le. 1.0) then
         if (regionflag .eq. 1) then
c            TERM6 = (C14(1)+c15(1))*(D25-1.0)
            TERM6_RK = (C14(1)+c15(1))*(D25_RK-1.0)
         else
c            TERM6 = C14(1)*(D25-1.0)
            TERM6_RK = C14(1)*(D25_RK-1.0)
         endif
      elseif (D25_RK .GT. 1.0 .AND. D25_RK .LE. 3.0) then
        TERM6_RK = 0.0
      elseif (D25_RK .GT. 3.0) then
         TERM6_RK = c16(1)*k3(1)*exp(-0.75)*(1.0-exp(-0.25*(D25_RK-3.0)))
      endif

C.....Now compute the hypocentral depth term (Eq 3.21).........
      if (depth .le. 7.0) then
         fhypH = 0.0
      elseif (depth .le. 20.0) then
         fhypH = depth - 7.0
      else
         fhypH = 13.0
      endif
      if (mag .le. 5.5) then
          term7 = c17(1)*fhypH
      elseif (mag .le. 6.5) then
          term7 = (c17(1) + (c18(1)-c17(1))*(mag-5.5))*fhypH
      else
          term7 = c18(1)*fhypH
      endif

C.....Compute Rupture Dip term (Eq 3.24)............
      if (mag .le. 4.5) then
          term8 = c19(1)*dip
      elseif (mag .le. 5.5) then
          term8 = c19(1)*(5.5-mag)*dip
      else
          term8 = 0.0
      endif

C.....Compute anelastic attenuation term.....
      if (Rrup .le. 80.0) then
         term9 = 0.0
      else
         if (regionflag .eq. 0) then
            term9 = (c20(1)+Dc20CA(1) ) * (Rrup-80.0)
         elseif (regionflag .eq. 1 .or. regionflag .eq. 3) then
            term9 = (c20(1)+Dc20JP(1) ) * (Rrup-80.0)
         elseif (regionflag .eq. 2) then
            term9 = (c20(1)+Dc20CH(1) ) * (Rrup-80.0)
         endif
      endif

      PGAROCK = EXP(TERM1+TERM2+TERM3+TERM4+TERM5_RK+TERM6_RK+TERM7+TERM8+TERM9)

C.....For PGA Specific Vs30m Value
      if (vs .le. k1(1) ) then
         term5 = c11(1)*alog(vs/k1(1)) +
     1           k2(1)*(alog(pgarock+c*((vs/k1(1))**n)) -
     2           alog(pgarock+c))
      else
         term5 = (c11(1) + k2(1)*n)*alog(vs/k1(1))
      endif

C     Add Japan Site response Factor is requested
      if (regionflag .eq. 1) then
         if (VS .le. 200.0) then
            term5 = term5 + (c12(1)+k2(1)*n)*(alog(VS/k1(1))-alog(200.0/k1(1)))
         else
            term5 = term5 + (c13(1)+k2(1)*n)*alog(Vs/k1(1))
         endif
      endif

C.....NOW COMPUTE THE SEDIMENT DEPTH DEPENDENCE (Eq 3.17)............
C     For Rock PGA the D25 value should be set at the recommended value of D25=0.398
      if (D25 .le. 1.0) then
         if (regionflag .eq. 1) then
            TERM6 = (C14(1)+c15(1))*(D25-1.0)
         else
            TERM6 = C14(1)*(D25-1.0)
         endif
      elseif (D25 .GT. 1.0 .AND. D25 .LE. 3.0) then
        TERM6 = 0.0
      elseif (D25 .GT. 3.0) then
         TERM6 = c16(1)*k3(1)*exp(-0.75)*(1.0-exp(-0.25*(D25-3.0)))
      endif

      pgasoil = alog(pgarock) - term5_rk - term6_RK + term5 + term6
      psoil2 = (TERM1+TERM2+TERM3+TERM4+TERM5+TERM6+TERM7+TERM8+TERM9)

CC      write (*,*) 'PGA Rock:', pgarock, term1-c1T, term2, term3, term4, term5, term6, term7, term8, term9
cC      write (*,*) term5, exp(pgasoil)
cC      write (*,*) exp(pgasoil), exp(psoil2)
c      pause


C.....NOW COMPUTE THE GROUND MOTION VALUES.................
C.....MAGNITUDE DEPENDENCE.................................
      IF (MAG .LE. 4.5) THEN
         TERM1 = C0T + C1T*MAG
      elseif (mag .le. 5.5) then
         TERM1 = C0T + c1T*MAG + c2T*(MAG-4.5)
      elseif (mag .le. 6.5) then
         TERM1 = C0T + C1T*MAG + c2T*(MAG-4.5) + c3T*(mag-5.5)
      ELSE
         TERM1 = C0T + C1T*MAG + c2T*(MAG-4.5) + C3T*(MAG-5.5) + c4T*(mag-6.5)
      ENDIF

C.....Distance dependence......
      R = SQRT( RRUP*RRUP+C7T*C7T )
      TERM2 = (C5T + C6T*MAG)*ALOG(R)

C.....SET UP STYLE OF FAULTING TERMS...........

C     Set mechanism term and corresponding Frv and Fnm values.
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C    -1,-0.5    Normal and NMl/Obl       -150 < Rake < -30.0
C     1, 0.5    Reverse and Rev/Obl        30 < Rake < 150.0
C       0       Strike-Slip                    Otherwise
      IF (Ftype .EQ. 0.0) THEN
         TERM3 = 0.0
      ELSEIF (Ftype .ge. 0.5) THEN
         if (mag .le. 4.5) then
            TERM3 = 0.0
         elseif (mag .le. 5.5) then
            TERM3 = C8T*(mag-4.5)
         else
            TERM3 = C8T
         endif
      ELSEIF (Ftype .le. -0.5) THEN
         if (mag .le. 4.5) then
            TERM3 = 0.0
         elseif (mag .le. 5.5) then
            TERM3 = C9T*(mag-4.5)
         else
            TERM3 = C9T
         endif
      ENDIF

C.....SET UP HANGING WALL TERMS................
      if (HWflag .eq. 1) then
         R1 = rupwidth*cos(abs(dip)*3.14159/180.0)
         R2 = 62.0*mag - 350.0
         f1 = h1T + h2T*(Rx/R1) + h3T*(Rx/R1)**2.0
         f2 = h4T + h5T*((Rx-R1)/(R2-R1)) + h6T*((Rx-R1)/(R2-R1))**2.0
         if (Rrup .eq. 0.0) then
            fhwrrup = 1.0
         else
            fhwrrup = ((Rrup-Rbjf)/Rrup)
         endif
         if (Rx .lt. R1) Then
            fhwr = f1*fhwrrup
         else
            fhwr = max(f2,0.0)*fhwrrup
         endif
         if (mag .le. 5.5) then
            fhwm = 0.0
         elseif (mag .le. 6.5) then
            fhwm = (mag-5.5)*(1.0+a2T*(mag-6.5))
         else
            fhwm = 1.0 + a2T*(mag-6.5)
         endif
         if (depthtop .le. 16.66) then
            fhwz = 1.0 - 0.06*depthtop
         else
            fhwz = 0.0
         endif
         fhwd = (90.0 - dip)/45.0
         TERM4 = c10T*fhwr*fhwm*fhwz*fhwd
      else
         term4 = 0.0
      endif

C.....NOW COMPUTE THE SITE CONDITION FACTORS...............
      IF (VS .LE. K1T ) THEN
         TERM5 = C11T*ALOG( VS/K1T ) +
     1           K2T*( ALOG( PGAROCK+c*( (VS/K1T)**N) ) -
     2           ALOG( PGAROCK+c ) )
      ELSE
         TERM5 = ( C11T+K2T*n )*ALOG( VS/K1T )
      ENDIF
c     Add Japan Site Term Effects
      if (regionflag .eq. 1) then
         IF (VS .LE. 200.0 ) THEN
            TERM5 = term5 + (C12T+k2T*n)*(alog(Vs/k1T)-alog(200/k1T))
         ELSE
            TERM5 = term5 + ( C13T+K2T*n )*ALOG( VS/K1T )
         ENDIF
      endif

C.....NOW COMPUTE THE SEDIMENT DEPTH DEPENDENCE.............
      IF (D25 .LE. 1.0) THEN
         if (regionflag .eq. 1) then
            TERM6 = (C14T+c15T)*(D25-1.0)
          else
            TERM6 = C14T*(D25-1.0)
          endif
      ELSEIF (D25 .GT. 1.0 .AND. D25 .LE. 3.0) THEN
         TERM6 = 0.0
      ELSEIF (D25 .GT. 3.0)  THEN
         TERM6 = c16T*k3T*exp(-0.75)*( 1.0 - exp(-0.25*(D25-3.0)))
      ENDIF

C.....Now compute the hypocentral depth term..........
      if (depth .le. 7.0) then
         fhypH = 0.0
      elseif (depth .le. 20.0) then
         fhypH = depth - 7.0
      else
         fhypH = 13.0
      endif
      if (mag .le. 5.5) then
          term7 = c17T*fhypH
      elseif (mag .le. 6.5) then
          term7 = (c17T + (c18T-c17T)*(mag-5.5))*fhypH
      else
          term7 = c18T*fhypH
      endif

C.....Compute Rupture Dip term.............
      if (mag .le. 4.5) then
          term8 = c19T*dip
      elseif (mag .le. 5.5) then
          term8 = c19T*(5.5-mag)*dip
      else
          term8 = 0.0
      endif

C.....Compute anelastic attenuation term.....
      if (Rrup .le. 80.0) then
         term9 = 0.0
      else
         if (regionflag .eq. 0) then
            term9 = (c20T+Dc20CAT)*(Rrup-80.0)
         elseif (regionflag .eq. 1 .or. regionflag .eq. 3) then
             term9 = (c20T+Dc20JPT)*(Rrup-80.0)
         elseif (regionflag .eq. 2) then
             term9 = (c20T+Dc20CHT)*(Rrup-80.0)
         endif
      endif

      LnY = (TERM1+TERM2+TERM3+TERM4+TERM5+TERM6+TERM7+TERM8+TERM9)

CC      write (*,*) spect, Rrup, 'Soil Rock:',term1-c1T, term2, term3, term4, term5, term6, term7, term8, term9
cC      write (*,*) c14T, c15T,d25,(C14T+c15T)*(D25-1.0), (C14T)*(D25-1.0)
CC      write (*,*) exp(lnY), exp(pgasoil), exp(psoil2)
cC      write (*,*) exp(pgasoil), exp(psoil2)
c      pause

C    Check that SA is not less than PGA for T<0.25sec
      if (specT .lt. 0.25) then
         if (lnY .lt. pgasoil ) then
            lnY = pgasoil
         endif
      endif

C.....Now compute the sigma value..........
      IF (Vs .LT. k1T) THEN
        alpha = k2T*pgarock*(1/(pgarock
     &    +c*(Vs/k1T)**n)
     &    -1/(pgarock + c))
      ELSE
        alpha = 0.0
      ENDIF

      If (Mag.le.4.5) then
	   tau_lnyB = t1T
	   tau_lnPGAB = t1(1)
	elseif (Mag.lt.5.5) then
	   tau_lnyB = t2T +
     &          (t1T - t2T)*(5.5-mag)
	   tau_lnPGAB = t2(1) +
     &          (t1(1) - t2(1))*(5.5-Mag)
	else
	   tau_lnyB = t2T
	   tau_lnPGAB = t2(1)
	endif

      tau = SQRT(tau_lnyB**2 +
     &           (alpha * tau_lnPGAB)**2 +
     &           2.0*alpha*rhoT*tau_lnyB*tau_lnPGAB)

      If (Mag.le.4.5) then
	   phi_lny = phi1T
           phi_lnPGAB = phi1(1)
      elseif (Mag.lt.5.5) then
	   phi_lny = phi2T +
     &          (phi1T - phi2T)*(5.5-mag)
	   phi_lnPGAB = phi2(1) +
     &          (phi1(1) - phi2(1))*(5.5-mag)
      else
	   phi_lny = phi2T
	   phi_lnPGAB = phi2(1)
      endif

      phi_lnyB = SQRT(phi_lny**2 - flnAFT**2)

      phi_lnPGAB = SQRT(phi_lnPGAB**2 - flnAF(1)**2)

      phi = SQRT(phi_lny**2 +
     &           (alpha*phi_lnPGAB)**2 +
     &           2.0*alpha*rhoT*phi_lnyB*phi_lnPGAB)

      Sigmatot = SQRT(phi**2 + Tau**2)

      period2 = period1

C     Convert ground motion to units of gals.

      lnY = lnY + 6.89
      sigma = sigmaTot

      return
      END

c ---------------------------------------------------------------------
C ** Chiou and Youngs (NGA West2-2013 Model) Horizontal **
C     Earthquake Spectra Paper:
C        "Update of the Chiou and Youngs NGA Model for the
C            Average Horizontal Component of Peak
C            Ground Motion and Response Spectra"
C         B. S.J. Chiou and R.R. Youngs
C     Notes:
C        Applicable Range (see Abstract):
C           3.5 <= M <= 8.5 Strike-slip
C           3.5 <= M <= 8.0 Reverse and Normal
C           Rrup <= 300 km
C           Ztor <= 20 km
C           180m/s <= Vs30m <= 1500m/s
C           Mainshock events only
C        Regional attenuation included based on Regionflag
C             0 = Global
C             1 = Japan/Italy
C             2 = Wenchuan (note only applicable for M7.9 event)
C         Sigma dependent on estimated or measured Vs30m based on
C             Vs30_Class
C             0 = Estimated Vs30m
C             1 = Measured Vs30m
c ---------------------------------------------------------------------

      Subroutine CY_NGAWest2_2013 ( m, Rrup, Rbjf, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, Delta, DTor, Ftype, depthvs10, vs30_class,
     3                     hwflag, Rx, regionflag, phi, tau )

C     Last Updated: 8/1/13

      parameter (MAXPER=25)
      REAL Period(MAXPER), C1(MAXPER), C1a(MAXPER), C1b(MAXPER)
      REAL cn(MAXPER), cm(MAXPER), c5(MAXPER), c6(MAXPER)
      REAL c7(MAXPER), c9(MAXPER), gamma1(MAXPER), gamma2(MAXPER)
      REAL phi1(MAXPER), phi2(MAXPER), phi3(MAXPER), phi4(MAXPER)
      REAL phi5(MAXPER), phi6(MAXPER), phi1jp(MAXPER), phi5jp(MAXPER), phi6jp(MAXPER)
      REAL tau1(MAXPER), tau2(MAXPER), sigma1(MAXPER), sigma2(MAXPER)
      REAL sigma3(MAXPER), c9a(MAXPER)
      REAL c3(MAXPER), gm(MAXPER), c9b(MAXPER)
      Real CHM(MAXPER), C1c(MAXPER), C1d(MAXPER), C7b(MAXPER), C8b(MAXPER)
      real C11(MAXPER), C11B(MAXPER)
      real gscaleJapIt(MAXPER), gscaleWen(MAXPER), sigma2Jap(MAXPER)

      REAL c1T, c1aT, c1bT, cnT, cmT, c5T, c6T, c7T, c9T, c9aT, c3T
      REAL gamma1T, gamma2T, phi1T, phi2T, phi3T, phi4T, sigma3T
      REAL phi5T, phi6T, tau1T, tau2T, sigma1T, sigma2T
      real C1cT, C1dT, C7bT, C11T, C11bT, CHMT
      REAL c2, c4, c4a, cRB, pi, d2r, gamma, gmT, c9bT
      real cc, cosdelta, r1, r2, r3, r4, hw, psa_ref, psa, a, b, c
      integer iflag, count1, count2, hwflag, vs30_class, regionflag
      REAL M, RRUP, RBJF, DTOR, Delta, specT, sigma, Ftype, Rx
      REAL period2, lnY, F_RV, F_NM, depthvs10, sigma_M, tau, NL, rkdepth
      real c8, c8a, c8bT, deltaZ1, fd, cDPP
      real NL0, sigma_NL0, F_Measured, F_Inferred, mz_TOR, deltaZ_TOR, coshM
      real gscaleJapItT, gscaleWenT, sigma2JapT, phi
      real phi1jpT, phi5jpT, phi6jpT

      data period     /
     1              0.0000, 0.0100, 0.0200, 0.0300, 0.0400, 0.0500,
     1              0.0750, 0.1000, 0.1200, 0.1500, 0.1700,
     1              0.2000, 0.2500, 0.3000, 0.4000, 0.5000,
     1              0.7500, 1.0000, 1.5000, 2.0000, 3.0000,
     1              4.0000, 5.0000, 7.5000,10.0000/
      data c1      /
     1             -1.5065, -1.5065, -1.4798, -1.2972, -1.1007, -0.9292,
     1             -0.6580, -0.5613, -0.5342, -0.5462, -0.5858,
     1             -0.6798, -0.8663, -1.0514, -1.3794, -1.6508,
     1             -2.1511, -2.5365, -3.0686, -3.4148, -3.9013,
     1             -4.2466, -4.5143, -5.0009, -5.3461/
      data c1a     /
     1             0.1650,  0.1650,  0.1650,  0.1650,  0.1650,  0.1650,
     1             0.1650,  0.1650,  0.1650,  0.1650,  0.1650,
     1             0.1650,  0.1650,  0.1650,  0.1650,  0.1650,
     1             0.1650,  0.1650,  0.1650,  0.1645,  0.1168,
     1             0.0732,  0.0484,  0.0220,  0.0124/
      data c1b     /
     1             -0.2550, -0.2550, -0.2550, -0.2550, -0.2550, -0.2550,
     1             -0.2540, -0.2530, -0.2520, -0.2500, -0.2480,
     1             -0.2449, -0.2382, -0.2313, -0.2146, -0.1972,
     1             -0.1620, -0.1400, -0.1184, -0.1100, -0.1040,
     1             -0.1020, -0.1010, -0.1010, -0.1000/
      data c1c     /
     1             -0.1650, -0.1650, -0.1650, -0.1650, -0.1650, -0.1650,
     1             -0.1650, -0.1650, -0.1650, -0.1650, -0.1650,
     1             -0.1650, -0.1650, -0.1650, -0.1650, -0.1650,
     1             -0.1650, -0.1650, -0.1650, -0.1645, -0.1168,
     1             -0.0732, -0.0484, -0.0220, -0.0124/
      data c1d     /
     1              0.2550,  0.2550,  0.2550,  0.2550,  0.2550,  0.2550,
     1              0.2540,  0.2530,  0.2520,  0.2500,  0.2480,
     1              0.2449,  0.2382,  0.2313,  0.2146,  0.1972,
     1              0.1620,  0.1400,  0.1184,  0.1100,  0.1040,
     1              0.1020,  0.1010,  0.1010,  0.1000/
      data cn      /
     1             16.0875, 16.0875, 15.7118, 15.8819, 16.4556, 17.6453,
     1             20.1772, 19.9992, 18.7106, 16.6246, 15.3709,
     1             13.7012, 11.2667,  9.1908,  6.5459,  5.2305,
     1              3.7896,  3.3024,  2.8498,  2.5417,  2.1488,
     1              1.8957,  1.7228,  1.5737,  1.5265/
      data cM      /
     1             4.9993,  4.9993,  4.9993,  4.9993,  4.9993,  4.9993,
     1             5.0031,  5.0172,  5.0315,  5.0547,  5.0704,
     1             5.0939,  5.1315,  5.1670,  5.2317,  5.2893,
     1             5.4109,  5.5106,  5.6705,  5.7981,  5.9983,
     1             6.1552,  6.2856,  6.5428,  6.7415/
      data c3      /
     1             1.9636,  1.9636,  1.9636,  1.9636,  1.9636,  1.9636,
     1             1.9636,  1.9636,  1.9795,  2.0362,  2.0823,
     1             2.1521,  2.2574,  2.3440,  2.4709,  2.5567,
     1             2.6812,  2.7474,  2.8161,  2.8514,  2.8875,
     1             2.9058,  2.9169,  2.9320,  2.9396/
      data c5      /
     1             6.4551, 6.4551, 6.4551, 6.4551, 6.4551, 6.4551,
     1             6.4551, 6.8305, 7.1333, 7.3621, 7.4365,
     1             7.4972, 7.5416, 7.5600, 7.5735, 7.5778,
     1             7.5808, 7.5814, 7.5817, 7.5818, 7.5818,
     1             7.5818, 7.5818, 7.5818, 7.5818/
      data cHM     /
     1             3.0956, 3.0956, 3.0963, 3.0974, 3.0988, 3.1011,
     1             3.1094, 3.2381, 3.3407, 3.4300, 3.4688,
     1             3.5146, 3.5746, 3.6232, 3.6945, 3.7401,
     1             3.7941, 3.8144, 3.8284, 3.8330, 3.8361,
     1             3.8369, 3.8376, 3.8380, 3.8380/
      data c6      /
     1             0.4908,  0.4908,  0.4925,  0.4992,  0.5037, .5048,
     1             0.5048,  0.5048,  0.5048,  0.5045, .5036,
     1             0.5016,  0.4971,  0.4919,  0.4807, .4707,
     1             0.4575,  0.4522,  0.4501,  0.4500, .4500,
     1             0.4500,  0.4500,  0.4500,  0.4500/
      data c7      /
     1             0.0352, 0.0352, 0.0352, 0.0352, 0.0352, 0.0352,
     1             0.0352, 0.0352, 0.0352, 0.0352, 0.0352,
     1             0.0352, 0.0352, 0.0352, 0.0352, 0.0352,
     1             0.0352, 0.0352, 0.0352, 0.0352, 0.0160,
     1             0.0062, 0.0029, 0.0007, 0.0003/
      data c7b     /
     1             0.0462,  0.0462,  0.0472,  0.0533,  0.0596,  0.0639,
     1             0.0630,  0.0532,  0.0452,  0.0345,  0.0283,
     1             0.0202,  0.0090, -0.0004, -0.0155, -0.0278,
     1            -0.0477, -0.0559, -0.0630, -0.0665, -0.0516,
     1            -0.0448, -0.0424, -0.0348, -0.0253/
      data c8b     /
     1             0.4833,  0.4833,  1.2144,  1.6421,  1.9456,  2.1810,
     1             2.6087,  2.9122,  3.1045,  3.3399,  3.4719,
     1             3.6434,  3.8787,  4.0711,  4.3745,  4.6099,
     1             5.0376,  5.3411,  5.7688,  6.0723,  6.5000,
     1             6.8035,  7.0389,  7.4666,  7.7700/
      data c9      /
     1             0.9228,  0.9228,  0.9296,  0.9396,  0.9661,  0.9794,
     1             1.0260,  1.0177,  1.0008,  0.9801,  0.9652,
     1             0.9459,  0.9196,  0.8829,  0.8302,  0.7884,
     1             0.6754,  0.6196,  0.5101,  0.3917,  0.1244,
     1             0.0086,  0.0000,  0.0000,  0.0000/
      data c9a     /
     1             0.1202,  0.1202,  0.1217,  0.1194,  0.1166,  0.1176,
     1             0.1171,  0.1146,  0.1128,  0.1106,  0.1150,
     1             0.1208,  0.1208,  0.1175,  0.1060,  0.1061,
     1             0.1000,  0.1000,  0.1000,  0.1000,  0.1000,
     1             0.1000,  0.1000,  0.1000,  0.1000/
      data c9b     /
     1             6.8607,  6.8607,  6.8697,  6.9113,  7.0271,  7.0959,
     1             7.3298,  7.2588,  7.2372,  7.2109,  7.2491,
     1             7.2988,  7.3691,  6.8789,  6.5334,  6.5260,
     1             6.5000,  6.5000,  6.5000,  6.5000,  6.5000,
     1             6.5000,  6.5000,  6.5000,  6.5000/
      data c11     /
     1                0.0,     0.0,     0.0,     0.0,     0.0,     0.0,
     1                0.0,     0.0,     0.0,     0.0,     0.0,
     1                0.0,     0.0,     0.0,     0.0,     0.0,
     1                0.0,     0.0,     0.0,     0.0,     0.0,
     1                0.0,     0.0,     0.0,     0.0/
      data c11b    /
     1            -0.4536, -0.4536, -0.4536, -0.4536, -0.4536, -0.4536,
     1            -0.4536, -0.4536, -0.4536, -0.4536, -0.4536,
     1            -0.4440, -0.3539, -0.2688, -0.1793, -0.1428,
     1            -0.1138, -0.1062, -0.1020, -0.1009, -0.1003,
     1            -0.1001, -0.1001, -0.1000, -0.1000/
      data gamma1 /
     1            -0.007146, -0.007146, -0.007249, -0.007869, -0.008316, -0.008743,
     1            -0.009537, -0.009830, -0.009913, -0.009896, -0.009787,
     1            -0.009505, -0.008918, -0.008251, -0.007267, -0.006492,
     1            -0.005147, -0.004277, -0.002979, -0.002301, -0.001344,
     1            -0.001084, -0.001010, -0.000964, -0.000950/
      data gamma2 /
     1            -0.006758, -0.006758, -0.006758, -0.006758, -0.006758, -0.006758,
     1            -0.006190, -0.005332, -0.004732, -0.003806, -0.003280,
     1            -0.002690, -0.002128, -0.001812, -0.001274, -0.001074,
     1            -0.001115, -0.001197, -0.001675, -0.002349, -0.003306,
     1            -0.003566, -0.003640, -0.003686, -0.003700/
      data gm /
     1             4.2542,  4.2542,  4.2386,  4.2519,  4.2960,  4.3578,
     1             4.5455,  4.7603,  4.8963,  5.0644,  5.1371,
     1             5.1880,  5.2164,  5.1954,  5.0899,  4.7854,
     1             4.3304,  4.1667,  4.0029,  3.8949,  3.7928,
     1             3.7443,  3.7090,  3.6632,  3.6230/
      data phi1    /
     1             -0.5210, -0.5210, -0.5055, -0.4368, -0.3752, -0.3469,
     1             -0.3747, -0.4440, -0.4895, -0.5477, -0.5922,
     1             -0.6693, -0.7766, -0.8501, -0.9431, -1.0044,
     1             -1.0602, -1.0941, -1.1142, -1.1154, -1.1081,
     1             -1.0603, -0.9872, -0.8274, -0.7053/
      data phi2    /
     1             -0.1417, -0.1417, -0.1364, -0.1403, -0.1591, -0.1862,
     1             -0.2538, -0.2943, -0.3077, -0.3113, -0.3062,
     1             -0.2927, -0.2662, -0.2405, -0.1975, -0.1633,
     1             -0.1028, -0.0699, -0.0425, -0.0302, -0.0129,
     1             -0.0016,  0.0000,  0.0000,  0.0000/
      data phi3    /
     1             -0.007010,-0.007010,-0.007279,-0.007354,-0.006977,-0.006467,
     1             -0.005734,-0.005604,-0.005696,-0.005845,-0.005959,
     1             -0.006141,-0.006439,-0.006704,-0.007125,-0.007435,
     1             -0.008120,-0.008444,-0.007707,-0.004792,-0.001828,
     1             -0.001523,-0.001440,-0.001369,-0.001361/
      data phi4    /
     1              0.102151, 0.102151, 0.108360, 0.119888, 0.133641, 0.148927,
     1              0.190596, 0.230662, 0.253169, 0.266468, 0.265060,
     1              0.255253, 0.231541, 0.207277, 0.165464, 0.133828,
     1              0.085153, 0.058595, 0.031787, 0.019716, 0.009643,
     1              0.005379, 0.003223, 0.001134, 0.000515/
      data phi5    /
     1              0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
     1              0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
     1              0.0000, 0.0000, 0.0010, 0.0040, 0.0100,
     1              0.0340, 0.0670, 0.1430, 0.2030, 0.2770,
     1              0.3090, 0.3210, 0.3290, 0.3300/
      data phi6    /
     1              300.00, 300.00, 300.00, 300.00, 300.00, 300.00,
     1              300.00, 300.00, 300.00, 300.00, 300.00,
     1              300.00, 300.00, 300.00, 300.00, 300.00,
     1              300.00, 300.00, 300.00, 300.00, 300.00,
     1              300.00, 300.00, 300.00, 300.00/
      data tau1    /
     1               0.4000,  0.4000,  0.4026,  0.4063,  0.4095,  0.4124,
     1               0.4179,  0.4219,  0.4244,  0.4275,  0.4292,
     1               0.4313,  0.4341,  0.4363,  0.4396,  0.4419,
     1               0.4459,  0.4484,  0.4515,  0.4534,  0.4558,
     1               0.4574,  0.4584,  0.4601,  0.4612/
      data tau2    /
     1               0.2600,  0.2600,  0.2637,  0.2689,  0.2736,  0.2777,
     1               0.2855,  0.2913,  0.2949,  0.2993,  0.3017,
     1               0.3047,  0.3087,  0.3119,  0.3165,  0.3199,
     1               0.3255,  0.3291,  0.3335,  0.3363,  0.3398,
     1               0.3419,  0.3435,  0.3459,  0.3474/
      data sigma1  /
     1               0.4912,  0.4912,  0.4904,  0.4988,  0.5049,  0.5096,
     1               0.5179,  0.5236,  0.5270,  0.5308,  0.5328,
     1               0.5351,  0.5377,  0.5395,  0.5422,  0.5433,
     1               0.5294,  0.5105,  0.4783,  0.4681,  0.4617,
     1               0.4571,  0.4535,  0.4471,  0.4426/
      data sigma2  /
     1               0.3762,  0.3762,  0.3762,  0.3849,  0.3910,  0.3957,
     1               0.4043,  0.4104,  0.4143,  0.4191,  0.4217,
     1               0.4252,  0.4299,  0.4338,  0.4399,  0.4446,
     1               0.4533,  0.4594,  0.4680,  0.4681,  0.4617,
     1               0.4571,  0.4535,  0.4471,  0.4426/
      data sigma3  /
     1               0.8000,  0.8000,  0.8000,  0.8000,  0.8000,  0.8000,
     1               0.8000,  0.8000,  0.8000,  0.8000,  0.8000,
     1               0.8000,  0.7999,  0.7997,  0.7988,  0.7966,
     1               0.7792,  0.7504,  0.7136,  0.7035,  0.7006,
     1               0.7001,  0.7000,  0.7000,  0.7000/

C     Regional Scale factors for gamma term and Phi1, Phi5, and Phi6 terms.
C     Japan/Italy
      data gscaleJapIt / 1.5817, 1.5817, 1.574, 1.5544, 1.5502, 1.5391, 1.4804, 1.4094,
     1              1.3682, 1.3241, 1.3071, 1.2931, 1.315, 1.3514, 1.4051, 1.4402,
     2              1.528, 1.6523, 1.8872, 2.1348, 3.5752, 3.8646, 3.7292, 2.3763,
     3              1.7679 /
      data phi1Jp / -0.6846, -0.6846, -0.6681, -0.6314, -0.5855, -0.5457, -0.4685,
     1              -0.4985, -0.5603, -0.6451, -0.6981, -0.7653, -0.8469, -0.8999,
     2              -0.9618, -0.9945, -1.0225, -1.0002, -0.9245, -0.8626, -0.7882,
     3              -0.7195, -0.656, -0.5202, -0.4068 /
      data phi5JP / 0.459, 0.459, 0.458, 0.462, 0.453, 0.436, 0.383, 0.375, 0.377,
     1              0.379, 0.38, 0.384, 0.393, 0.408, 0.462, 0.524, 0.658, 0.78,
     2              0.96, 1.11, 1.291, 1.387, 1.433, 1.46, 1.464 /
      data phi6JP / 800.0, 800.0, 800.0, 800.0, 800.0, 800.0, 800.0, 800.0, 800.0,
     1              800.0, 800.0, 800.0, 800.0, 800.0, 800.0, 800.0, 800.0, 800.0,
     2              800.0, 800.0, 800.0, 800.0, 800.0, 800.0, 800.0 /

C     Wenchuan
      data gscaleWen / 0.7594, 0.7594, 0.7606, 0.7642, 0.7676, 0.7739, 0.7956,
     1              0.7932, 0.7768, 0.7437, 0.7219, 0.6922, 0.6579, 0.6362,
     2              0.6049, 0.5507, 0.3582, 0.2003, 0.0356, 0.0, 0.0, 0.0,
     3              0.0, 0.0, 0.0031 /

C     Sigma2 values for Japan
      data sigma2jap  /
     1               0.4528, 0.4528, 0.4551, 0.4571, 0.4642, 0.4716, 0.5022,
     1               0.523,  0.5278, 0.5304, 0.531,  0.5312, 0.5309,
     1               0.5307, 0.531,  0.5313, 0.5309, 0.5302, 0.5276,
     1               0.5167, 0.4917, 0.4682, 0.4517, 0.4167, 0.3755 /

C Find the requested spectral period and corresponding coefficients
      nPer = 25
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         c1T      = c1(1)
         c1aT     = c1a(1)
         c1bT     = c1b(1)
         c1cT     = c1c(1)
         c1dT     = c1d(1)
         c3T      = c3(1)
         cHMT     = CHM(1)
         cnT      = cn(1)
         cmT      = cm(1)
         c5T      = c5(1)
         c6T      = c6(1)
         c7T      = c7(1)
         c7bT      = c7b(1)
         c8bT      = c8b(1)
         c9T      = c9(1)
         c9aT      = c9a(1)
         c9bT      = c9b(1)
         c11T      = c11(1)
         c11bT      = c11b(1)
         gamma1T  = gamma1(1)
         gamma2T  = gamma2(1)
         gmT      = gm(1)
         phi1T    = phi1(1)
         phi2T    = phi2(1)
         phi3T    = phi3(1)
         phi4T    = phi4(1)
         phi5T    = phi5(1)
         phi6T    = phi6(1)
         tau1T    = tau1(1)
         tau2T    = tau2(1)
         sigma1T = sigma1(1)
         sigma2T = sigma2(1)
         sigma2JapT = sigma2Jap(1)
         sigma3T = sigma3(1)
         gscaleJapItT = gscaleJapIt(1)
         phi1jpT = phi1jp(1)
         phi5jpT = phi5jp(1)
         phi6jpT = phi6jp(1)
         gscaleWenT = gscaleWen(1)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Chiou and Youngs (NGA West2-2013) Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),c1(count1),c1(count2),
     +                   specT,c1T,iflag)
            call interp (period(count1),period(count2),c1a(count1),c1a(count2),
     +                   specT,c1aT,iflag)
            call interp (period(count1),period(count2),c1b(count1),c1b(count2),
     +                   specT,c1bT,iflag)
            call interp (period(count1),period(count2),c1c(count1),c1c(count2),
     +                   specT,c1cT,iflag)
            call interp (period(count1),period(count2),c1d(count1),c1d(count2),
     +                   specT,c1dT,iflag)
            call interp (period(count1),period(count2),cn(count1),cn(count2),
     +                   specT,cnT,iflag)
            call interp (period(count1),period(count2),cm(count1),cm(count2),
     +                   specT,cmT,iflag)
            call interp (period(count1),period(count2),cHM(count1),cHM(count2),
     +                   specT,cHMT,iflag)
            call interp (period(count1),period(count2),c3(count1),c3(count2),
     +                   specT,c3T,iflag)
            call interp (period(count1),period(count2),c5(count1),c5(count2),
     +                   specT,c5T,iflag)
            call interp (period(count1),period(count2),c6(count1),c6(count2),
     +                   specT,c6T,iflag)
            call interp (period(count1),period(count2),c7(count1),c7(count2),
     +                   specT,c7T,iflag)
            call interp (period(count1),period(count2),c7b(count1),c7b(count2),
     +                   specT,c7bT,iflag)
            call interp (period(count1),period(count2),c8b(count1),c8b(count2),
     +                   specT,c8bT,iflag)
            call interp (period(count1),period(count2),c9(count1),c9(count2),
     +                   specT,c9T,iflag)
            call interp (period(count1),period(count2),c9a(count1),c9a(count2),
     +                   specT,c9aT,iflag)
            call interp (period(count1),period(count2),c9b(count1),c9b(count2),
     +                   specT,c9bT,iflag)
            call interp (period(count1),period(count2),c11(count1),c11(count2),
     +                   specT,c11T,iflag)
            call interp (period(count1),period(count2),c11b(count1),c11b(count2),
     +                   specT,c11bT,iflag)
            call interp (period(count1),period(count2),gamma1(count1),gamma1(count2),
     +                   specT,gamma1T,iflag)
            call interp (period(count1),period(count2),gamma2(count1),gamma2(count2),
     +                   specT,gamma2T,iflag)
            call interp (period(count1),period(count2),gm(count1),gm(count2),
     +                   specT,gmT,iflag)
            call interp (period(count1),period(count2),phi1(count1),phi1(count2),
     +                   specT,phi1T,iflag)
            call interp (period(count1),period(count2),phi2(count1),phi2(count2),
     +                   specT,phi2T,iflag)
            call interp (period(count1),period(count2),phi3(count1),phi3(count2),
     +                   specT,phi3T,iflag)
            call interp (period(count1),period(count2),phi4(count1),phi4(count2),
     +                   specT,phi4T,iflag)
            call interp (period(count1),period(count2),phi5(count1),phi5(count2),
     +                   specT,phi5T,iflag)
            call interp (period(count1),period(count2),phi6(count1),phi6(count2),
     +                   specT,phi6T,iflag)
            call interp (period(count1),period(count2),tau1(count1),tau1(count2),
     +                   specT,tau1T,iflag)
            call interp (period(count1),period(count2),tau2(count1),tau2(count2),
     +                   specT,tau2T,iflag)
            call interp (period(count1),period(count2),sigma1(count1),sigma1(count2),
     +                   specT,sigma1T,iflag)
            call interp (period(count1),period(count2),sigma2(count1),sigma2(count2),
     +                   specT,sigma2T,iflag)
            call interp (period(count1),period(count2),sigma2Jap(count1),sigma2Jap(count2),
     +                   specT,sigma2JapT,iflag)
            call interp (period(count1),period(count2),sigma3(count1),sigma3(count2),
     +                   specT,sigma3T,iflag)
            call interp (period(count1),period(count2),gscaleJapIt(count1),gscaleJapIt(count2),
     +                   specT,gscaleJapItT,iflag)
            call interp (period(count1),period(count2),phi1jp(count1),phi1jp(count2),
     +                   specT,phi1jpT,iflag)
            call interp (period(count1),period(count2),phi5jp(count1),phi5jp(count2),
     +                   specT,phi5jpT,iflag)
            call interp (period(count1),period(count2),phi6jp(count1),phi6jp(count2),
     +                   specT,phi6jpT,iflag)
            call interp (period(count1),period(count2),gscaleWen(count1),gscaleWen(count2),
     +                   specT,gscaleWenT,iflag)

 1011 period1 = specT

c     Set the fault mechanism term.
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C      -1       Normal                   -120 < Rake < -60.0
C     1, 0.5    Reverse and Rev/Obl        30 < Rake < 150.0
C     0,-0.5    Strike-Slip and NMl/Obl        Otherwise
         if (ftype .eq. -1) then
            F_RV = 0.0
            F_NM = 1.0
         elseif (ftype .ge. 0.5) then
            F_RV = 1.0
            F_NM = 0.0
         else
            F_RV = 0.0
            F_NM = 0.0
         endif

C HW factors......
c     For now, convert hwflag to an equivalent srcSiteA
c      if ( hwflag .eq. 1 ) then
c        srcSiteA = 90.
c      else
c        srcSiteA = 0.
c      endif
C No longer needed since Rx is computed and passed.
C     Compute Rx value given source to site azimuth
c      if (srcsiteA .eq. 90.0) then
c         Rx = Rrup/sin(abs(delta)*3.14159/180.0) - DTor/tan(abs(delta)*3.14159/180.0)
c      elseif (srcsiteA .gt. 0.0) then
c         Rx = Rbjf*tan(srcSiteA*3.14159/180.0)
c      elseif (srcsiteA .le. 0.0) then
c         Rx = 0.0
c      endif

C     Constant terms
        c2 = 1.06
        c4 = -2.1
        c4a = -0.5
        cRB = 50.0
        c8 = 0.2154
        c8a = 0.2695

        pi = atan(1.0)*4.0
        d2r = pi/180.0

        cc = c5T* cosh(c6T * max((M-cHMT),0.0))
        gamma = gamma1T + gamma2T/cosh(max((M-gmT),0.0))
C     Apply Regional scaling factor.
C     Regionflag = 0 Global
C     Regionflag = 1 Japan and Italy
C        Also set sigma2 equal to Japan specific value
C     Regionflag = 2 Wenchuan (note only for M7.9)
        if (regionflag .eq. 1 ) then
           gamma = gamma * gscaleJapItT
           sigma2T = sigma2JapT
        elseif (regionflag .eq. 2) then
           gamma = gamma * gscaleWenT
        endif

        cosDELTA = cos(abs(DELTA)*d2r)

c Magnitude scaling
        r1 = c1T + c2 * (M-6.0) +
     1       (c2-c3T)/cnT *
     1             alog(1.0 + exp(cnT*(cMT-M)))

c Near-field magnitude and distance scaling
        r2 = c4 * alog(Rrup + cc)

c Distance scaling at large distance
        r3 = (c4a-c4)/2.0 *
     1            alog( Rrup*Rrup+cRB*cRB ) +
     1       Rrup * gamma

c Center Z_TOR on the Z_TOR-M relation in Chiou and Youngs (2013)
        if (F_RV.EQ.1) then
          if (M .le. 5.849) then
              mZ_TOR = 2.704*2.704
          else
              mZ_TOR = max(2.704-1.226*(M-5.849), 0.0)
              mZ_TOR = mZ_TOR * mZ_TOR
          endif
        else
          if (M .le. 4.970) then
              mZ_TOR = 2.673*2.673
          else
              mZ_TOR = max(2.673-1.136*(M-4.970), 0.0)
              mZ_TOR = mZ_TOR * mZ_TOR
          endif
        endif
c        if (Z_TOR .EQ. -999) Z_TOR = mZ_TOR
        deltaZ_TOR = Dtor - mZ_TOR

c Scaling with other source variables (F_RV, F_NM, deltaZ_TOR, and Dip)
        coshM = cosh(2*max(M-4.5,0.0))
        cosDELTA = cos(DELTA*d2r)
        r4 = (c1aT+c1cT/coshM) * F_RV +
     1       (c1bT+c1dT/coshM) * F_NM +
     1       (c7T +c7bT/coshM) * deltaZ_TOR +
     1       (c11T+c11bT/coshM)* cosDELTA**2

C New Dip dependence for NGA West2 Model
c        if (m .lt. 6.0) then
c           r4 = r4 + c11T*min(delta-70.0,0.0)
c        endif

c HW effect
        if (HWFlag .eq. 0) then
           hw = 0.0
        else
         hw = c9T * (cosDELTA) * (c9aT+(1-c9aT)
     1        *tanh(Rx/c9bT)) *
     1          (1.0 - sqrt(Rbjf**2+DTor**2)/(Rrup + 1))
        endif

C     Current version of the code sets cDPP=0 (i.e., no directivity)
c Directivity effect
c        cDPP = 0.0
c        fd = c8T * exp(-c8aT * (M-c8bT)**2) *
c     1       max(0.0, 1.0-max(0.0,Rrup-40.0)/30.0) *
c     1       min(max(0.0,M-5.5)/0.8, 1.0) * cDPP

c Predicted median Sa on reference condition (Vs=1130 m/sec)
        psa_ref = r1+r2+r3+r4+hw+fd

C     Set Phi1, Phi5, and Phi6 term for Japan is region is requested
        if (regionflag .eq. 1) then
           phi1T = phi1jpT
           phi5T = phi5jpT
           phi6T = phi6jpT
        endif

c Linear soil amplification
        a = phi1T * min(alog(Vs/1130.0), 0.0)

c Nonlinear soil amplification
        b = phi2T *
     1      (exp(phi3T*(min(Vs,1130.0)-360.0)) - exp(phi3T*(1130.0-360.0)))
        c = phi4T

C Deviation from ln(Vs30) scaling: bedrock depth (Z1) effect.
        if (regionflag .eq. 1) then
           deltaZ1 = depthvs10*1000.0 -
     1     exp(-5.23/2.0 * alog((VS**2.0 + 412.0**2.0)/(1360.0**2.0 + 412.0**2.0)))
        else
           deltaZ1 = depthvs10*1000.0 -
c     1  exp(-7.15/4.0 * log((VS**4.0 + 570.94**4.0)/(1360.0**4.0 + 570.94**4.0)))
     1     exp(-7.15/4.0 * alog((VS**4.0 + 571.0**4.0)/(1360.0**4.0 + 571.0**4.0)))
        endif
        rkdepth = phi5T * ( 1.0 - exp(-deltaZ1/phi6T ) )

c Sa on soil condition
        psa = psa_ref + (a + b * alog((exp(psa_ref)+c)/c)) + rkdepth

C Compute the sigma term

        NL0 = b * exp(psa_ref)/(exp(psa_ref)+c)
        tau = tau1T +
     1            (tau2T-tau1T)/1.5*(min(max(M,5.0),6.5)-5.0)
        sigma_NL0 = sigma1T +
     1              (sigma2T-sigma1T)/1.5*(min(max(M,5.0),6.5)-5.0)
C     Current code set for Measured Vs30 values (i.e., Vs30class=1)
      if (vs30_class .eq. 0) then
         F_measured = 0.0
         F_Inferred = 1.0
      elseif (vs30_class .eq. 1) then
         F_measured = 1.0
         F_Inferred = 0.0
      endif

        sigma_NL0 = sigma_NL0 *
     1        sqrt(0.7*F_Measured+F_Inferred*sigma3T+(1+NL0)**2.0)
        sigma = sqrt((tau*(1.0+NL0))**2.0+sigma_NL0**2.0)

      phi = sigma_NL0
      tau = (tau*(1.0+NL0))

C     Convert ground motion to units of gals.
      lnY = psa + 6.89
      period2 = period1

      return
      end

c ------------------------------------------------------------------
C *** Abrahamson, Silva, and Kamai (NGA-West2 2013) Horizontal ****
C     Earthquake Spectra Paper:
C        "Summary of the Abrahamson, Silva, and Kamai NGA-West2
C            Ground-Motion Relations for Active Crustal REgions"
C         N. A. Abrahamson, S. J. Silva, and R. Kamai
C     Notes:
C        Applicable Range (see Abstract):
C           3 <= M <= 8.5
C           Rrup <= 300 km
C        Regional attenuation included based on Regionflag
C             0 = Global
C             1 = Taiwan
C             2 = China
C             3 = Japan
C         Mainshock and Aftershocks included based on MSASFlag
C             0 = Mainshocks
C             1 = Aftershocks
C         Sigma dependent on estimated or measured Vs30m based on
C             Vs30_Class
C             0 = Estimated Vs30m
C             1 = Measured Vs30m
c ------------------------------------------------------------------
      subroutine ASK_NGAWest2_2013 ( mag, dip, fType, fltWidth, rRup, Rjb,
     1                     vs30, hwflag, lnY, sigma, specT, period2, ztor,
     2                     iflag, vs30_class, z10, Rx, Ry0, regionflag, msasflag,
     1                     phi, tau )

C     Last Updated: 8/1/13

      real mag, dip, fType, rRup, rjb, Rx, Ry0, vs30, SA1180,
     1      Z10,  ZTOR, fltWidth, lnSa, sigma, lnY
      real Fn, Frv, specT, period2, CRjb, phi, tau
      integer hwflag, iflag, vs30_class, regionflag, msasflag

c     Vs30 class is to distinguish between the sigma if the Vs30 is measured
c     vs the VS30 being estimated from surface geology.
c         Vs30_class = 0 for estimated
c         Vs30_class = 1 for measured

C     Current version is not programmed for Aftershock cases.
C       For implementation of Aftershock a new distance metric, CRjb
C       will need to be computed and passed along to this subroutine.

      CRjb = 999.9

c     For now, convert ftype to an equivalent rake
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C      -1       Normal                   -120 < Rake < -60.0
C     1, 0.5    Reverse and Rev/Obl        30 < Rake < 150.0
C     0,-0.5    Strike-Slip and NMl/Obl        Otherwise
C
      if ( fType .eq. 1.0 ) then
        Frv = 1.0
        Fn = 0.0
      elseif ( fType .eq. 0.5 ) then
        Frv = 1.0
        Fn = 0.0
      elseif ( fType .eq. -1.0 ) then
        Frv = 0.0
        Fn = 1.0
      elseif ( fType .eq. -0.5 ) then
        Frv = 0.0
        Fn = 1.0
      else
        Frv = 0.0
        Fn = 0.0
      endif

c     Compute SA1180
      vs30_rock = 1180.
      z10_rock = 0.005
      SA_rock = 0.

      call ASK2013_v11_model ( mag, dip, fltWidth, ZTOR, Frv, Fn, rRup, rjb, rx, Ry0,
     1                     vs30_rock, SA_rock, Z10_rock, hwflag, vs30_class,
     2                     specT, lnSa, phi, tau, iflag, regionflag, msasflag, CRjb )
      Sa1180 = exp(lnSa)

c     Compute Sa at spectral period for given Vs30

      call ASK2013_v11_model ( mag, dip, fltWidth, ZTOR, Frv, Fn, rRup, rjb, rx, Ry0,
     1                     vs30, SA1180, Z10, hwflag, vs30_class,
     2                     specT, lnSa, phi, tau, iflag, regionflag, msasflag, CRjb )

c     compute Sa (given the PGA rock value)
      sigma = sqrt( phi**2 + tau**2 )

      lnY = lnSa + 6.89

      period2 = specT

      return
      end

c ----------------------------------------------------------------------
      subroutine ASK2013_v11_model ( mag, dip, FltWidth, ZTOR, Frv, Fn, rRup, rjb, Rx, Ry0,
     1                     vs30, Sa1180, Z1, hwflag, vs30_class,
     3                     specT, lnSa, phi, tau, iflag, regionflag, msasflag, CRjb)

c      implicit none
      integer MAXPER
      parameter (MAXPER=24)

      real Vlin(MAXPER), b(MAXPER), c4(MAXPER), M1(MAXPER), a1(MAXPER)
      real a2(MAXPER), a3(MAXPER), a6(MAXPER), a8(MAXPER), a10(MAXPER)
      real a11(MAXPER), a12(MAXPER), a13(MAXPER), a14(MAXPER), a15(MAXPER)
      real a17(MAXPER), a43(MAXPER), a44(MAXPER), a45(MAXPER), a46(MAXPER)
      real a25(MAXPER), a28(MAXPER), a29(MAXPER), a31(MAXPER), a36(MAXPER)
      real a37(MAXPER), a38(MAXPER), a39(MAXPER), a40(MAXPER), a41(MAXPER), a42(MAXPER)
      real s1est(MAXPER), s2est(MAXPER), s1msr(MAXPER), s2msr(MAXPER)
      real s3(MAXPER), s4(MAXPER), s5(MAXPER), s6(MAXPER), period(MAXPER)
      real a4, a5, a7
      real VlinT, bT, c4T, M1T, a1T
      real a2T, a3T, a6T, a8T, a10T
      real a11T, a12T, a13T, a14T, a15T
      real a17T, a43T, a44T, a45T, a46T
      real a25T, a28T, a29T, a31T, a36T
      real a37T, a38T, a39T, a40T, a41T, a42T
      real s1estT, s2estT, s1msrT, s2msrT
      real s3T, s4T, s5T, s6T, c4_mag
      real phiA_est, phiA_msr

      real M2, M3
      real lnSa, SA1180, rjb, rRup, Rx, Ry0, dip, mag, vs30
      real HW_taper1, HW_taper2, HW_taper3, HW_taper4, HW_taper5
      real damp_dSA1180, sigAmp, fltWidth, testv1
      real f1, f4, f5, f6, f7, f8, f9, f10, f11, fReg, f12, f13
      real Ry1, ZTOR, Frv, Fn, SpecT
      real phiA, phiB, tauA, tauB, phi, tau
      integer vs30_class, hwflag, iflag, nPer, regionflag, msasflag
      real n, c, z1, c2, e2, a21, a22, test, zhat
      real R, V1, Vs30Star, hw_a2, h1, h2, h3, R1, R2, CRjb
      integer count1, count2
      real y1, y2, x1, x2, y1z, y2z, x1z, x2z

      data Period / 0.000, -1.000, 0.010, 0.020, 0.030, 0.050, 0.075, 0.100, 0.150,
     1       0.200, 0.250, 0.300, 0.400, 0.500, 0.750, 1.000, 1.500, 2.000, 3.000,
     2       4.000, 5.000, 6.000, 7.500, 10.000 /
c      data Vlin / 660.0, 330.0, 660.0, 680.0, 770.0, 800.0, 800.0, 800.0, 740.0, 590.0,
c     1       495.0, 430.0, 360.0, 340.0, 330.0, 330.0, 330.0, 330.0, 330.0, 330.0, 330.0,
c     2       330.0, 330.0, 330.0 /
      data Vlin / 660.0, 330.0, 660.0, 680.0, 770.0, 915.0, 960.0, 910.0, 740.0, 590.0,
     1       495.0, 430.0, 360.0, 340.0, 330.0, 330.0, 330.0, 330.0, 330.0, 330.0, 330.0,
     2       330.0, 330.0, 330.0 /
      data b / -1.470, -2.020, -1.470, -1.459, -1.390, -1.219, -1.152, -1.230, -1.587,
     1      -2.012, -2.411, -2.757, -3.278, -3.599, -3.800, -3.500, -2.400, -1.000, 0.000,
     2      0.000, 0.000, 0.000, 0.000, 0.000 /
      data c4 / 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5,
     1      4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5 /
      data M1 / 6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75,
     1      6.75, 6.75, 6.75, 6.75, 6.75, 6.82, 6.92, 7.0, 7.06, 7.15, 7.25 /
c      data a1 / 0.587, 5.975, 0.587, 0.598, 0.602, 0.746, 1.021, 1.210, 1.442, 1.637, 1.701,
c     1      1.712, 1.662, 1.571, 1.299, 1.043, 0.665, 0.329, -0.060, -0.299, -0.562, -0.875, -1.303, -1.928 /
      data a1 / 0.587, 5.975, 0.587, 0.598, 0.602, 0.707, 0.973, 1.169, 1.442, 1.637, 1.701,
     1      1.712, 1.662, 1.571, 1.299, 1.043, 0.665, 0.329, -0.060, -0.299, -0.562, -0.875, -1.303, -1.928 /
      data a2 / -0.790, -0.919, -0.790, -0.790, -0.790, -0.790, -0.790, -0.790, -0.790, -0.790,
     1      -0.790, -0.790, -0.790, -0.790, -0.790, -0.790, -0.790, -0.790, -0.790, -0.790,
     2      -0.765, -0.711, -0.634, -0.529 /
      data a3 / 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275,
     1       0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275,
     2       0.275, 0.275 /
      data a6 / 2.154, 2.366, 2.154, 2.146, 2.157, 2.085, 2.029, 2.041, 2.121, 2.224,
     1       2.312, 2.338, 2.469, 2.559, 2.682, 2.763, 2.836, 2.897, 2.906, 2.889,
     2       2.898, 2.896, 2.870, 2.843 /
      data a8 / -0.015, -0.094, -0.015, -0.015, -0.015, -0.015, -0.015, -0.015, -0.022,
     1       -0.03, -0.038, -0.045, -0.055, -0.065, -0.095, -0.11, -0.124, -0.138, -0.172,
     2       -0.197, -0.218, -0.235, -0.255, -0.285 /
      data a10 / 1.735, 2.360, 1.735, 1.718, 1.615, 1.358, 1.258, 1.310, 1.660, 2.220, 2.770,
     1        3.250, 3.990, 4.450, 4.750, 4.300, 2.600, 0.550, -0.950, -0.950, -0.930, -0.910,
     2       -0.870, -0.800 /
      data a11 / 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1        0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /
      data a12 / -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1,
     1       -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.2, -0.2, -0.2 /
      data a13 / 0.6, 0.25, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.58, 0.56,
     1        0.53, 0.5, 0.42, 0.35, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0 /
      data a14 / -0.3, 0.22, -0.3, -0.3, -0.3, -0.3, -0.3, -0.3, -0.3, -0.3, -0.24, -0.19,
     1        -0.11, -0.04, 0.07, 0.15, 0.27, 0.35, 0.46, 0.54, 0.61, 0.65, 0.72, 0.8 /
      data a15 / 1.1, 0.3, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.03, 0.92, 0.84, 0.68,
     1         0.57, 0.42, 0.31, 0.16, 0.05, -0.04, -0.11, -0.19, -0.3 /
      data a17 / -0.0072, -0.0005, -0.0072, -0.0073, -0.0075, -0.0080, -0.0089, -0.0095,
     1       -0.0095, -0.0086, -0.0074, -0.0064, -0.0043, -0.0032, -0.0025, -0.0025, -0.0022,
     2       -0.0019, -0.0015, -0.0010, -0.0010, -0.0010, -0.0010, -0.0010 /
      data a25 / -0.0015, -0.0001, -0.0015, -0.0015, -0.0016, -0.0020, -0.0027, -0.0033,
     1       -0.0035, -0.0033, -0.0029, -0.0027, -0.0023, -0.0020, -0.0010, -0.0005, -0.0004,
     2       -0.0002, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /
      data a28 / 0.0025, 0.0005, 0.0025, 0.0024, 0.0023, 0.0027, 0.0032, 0.0036, 0.0033,
     1        0.0027, 0.0024, 0.0020, 0.0010, 0.0008, 0.0007, 0.0007, 0.0006, 0.0003,
     2        0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /
      data a29 / -0.0034, -0.0037, -0.0034, -0.0033, -0.0034, -0.0033, -0.0029, -0.0025,
     1        -0.0025, -0.0031, -0.0036, -0.0039, -0.0048, -0.0050, -0.0041, -0.0032,
     2        -0.0020, -0.0017, -0.0020, -0.0020, -0.0020, -0.0020, -0.0020, -0.0020 /
      data a31 / -0.1503, -0.1462, -0.1503, -0.1479, -0.1447, -0.1326, -0.1353, -0.1128,
     1       0.0383, 0.0775, 0.0741, 0.2548, 0.2136, 0.1542, 0.0787, 0.0476, -0.0163, -0.1203,
     2      -0.2719, -0.2958, -0.2718, -0.2517, -0.1400, -0.0216 /
      data a36 / 0.265, 0.377, 0.265, 0.255, 0.249, 0.202, 0.126, 0.022, -0.136, -0.078, 0.037,
     1       -0.091, 0.129, 0.310, 0.505, 0.358, 0.131, 0.123, 0.109, 0.135, 0.189,
     2        0.215, 0.150, 0.092 /
      data a37 / 0.337, 0.212, 0.337, 0.328, 0.320, 0.289, 0.275, 0.256, 0.162, 0.224,
     1        0.248, 0.203, 0.232, 0.252, 0.208, 0.208, 0.108, 0.068, -0.023, 0.028,
     2        0.031, 0.024, -0.070, -0.159 /
      data a38 / 0.188, 0.157, 0.188, 0.184, 0.180, 0.167, 0.173, 0.189, 0.108, 0.115,
     1        0.122, 0.096, 0.123, 0.134, 0.129, 0.152, 0.118, 0.119, 0.093, 0.084, 0.058,
     2        0.065, 0.000, -0.050 /
      data a39 / 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1           0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 /
      data a40 / 0.088, 0.095, 0.088, 0.088, 0.093, 0.133, 0.186, 0.160, 0.068, 0.048, 0.055,
     1         0.073, 0.143, 0.160, 0.158, 0.145, 0.131, 0.083, 0.070, 0.101, 0.095, 0.133,
     2         0.151, 0.124 /
      data a41 / -0.196, -0.038, -0.196, -0.194, -0.175, -0.090, 0.090, 0.006, -0.156,
     1        -0.274, -0.248, -0.203, -0.154, -0.159, -0.141, -0.144, -0.126, -0.075,
     2        -0.021, 0.072, 0.205, 0.285, 0.329, 0.301 /
      data a42 / 0.044, 0.065, 0.044, 0.061, 0.162, 0.451, 0.506, 0.335, -0.084, -0.178,
     1        -0.187, -0.159, -0.023, -0.029, 0.061, 0.062, 0.037, -0.143, -0.028, -0.097,
     2         0.015, 0.104, 0.299, 0.243 /
      data a43 / 0.1, 0.28, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,
     1        0.14, 0.17, 0.22, 0.26, 0.34, 0.41, 0.51, 0.55, 0.49, 0.42 /
      data a44 / 0.05, 0.15, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05,
     1        0.07, 0.1, 0.14, 0.17, 0.21, 0.25, 0.3, 0.32, 0.32, 0.32, 0.275, 0.22 /
      data a45 / 0.0, 0.09, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.03, 0.06, 0.1,
     1        0.14, 0.17, 0.2, 0.22, 0.23, 0.23, 0.22, 0.2, 0.17, 0.14 /
      data a46 / -0.05, 0.07, -0.05, -0.05, -0.05, -0.05, -0.05, -0.05, -0.05, -0.03, 0.0,
     1        0.03, 0.06, 0.09, 0.13, 0.14, 0.16, 0.16, 0.16, 0.14, 0.13, 0.1, 0.09, 0.08 /
      data s1est / 0.754, 0.662, 0.754, 0.760, 0.781, 0.810, 0.810, 0.810, 0.801, 0.789,
     1        0.770, 0.740, 0.699, 0.676, 0.631, 0.609, 0.578, 0.555, 0.548, 0.527, 0.505,
     2        0.477, 0.457, 0.429 /
      data s2est / 0.520, 0.51, 0.520, 0.520, 0.520, 0.530, 0.540, 0.550, 0.560, 0.565,
     1        0.570, 0.580, 0.590, 0.600, 0.615, 0.630, 0.640, 0.650, 0.640, 0.630, 0.630,
     2        0.630, 0.630, 0.630 /
      data s1msr / 0.741, 0.66, 0.741, 0.747, 0.769, 0.798, 0.798, 0.795, 0.773, 0.753,
     1        0.729, 0.693, 0.644, 0.616, 0.566, 0.541, 0.506, 0.48, 0.472, 0.447, 0.425,
     2        0.395, 0.378, 0.359 /
      data s2msr / 0.501, 0.51, 0.501, 0.501, 0.501, 0.512, 0.522, 0.527, 0.519, 0.514,
     1        0.513, 0.519, 0.524, 0.532, 0.548, 0.565, 0.576, 0.587, 0.576, 0.565, 0.568,
     2        0.571, 0.575, 0.585 /
      data s3 / 0.47, 0.38, 0.47, 0.47, 0.47, 0.47, 0.47, 0.47, 0.47, 0.47, 0.47, 0.47,
     1         0.47, 0.47, 0.47, 0.47, 0.47, 0.47, 0.47, 0.47, 0.47, 0.47, 0.47, 0.47 /
      data s4 / 0.36, 0.38, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36,
     1         0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36 /
      data s5 / 0.54, 0.58, 0.54, 0.54, 0.55, 0.56, 0.57, 0.57, 0.58, 0.59, 0.61, 0.63,
     1         0.66, 0.69, 0.73, 0.77, 0.8, 0.8, 0.8, 0.76, 0.72, 0.7, 0.67, 0.64 /
      data s6 / 0.63, 0.53, 0.63, 0.63, 0.63, 0.65, 0.69, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7,
     1         0.7, 0.69, 0.68, 0.66, 0.62, 0.55, 0.52, 0.5, 0.5, 0.5, 0.5 /



C Find the requested spectral period and corresponding coefficients
      nPer = 24

C First check for the PGA, PGV, PGD cases
      if (specT .eq. 0.0) then
         period1 = period(1)
         a1T = a1(1)
         a2T = a2(1)
         a3T = a3(1)
         a6T = a6(1)
         a8T = a8(1)
         M1T = M1(1)
         a10T = a10(1)
         a11T = a11(1)
         a12T = a12(1)
         a13T = a13(1)
         a14T = a14(1)
         a15T = a15(1)
         a17T = a17(1)
         a43T = a43(1)
         a44T = a44(1)
         a45T = a45(1)
         a46T = a46(1)
         a25T = a25(1)
         a28T = a28(1)
         a29T = a29(1)
         a31T = a31(1)
         a36T = a36(1)
         a37T = a37(1)
         a38T = a38(1)
         a39T = a39(1)
         a40T = a40(1)
         a41T = a41(1)
         a42T = a42(1)
         VlinT = Vlin(1)
         bT = b(1)
         c4T = c4(1)
         s1estT = s1est(1)
         s2estT = s2est(1)
         s1msrT = s1msr(1)
         s2msrT = s2msr(1)
         s3T = s3(1)
         s4T = s4(1)
         s5T = s5(1)
         s6T = s6(1)
         goto 1011
      elseif (specT .eq. -1.0) then
         period1 = period(2)
         a1T = a1(2)
         a2T = a2(2)
         a3T = a3(2)
         a6T = a6(2)
         a8T = a8(2)
         M1T = M1(2)
         a10T = a10(2)
         a11T = a11(2)
         a12T = a12(2)
         a13T = a13(2)
         a14T = a14(2)
         a15T = a15(2)
         a17T = a17(2)
         a43T = a43(2)
         a44T = a44(2)
         a45T = a45(2)
         a46T = a46(2)
         a25T = a25(2)
         a28T = a28(2)
         a29T = a29(2)
         a31T = a31(2)
         a36T = a36(2)
         a37T = a37(2)
         a38T = a38(2)
         a39T = a39(2)
         a40T = a40(2)
         a41T = a41(2)
         a42T = a42(2)
         VlinT = Vlin(2)
         bT = b(2)
         c4T = c4(2)
         s1estT = s1est(2)
         s2estT = s2est(2)
         s1msrT = s1msr(2)
         s2msrT = s2msr(2)
         s3T = s3(2)
         s4T = s4(2)
         s5T = s5(2)
         s6T = s6(2)
         goto 1011
      endif
C   For other periods, loop over the spectral period range of the attenuation relationship.
      do i=3,nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Abrahamson, Silva, and Kamai (NGA West2-2013) Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),a1(count1),a1(count2),
     +                   specT,a1T,iflag)
            call interp (period(count1),period(count2),a2(count1),a2(count2),
     +                   specT,a2T,iflag)
            call interp (period(count1),period(count2),a3(count1),a3(count2),
     +                   specT,a3T,iflag)
            call interp (period(count1),period(count2),a6(count1),a6(count2),
     +                   specT,a6T,iflag)
            call interp (period(count1),period(count2),a8(count1),a8(count2),
     +                   specT,a8T,iflag)
            call interp (period(count1),period(count2),M1(count1),M1(count2),
     +                   specT,M1T,iflag)
            call interp (period(count1),period(count2),a10(count1),a10(count2),
     +                   specT,a10T,iflag)
            call interp (period(count1),period(count2),a11(count1),a11(count2),
     +                   specT,a11T,iflag)
            call interp (period(count1),period(count2),a12(count1),a12(count2),
     +                   specT,a12T,iflag)
            call interp (period(count1),period(count2),a13(count1),a13(count2),
     +                   specT,a13T,iflag)
            call interp (period(count1),period(count2),a14(count1),a14(count2),
     +                   specT,a14T,iflag)
            call interp (period(count1),period(count2),a15(count1),a15(count2),
     +                   specT,a15T,iflag)
            call interp (period(count1),period(count2),a17(count1),a17(count2),
     +                   specT,a17T,iflag)
            call interp (period(count1),period(count2),a43(count1),a43(count2),
     +                   specT,a43T,iflag)
            call interp (period(count1),period(count2),a44(count1),a44(count2),
     +                   specT,a44T,iflag)
            call interp (period(count1),period(count2),a45(count1),a45(count2),
     +                   specT,a45T,iflag)
            call interp (period(count1),period(count2),a46(count1),a46(count2),
     +                   specT,a46T,iflag)
            call interp (period(count1),period(count2),a25(count1),a25(count2),
     +                   specT,a25T,iflag)
            call interp (period(count1),period(count2),a28(count1),a28(count2),
     +                   specT,a28T,iflag)
            call interp (period(count1),period(count2),a29(count1),a29(count2),
     +                   specT,a29T,iflag)
            call interp (period(count1),period(count2),a31(count1),a31(count2),
     +                   specT,a31T,iflag)
            call interp (period(count1),period(count2),a36(count1),a36(count2),
     +                   specT,a36T,iflag)
            call interp (period(count1),period(count2),a37(count1),a37(count2),
     +                   specT,a37T,iflag)
            call interp (period(count1),period(count2),a38(count1),a38(count2),
     +                   specT,a38T,iflag)
            call interp (period(count1),period(count2),a39(count1),a39(count2),
     +                   specT,a39T,iflag)
            call interp (period(count1),period(count2),a40(count1),a40(count2),
     +                   specT,a40T,iflag)
            call interp (period(count1),period(count2),a41(count1),a41(count2),
     +                   specT,a41T,iflag)
            call interp (period(count1),period(count2),a42(count1),a42(count2),
     +                   specT,a42T,iflag)
            call interp (period(count1),period(count2),Vlin(count1),Vlin(count2),
     +                   specT,VlinT,iflag)
            call interp (period(count1),period(count2),b(count1),b(count2),
     +                   specT,bT,iflag)
            call interp (period(count1),period(count2),c4(count1),c4(count2),
     +                   specT,c4T,iflag)
            call interp (period(count1),period(count2),s1est(count1),s1est(count2),
     +                   specT,s1estT,iflag)
            call interp (period(count1),period(count2),s2est(count1),s2est(count2),
     +                   specT,s2estT,iflag)
            call interp (period(count1),period(count2),s1msr(count1),s1msr(count2),
     +                   specT,s1msrT,iflag)
            call interp (period(count1),period(count2),s2msr(count1),s2msr(count2),
     +                   specT,s2msrT,iflag)
            call interp (period(count1),period(count2),s3(count1),s3(count2),
     +                   specT,s3T,iflag)
            call interp (period(count1),period(count2),s4(count1),s4(count2),
     +                   specT,s4T,iflag)
            call interp (period(count1),period(count2),s5(count1),s5(count2),
     +                   specT,s5T,iflag)
            call interp (period(count1),period(count2),s6(count1),s6(count2),
     +                   specT,s6T,iflag)

 1011 period1 = specT

C     Constant values
      n = 1.5
      M2 = 5.0
      a4 = -0.1
      a5 = -0.41
      a7 = 0.0

C     Set C term
      if (period1 .eq. -1.0) then
         c = 2400.0
      else
         c = 2.4
      endif

C     Magnitude dependent taper for C4 (eq. 4.4)
      if (mag .ge. 5.0) then
         c4_mag = c4T
      elseif (mag .ge. 4.0) then
         c4_mag = c4T - (c4T-1.0) * (5.0-mag)
      else
         c4_mag = 1.0
      endif

c     Set distance (eq 4.3)
      R = sqrt(rRup**2 + c4_mag**2)

C     Base Model (eq 4.2)
      if ( mag .lt. M2 ) then
        f1 = a1T + a6T*(Mag-M2) + a7*(Mag-M2)**2 + a4*(M2-M1T) + a8T*(8.5-M2)**2 +
     1                (a2T + a3T*(M2-M1T)) * alog(R) + a17T*Rrup
      elseif ( mag .lt. M1T ) then
        f1 = a1T + a4*(Mag-M1T) + a8T*(8.5-Mag)**2 + (a2T + a3T*(Mag-M1T)) * alog(R) + a17T*Rrup
      else
        f1 = a1T + a5*(Mag-M1T) + a8T*(8.5-Mag)**2 + (a2T + a3T*(Mag-M1T)) * alog(R) + a17T*Rrup
      endif

c     style of faulting (eq 4.5 and 4.6)
      if ( mag .lt. 4. ) then
        f7 = 0
        f8 = 0
      elseif ( mag .le. 5. ) then
        f7 = Frv * a11T * (mag-4.)
        f8 = Fn * a12T * (mag-4.)
      else
        f7 = Frv * a11T
        f8 = Fn * a12T
      endif

c     ZTOR (eq 14)
      if (ZTOR .le. 20.) then
        f6 = a15T * ZTOR/20.0
      else
        f6 = a15T
      endif

c     Set VS30_star (eq 4.8 and 4.9)
      if ( specT .ge. 3.0 ) then
        V1 = 800.
      elseif ( specT .gt. 0.5 ) then
        V1 = exp( -0.35 * alog(specT/0.5)  + alog(1500.) )
      else
        V1=1500.
      endif
      if ( vs30 .lt. v1 ) then
         vs30Star = vs30
      else
	vs30Star = v1
      endif

c     Compute site amplification (Eq. 4.7)
      if (vs30 .lt. vLinT) then
        f5 = a10T*alog(vs30Star/vLinT) - bT*alog(c+Sa1180)
     1              + bT*alog(Sa1180+c*((vs30Star/vLinT)**(n)) )
      else
     	f5 = (a10T + bT*n) * alog(vs30Star/vLinT)
      endif

c     Set Regional z1 reference (eq 4.18)
      if (regionflag .ne. 3) then
         z1_ref = exp ( -7.67/4. * alog( (Vs30**4 + 610.**4)/(1360.**4+610.**4) ) ) / 1000.
      else
         z1_ref = exp ( -5.23/2. * alog( (Vs30**2 + 412.**2)/(1360.**2+412.**2) ) ) / 1000.
      endif

C     Soil Depth Model (eq 4.17)
C     Updated 8/1/13
      if ( vs30 .le. 150.0 ) then
         y1z = a43T
         y2z = a43T
         x1z = 50.0
         x2z = 150.0
      elseif ( vs30 .le. 250.0 ) then
         y1z = a43T
         y2z = a44T
         x1z = 150.0
         x2z = 250.0
      elseif ( vs30 .le. 400.0 ) then
         y1z = a44T
         y2z = a45T
         x1z = 250.0
         x2z = 400.0
      elseif ( vs30 .le. 700.0 ) then
         y1z = a45T
         y2z = a46T
         x1z = 400.0
         x2z = 700.0
      else
         y1z = a46T
         y2z = a46T
         x1z = 700.0
         x2z = 1000.0
      endif
C     Calculation f10 term and set it equal to zero for Vs=1180m/s (i.e., reference condition)
      if (vs30 .eq. 1180.0) then
          f10 = 0.0
      else
         f10 = ( y1z + (Vs30-x1z)*(y2z-y1z)/(x2z-x1z))*alog( (z1 + 0.01) / (z1_ref+0.01) )
      endif

c     Compute HW taper1 (eq 4.11)
      if ( dip .le. 30. ) then
        HW_taper1 = 60./ 45.
      else
        HW_taper1 = (90.-dip)/45.
      endif

c     Compute HW taper2 (eq. 4.12)
      hw_a2 = 0.2
      if( mag .gt. 6.5 ) then
        HW_taper2 = 1. + hw_a2 * (mag-6.5)
      elseif ( mag .gt. 5.5 ) then
        HW_taper2 = 1. + HW_a2 * (mag-6.5) - (1.0 - HW_a2)*(mag-6.5)**2
      else
        HW_taper2 = 0.
      endif

c     Compute HW taper 3 (eq. 4.13)
C	  April 11, correction by ronnie for HW_taper3 when Rx.gt.R2
      h1 = 0.25
      h2 = 1.5
      h3 = -0.75
      R1 = fltWidth * cos(dip*3.1415926/180.)
      R2 = 3.*R1
      if ( Rx .le. R1 ) then
        HW_taper3 = h1 + h2*(Rx/R1) + h3*(Rx/R1)**2
      elseif ( Rx . lt. R2 ) then
        HW_taper3 = 1. - (Rx-R1)/(R2-R1)
      else
        HW_taper3 = 0.
      endif

c     Compute HW taper 4 (eq 4.14)
      if ( ZTOR .lt. 10. ) then
        HW_taper4 = 1. - (ZTOR**2) / 100.
      else
        HW_taper4 = 0.
      endif

c     Compute HW taper 5 (eq. 13)  **** Ry0 version ***
      Ry1 = Rx * tan(20.*3.1415926/180.)
      if ( Ry0 .lt. Ry1 ) then
        HW_taper5 = 1.
      elseif ( Ry0-Ry1 .lt. 5. ) then
        HW_taper5 = 1. - (Ry0-Ry1) / 5.
      else
        HW_taper5 = 0.
      endif

c     Compute HW taper 5 (eq. 4.15b)  **** No Ry0 version ***
c      if (Rjb .eq. 0. ) then
c        HW_taper5 = 1.
c      elseif ( Rjb .lt. 30. ) then
c        HW_taper5 = 1 - Rjb/30.
c      else
c        HW_taper5 = 0.
c      endif

c     Hanging wall Model (eq 4.10)
      if ( HWFlag .eq. 1 ) then
        f4 = a13T * HW_taper1 * HW_taper2 * HW_taper3 * HW_taper4 * HW_taper5
      else
        f4 = 0.
      endif

C     Add aftershock factor (eq 4.21)
      if (msasflag .eq. 1) then
         if (CRjb .gt. 15.0) then
             f11 = 0.0
         elseif (CRjb .le. 5.0) then
             f11 = a14T
         else
             f11 = a14T * ( 1.0 - (CRjb - 5.0) /10.0)
         endif
      elseif (msasflag .eq. 0) then
         f11 = 0.0
      endif

C     Now apply the regional attenuation differences (eq 4.22)
C     Global No Change
      if (regionflag .eq. 0) then
         freg = 0.0
C     Taiwan
      elseif (regionflag .eq. 1) then
         f12 = a31T * alog(Vs30star/VlinT)
         freg = f12 + a25T*Rrup
C     China
      elseif (regionflag .eq. 2) then
         freg = a28T*Rrup
C     Japan
      elseif (regionflag .eq. 3) then
         if (vs30 .lt. 150.0) then
             y1 = a36T
             y2 = a36T
             x1 = 50.0
             x2 = 150.0
         elseif (vs30 .lt. 250.0) then
             y1 = a36T
             y2 = a37T
             x1 = 150.0
             x2 = 250.0
         elseif (vs30 .lt. 350.0) then
             y1 = a37T
             y2 = a38T
             x1 = 250.0
             x2 = 350.0
         elseif (vs30 .lt. 450.0) then
             y1 = a38T
             y2 = a39T
             x1 = 350.0
             x2 = 450.0
         elseif (vs30 .lt. 600.0) then
             y1 = a39T
             y2 = a40T
             x1 = 450.0
             x2 = 600.0
         elseif (vs30 .lt. 850.0) then
             y1 = a40T
             y2 = a41T
             x1 = 600.0
             x2 = 850.0
         elseif (vs30 .lt. 1150.0) then
             y1 = a41T
             y2 = a42T
             x1 = 850.0
             x2 = 1150.0
         else
             y1 = a42T
             y2 = a42T
             x1 = 1150.0
             x2 = 3000.0
         endif
         f13 = y1 + (y2-y1)/(x2-x1) * (vs30-x1)
         freg = f13 + a29T*Rrup
      endif

C     Set the Sigma Values
      if (regionflag .ne. 3)  then
c     Compute within-event term, phiA, at the surface for linear site response (eq 7.1)
        if (mag .lt. 4.0) then
           phiA_est = s1estT
        elseif (mag .le. 6.0) then
           phiA_est = s1estT + ((s2estT-s1estT)/2.0)*(mag-4.0)
        else
           phiA_est = s2estT
        endif

c     Compute within-event term, phiA, for known Vs30
        if (mag .lt. 4.0) then
           phiA_msr = s1msrT
        elseif (mag .le. 6.0) then
           phiA_msr = s1msrT + ((s2msrT-s1msrT)/2.0)*(mag-4.0)
        else
           phiA_msr = s2msrT
        endif

C     choose phiA by Vs30 class
        if (vs30_class .eq. 0 ) then
	     phiA = phiA_est
        elseif (vs30_class .eq. 1) then
	     phiA = phiA_msr
        else
	     return
        endif

C     Set Sigma values for Japan Region
      else

C calculate phi_A for Japan (eq. 7.3)
        if (Rrup .lt. 30) then
           phiA = s5T
        elseif (Rrup .le. 80) then
           phiA = s5T + (s6T-s5T)/50*(Rrup-30)
        else
           phiA = s6T
        endif
      endif

c     Compute between-event term, tau (eq. 7.2)
      if (mag .lt. 5.0) then
         tauA = s3T
      elseif (mag .le. 7.0) then
         tauA = s3T + ((s4T-s3T)/2.0)*(mag-5.0)
      else
         tauA = s4T
      endif
      tauB = tauA

c     Compute phiB, within-event term with site amp variablity removed (eq. 7.7)
      sigAmp = 0.4
      phiB = sqrt( phiA**2 - sigAmp**2)

c     Compute parital derivative of alog(soil amp) w.r.t. alog(Sa1180) (eq. 7.10)
      if ( vs30 .ge. vLinT) then
        dAmp_dSa1180 = 0.
      else
        dAmp_dSa1180 = bT*Sa1180 * ( -1. / (Sa1180+c)
     1              + 1./ (Sa1180 + c*(vs30/vLinT)**(n)) )
      endif

C     Compute phi, with non-linear effects (eq. 7.8)
      phi = sqrt( phiB**2 * (1. + dAmp_dSa1180)**2 + sigAmp**2 )

C     Compute tau, with non-linear effects (eq. 7.9)
      tau = tauB * (1. + dAmp_dSa1180)

c     Compute median ground motion (eq. 1)
      lnSa = f1 + f4 + f5 + f6 + f7 + f8 + f9 + f10 + f11 + freg

      return
      end



C  ***** PEER NGA-West 2 MODELS Vertical (2013) **********



c ---------------------------------------------------------------------------
C     *** Stewart, Boore, Seyhan and Atkinson NGA West 2 (NGA West2-2013) ***
C         Earthquake Spectra Report:
C            "NGA-West2 Equations for Predicting Vertical-Component PGA, PGV,
C             and 5%-Damped PSA from Shallow Crustal Earthquakes"
C          Earthquake Spectra
C     Notes:
C        Applicable Range:
C            3.0 < M < 8.5 (Strike-Slip)
C            3.0 < M < 7.0 (Normal)
C            Distance < 300km
C            150 < Vs < 1500 m/s
C            Region Flag:
C               0 = Global
C               1 = China-Turkey
C               2 = Italy-Japan
C      Note that for this vertical model the basin term and depth to Z10 term is not
C          used. However, these parameters are still passed to this subroutine to be
C          consistent on with the horizontal version of this GMPE model. Also note that
C          'Unknown' mechanism case is not coded since for any PSHA seismic source model
C          a specific mechanism must be assigned.
c ---------------------------------------------------------------------------

      subroutine SSBA_NGAWest2_2013_Vert ( mag, Rbjf, specT,
     1        period2, lnY, sigma, iflag, vs, ftype, pga4nl, z10, regionflag, basinflag, phi, tau )

C     Last Updated: 12/07/15

      parameter (MAXPER=107)
      REAL Period(MAXPER), c1(MAXPER), c2(MAXPER), c3(MAXPER)
      real h(MAXPER), DC3ChinaTrk(MAXPER), DC3ItalyJapan(MAXPER), e0(MAXPER)
      real e1(MAXPER), e2(MAXPER), e3(MAXPER), e4(MAXPER)
      real e5(MAXPER), e6(MAXPER), mh(MAXPER), Vc(MAXPER)
      real f4(MAXPER), f5(MAXPER), DC3Global(MAXPER), cv(MAXPER)
      real phi1(MAXPER), phi2(MAXPER), tau1(MAXPER), tau2(MAXPER)

      real Mref, Rref, Vref, f1, f3, DC3Glb, specT
      REAL MAG, RBJF, VS, Z10
      real ftype, Rp, R
      INTEGER iFlag, count1, count2, regionflag, basinflag
      real sigmaT, lnY, mechS, mechN, mechR, pga4nl
      real f2, flin, fBasin
      real c1T, c2T, c3T, hT, Dc3ctkT, Dc3JpnT, e0T, e1T, e2T, e3T, e4T
      real e5T, e6T, mhT, VcT, f4T, f5T, DC3GlobalT
      real DC3ChinaTrkT, DC3ItalyJapanT
      real ckT, cvT, phi1T, phiT2, tau1T, tauT2, Phi, Tau

      data  period  / 0.0, -1.0, 0.01, 0.02, 0.022, 0.025, 0.029, 0.03, 0.032, 0.035, 0.036, 0.04,
     1                0.042, 0.044, 0.045, 0.046, 0.048, 0.05, 0.055, 0.06, 0.065, 0.067, 0.07, 0.075,
     1                0.08, 0.085, 0.09, 0.095, 0.1, 0.11, 0.12, 0.13, 0.133, 0.14, 0.15, 0.16, 0.17,
     1                0.18, 0.19, 0.2, 0.22, 0.24, 0.25, 0.26, 0.28, 0.29, 0.3, 0.32, 0.34, 0.35, 0.36, 0.38,
     1                0.4, 0.42, 0.44, 0.45, 0.46, 0.48, 0.5, 0.55, 0.6, 0.65, 0.667, 0.7, 0.75, 0.8, 0.85,
     1                0.9, 0.95, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2, 2.2, 2.4, 2.5, 2.6,
     1                2.8, 3, 3.2, 3.4, 3.5, 3.6, 3.8, 4, 4.2, 4.4, 4.6, 4.8, 5, 5.5, 6, 6.5, 7, 7.5, 8,
     1                8.5, 9, 9.5, 10  /
      data  e0  / 0.1836, 4.267, 0.2045, 0.3937, 0.4449, 0.5313, 0.6464, 0.6712, 0.7158, 0.7728, 0.7888,
     1            0.8367, 0.8531, 0.8651, 0.8694, 0.8734, 0.8807, 0.8864, 0.8922, 0.8855, 0.875, 0.8716,
     1            0.8671, 0.8598, 0.853, 0.849, 0.8473, 0.8474, 0.8487, 0.8498, 0.8403, 0.8232, 0.8162,
     1            0.7948, 0.7554, 0.7109, 0.6624, 0.6125, 0.563, 0.5165, 0.4312, 0.3537, 0.3192, 0.2865,
     1            0.2272, 0.1998, 0.1731, 0.1243, 0.0759, 0.05184, 0.02853, -0.01612, -0.05769, -0.0972,
     1           -0.1354, -0.1543, -0.1728, -0.2085, -0.2404, -0.3137, -0.3728, -0.4197, -0.4339, -0.459,
     1           -0.4912, -0.5171, -0.5407, -0.5614, -0.5793, -0.5953, -0.6232, -0.6488, -0.6788, -0.713,
     1           -0.7504, -0.7889, -0.8284, -0.8689, -0.91, -0.953, -1.044, -1.138, -1.186, -1.238, -1.349,
     1           -1.463, -1.581, -1.689, -1.74, -1.792, -1.894, -1.999, -2.103, -2.203, -2.305, -2.407, -2.512,
     1           -2.776, -3.053, -3.325, -3.586, -3.835, -4.068, -4.292, -4.5, -4.689, -4.87  /
      data  e1  / 0.2337, 4.292, 0.2553, 0.4468, 0.499, 0.5877, 0.7061, 0.7315, 0.7774, 0.8359, 0.8525, 0.9021,
     1            0.9189, 0.9316, 0.9362, 0.9406, 0.9488, 0.9551, 0.9624, 0.9568, 0.9468, 0.9433, 0.9384,
     1            0.9301, 0.9221, 0.917, 0.9146, 0.9138, 0.9141, 0.9129, 0.9007, 0.8804, 0.8723, 0.8478, 0.8037,
     1            0.7548, 0.7019, 0.6478, 0.5943, 0.5443, 0.4527, 0.3703, 0.3336, 0.2988, 0.2364, 0.2079, 0.1806,
     1            0.1307, 0.08191, 0.05787, 0.03466, -0.009451, -0.0504, -0.08928, -0.127, -0.1458, -0.1642, -0.1998,
     1           -0.2318, -0.3056, -0.3652, -0.4126, -0.4269, -0.4524, -0.4851, -0.5117, -0.5357, -0.557,
     1           -0.5754, -0.5918, -0.6198, -0.6458, -0.6757, -0.71, -0.7472, -0.7864, -0.827, -0.8685, -0.9099,
     1           -0.9542, -1.05, -1.154, -1.206, -1.261, -1.377, -1.496, -1.619, -1.731, -1.784, -1.836,
     1           -1.937, -2.039, -2.141, -2.241, -2.344, -2.45, -2.558, -2.831, -3.12, -3.406, -3.678, -3.936,
     1           -4.175, -4.402, -4.609, -4.8, -4.989  /
      data  e2  / 0.01562, 4.179, 0.0351, 0.2295, 0.2805, 0.3665, 0.4857, 0.512, 0.5603, 0.6229, 0.6411,
     1            0.6945, 0.7112, 0.7223, 0.7255, 0.7284, 0.7328, 0.7354, 0.7315, 0.7102, 0.6839, 0.6746,
     1            0.6615, 0.6421, 0.6272, 0.6155, 0.6072, 0.6027, 0.6011, 0.5996, 0.5925, 0.5827, 0.5783,
     1            0.5634, 0.5335, 0.4992, 0.4631, 0.4263, 0.3894, 0.3544, 0.2841, 0.2156, 0.1844, 0.1538,
     1            0.09515, 0.06725, 0.03965, -0.01177, -0.06254, -0.08772, -0.112, -0.1588, -0.2022, -0.2424,
     1           -0.2798, -0.2974, -0.3146, -0.347, -0.3755, -0.4415, -0.4969, -0.5387, -0.5514, -0.5746, -0.6053,
     1           -0.6308, -0.6545, -0.6752, -0.6926, -0.7082, -0.7376, -0.7635, -0.7923, -0.8223, -0.8534, -0.8839,
     1           -0.9098, -0.9344, -0.9606, -0.9889, -1.041, -1.094, -1.125, -1.161, -1.241, -1.33, -1.425, -1.509,
     1           -1.553, -1.601, -1.7, -1.806, -1.91, -2.011, -2.109, -2.206, -2.306, -2.564, -2.836, -3.103,
     1           -3.373, -3.636, -3.894, -4.142, -4.392, -4.605, -4.795  /
      data  e3  / 0.1538, 4.255, 0.1741, 0.3568, 0.4062, 0.4881, 0.5954, 0.6182, 0.6589, 0.7104, 0.7248,
     1            0.7672, 0.7822, 0.7936, 0.7976, 0.8014, 0.8084, 0.814, 0.8208, 0.8176, 0.8127, 0.8119,
     1            0.8115, 0.8108, 0.8098, 0.8108, 0.8133, 0.8168, 0.8212, 0.828, 0.8224, 0.8088, 0.8031,
     1            0.7851, 0.7509, 0.7107, 0.6658, 0.6189, 0.5717, 0.5274, 0.4482, 0.3766, 0.3453, 0.3158,
     1            0.262, 0.2369, 0.2121, 0.1665, 0.1197, 0.09601, 0.07287, 0.02804, -0.01392, -0.05441,
     1           -0.09389, -0.1135, -0.1327, -0.1699, -0.2027, -0.278, -0.3378, -0.3858, -0.4004, -0.4259,
     1           -0.4575, -0.482, -0.5046, -0.5245, -0.5416, -0.5571, -0.5839, -0.6086, -0.6394, -0.6751,
     1           -0.7152, -0.7558, -0.7985, -0.8435, -0.8901, -0.9363, -1.032, -1.126, -1.173, -1.225,
     1           -1.336, -1.453, -1.569, -1.677, -1.73, -1.782, -1.89, -1.999, -2.106, -2.208, -2.309,
     1           -2.408, -2.506, -2.753, -3.01, -3.256, -3.493, -3.72, -3.932, -4.137, -4.33, -4.509, -4.668  /
      data  e4  / 1.247, 0.9925, 1.242, 1.243, 1.24, 1.232, 1.22, 1.217, 1.215, 1.212, 1.212, 1.215, 1.219,
     1            1.223, 1.225, 1.228, 1.233, 1.24, 1.257, 1.276, 1.297, 1.306, 1.32, 1.345, 1.367, 1.386,
     1            1.402, 1.414, 1.425, 1.44, 1.438, 1.419, 1.412, 1.391, 1.354, 1.311, 1.263, 1.211, 1.159,
     1            1.11, 1.025, 0.9546, 0.9253, 0.8998, 0.861, 0.8466, 0.8355, 0.8205, 0.8109, 0.8077, 0.8056,
     1            0.8049, 0.8094, 0.8187, 0.8296, 0.8351, 0.8406, 0.852, 0.8653, 0.903, 0.9475, 0.9958, 1.012,
     1            1.043, 1.09, 1.137, 1.183, 1.228, 1.274, 1.32, 1.411, 1.497, 1.574, 1.641, 1.698, 1.752, 1.801,
     1            1.847, 1.893, 1.934, 2.017, 2.097, 2.131, 2.161, 2.217, 2.268, 2.303, 2.333, 2.347, 2.361,
     1            2.385, 2.413, 2.438, 2.462, 2.476, 2.483, 2.488, 2.496, 2.492, 2.467, 2.426, 2.384, 2.344,
     1            2.308, 2.258, 2.221, 2.187  /
      data  e5  / 0.0, -0.1114, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1            0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00006245, -0.003053,
     1           -0.01037, -0.013, -0.02022, -0.03283, -0.04732, -0.06364, -0.08103, -0.09818, -0.1139,
     1           -0.1423, -0.1668, -0.1776, -0.1873, -0.2027, -0.209, -0.2147, -0.2243, -0.2322, -0.2356,
     1           -0.2388, -0.244, -0.2478, -0.2501, -0.252, -0.2528, -0.2536, -0.2549, -0.2555, -0.2558,
     1           -0.2529, -0.2477, -0.2458, -0.2421, -0.2362, -0.2301, -0.224, -0.2176, -0.2111, -0.2046,
     1           -0.1919, -0.1803, -0.1707, -0.1633, -0.1576, -0.1513, -0.145, -0.1388, -0.1321, -0.1265,
     1           -0.1124, -0.09569, -0.08824, -0.0818, -0.06882, -0.0568, -0.0487, -0.03988, -0.03594,
     1           -0.03238, -0.02602, -0.02068, -0.01549, -0.01109, -0.008411, -0.007098, -0.005876, -0.001251,
     1           -0.0000625, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  /
      data  e6  / 0.02257, 0.247, 0.0222, 0.01038, 0.008442, 0.006672, 0.007363, 0.008618, 0.01271, 0.02086,
     1            0.02399, 0.03692, 0.04466, 0.05266, 0.05705, 0.06155, 0.0713, 0.08106, 0.1039, 0.1232,
     1            0.142, 0.1488, 0.1579, 0.1697, 0.1757, 0.174, 0.1674, 0.1574, 0.1444, 0.1096, 0.07126,
     1            0.03143, 0.02029, -0.002279, -0.02798, -0.04711, -0.06097, -0.07071, -0.07737, -0.08194,
     1           -0.08635, -0.08649, -0.08578, -0.08565, -0.08606, -0.08551, -0.0841, -0.08361, -0.08305,
     1           -0.08273, -0.08213, -0.08062, -0.07807, -0.07506, -0.07102, -0.06892, -0.06703, -0.06427,
     1           -0.06214, -0.05023, -0.0364, -0.02521, -0.02075, -0.01147, 0.002752, 0.01987, 0.03944,
     1            0.06023, 0.08275, 0.1069, 0.1546, 0.1994, 0.253, 0.3049, 0.3538, 0.3984, 0.4415, 0.4845,
     1            0.5263, 0.5663, 0.6359, 0.7011, 0.7325, 0.7635, 0.8242, 0.8836, 0.9382, 0.9819, 1.001,
     1            1.02, 1.055, 1.088, 1.116, 1.142, 1.164, 1.181, 1.192, 1.204, 1.206, 1.194, 1.177, 1.162,
     1            1.152, 1.138, 1.142, 1.158, 1.158  /
      data  mh  / 5.5, 6.2, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5,
     1            5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.5, 5.51, 5.52, 5.53, 5.54, 5.57, 5.62, 5.66,
     1            5.67, 5.7, 5.74, 5.78, 5.82, 5.85, 5.89, 5.92, 5.97, 6.03, 6.05, 6.07, 6.11, 6.12,
     1            6.14, 6.16, 6.18, 6.18, 6.19, 6.19, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2,
     1            6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2,
     1            6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2,
     1            6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2, 6.2  /
      data  c1  / -1.175, -1.254, -1.176, -1.212, -1.221, -1.233, -1.243, -1.245, -1.246, -1.244, -1.243,
     1            -1.232, -1.226, -1.218, -1.214, -1.21, -1.201, -1.193, -1.17, -1.147, -1.126, -1.118,
     1            -1.107, -1.091, -1.076, -1.064, -1.054, -1.047, -1.04, -1.028, -1.017, -1.01, -1.008,
     1            -1.003, -0.996, -0.9901, -0.9855, -0.9818, -0.979, -0.9772, -0.9736, -0.9703, -0.969,
     1            -0.9682, -0.9672, -0.9668, -0.9665, -0.9663, -0.9667, -0.9672, -0.968, -0.9701, -0.9728,
     1            -0.9754, -0.978, -0.9792, -0.9805, -0.9834, -0.9867, -0.9947, -1.005, -1.015, -1.018,
     1            -1.026, -1.037, -1.048, -1.06, -1.071, -1.08, -1.089, -1.104, -1.116, -1.126, -1.136,
     1            -1.144, -1.152, -1.16, -1.168, -1.173, -1.177, -1.181, -1.182, -1.182, -1.181, -1.176,
     1            -1.168, -1.16, -1.156, -1.154, -1.151, -1.144, -1.133, -1.121, -1.11, -1.101, -1.092,
     1            -1.085, -1.065, -1.043, -1.03, -1.024, -1.019, -1.016, -1.012, -1.013, -1.013, -1.015  /
      data  c2  / 0.1577, 0.1715, 0.1573, 0.1598, 0.1603, 0.1608, 0.1611, 0.1608, 0.1601, 0.1584, 0.1576,
     1            0.1544, 0.1523, 0.1501, 0.1488, 0.1475, 0.1448, 0.142, 0.1348, 0.1285, 0.1224, 0.12,
     1            0.1166, 0.1115, 0.1077, 0.1052, 0.1038, 0.1029, 0.1023, 0.1024, 0.1042, 0.107, 0.1079,
     1            0.1099, 0.1126, 0.1152, 0.1175, 0.1199, 0.1221, 0.1241, 0.1267, 0.1287, 0.1292, 0.1298,
     1            0.1309, 0.1313, 0.1316, 0.132, 0.1328, 0.1332, 0.1337, 0.1344, 0.135, 0.1356, 0.1361,
     1            0.1365, 0.1368, 0.1377, 0.1384, 0.139, 0.1389, 0.1388, 0.1387, 0.1384, 0.1377, 0.1365,
     1            0.1351, 0.1335, 0.1316, 0.1292, 0.1236, 0.1173, 0.1102, 0.1036, 0.09771, 0.09237, 0.08763,
     1            0.08328, 0.07913, 0.07495, 0.0682, 0.06271, 0.06053, 0.05888, 0.05573, 0.05261, 0.05069,
     1            0.05061, 0.05071, 0.05057, 0.05008, 0.04875, 0.04764, 0.04681, 0.04689, 0.04803, 0.05014,
     1            0.05798, 0.06732, 0.08082, 0.09668, 0.1116, 0.1247, 0.1377, 0.1502, 0.1579, 0.1601  /
      data  c3  / -0.009222, -0.0034, -0.009222, -0.009039, -0.009038, -0.009071, -0.0092085, -0.0092595,
     1            -0.0093885, -0.009629, -0.0097195, -0.01012, -0.01034, -0.01055, -0.01066, -0.01077,
     1            -0.01097, -0.01116, -0.01157, -0.01187, -0.01207, -0.01213, -0.01218, -0.01222, -0.01218,
     1            -0.01208, -0.011965, -0.011835, -0.01169, -0.01137, -0.011055, -0.010725, -0.01062, -0.0104,
     1            -0.010125, -0.009805, -0.009505, -0.00922, -0.0089545, -0.0087095, -0.008254, -0.0078455,
     1            -0.007662, -0.0074815, -0.0071495, -0.0069925, -0.006843, -0.006556, -0.0062865, -0.006157,
     1            -0.0060295, -0.0057885, -0.0055585, -0.0053435, -0.005138, -0.005042, -0.004947,
     1            -0.0047645, -0.004596, -0.0042055, -0.003867, -0.003578, -0.00349, -0.003326, -0.0031095,
     1            -0.0029225, -0.002758, -0.002616, -0.002485, -0.00236, -0.002185, -0.00203, -0.001875,
     1            -0.001745, -0.00162, -0.00152, -0.001415, -0.00134, -0.001265, -0.00119, -0.001088,
     1            -0.000991, -0.000948, -0.0009, -0.0008095, -0.000704, -0.0006385, -0.0005769,
     1            -0.0005474, -0.0005188, -0.0004639, -0.0004118, -0.0003623, -0.000315, -0.0002699,
     1            -0.0002266, -0.0001852, -0.00008837, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  /
      data Dc3Global  /  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  /
      data  Dc3ChinaTrk  / 0.00475, 0.00336, 0.00498, 0.005207, 0.005251, 0.005316, 0.0054, 0.00542,
     1                     0.00546, 0.005518, 0.005536, 0.005603, 0.005633, 0.005658, 0.00567, 0.00568, 0.005697, 0.00571,
     1                     0.00572, 0.005702, 0.005662, 0.00564, 0.005604, 0.005534, 0.005457, 0.005378, 0.005302,
     1                     0.005234, 0.00518, 0.005121, 0.005117, 0.005148, 0.005162, 0.005196, 0.00524, 0.005266, 0.005271,
     1                     0.005257, 0.005227, 0.005181, 0.00505, 0.004878, 0.004781, 0.004678, 0.004464, 0.004356, 0.00425,
     1                     0.004046, 0.003855, 0.003764, 0.003676, 0.003509, 0.003354, 0.003209, 0.003075, 0.003013, 0.002952,
     1                     0.002839, 0.002735, 0.002515, 0.002347, 0.002225, 0.002193, 0.002143, 0.002096, 0.002077, 0.002081,
     1                     0.002102, 0.002133, 0.00217, 0.002243, 0.002314, 0.002382, 0.002446, 0.002506, 0.002563, 0.002617,
     1                     0.002666, 0.002711, 0.002751, 0.002818, 0.002865, 0.00288, 0.00289, 0.002892, 0.00287, 0.002822,
     1                     0.002752, 0.00271, 0.002663, 0.002559, 0.002443, 0.002318, 0.002189, 0.002059, 0.001931, 0.00181,
     1                     0.001546, 0.001337, 0.001176, 0.001057, 0.0009748, 0.0009228, 0.0008949, 0.0008852, 0.0008876,
     1                     0.000896  /
      data  Dc3ItalyJapan  / 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1                       0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0001, -0.00025, -0.00045, -0.00065,
     1                      -0.00085, -0.0009, -0.0011, -0.00132, -0.00152, -0.00168, -0.00183, -0.00195, -0.00205,
     1                      -0.0022, -0.0023, -0.00233, -0.00235, -0.00237, -0.00237, -0.00237, -0.00237, -0.00237,
     1                      -0.00237, -0.00236, -0.00236, -0.00235, -0.00234, -0.00232, -0.00232, -0.00231, -0.00229,
     1                      -0.00228, -0.00223, -0.00217, -0.00211, -0.00208, -0.00204, -0.00196, -0.00189, -0.00181,
     1                      -0.00173, -0.00165, -0.00158, -0.00143, -0.0013, -0.00118, -0.00107, -0.000974, -0.000886,
     1                      -0.000807, -0.000737, -0.000675, -0.000621, -0.000534, -0.00047, -0.000446, -0.000426,
     1                      -0.000397, -0.00035, -0.0002, -0.00012, -0.0001, -0.000095, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
     1                       0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  /
      data  h  / 5.1, 6.9, 5.1, 5.06, 5.03, 4.99, 4.99, 4.99, 5.01, 5.03, 5.03, 5.03, 5.01, 4.99, 4.98, 4.97,
     1           4.96, 4.94, 4.9, 4.9, 4.9, 4.9, 4.9, 4.9, 4.88, 4.85, 4.83, 4.81, 4.8, 4.79, 4.76, 4.77, 4.77,
     1           4.78, 4.78, 4.78, 4.76, 4.76, 4.77, 4.79, 4.78, 4.8, 4.81, 4.83, 4.88, 4.91, 4.94, 5, 5.05, 5.07,
     1           5.1, 5.15, 5.19, 5.23, 5.27, 5.28, 5.3, 5.33, 5.35, 5.4, 5.49, 5.62, 5.67, 5.78, 5.96, 6.16, 6.37,
     1           6.56, 6.75, 6.94, 7.33, 7.7, 8.07, 8.4, 8.72, 8.99, 9.17, 9.31, 9.46, 9.56, 9.6, 9.53, 9.49, 9.46,
     1           9.45, 9.49, 9.51, 9.48, 9.47, 9.48, 9.49, 9.51, 9.52, 9.54, 9.54, 9.53, 9.5, 9.36, 9.1, 8.69, 8.29,
     1           7.81, 7.37, 6.8, 6.43, 6.13, 5.93  /
      data  cv  / -0.329, -0.518, -0.329, -0.318, -0.311, -0.301, -0.298, -0.297, -0.298, -0.3, -0.304, -0.319,
     1            -0.324, -0.331, -0.339, -0.349, -0.358, -0.365, -0.372, -0.38, -0.386, -0.392, -0.397, -0.4,
     1            -0.403, -0.404, -0.404, -0.404, -0.404, -0.403, -0.402, -0.401, -0.4, -0.4, -0.4, -0.4, -0.401,
     1            -0.402, -0.403, -0.403, -0.402, -0.401, -0.4, -0.398, -0.396, -0.393, -0.39, -0.388, -0.385,
     1            -0.382, -0.38, -0.38, -0.38, -0.381, -0.384, -0.388, -0.393, -0.4, -0.406, -0.413, -0.421,
     1            -0.431, -0.441, -0.452, -0.464, -0.475, -0.486, -0.497, -0.508, -0.518, -0.528, -0.538, -0.547,
     1            -0.557, -0.567, -0.578, -0.59, -0.602, -0.613, -0.625, -0.638, -0.645, -0.648, -0.651, -0.652,
     1            -0.645, -0.641, -0.63, -0.628, -0.623, -0.611, -0.6, -0.59, -0.578, -0.563, -0.544, -0.522,
     1            -0.476, -0.437, -0.4, -0.366, -0.338, -0.317, -0.303, -0.292, -0.284, -0.2767  /
      data  vc  / 1500, 1300, 1500, 1500.1, 1501, 1501, 1502, 1502, 1502, 1503, 1503, 1502.9, 1502, 1502,
     1            1502,1502, 1501.9, 1501.1, 1500, 1499.1, 1497.4, 1496.7, 1495.5, 1493.2, 1490.7, 1488.1,
     1            1485.6, 1482.3, 1480, 1473.7, 1466.2, 1458.5, 1456, 1450.2, 1441.2, 1431.6, 1422.3, 1413.7,
     1            1405.4, 1396.5, 1378.9, 1360.9, 1352.9, 1344.5, 1329.1, 1320.8, 1313.4, 1298.7, 1286.3,
     1            1280,1273.8, 1262.1, 1252.1, 1242.5, 1233.6, 1229.7, 1225.9, 1218.6, 1212.4, 1195.9,
     1            1181.6, 1170.1, 1166.6, 1159.5, 1149.7, 1140.1, 1132.2, 1124.7, 1118.6, 1113, 1103.7,
     1            1095.2, 1086.5, 1077.2, 1067.4, 1056.4, 1045.3, 1034.9, 1024.6, 1014.4, 992.76, 973.49,
     1            964.54, 956.16, 939.01, 921.23, 904.14, 888.7, 881.42, 874.26, 860.43, 847.56, 835.89,
     1            825.46, 816.48, 809.05, 802.67, 790.21, 782.06, 776.36, 772.82, 770.95, 770.1, 768.53,
     1            768.71, 771.66, 775  /
      data  f4  / -0.05, -0.03, -0.05, -0.0501, -0.0501, -0.0501, -0.0498, -0.0497, -0.0497, -0.0504,
     1            -0.0508, -0.0535, -0.0553, -0.0573, -0.0584, -0.0594, -0.0616, -0.0636, -0.0682, -0.0715,
     1            -0.0734, -0.0739, -0.0745, -0.0749, -0.0751, -0.075, -0.0747, -0.0742, -0.0736, -0.0717,
     1            -0.0692, -0.0664, -0.0655, -0.0635, -0.0607, -0.0581, -0.0557, -0.0534, -0.0512, -0.0492,
     1            -0.0461, -0.0435, -0.0424, -0.0416, -0.0402, -0.0397, -0.039, -0.038, -0.0371, -0.0367,
     1            -0.0362, -0.0354, -0.0348, -0.0343, -0.0339, -0.0337, -0.0335, -0.033, -0.0325, -0.031,
     1            -0.0296, -0.0285, -0.028, -0.0272, -0.026, -0.0249, -0.0239, -0.0231, -0.0222, -0.0215,
     1            -0.0202, -0.0191, -0.0178, -0.0164, -0.0152, -0.0141, -0.0129, -0.0118, -0.0109, -0.0102,
     1            -0.00896, -0.0079, -0.00742, -0.00697, -0.00615, -0.00543, -0.00479, -0.00423, -0.00397,
     1            -0.00373, -0.0033, -0.00293, -0.00257, -0.00224, -0.00192, -0.00161, -0.00135, -0.000823,
     1            -0.000456, -0.000215, -0.0000704, -0.00000679, 0.0, 0.0, 0.0, 0.0, 0.0  /
      data  f5  / -0.00701, -0.00844, -0.00701, -0.007279, -0.007311, -0.007336, -0.00731, -0.007293,
     1            -0.007246, -0.007148, -0.007111, -0.006937, -0.006844, -0.006749, -0.006702, -0.006655,
     1            -0.006564, -0.006476, -0.006275, -0.006105, -0.005968, -0.005922, -0.00586, -0.005778,
     1            -0.005719, -0.005678, -0.005652, -0.005639, -0.005636, -0.005653, -0.005691, -0.005742,
     1            -0.005758, -0.005797, -0.005855, -0.005915, -0.005976, -0.006036, -0.006096, -0.006156,
     1            -0.006273, -0.006388, -0.006444, -0.006499, -0.006605, -0.006655, -0.006704, -0.006799,
     1            -0.006887, -0.006929, -0.00697, -0.007047, -0.007122, -0.007192, -0.007259, -0.007292,
     1            -0.007324, -0.007387, -0.007449, -0.007598, -0.007739, -0.00787, -0.007912, -0.007989,
     1            -0.008094, -0.008184, -0.008258, -0.008315, -0.008356, -0.008378, -0.008363, -0.008264,
     1            -0.008062, -0.007762, -0.007375, -0.006918, -0.006419, -0.005903, -0.005387, -0.004886,
     1            -0.003985, -0.003255, -0.002959, -0.002707, -0.002307, -0.002025, -0.001836, -0.00171,
     1            -0.001662, -0.001625, -0.001568, -0.00153, -0.001504, -0.001485, -0.00147, -0.001457,
     1            -0.001446, -0.001417, -0.001396, -0.001383, -0.001375, -0.001371, -0.001368, -0.001368,
     1            -0.001366, -0.001363, -0.00136  /
      data  tau1  / 0.47631, 0.38571, 0.48088, 0.48986, 0.50166, 0.51211, 0.52178, 0.53152, 0.54117,
     1              0.54987, 0.55808, 0.56537, 0.57111, 0.5764, 0.58036, 0.58236, 0.58365, 0.58317, 0.58127,
     1              0.57818, 0.57413, 0.56897, 0.56264, 0.55545, 0.54698, 0.53771, 0.52787, 0.51796, 0.50759,
     1              0.49674, 0.4855, 0.47414, 0.46295, 0.452, 0.4411, 0.43033, 0.41998, 0.41042, 0.40067, 0.39107,
     1              0.38255, 0.37488, 0.36761, 0.36064, 0.3542, 0.34827, 0.34336, 0.33929, 0.33577, 0.33291, 0.33102,
     1              0.32955, 0.32873, 0.32888, 0.3305, 0.3331, 0.33668, 0.34092, 0.3466, 0.35369, 0.36128, 0.36905,
     1              0.37718, 0.38573, 0.39468, 0.40371, 0.41267, 0.42177, 0.43138, 0.44039, 0.44865, 0.45699,
     1              0.46569, 0.4745, 0.48287, 0.49017, 0.49619, 0.5015, 0.50599, 0.50993, 0.51349, 0.5165, 0.5187,
     1              0.52015, 0.52097, 0.52179, 0.52305, 0.52408, 0.52485, 0.52561, 0.52656, 0.52701, 0.52914,
     1              0.53211, 0.53349, 0.53685, 0.53961, 0.53757, 0.53492, 0.53281, 0.52963, 0.52521, 0.50744,
     1              0.49611, 0.493, 0.48988, 0.48361  /
      data  tau2  / 0.37634, 0.34879, 0.38052, 0.38818, 0.39681, 0.40462, 0.4118, 0.41915, 0.42658, 0.43291,
     1              0.43902, 0.4449, 0.4502, 0.4562, 0.46245, 0.46826, 0.47388, 0.47865, 0.48279, 0.4861,
     1              0.48862, 0.49021, 0.49063, 0.49009, 0.48743, 0.48252, 0.47587, 0.46886, 0.46128, 0.45327,
     1              0.445, 0.43678, 0.42907, 0.42226, 0.41616, 0.41044, 0.40507, 0.40114, 0.39772, 0.39407,
     1              0.39038, 0.3867, 0.38296, 0.37935, 0.37544, 0.37113, 0.36726, 0.36432, 0.36162, 0.35912,
     1              0.35746, 0.35635, 0.35508, 0.35348, 0.35127, 0.34994, 0.34969, 0.34988, 0.35009, 0.34934,
     1              0.34783, 0.34636, 0.34554, 0.34616, 0.34832, 0.35201, 0.35536, 0.35813, 0.36128, 0.36527,
     1              0.37022, 0.37512, 0.37939, 0.38315, 0.38675, 0.39115, 0.39502, 0.39819, 0.40069, 0.40204,
     1              0.4021, 0.40148, 0.40085, 0.40044, 0.3998, 0.39886, 0.39689, 0.39438, 0.39179, 0.38959,
     1              0.38729, 0.38482, 0.38235, 0.38034, 0.3798, 0.38183, 0.38549, 0.38679, 0.38948, 0.39253,
     1              0.39481, 0.39851, 0.40286, 0.41629, 0.41771, 0.418, 0.4184  /
      data  phi1  / 0.71175, 0.58241, 0.7145, 0.71842, 0.72473, 0.7309, 0.73706, 0.74357, 0.74967, 0.75553,
     1              0.76129, 0.7667, 0.77122, 0.77588, 0.78032, 0.78388, 0.78704, 0.78898, 0.78996, 0.79012,
     1              0.78988, 0.78934, 0.78845, 0.78729, 0.7856, 0.78355, 0.78144, 0.77937, 0.77723, 0.77496,
     1              0.77239, 0.76941, 0.76592, 0.76189, 0.75743, 0.75224, 0.74608, 0.73979, 0.7334, 0.72692,
     1              0.72077, 0.71489, 0.70866, 0.70194, 0.69533, 0.68878, 0.68223, 0.67601, 0.6696, 0.66299,
     1              0.65662, 0.65034, 0.64402, 0.63827, 0.63273, 0.62713, 0.62163, 0.61666, 0.6114, 0.60584,
     1              0.60059, 0.59562, 0.59069, 0.58583, 0.58105, 0.57688, 0.5732, 0.56959, 0.56586, 0.5627,
     1              0.56, 0.55702, 0.55374, 0.55065, 0.54793, 0.5449, 0.54147, 0.53791, 0.5345, 0.53133,
     1              0.52829, 0.52515, 0.52186, 0.51853, 0.51491, 0.5107, 0.50642, 0.50215, 0.49792, 0.49358,
     1              0.489, 0.48369, 0.47779, 0.47172, 0.46516, 0.45784, 0.44984, 0.44248, 0.43556, 0.42732,
     1              0.41907, 0.41093, 0.40174, 0.39884, 0.38229, 0.37895, 0.37531  /
      data  phi2  / 0.53387, 0.59672, 0.53338, 0.53832, 0.54263, 0.54692, 0.55165, 0.55669, 0.56253, 0.56688,
     1              0.5712, 0.57554, 0.57948, 0.58323, 0.5868, 0.58984, 0.59264, 0.59452, 0.596, 0.59731,
     1              0.59879, 0.60035, 0.60176, 0.60305, 0.60433, 0.60534, 0.60605, 0.60665, 0.60694, 0.6067,
     1              0.60589, 0.60455, 0.60277, 0.60064, 0.59834, 0.59616, 0.5939, 0.5919, 0.59015, 0.58894,
     1              0.58828, 0.58799, 0.58803, 0.58831, 0.5888, 0.58938, 0.58959, 0.58966, 0.58953, 0.58928,
     1              0.58886, 0.58843, 0.58813, 0.58788, 0.58779, 0.58778, 0.58804, 0.58865, 0.58959, 0.59069,
     1              0.5919, 0.59324, 0.59468, 0.59622, 0.59794, 0.60008, 0.60269, 0.60562, 0.60904, 0.61298,
     1              0.61729, 0.62157, 0.62567, 0.62969, 0.63347, 0.63652, 0.63887, 0.64067, 0.64182, 0.64194,
     1              0.64107, 0.63976, 0.63872, 0.63798, 0.63739, 0.6369, 0.63678, 0.63691, 0.63691, 0.63656,
     1              0.63664, 0.63725, 0.63808, 0.63903, 0.63997, 0.64043, 0.63998, 0.63865, 0.63641, 0.63347,
     1              0.62962, 0.628, 0.62596, 0.61769, 0.60829, 0.59272, 0.58136  /



C     Set constant parameters
      mref = 4.5
      rref = 1.0
      vref = 760.0
      f1 = 0.0
      f3 = 0.1

C First check for the PGA case (i.e., specT=0.0)
      nPer = 107
      if (specT .eq. 0.0) then
         period1 = period(1)
         e0T = e0(1)
         e1T = e1(1)
         e2T = e2(1)
         e3T = e3(1)
         e4T = e4(1)
         e5T = e5(1)
         e6T = e6(1)
         mhT = mh(1)
         c1T = c1(1)
         c2T = c2(1)
         c3T = c3(1)
         hT = h(1)
         VcT = vc(1)
         Dc3GlobalT = DC3global(1)
         Dc3ChinaTrkT = DC3ChinaTrk(1)
         Dc3ItalyJapanT = DC3ItalyJapan(1)
         f4T = f4(1)
         f5T = f5(1)
         cvT = cv(1)
         phi1T = phi1(1)
         tau1T = tau1(1)
         phi2T = phi2(1)
         tau2T = tau2(1)

         goto 1011
      elseif (specT .eq. -1.0) then
         period1 = period(2)
         e0T = e0(2)
         e1T = e1(2)
         e2T = e2(2)
         e3T = e3(2)
         e4T = e4(2)
         e5T = e5(2)
         e6T = e6(2)
         mhT = mh(2)
         c1T = c1(2)
         c2T = c2(2)
         c3T = c3(2)
         hT = h(2)
         VcT = vc(2)
         Dc3GlobalT = DC3global(2)
         Dc3ChinaTrkT = DC3ChinaTrk(2)
         Dc3ItalyJapanT = DC3ItalyJapan(2)
         f4T = f4(2)
         f5T = f5(2)
         cvT = cv(2)
         phi1T = phi1(2)
         tau1T = tau1(2)
         phi2T = phi2(2)
         tau2T = tau2(2)

         goto 1011
      else
C Now loop over the spectral period range of the attenuation relationship.
         do i=3,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'SSBA (NGA West2-2015) Vertical'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),e0(count1),e0(count2),
     +                   specT,e0T,iflag)
            call interp (period(count1),period(count2),e1(count1),e1(count2),
     +                   specT,e1T,iflag)
            call interp (period(count1),period(count2),e2(count1),e2(count2),
     +                   specT,e2T,iflag)
            call interp (period(count1),period(count2),e3(count1),e3(count2),
     +                   specT,e3T,iflag)
            call interp (period(count1),period(count2),e4(count1),e4(count2),
     +                   specT,e4T,iflag)
            call interp (period(count1),period(count2),e5(count1),e5(count2),
     +                   specT,e5T,iflag)
            call interp (period(count1),period(count2),e6(count1),e6(count2),
     +                   specT,e6T,iflag)
            call interp (period(count1),period(count2),mh(count1),mh(count2),
     +                   specT,mhT,iflag)
            call interp (period(count1),period(count2),c1(count1),c1(count2),
     +                   specT,c1T,iflag)
            call interp (period(count1),period(count2),c2(count1),c2(count2),
     +                   specT,c2T,iflag)
            call interp (period(count1),period(count2),c3(count1),c3(count2),
     +                   specT,c3T,iflag)
            call interp (period(count1),period(count2),h(count1),h(count2),
     +                   specT,hT,iflag)
            call interp (period(count1),period(count2),DC3Global(count1),DC3Global(count2),
     +                   specT,DC3GlobalT,iflag)
            call interp (period(count1),period(count2),DC3ChinaTrk(count1),DC3ChinaTrk(count2),
     +                   specT,DC3ChinaTrkT,iflag)
            call interp (period(count1),period(count2),DC3ItalyJapan(count1),DC3ItalyJapan(count2),
     +                   specT,DC3ItalyJapanT,iflag)
            call interp (period(count1),period(count2),Vc(count1),Vc(count2),
     +                   specT,VcT,iflag)
            call interp (period(count1),period(count2),f4(count1),f4(count2),
     +                   specT,f4T,iflag)
            call interp (period(count1),period(count2),f5(count1),f5(count2),
     +                   specT,f5T,iflag)
            call interp (period(count1),period(count2),cv(count1),cv(count2),
     +                   specT,cvT,iflag)
            call interp (period(count1),period(count2),phi1(count1),phi1(count2),
     +                   specT,phi1T,iflag)
            call interp (period(count1),period(count2),phi2(count1),phi2(count2),
     +                   specT,phi2T,iflag)
            call interp (period(count1),period(count2),tau1(count1),tau1(count2),
     +                   specT,tau1T,iflag)
            call interp (period(count1),period(count2),tau2(count1),tau2(count2),
     +                   specT,tau2T,iflag)

 1011 period1 = specT

C.....Set the mechanism terms based on ftype............
C     Set mechanism term and corresponding Frv and Fnm values.
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C      -1       Normal                    -120 < Rake <  -60
C     -0.5      Normal/Oblique            -150 < Rake < -120
C                                          -60 < Rake <  -30
C       0       Strike-Slip               -180 < Rake < -150
C                                          -30 < Rake <   30
C                                          150 < Rake <  180
C      0.5      Reverse/Oblique             30 < Rake <   60
C                                          120 < Rake <  150
C       1       Reverse                     60 < Rake <  120
C     Note: Unknown Mechanism is not currently coded.
      if (ftype .eq. -1.0) then
         mechS = 0.0
         mechN = 1.0
         mechR = 0.0
      elseif (ftype .eq. -0.5) then
         mechS = 0.0
         mechN = 1.0
         mechR = 0.0
      elseif (ftype .eq. 0.0) then
         mechS = 1.0
         mechN = 0.0
         mechR = 0.0
      elseif (ftype .eq. 0.5) then
         mechS = 0.0
         mechN = 0.0
         mechR = 1.0
      elseif (ftype .eq. 1.0) then
         mechS = 0.0
         mechN = 0.0
         mechR = 1.0
      endif

C.....First compute the Reference Rock PGA value...........
C.....This will include the regional dependence for PGA....
C.....MAGNITUDE DEPENDENCE.................................
      if (mag .le. mh(1)) then
         term1 = e1(1)*mechS + e2(1)*mechN + e3(1)*mechR +
     1           e4(1)*(mag-mh(1)) + e5(1)*(mag-mh(1))**2.0
      else
         term1 = e1(1)*mechS + e2(1)*mechN + e3(1)*mechR +
     1           e6(1)*(mag-mh(1))
      endif
C.....Distance dependence......
      Rp = SQRT( Rbjf*Rbjf+h(1)*h(1) )

C.....Apply Regional term.....
      if (regionflag .eq. 0) then
         TERM2 = ( c1(1) + c2(1)*(mag-mref) ) * alog(Rp/rref) +
     1          ( c3(1) + DC3global(1) ) * (Rp-rref)
      elseif (regionflag .eq. 1) then
         TERM2 = ( c1(1) + c2(1)*(mag-mref) ) * alog(Rp/rref) +
     1          ( c3(1) + DC3ChinaTrk(1) ) * (Rp-rref)
      elseif (regionflag .eq. 2) then
         TERM2 = ( c1(1) + c2(1)*(mag-mref) ) * alog(Rp/rref) +
     1          ( c3(1) + DC3ItalyJapan(1) ) * (Rp-rref)
      endif

      pga4nl = exp(term1+term2)


C.....Now compute the requested ground motion value........
C.....MAGNITUDE DEPENDENCE.................................
      if (mag .le. mhT) then
         term1 = e1T*mechS + e2T*mechN + e3T*mechR +
     1           e4T*(mag-mhT) + e5T*(mag-mhT)**2.0
      else
         term1 = e1T*mechS + e2T*mechN + e3T*mechR +
     1           e6T*(mag-mhT)
      endif

C.....Distance dependence......
      R = SQRT( Rbjf*Rbjf+hT*hT )

C     Now apply the regional attenuation differnece.
C     Global Case
C     For vertical set DC3 term = 0.0
      if (regionflag .eq. 0) then
         TERM2 = ( c1T + c2T*(mag-mref) ) * alog(R/rref) +
     1       ( c3T + DC3globalT) * (R-rref)
C     China-Turkey Case
      elseif (regionflag .eq. 1) then
         TERM2 = ( c1T + c2T*(mag-mref) ) * alog(R/rref) +
     1       ( c3T + DC3ChinaTrkT)  * (R-rref)
C     Italy-Japan Case
      elseif (regionflag .eq. 2) then
         TERM2 = ( c1T + c2T*(mag-mref) ) * alog(R/rref) +
     1       ( c3T + DC3ItalyJapanT)  * (R-rref)
      endif

C.....Site Response Term.........
C.....Now compute the site term........
C.....First the linear term......

      if (vs .lt. VcT ) then
         flin = cvT*alog(Vs/Vref)
      else
         flin = cvT*alog(VcT/Vref)
      endif

C.....Next the non-linear term......
      f2 = f4T*(exp(f5T*(min(vs,760.0)-360.0))-exp(f5T*(760.0-360.0)))

      TERM3 = flin + f1 + f2*alog((pga4nl+f3)/f3)

      lnY = term1 + term2 + term3
      period2 = period1

C     Compute magnitude dependence on tau and phi values.
      if (mag .le. 4.5) then
         tau = tau1T
      elseif (mag .gt. 4.5 .and. mag .lt. 5.5) then
         tau = tau1T + (tau2T - tau1T)*(mag - 4.5)
      else
         tau = tau2T
      endif
      if (mag .le. 4.5) then
         phi = phi1T
      elseif (mag .gt. 4.5 .and. mag .lt. 5.5) then
         phi = phi1T + (phi2T - phi1T)*(mag - 4.5)
      else
         phi = phi2T
      endif

      sigma = sqrt (tau**2 + phi**2)

C     Convert ground motion to units of gals.
      lnY = lnY + 6.89

      return
      END

c ---------------------------------------------------------------------
C     *** Campbell and Bozorgnia NGA West2 (NGA-2013) ***
C         Earthquake Spectra Paper:
C            "Campbell-Bozorgnia NGA-West2 ground motion model
C                 for the average horizontal components of PGA,
C                 PGV, and 5%-damped linear Response Spectra"
C             K. W. Campbel and Y. Bozorgnia
C     Notes:
C        Applicable Range:
C            3.3 < M < 8.5 (strike-slip)
C            3.3 < M < 8.0 (reverse)
C            3.3 < M < 7.5 (normal)
C            Distance < 300km
C            150 < Vs30m < 1500 m/s
C            0 < Z25 < 10 km
C            0 < Zhyp < 20 km
C            15 < Dip < 90
C        Report provides formulation for estimating recommended
C           parameters when they are not defined (e.g., Z25 given Vs30m).
C           See Chapter 06 of the report.
c ---------------------------------------------------------------------------

      subroutine BC_NGAWest2_2013_Vert ( mag, Rrup, Rbjf, Ftype, specT,
     1                     period2, lnY, sigma, iflag, vs,
     2                     depthtop, D25, Dip, depth, HWflag, Rx, rupwidth, regionflag, phi, tau )

C     Last Updated: 5/22/14

      parameter (MAXPER=23)
      REAL Period(MAXPER), C0(MAXPER), C1(MAXPER), C2(MAXPER), C3(MAXPER), C4(MAXPER), C5(MAXPER)
      REAL C6(MAXPER), C7(MAXPER), C8(MAXPER), C9(MAXPER), C10(MAXPER), C11(MAXPER), C12(MAXPER)
      REAL C13(MAXPER), C14(MAXPER), C15(MAXPER), C16(MAXPER), C17(MAXPER), C18(MAXPER), C19(MAXPER)
      REAL A2(MAXPER), h1(MAXPER), h2(MAXPER), h3(MAXPER), h4(MAXPER)
      REAL h5(MAXPER), h6(MAXPER)
      REAL K1(MAXPER), K2(MAXPER), K3(MAXPER)
      REAL C20(MAXPER), DC20CA(MAXPER), DC20JP(MAXPER), DC20CH(MAXPER)
      REAL T1(MAXPER), T2(MAXPER), phi1(MAXPER), Phi2(MAXPER), phic(MAXPER)
      REAL flnAF(MAXPER), rho(MAXPER)

      REAL MAG, RRUP, RBJF, VS, D25, FHWR, FHWM, FHWZ, FHWD, PGAROCK, C, N
      real sigmaT, lnY, ftype, ztor, Dip, Dmax, pgasoil, Rx, R1, R2, f1, f2
      real fhypH, D25_RK
      INTEGER count1, count2, HWFlag, regionflag

      real c0T, c1T, c2T, c3T, c4T, c5T, c6T, c7T, c8T, c9T, c10T, c11T, c12T
      real c13T, c14T, c15T ,c16T, c17T, c18T, c19T, c20T, Dc20CAT, Dc20JPT, Dc20CHT
      real k1T, k2T, k3T, a2T, h1T, h2T, h3T, h4T, h5T, h6T
      real t1T, t2T, phi1T, phi2T, phicT
      real rhoT, flnAFT

      real alpha, tau, s
      real tau_lnyB, tau_lnPGAB, phi_lnY, phi_lnyB, phi_lnPGAB, phi, sigmatot

C.....MODEL COEFFICIENTS.....................
      Data Period  /  0, -1, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25, 0.3,
     1                0.4, 0.5, 0.75, 1, 1.5, 2, 3, 4, 5, 7.5, 10  /
      Data c0  /  -4.729, -3.86, -4.674, -4.548, -4.05, -3.435, -3.435, -3.93, -5.505, -6.28,
     1            -6.789, -7.4, -8.75, -9.74, -11.05, -12.184, -13.451, -13.7, -13.9, -14.59387,
     2           -15.63449, -17.12864, -17.65672  /
      Data c1  /  0.984, 1.51, 0.977, 0.976, 0.931, 0.887, 0.902, 0.993, 1.267, 1.366, 1.458, 1.528,
     1            1.739, 1.872, 2.021, 2.18, 2.27, 2.271, 2.15, 2.132, 2.116, 2.223, 2.132  /
      Data c2  /  0.537, 0.27, 0.533, 0.549, 0.628, 0.674, 0.726, 0.698, 0.51, 0.447, 0.274, 0.193, -0.02,
     1           -0.121, -0.042, -0.069, 0.047, 0.149, 0.368, 0.726, 1.027, 0.169, 0.367  /
      Data c3  /  -1.499, -1.299, -1.485, -1.488, -1.494, -1.388, -1.469, -1.572, -1.669, -1.75, -1.711,
     1            -1.77, -1.594, -1.577, -1.757, -1.707, -1.621, -1.512, -1.315, -1.506, -1.721, -0.756, -0.8  /
      Data c4  /  -0.443, -0.379, -0.445, -0.453, -0.464, -0.552, -0.543, -0.47, -0.452, -0.435, -0.41, -0.305,
     1            -0.446, -0.489, -0.53, -0.624, -0.686, -0.84, -0.890, -0.885, -0.878, -1.077, -1.282  /
      Data c5  /  -2.666, -2.383, -2.665, -2.699, -2.772, -2.76, -2.575, -2.461, -2.349, -2.335, -2.332, -2.297,
     1            -2.219, -2.205, -2.143, -2.092, -1.913, -1.882, -1.789, -1.78139, -1.68982, -1.72135, -1.948  /
      Data c6  /  0.214, 0.196, 0.214, 0.215, 0.216, 0.202, 0.177, 0.166, 0.164, 0.175, 0.183, 0.19, 0.185,
     1            0.191, 0.188, 0.176, 0.144, 0.126, 0.105, 0.10009, 0.098, 0.125, 0.163  /
      Data c7  /  7.166, 6.274, 7.136, 6.936, 7.235, 8.334, 8.761, 9.049, 8.633, 8.742, 8.4, 7.643, 7.059,
     1            6.375, 5.166, 5.642, 5.963, 7.584, 8.645, 10.20357, 8.38571, 5.77927, 4.13478  /
      Data c8  /  0, 0.111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.016, 0.032, 0.128, 0.255, 0.284, 0.26112,
     1            0.28229, 0.38692, 0.32216  /
      Data c9  /  -0.23, -0.128, -0.229, -0.27, -0.315, -0.329, -0.29, -0.203, -0.203, -0.203, -0.203,
     1            -0.203, -0.203, -0.203, -0.203, -0.115, -0.005, 0.12, 0.17, 0.17, 0.17747, 0.38278, 0.33417  /
      Data c10  /  0.759, 0.14, 0.759, 0.768, 0.766, 0.764, 0.795, 0.842, 0.736, 0.801, 0.715, 0.708, 0.683,
     1             0.704, 0.602, 0.394, 0.328, 0.112, 0.011, 0, 0, 0, 0  /
      Data c11  /  -0.356, -0.395, -0.354, -0.344, -0.297, -0.363, -0.427, -0.429, -0.421, -0.429, -0.438,
     1             -0.421, -0.401, -0.417, -0.49, -0.539, -0.611, -0.63, -0.562, -0.53663, -0.44173,
     2             -0.3428, -0.19908  /
      Data c12  /  1.019, 0.338, 1.015, 0.95, 1.056, 1.316, 1.758, 1.411, 1.227, 0.987, 0.577, 0.279,
     1             0.358, 0.229, 0.574, 0.98, 0.819, 0.044, -0.396, 0.00115, -0.59234, -1.13827, -0.32493 /
      Data c13  /  0.373, 0.407, 0.372, 0.4, 0.394, 0.422, 0.336, 0.314, 0.289, 0.29, 0.303, 0.336, 0.358,
     1             0.432, 0.459, 0.442, 0.52, 0.566, 0.562, 0.51499, 0.51133, 0.57479, 0.32431  /
      Data c14  /  -0.1172, -0.0016, -0.1193, -0.1454, -0.1957, -0.187, -0.095, -0.0999, 0.0017, 0.0402,
     1              0.0468, 0.0255, 0.0606, 0.0904, 0.1776, 0.2389, 0.2758, 0.3051, 0.3482, 0.35267,
     2              0.30443, 0.16789, 0.16858  /
      Data c15  /  -0.097, 0.382, -0.094, -0.081, -0.091, -0.29, -0.261, -0.091, -0.092, -0.081,
     1              0.011, 0.092, 0.122, 0.287, 0.292, 0.316, 0.45, 0.424, 0.3, 0.25726, 0.17039,
     2              0.21872, 0.12681  /
      Data c16  /  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  /
      Data c17  /  0.102, 0.0581, 0.1026, 0.1059, 0.1175, 0.1238, 0.1088, 0.0918, 0.072, 0.0602,
     1             0.05, 0.0382, 0.0264, 0.0163, -0.0016, -0.0072, -0.0262, -0.0408, -0.0512,
     2            -0.0567, -0.04288, -0.0308, 0.00668  /
      Data c18  /  0.0442, 0.0294, 0.0452, 0.0427, 0.041, 0.0408, 0.0516, 0.0559, 0.0447, 0.0485,
     1             0.0416, 0.0438, 0.0307, 0.0287, 0.0277, 0.0277, 0.0293, 0.0221, 0.0321, 0.02249,
     2             0.02372, 0.0171, -0.00165  /
      Data c19  /  0.00784, 0.00761, 0.00784, 0.00786, 0.00815, 0.00783, 0.00726, 0.00644, 0.00745,
     1             0.00789, 0.00629, 0.00524, 0.00522, 0.00539, 0.00501, 0.00506, 0.00353, 0.0022,
     2            -0.00137, 0.00053, 0.00233, -0.00298, 0.00092  /
      Data c20  /  -0.0053, -0.0019, -0.0053, -0.0052, -0.0052, -0.0062, -0.0072, -0.0072, -0.0066, -0.0056,
     1             -0.0049, -0.0046, -0.0037, -0.0031, -0.0021, -0.0012, -0.0004, 0, 0, 0, 0, 0, 0  /
      Data Dc20CA  /  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  /
      Data Dc20JP  /  -0.0018, 0.0005, -0.0018, -0.0018, -0.002, -0.0026, -0.0021, -0.0018, -0.0018,
     1                -0.0022, -0.0025, -0.0027, -0.0024, -0.0025, -0.0025, -0.0023, -0.0013, -0.0004,
     2                 0, 0, 0, 0, 0  /
      Data Dc20CH  /  0.0039, 0.0019, 0.0039, 0.0036, 0.0033, 0.0039, 0.0048, 0.005, 0.0048, 0.0041,
     1                0.0034, 0.0031, 0.0024, 0.0021, 0.002, 0.0012, 0.0004, 0, 0, 0, 0, 0, 0  /
      Data a2  /  0.167, 0.596, 0.168, 0.166, 0.167, 0.173, 0.198, 0.174, 0.198, 0.204, 0.185, 0.164, 0.16,
     1            0.184, 0.216, 0.596, 0.596, 0.596, 0.596, 0.596, 0.596, 0.596, 0.596  /
      Data h1  /  0.241, 0.117, 0.242, 0.244, 0.246, 0.251, 0.26, 0.259, 0.254, 0.237, 0.206, 0.21, 0.226,
     1            0.217, 0.154, 0.117, 0.117, 0.117, 0.117, 0.117, 0.117, 0.117, 0.117  /
      Data h2  /  1.474, 1.616, 1.471, 1.467, 1.467, 1.449, 1.435, 1.449, 1.461, 1.484, 1.581, 1.586,
     1            1.544, 1.554, 1.626, 1.616, 1.616, 1.616, 1.616, 1.616, 1.616, 1.616, 1.616  /
      Data h3  /  -0.715, -0.733, -0.714, -0.711, -0.713, -0.701, -0.695, -0.708, -0.715, -0.721,
     1            -0.787, -0.795, -0.77, -0.77, -0.78, -0.733, -0.733, -0.733, -0.733, -0.733, -0.733,
     2            -0.733, -0.733  /
      Data h4  /  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1  /
      Data h5  /  -0.337, -0.128, -0.336, -0.339, -0.338, -0.338, -0.347, -0.391, -0.449, -0.393,
     1            -0.339, -0.447, -0.525, -0.407, -0.371, -0.128, -0.128, -0.128, -0.128, -0.128,
     2            -0.128, -0.128, -0.128  /
      Data h6  /  -0.27, -0.756, -0.27, -0.263, -0.259, -0.263, -0.219, -0.201, -0.099, -0.198,
     1            -0.21, -0.121, -0.086, -0.281, -0.285, -0.756, -0.756, -0.756, -0.756, -0.756,
     2            -0.756, -0.756, -0.756  /
      Data k1  /  865, 400, 865, 865, 908, 1054, 1086, 1032, 878, 748, 654, 587, 503, 457, 410,
     1            400, 400, 400, 400, 400, 400, 400, 400  /
      Data k2  /  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  /
      Data k3  /  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  /
      Data phi1  /  0.6939, 0.6081, 0.6949, 0.7002, 0.7215, 0.7513, 0.7401, 0.7233, 0.7306, 0.7006,
     1            0.6867, 0.6683, 0.6275, 0.606, 0.5677, 0.536, 0.511, 0.5069, 0.4744, 0.4659,
     2            0.4301, 0.3859, 0.3952  /
      Data phi2  /  0.4931, 0.4422, 0.4941, 0.5084, 0.536, 0.5844, 0.5783, 0.5704, 0.5361, 0.51,
     1            0.5074, 0.5141, 0.5208, 0.5262, 0.5361, 0.5504, 0.559, 0.5706, 0.5573, 0.5664,
     2            0.5675, 0.527, 0.4807  /
      Data t1  /  0.4612, 0.3344, 0.4617, 0.4741, 0.5291, 0.5761, 0.5231, 0.461, 0.3913, 0.3625,
     1            0.3546, 0.3551, 0.3595, 0.3762, 0.4156, 0.4719, 0.5065, 0.5386, 0.5147, 0.5531,
     2            0.5783, 0.5998, 0.4946  /
      Data t2  /  0.3471, 0.2399, 0.3445, 0.3753, 0.4164, 0.4681, 0.4266, 0.3902, 0.3428, 0.308,
     1            0.2877, 0.2653, 0.2796, 0.2844, 0.3221, 0.3105, 0.3288, 0.3451, 0.335, 0.3305,
     2            0.2939, 0.3793, 0.4415  /
      Data flnAF / 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3,
     1             0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3  /
      Data phiC  / 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  /
      Data rho  / 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  /

      nPer = 23
      c =  0.0
      n = 0.0

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1 = period(1)
         c0T = c0(1)
         c1T = c1(1)
         c2T = c2(1)
         c3T = c3(1)
         c4T = c4(1)
         c5T = c5(1)
         c6T = c6(1)
         c7T = c7(1)
         c8T = c8(1)
         c9T = c9(1)
         c10T = c10(1)
         c11T = c11(1)
         c12T = c12(1)
         c13T = c13(1)
         c14T = c14(1)
         c15T = c15(1)
         c16T = c16(1)
         c17T = c17(1)
         c18T = c18(1)
         c19T = c19(1)

         a2T = a2(1)
         h1T = h1(1)
         h2T = h2(1)
         h3T = h3(1)
         h4T = h4(1)
         h5T = h5(1)
         h6T = h6(1)

         k1T = k1(1)
         k2T = k2(1)
         k3T = k3(1)
         c20T = c20(1)
         Dc20CAT = Dc20CA(1)
         Dc20JPT = Dc20JP(1)
         Dc20CHT = Dc20CH(1)

         phi1T = phi1(1)
         phi2T = phi2(1)
         t1T = t1(1)
         t2T = t2(1)
         flnAFT = flnaf(1)
         phicT = phic(1)
         rhoT = rho(1)

         goto 1011
      elseif (specT .eq. -1.0) then
         period1 = period(2)
        c0T = c0(2)
         c1T = c1(2)
         c2T = c2(2)
         c3T = c3(2)
         c4T = c4(2)
         c5T = c5(2)
         c6T = c6(2)
         c7T = c7(2)
         c8T = c8(2)
         c9T = c9(2)
         c10T = c10(2)
         c11T = c11(2)
         c12T = c12(2)
         c13T = c13(2)
         c14T = c14(2)
         c15T = c15(2)
         c16T = c16(2)
         c17T = c17(2)
         c18T = c18(2)
         c19T = c19(2)

         a2T = a2(2)
         h1T = h1(2)
         h2T = h2(2)
         h3T = h3(2)
         h4T = h4(2)
         h5T = h5(2)
         h6T = h6(2)

         k1T = k1(2)
         k2T = k2(2)
         k3T = k3(2)
         c20T = c20(2)
         Dc20CAT = Dc20CA(2)
         Dc20JPT = Dc20JP(2)
         Dc20CHT = Dc20CH(2)

         phi1T = phi1(2)
         phi2T = phi2(2)
         t1T = t1(2)
         t2T = t2(2)
         flnAFT = flnaf(2)
         phicT = phic(2)
         rhoT = rho(2)

         goto 1011

      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=3,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Bozorgnia&Campbell (NGA West2-2013) Vertical'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),c0(count1),c0(count2),
     +                   specT,c0T,iflag)
            call interp (period(count1),period(count2),c1(count1),c1(count2),
     +                   specT,c1T,iflag)
            call interp (period(count1),period(count2),c2(count1),c2(count2),
     +                   specT,c2T,iflag)
            call interp (period(count1),period(count2),c3(count1),c3(count2),
     +                   specT,c3T,iflag)
            call interp (period(count1),period(count2),c4(count1),c4(count2),
     +                   specT,c4T,iflag)
            call interp (period(count1),period(count2),c5(count1),c5(count2),
     +                   specT,c5T,iflag)
            call interp (period(count1),period(count2),c6(count1),c6(count2),
     +                   specT,c6T,iflag)
            call interp (period(count1),period(count2),c7(count1),c7(count2),
     +                   specT,c7T,iflag)
            call interp (period(count1),period(count2),c8(count1),c8(count2),
     +                   specT,c8T,iflag)
            call interp (period(count1),period(count2),c9(count1),c9(count2),
     +                   specT,c9T,iflag)
            call interp (period(count1),period(count2),c10(count1),c10(count2),
     +                   specT,c10T,iflag)
            call interp (period(count1),period(count2),c11(count1),c11(count2),
     +                   specT,c11T,iflag)
            call interp (period(count1),period(count2),c12(count1),c12(count2),
     +                   specT,c12T,iflag)
            call interp (period(count1),period(count2),c13(count1),c13(count2),
     +                   specT,c13T,iflag)
            call interp (period(count1),period(count2),c14(count1),c14(count2),
     +                   specT,c14T,iflag)
            call interp (period(count1),period(count2),c15(count1),c15(count2),
     +                   specT,c15T,iflag)
            call interp (period(count1),period(count2),c16(count1),c16(count2),
     +                   specT,c16T,iflag)
            call interp (period(count1),period(count2),c17(count1),c17(count2),
     +                   specT,c17T,iflag)
            call interp (period(count1),period(count2),c18(count1),c18(count2),
     +                   specT,c18T,iflag)
            call interp (period(count1),period(count2),c19(count1),c19(count2),
     +                   specT,c19T,iflag)
            call interp (period(count1),period(count2),a2(count1),a2(count2),
     +                   specT,a2T,iflag)
            call interp (period(count1),period(count2),h1(count1),h1(count2),
     +                   specT,h1T,iflag)
            call interp (period(count1),period(count2),h2(count1),h2(count2),
     +                   specT,h2T,iflag)
            call interp (period(count1),period(count2),h3(count1),h3(count2),
     +                   specT,h3T,iflag)
            call interp (period(count1),period(count2),h4(count1),h4(count2),
     +                   specT,h4T,iflag)
            call interp (period(count1),period(count2),h5(count1),h5(count2),
     +                   specT,h5T,iflag)
            call interp (period(count1),period(count2),h6(count1),h6(count2),
     +                   specT,h6T,iflag)

            call interp (period(count1),period(count2),k1(count1),k1(count2),
     +                   specT,k1T,iflag)
            call interp (period(count1),period(count2),k2(count1),k2(count2),
     +                   specT,k2T,iflag)
            call interp (period(count1),period(count2),k3(count1),k3(count2),
     +                   specT,k3T,iflag)

            call interp (period(count1),period(count2),c20(count1),c20(count2),
     +                   specT,c20T,iflag)
            call interp (period(count1),period(count2),Dc20CA(count1),Dc20CA(count2),
     +                   specT,Dc20CAT,iflag)
            call interp (period(count1),period(count2),Dc20JP(count1),Dc20JP(count2),
     +                   specT,Dc20JPT,iflag)
            call interp (period(count1),period(count2),Dc20CH(count1),Dc20CH(count2),
     +                   specT,Dc20CHT,iflag)

            call interp (period(count1),period(count2),phi1(count1),phi1(count2),
     +                   specT,phi1T,iflag)
            call interp (period(count1),period(count2),phi2(count1),phi2(count2),
     +                   specT,phi2T,iflag)
            call interp (period(count1),period(count2),t1(count1),t1(count2),
     +                   specT,t1T,iflag)
            call interp (period(count1),period(count2),t2(count1),t2(count2),
     +                   specT,t2T,iflag)
            call interp (period(count1),period(count2),flnAF(count1),flnAF(count2),
     +                   specT,flnAfT,iflag)
            call interp (period(count1),period(count2),phic(count1),phic(count2),
     +                   specT,phicT,iflag)
            call interp (period(count1),period(count2),rho(count1),rho(count2),
     +                   specT,rhoT,iflag)

 1011 period1 = specT

C.....COMPUTE ROCK PGA VALUE FIRST.........................
C.....MAGNITUDE DEPENDENCE (Eq 3.2)........................
      IF (MAG .LE. 4.5) THEN
         TERM1 = C0(1) + C1(1)*MAG
      elseif (mag .le. 5.5) then
         TERM1 = C0(1) + c1(1)*MAG + c2(1)*(MAG-4.5)
      elseif (mag .le. 6.5) then
         TERM1 = C0(1) + C1(1)*MAG + c2(1)*(MAG-4.5) + c3(1)*(mag-5.5)
      ELSE
         TERM1 = C0(1) + C1(1)*MAG + c2(1)*(MAG-4.5) + C3(1)*(MAG-5.5) + c4(1)*(mag-6.5)
      ENDIF

C.....Distance dependence (Eq 3.3).....
      R = SQRT( RRUP*RRUP+C7(1)*C7(1) )
      TERM2 = (C5(1) + C6(1)*MAG)*ALOG(R)

C.....SET UP STYLE OF FAULTING TERMS (Eq 3.4, 3.5, and 3.6).........

C     Set mechanism term and corresponding Frv and Fnm values.
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C    -1,-0.5    Normal and NMl/Obl       -150 < Rake < -30.0
C     1, 0.5    Reverse and Rev/Obl        30 < Rake < 150.0
C       0       Strike-Slip                    Otherwise
      IF (Ftype .EQ. 0.0) THEN
         TERM3 = 0.0
      ELSEIF (Ftype .ge. 0.5) THEN
         if (mag .le. 4.5) then
            TERM3 = 0.0
         elseif (mag .le. 5.5) then
            TERM3 = C8(1)*(mag-4.5)
         else
            TERM3 = c8(1)
         endif
      ELSEIF (Ftype .le. -0.5) THEN
         if (mag .le. 4.5) then
            TERM3 = 0.0
         elseif (mag .le. 5.5) then
            TERM3 = C9(1)*(mag-4.5)
         else
            TERM3 = C9(1)
         endif
      ENDIF

C.....SET UP HANGING WALL TERMS (Eq 3.7)..............
      if (HWflag .eq. 1) then
         R1 = rupwidth*cos(abs(dip)*3.14159/180.0)
         R2 = 62.0*mag - 350.0
         f1 = h1(1) + h2(1)*(Rx/R1) + h3(1)*(Rx/R1)**2.0
         f2 = h4(1) + h5(1)*((Rx-R1)/(R2-R1)) + h6(1)*((Rx-R1)/(R2-R1))**2.0
         if (Rrup .eq. 0.0) then
            fhwrrup = 1.0
         else
            fhwrrup = ((Rrup-Rbjf)/Rrup)
         endif
         if (Rx .lt. R1) Then
            fhwr = f1*fhwrrup
         else
            fhwr = max(f2,0.0)*fhwrrup
         endif
         if (mag .le. 5.5) then
            fhwm = 0.0
         elseif (mag .le. 6.5) then
            fhwm = (mag-5.5)*(1.0+a2(1)*(mag-6.5))
         else
            fhwm = 1.0 + a2(1)*(mag-6.5)
         endif
         if (depthtop .le. 16.66) then
            fhwz = 1.0 - 0.06*depthtop
         else
            fhwz = 0.0
         endif
         fhwd = (90.0 - dip)/45.0
         TERM4 = c10(1)*fhwr*fhwm*fhwz*fhwd
      else
         term4 = 0.0
      endif

C.....NOW COMPUTE THE SITE CONDITION FACTORS...............
C.....(FOR PGA ROCK, VS=1100, i.e., Vs>k1)
      TERM5_RK = (C11(1) + K2(1)*n)*ALOG( 1100.0/K1(1) )
      if (regionflag .eq. 1) then
         TERM5_RK = TERM5_RK + (C13(1) + K2(1)*n)*ALOG( 1100.0/K1(1) )
      endif
C.....NOW COMPUTE THE SEDIMENT DEPTH DEPENDENCE (Eq 3.17)............
C     For Rock PGA the D25 value should be set at the recommended value of D25=0.398
      D25_RK = 0.398
      if (D25_RK .le. 1.0) then
         if (regionflag .eq. 1) then
c            TERM6 = (C14(1)+c15(1))*(D25-1.0)
            TERM6_RK = (C14(1)+c15(1))*(D25_RK-1.0)
         else
c            TERM6 = C14(1)*(D25-1.0)
            TERM6_RK = C14(1)*(D25_RK-1.0)
         endif
      elseif (D25_RK .GT. 1.0 .AND. D25_RK .LE. 3.0) then
        TERM6_RK = 0.0
      elseif (D25_RK .GT. 3.0) then
         TERM6_RK = c16(1)*k3(1)*exp(-0.75)*(1.0-exp(-0.25*(D25_RK-3.0)))
      endif

C.....Now compute the hypocentral depth term (Eq 3.21).........
      if (depth .le. 7.0) then
         fhypH = 0.0
      elseif (depth .le. 20.0) then
         fhypH = depth - 7.0
      else
         fhypH = 13.0
      endif
      if (mag .le. 5.5) then
          term7 = c17(1)*fhypH
      elseif (mag .le. 6.5) then
          term7 = (c17(1) + (c18(1)-c17(1))*(mag-5.5))*fhypH
      else
          term7 = c18(1)*fhypH
      endif

C.....Compute Rupture Dip term (Eq 3.24)............
      if (mag .le. 4.5) then
          term8 = c19(1)*dip
      elseif (mag .le. 5.5) then
          term8 = c19(1)*(5.5-mag)*dip
      else
          term8 = 0.0
      endif

C.....Compute anelastic attenuation term.....
      if (Rrup .le. 80.0) then
         term9 = 0.0
      else
         if (regionflag .eq. 0) then
            term9 = (c20(1)+Dc20CA(1) ) * (Rrup-80.0)
         elseif (regionflag .eq. 1) then
            term9 = (c20(1)+Dc20JP(1) ) * (Rrup-80.0)
         elseif (regionflag .eq. 2) then
            term9 = (c20(1)+Dc20CH(1) ) * (Rrup-80.0)
         endif
      endif

      PGAROCK = EXP(TERM1+TERM2+TERM3+TERM4+TERM5_RK+TERM6_RK+TERM7+TERM8+TERM9)

C.....For PGA Specific Vs30m Value
      if (vs .le. k1(1) ) then
         term5 = c11(1)*alog(vs/k1(1)) +
     1           k2(1)*(alog(pgarock+c*((vs/k1(1))**n)) -
     2           alog(pgarock+c))
      else
         term5 = (c11(1) + k2(1)*n)*alog(vs/k1(1))
      endif
      if (regionflag .eq. 1) then
         term5 = term5 + (c13(1)+k2(1)*n)*alog(1100./k1(1))
      endif

C.....NOW COMPUTE THE SEDIMENT DEPTH DEPENDENCE (Eq 3.17)............
C     For Rock PGA the D25 value should be set at the recommended value of D25=0.398
      if (D25 .le. 1.0) then
         if (regionflag .eq. 1) then
            TERM6 = (C14(1)+c15(1))*(D25-1.0)
         else
            TERM6 = C14(1)*(D25-1.0)
         endif
      elseif (D25 .GT. 1.0 .AND. D25 .LE. 3.0) then
        TERM6 = 0.0
      elseif (D25 .GT. 3.0) then
         TERM6 = c16(1)*k3(1)*exp(-0.75)*(1.0-exp(-0.25*(D25-3.0)))
      endif

      pgasoil = alog(pgarock) - term5_rk - term6_RK + term5 + term6
      psoil2 = (TERM1+TERM2+TERM3+TERM4+TERM5+TERM6+TERM7+TERM8+TERM9)

cC      write (*,*) pgarock, term1, term2, term3, term4, term5_rk, term6, term7, term8, term9
cC      write (*,*) term5, exp(pgasoil)
cC      write (*,*) exp(pgasoil), exp(psoil2)
c      pause


C.....NOW COMPUTE THE GROUND MOTION VALUES.................
C.....MAGNITUDE DEPENDENCE.................................
      IF (MAG .LE. 4.5) THEN
         TERM1 = C0T + C1T*MAG
      elseif (mag .le. 5.5) then
         TERM1 = C0T + c1T*MAG + c2T*(MAG-4.5)
      elseif (mag .le. 6.5) then
         TERM1 = C0T + C1T*MAG + c2T*(MAG-4.5) + c3T*(mag-5.5)
      ELSE
         TERM1 = C0T + C1T*MAG + c2T*(MAG-4.5) + C3T*(MAG-5.5) + c4T*(mag-6.5)
      ENDIF

C.....Distance dependence......
      R = SQRT( RRUP*RRUP+C7T*C7T )
      TERM2 = (C5T + C6T*MAG)*ALOG(R)

C.....SET UP STYLE OF FAULTING TERMS...........

C     Set mechanism term and corresponding Frv and Fnm values.
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C    -1,-0.5    Normal and NMl/Obl       -150 < Rake < -30.0
C     1, 0.5    Reverse and Rev/Obl        30 < Rake < 150.0
C       0       Strike-Slip                    Otherwise
      IF (Ftype .EQ. 0.0) THEN
         TERM3 = 0.0
      ELSEIF (Ftype .ge. 0.5) THEN
         if (mag .le. 4.5) then
            TERM3 = 0.0
         elseif (mag .le. 5.5) then
            TERM3 = C8T*(mag-4.5)
         else
            TERM3 = C8T
         endif
      ELSEIF (Ftype .le. -0.5) THEN
         if (mag .le. 4.5) then
            TERM3 = 0.0
         elseif (mag .le. 5.5) then
            TERM3 = C9T*(mag-4.5)
         else
            TERM3 = C9T
         endif
      ENDIF

C.....SET UP HANGING WALL TERMS................
      if (HWflag .eq. 1) then
         R1 = rupwidth*cos(abs(dip)*3.14159/180.0)
         R2 = 62.0*mag - 350.0
         f1 = h1T + h2T*(Rx/R1) + h3T*(Rx/R1)**2.0
         f2 = h4T + h5T*((Rx-R1)/(R2-R1)) + h6T*((Rx-R1)/(R2-R1))**2.0
         if (Rrup .eq. 0.0) then
            fhwrrup = 1.0
         else
            fhwrrup = ((Rrup-Rbjf)/Rrup)
         endif
         if (Rx .lt. R1) Then
            fhwr = f1*fhwrrup
         else
            fhwr = max(f2,0.0)*fhwrrup
         endif
         if (mag .le. 5.5) then
            fhwm = 0.0
         elseif (mag .le. 6.5) then
            fhwm = (mag-5.5)*(1.0+a2T*(mag-6.5))
         else
            fhwm = 1.0 + a2T*(mag-6.5)
         endif
         if (depthtop .le. 16.66) then
            fhwz = 1.0 - 0.06*depthtop
         else
            fhwz = 0.0
         endif
         fhwd = (90.0 - dip)/45.0
         TERM4 = c10T*fhwr*fhwm*fhwz*fhwd
      else
         term4 = 0.0
      endif

C.....NOW COMPUTE THE SITE CONDITION FACTORS...............
      IF (VS .LE. K1T ) THEN
         TERM5 = C11T*ALOG( VS/K1T ) +
     1           K2T*( ALOG( PGAROCK+c*( (VS/K1T)**N) ) -
     2           ALOG( PGAROCK+c ) )
      ELSE
         TERM5 = ( C11T+K2T*n )*ALOG( VS/K1T )
      ENDIF
c     Add Japan Site Term Effects
      if (regionflag .eq. 1) then
         IF (VS .LE. 200.0 ) THEN
            TERM5 = term5 + (C12T+k2T*n)*(alog(Vs/k1T)-alog(200/k1T))
         ELSE
            TERM5 = term5 + ( C13T+K2T*n )*ALOG( VS/K1T )
         ENDIF
      endif

C.....NOW COMPUTE THE SEDIMENT DEPTH DEPENDENCE.............
      IF (D25 .LE. 1.0) THEN
         if (regionflag .eq. 1) then
            TERM6 = (C14T+c15T)*(D25-1.0)
          else
            TERM6 = C14T*(D25-1.0)
          endif
      ELSEIF (D25 .GT. 1.0 .AND. D25 .LE. 3.0) THEN
         TERM6 = 0.0
      ELSEIF (D25 .GT. 3.0)  THEN
         TERM6 = c16T*k3T*exp(-0.75)*( 1.0 - exp(-0.25*(D25-3.0)))
      ENDIF

C.....Now compute the hypocentral depth term..........
      if (depth .le. 7.0) then
         fhypH = 0.0
      elseif (depth .le. 20.0) then
         fhypH = depth - 7.0
      else
         fhypH = 13.0
      endif
      if (mag .le. 5.5) then
          term7 = c17T*fhypH
      elseif (mag .le. 6.5) then
          term7 = (c17T + (c18T-c17T)*(mag-5.5))*fhypH
      else
          term7 = c18T*fhypH
      endif

C.....Compute Rupture Dip term.............
      if (mag .le. 4.5) then
          term8 = c19T*dip
      elseif (mag .le. 5.5) then
          term8 = c19T*(5.5-mag)*dip
      else
          term8 = 0.0
      endif

C.....Compute anelastic attenuation term.....
      if (Rrup .le. 80.0) then
         term9 = 0.0
      else
         if (regionflag .eq. 0) then
            term9 = (c20T+Dc20CAT)*(Rrup-80.0)
         elseif (regionflag .eq. 1) then
             term9 = (c20T+Dc20JPT)*(Rrup-80.0)
         elseif (regionflag .eq. 2) then
             term9 = (c20T+Dc20CHT)*(Rrup-80.0)
         endif
      endif

      LnY = (TERM1+TERM2+TERM3+TERM4+TERM5+TERM6+TERM7+TERM8+TERM9)

cC      write (*,*) term1, term2, term3, term4, term5, term6, term7, term8, term9
cC      write (*,*) exp(lnY)
cC      write (*,*) term5, exp(pgasoil)
cC      write (*,*) exp(pgasoil), exp(psoil2)
c      pause

C    Check that SA is not less than PGA for T<0.25sec
      if (specT .lt. 0.25) then
         if (lnY .lt. pgasoil ) then
            lnY = pgasoil
         endif
      endif

C.....Now compute the sigma value..........
c      IF (Vs .LT. k1T) THEN
c        alpha = k2T*pgarock*(1/(pgarock
c     &    +c*(Vs/k1T)**n)
c     &    -1/(pgarock + c))
c      ELSE

C  Set alhpa = 0.0 for current vertical model (8/22/13)
        alpha = 0.0

c      ENDIF

      If (Mag.le.4.5) then
	   tau_lnyB = t1T
	   tau_lnPGAB = t1(1)
	elseif (Mag.lt.5.5) then
	   tau_lnyB = t2T +
     &          (t1T - t2T)*(5.5-mag)
	   tau_lnPGAB = t2(1) +
     &          (t1(1) - t2(1))*(5.5-Mag)
	else
	   tau_lnyB = t2T
	   tau_lnPGAB = t2(1)
	endif

      tau = SQRT(tau_lnyB**2 +
     &           (alpha * tau_lnPGAB)**2 +
     &           2.0*alpha*rhoT*tau_lnyB*tau_lnPGAB)

      If (Mag.le.4.5) then
	   phi_lny = phi1T
           phi_lnPGAB = phi1(1)
      elseif (Mag.lt.5.5) then
	   phi_lny = phi2T +
     &          (phi1T - phi2T)*(5.5-mag)
	   phi_lnPGAB = phi2(1) +
     &          (phi1(1) - phi2(1))*(5.5-mag)
      else
	   phi_lny = phi2T
	   phi_lnPGAB = phi2(1)
      endif

      phi_lnyB = SQRT(phi_lny**2 - flnAFT**2)

      phi_lnPGAB = SQRT(phi_lnPGAB**2 - flnAF(1)**2)

      phi = SQRT(phi_lny**2 +
     &           (alpha*phi_lnPGAB)**2 +
     &           2.0*alpha*rhoT*phi_lnyB*phi_lnPGAB)

      Sigmatot = SQRT(phi**2 + Tau**2)

      period2 = period1

C     Convert ground motion to units of gals.
      lnY = lnY + 6.89
      sigma = sigmaTot

      return
      END





c ---------------------------------------------------------------------
C ** Chiou and Youngs (NGA West2-2013 Model) Vertical **
C      Same function form as horizontal except for linear site response term.
C          For vertical: amp = phi1/(1+(Vs/phi1a)^phi1b)
c
C      Current version is not coded for different regions.
C        Regional attenuation included based on Regionflag
C             0 = Global
C             1 = Japan/Italy
C             2 = Wenchuan (note only applicable for M7.9 event)
C         Sigma dependent on estimated or measured Vs30m based on
C             Vs30_Class
C             0 = Estimated Vs30m
C             1 = Measured Vs30m
c ---------------------------------------------------------------------

      Subroutine CY_NGAWest2_2013_V ( m, Rrup, Rbjf, specT,
     1                     period2, lnY, sigma, iflag,
     2                     vs, Delta, DTor, Ftype, depthvs10, vs30_class,
     3                     hwflag, Rx, regionflag, phi, tau )

C     Last Updated: 9/26/13

      parameter (MAXPER=25)
      REAL Period(MAXPER), C1(MAXPER), C1a(MAXPER), C1b(MAXPER)
      REAL cn(MAXPER), cm(MAXPER), c5(MAXPER), c6(MAXPER)
      REAL c7(MAXPER), c9(MAXPER), gamma1(MAXPER), gamma2(MAXPER)
      REAL phi1(MAXPER), phi2(MAXPER), phi3(MAXPER), phi4(MAXPER)
      REAL phi5(MAXPER), phi6(MAXPER)
      REAL tau1(MAXPER), tau2(MAXPER), sigma1(MAXPER), sigma2(MAXPER)
      REAL sigma3(MAXPER), c9a(MAXPER)
      REAL c3(MAXPER), gm(MAXPER), c9b(MAXPER)
      Real CHM(MAXPER), C1c(MAXPER), C1d(MAXPER), C7b(MAXPER), C8b(MAXPER)
      real C11(MAXPER), C11B(MAXPER)
      real gscaleJapIt(MAXPER), gscaleWen(MAXPER), sigma2Jap(MAXPER)
      real phi1a(MAXPER), phi1b(MAXPER)
      real phi1JP(MAXPER), phi1aJP(MAXPER), phi1bJP(MAXPER), phi5JP(MAXPER), phi6JP(MAXPER)
      real phi1TW(MAXPER)

      REAL c1T, c1aT, c1bT, cnT, cmT, c5T, c6T, c7T, c9T, c9aT, c3T
      REAL gamma1T, gamma2T, phi1T, phi2T, phi3T, phi4T, sigma3T
      REAL phi5T, phi6T, tau1T, tau2T, sigma1T, sigma2T
      real C1cT, C1dT, C7bT, C11T, C11bT, CHMT
      REAL c2, c4, c4a, cRB, pi, d2r, gamma, gmT, c9bT
      real cc, cosdelta, r1, r2, r3, r4, hw, psa_ref, psa, a, b, c
      integer iflag, count1, count2, hwflag, vs30_class, regionflag
      REAL M, RRUP, RBJF, DTOR, Delta, specT, sigma, Ftype, Rx
      REAL period2, lnY, F_RV, F_NM, depthvs10, sigma_M, tau, NL, rkdepth
      real c8, c8a, c8bT, deltaZ1, fd, cDPP
      real NL0, sigma_NL0, F_Measured, F_Inferred, mz_TOR, deltaZ_TOR, coshM
      real gscaleJapItT, gscaleWenT, sigma2JapT
      real phi1aT, phi1bT
      real phi1JPT, phi1aJPT, phi1bJPT, phi5JPT, phi6JPT, phi1TWT


      data period     /
     1              0.0000, 0.0100, 0.0200, 0.0300, 0.0400, 0.0500,
     1              0.0750, 0.1000, 0.1200, 0.1500, 0.1700,
     1              0.2000, 0.2500, 0.3000, 0.4000, 0.5000,
     1              0.7500, 1.0000, 1.5000, 2.0000, 3.0000,
     1              4.0000, 5.0000, 7.5000,10.0000/
      data c1      /
     1              -2.2621, -2.2621, -2.2629, -2.1389, -1.9451, -1.7424,
     1              -1.3529, -1.2191, -1.2007, -1.2392, -1.2856,
     1              -1.3599, -1.4633, -1.5533, -1.7318, -1.9025,
     1              -2.2740, -2.5805, -3.0470, -3.3941, -3.8807,
     1              -4.2259, -4.4937, -4.9802, -5.3254/
      data c1a     /
     1               0.1650,  0.1650,  0.1650,  0.1650,  0.1650,  0.1650,
     1               0.1650,  0.1650,  0.1650,  0.1650,  0.1650,
     1               0.1650,  0.1650,  0.1650,  0.1650,  0.1650,
     1               0.1650,  0.1650,  0.1650,  0.1645,  0.1168,
     1               0.0732,  0.0484,  0.0220,  0.0124/
      data c1b     /
     1              -0.2550, -0.2550, -0.2550, -0.2550, -0.2550, -0.2550,
     1              -0.2540, -0.2530, -0.2520, -0.2500, -0.2480,
     1              -0.2449, -0.2382, -0.2313, -0.2146, -0.1972,
     1              -0.1620, -0.1400, -0.1184, -0.1100, -0.1040,
     1              -0.1020, -0.1010, -0.1010, -0.1000/
      data c1c     /
     1              -0.1650, -0.1650, -0.1650, -0.1650, -0.1650, -0.1650,
     1              -0.1650, -0.1650, -0.1650, -0.1650, -0.1650,
     1              -0.1650, -0.1650, -0.1650, -0.1650, -0.1650,
     1              -0.1650, -0.1650, -0.1650, -0.1645, -0.1168,
     1              -0.0732, -0.0484, -0.0220, -0.0124/
      data c1d     /
     1               0.2550,  0.2550,  0.2550,  0.2550,  0.2550,  0.2550,
     1               0.2540,  0.2530,  0.2520,  0.2500,  0.2480,
     1               0.2449,  0.2382,  0.2313,  0.2146,  0.1972,
     1               0.1620,  0.1400,  0.1184,  0.1100,  0.1040,
     1               0.1020,  0.1010,  0.1010,  0.1000/
      data cn      /
     1             16.0875, 16.0875, 15.7118, 15.8819, 16.4556, 17.6453,
     1             20.1772, 19.9992, 18.7106, 16.6246, 15.3709,
     1             13.7012, 11.2667,  9.1908,  6.5459,  5.2305,
     1              3.7896,  3.3024,  2.8498,  2.5417,  2.1488,
     1              1.8957,  1.7228,  1.5737,  1.5265/
      data cM      /
     1             4.9993,  4.9993,  4.9993,  4.9993,  4.9993,  4.9993,
     1             5.0031,  5.0172,  5.0315,  5.0547,  5.0704,
     1             5.0939,  5.1315,  5.1670,  5.2317,  5.2893,
     1             5.4109,  5.5106,  5.6705,  5.7981,  5.9983,
     1             6.1552,  6.2856,  6.5428,  6.7415/
      data c3      /
     1               1.8616,  1.8616,  1.8523,  1.8070,  1.7860,  1.7827,
     1               1.8426,  1.9156,  1.9704,  2.0474,  2.0958,
     1               2.1638,  2.2628,  2.3439,  2.4636,  2.5461,
     1               2.6723,  2.7479,  2.8355,  2.8806,  2.9304,
     1               2.9629,  2.9804,  2.9884,  2.9925/
      data c5      /
     1               5.4530,  5.4530,  5.0265,  4.5820,  4.4501,  4.6504,
     1               5.8073,  6.9412,  7.6152,  8.3585,  8.7181,
     1               9.1170,  9.5761,  9.8569, 10.1521, 10.2969,
     1              10.4613, 10.5397, 10.5992, 10.6045, 10.6005,
     1              10.6133, 10.6278, 10.6457, 10.6500/
      data cHM     /
     1             3.0956, 3.0956, 3.0963, 3.0974, 3.0988, 3.1011,
     1             3.1094, 3.2381, 3.3407, 3.4300, 3.4688,
     1             3.5146, 3.5746, 3.6232, 3.6945, 3.7401,
     1             3.7941, 3.8144, 3.8284, 3.8330, 3.8361,
     1             3.8369, 3.8376, 3.8380, 3.8380/
      data c6      /
     1               0.5080,  0.5080,  0.5080,  0.5080,  0.5080,  0.5080,
     1               0.5080,  0.5080,  0.5080,  0.5080,  0.5080,
     1               0.5080,  0.5068,  0.5050,  0.5007,  0.4961,
     1               0.4846,  0.4704,  0.4401,  0.4264,  0.4183,
     1               0.4170,  0.4170,  0.4170,  0.4170/
      data c7      /
     1               0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
     1               0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
     1               0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
     1               0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
     1               0.0000,  0.0000,  0.0000,  0.0000/
      data c7b     /
     1               0.0855,  0.0855,  0.0871,  0.0957,  0.1032,  0.1066,
     1               0.0952,  0.0829,  0.0750,  0.0654,  0.0601,
     1               0.0531,  0.0430,  0.0340,  0.0183,  0.0056,
     1              -0.0158, -0.0280, -0.0422, -0.0511, -0.0573,
     1              -0.0580, -0.0578, -0.0574, -0.0572/
      data c8b     /
     1             0.4833,  0.4833,  1.2144,  1.6421,  1.9456,  2.1810,
     1             2.6087,  2.9122,  3.1045,  3.3399,  3.4719,
     1             3.6434,  3.8787,  4.0711,  4.3745,  4.6099,
     1             5.0376,  5.3411,  5.7688,  6.0723,  6.5000,
     1             6.8035,  7.0389,  7.4666,  7.7700/
      data c9      /
     1             0.9228,  0.9228,  0.9296,  0.9396,  0.9661,  0.9794,
     1             1.0260,  1.0177,  1.0008,  0.9801,  0.9652,
     1             0.9459,  0.9196,  0.8829,  0.8302,  0.7884,
     1             0.6754,  0.6196,  0.5101,  0.3917,  0.1244,
     1             0.0086,  0.0000,  0.0000,  0.0000/
      data c9a     /
     1             0.1202,  0.1202,  0.1217,  0.1194,  0.1166,  0.1176,
     1             0.1171,  0.1146,  0.1128,  0.1106,  0.1150,
     1             0.1208,  0.1208,  0.1175,  0.1060,  0.1061,
     1             0.1000,  0.1000,  0.1000,  0.1000,  0.1000,
     1             0.1000,  0.1000,  0.1000,  0.1000/
      data c9b     /
     1             6.8607,  6.8607,  6.8697,  6.9113,  7.0271,  7.0959,
     1             7.3298,  7.2588,  7.2372,  7.2109,  7.2491,
     1             7.2988,  7.3691,  6.8789,  6.5334,  6.5260,
     1             6.5000,  6.5000,  6.5000,  6.5000,  6.5000,
     1             6.5000,  6.5000,  6.5000,  6.5000/
      data c11     /
     1                0.0,     0.0,     0.0,     0.0,     0.0,     0.0,
     1                0.0,     0.0,     0.0,     0.0,     0.0,
     1                0.0,     0.0,     0.0,     0.0,     0.0,
     1                0.0,     0.0,     0.0,     0.0,     0.0,
     1                0.0,     0.0,     0.0,     0.0/
      data c11b    /
     1             -0.4536, -0.4536, -0.4536, -0.4536, -0.4536, -0.4536,
     1             -0.4536, -0.4536, -0.4536, -0.4536, -0.4536,
     1             -0.4440, -0.3539, -0.2688, -0.1793, -0.1428,
     1             -0.1138, -0.1062, -0.1020, -0.1009, -0.1003,
     1             -0.1001, -0.1001, -0.1000, -0.1000/
      data gamma1 /
     1            -0.008417, -0.008417, -0.008481, -0.008932, -0.009703, -0.010482,
     1            -0.011693, -0.012062, -0.011818, -0.011159, -0.010722,
     1            -0.010167, -0.009458, -0.008921, -0.008054, -0.007270,
     1            -0.005543, -0.004344, -0.002889, -0.002093, -0.001527,
     1            -0.001335, -0.001222, -0.001049, -0.000965/
      data gamma2 /
     1            -0.004814, -0.004814, -0.004885, -0.005076, -0.004914, -0.004666,
     1            -0.003703, -0.002599, -0.002106, -0.001746, -0.001606,
     1            -0.001439, -0.001180, -0.000906, -0.000467, -0.000349,
     1            -0.000887, -0.001487, -0.002241, -0.002569, -0.002509,
     1            -0.002381, -0.002351, -0.002435, -0.002529/
      data gm /
     1             4.2542,  4.2542,  4.2386,  4.2519,  4.2960,  4.3578,
     1             4.5455,  4.7603,  4.8963,  5.0644,  5.1371,
     1             5.1880,  5.2164,  5.1954,  5.0899,  4.7854,
     1             4.3304,  4.1667,  4.0029,  3.8949,  3.7928,
     1             3.7443,  3.7090,  3.6632,  3.6230/
      data gscaleJapIt     /
     1             1.281752,  1.281752,  1.276927,  1.276432,  1.276923,  1.265210,
     1             1.217216,  1.169973,  1.161510,  1.171001,  1.178526,
     1             1.184540,  1.186356,  1.184606,  1.185796,  1.215778,
     1             1.301371,  1.416221,  1.786270,  2.049840,  2.154466,
     1             2.150556,  2.151376,  2.161172,  2.162603/
      data gscaleWen     /
     1             0.677079,  0.677079,  0.673024,  0.671230,  0.670425,  0.670146,
     1             0.669435,  0.664965,  0.658557,  0.646074,  0.637167,
     1             0.623973,  0.603607,  0.584897,  0.549356,  0.515582,
     1             0.442912,  0.388603,  0.331534,  0.000000,  0.000000,
     1             0.000000,  0.000000,  0.000000,  0.000000/
      data phi1    /
     1               0.8700,  0.8700,  0.8700,  0.8700,  0.8700,  0.8700,
     1               0.8700,  0.8700,  0.8700,  0.8700,  0.8700,
     1               0.8700,  0.8652,  0.8434,  0.7698,  0.7263,
     1               0.7360,  0.7960,  0.9023,  1.0001,  1.1271,
     1               1.0779,  0.8618,  0.5114,  0.4530/
      data phi1a   /
     1             660.6864,660.6864,660.5587,660.3290,659.9916,659.5425,
     1             657.9160,655.5663,653.1736,648.7759,645.3512,
     1             639.5540,628.4873,616.2557,590.7750,566.8623,
     1             522.1539,496.2030,472.2639,462.7207,455.6782,
     1             453.2343,452.1290,451.0754,450.7240/
      data phi1b   /
     1               3.0000,  3.0000,  3.0000,  3.0000,  3.0000,  3.0000,
     1               3.0050,  3.3600,  4.0620,  4.9290,  5.2620,
     1               5.5530,  5.8540,  6.0610,  6.2920,  6.3790,
     1               6.3600,  6.2200,  5.7160,  4.9520,  3.3470,
     1               3.0000,  2.9800,  3.0000,  3.0000/
      data phi2    /
     1             0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
     1             0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
     1             0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
     1             0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
     1             0.0000,  0.0000,  0.0000,  0.0000/
      data phi3    /
     1             -0.007010,-0.007010,-0.007279,-0.007354,-0.006977,-0.006467,
     1             -0.005734,-0.005604,-0.005696,-0.005845,-0.005959,
     1             -0.006141,-0.006439,-0.006704,-0.007125,-0.007435,
     1             -0.008120,-0.008444,-0.007707,-0.004792,-0.001828,
     1             -0.001523,-0.001440,-0.001369,-0.001361/
      data phi4    /
     1              0.102151, 0.102151, 0.108360, 0.119888, 0.133641, 0.148927,
     1              0.190596, 0.230662, 0.253169, 0.266468, 0.265060,
     1              0.255253, 0.231541, 0.207277, 0.165464, 0.133828,
     1              0.085153, 0.058595, 0.031787, 0.019716, 0.009643,
     1              0.005379, 0.003223, 0.001134, 0.000515/
      data phi5    /
     1               0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
     1               0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
     1               0.0000,  0.0000,  0.0000,  0.0000,  0.0000,
     1               0.0460,  0.1100,  0.1990,  0.2600,  0.3120,
     1               0.3020,  0.2540,  0.1540,  0.0860/
      data phi6    /
     1              300.00, 300.00, 300.00, 300.00, 300.00, 300.00,
     1              300.00, 300.00, 300.00, 300.00, 300.00,
     1              300.00, 300.00, 300.00, 300.00, 300.00,
     1              300.00, 300.00, 300.00, 300.00, 300.00,
     1              300.00, 300.00, 300.00, 300.00/
      data phi1Jp  /
     1               0.7780,  0.7780,  0.7598,  0.7062,  0.6572,  0.6389,
     1               0.7371,  0.8740,  0.9769,  1.1222,  1.2109,
     1               1.3421,  1.5379,  1.6771,  1.7600,  1.7310,
     1               1.4999,  1.2900,  1.0539,  0.9199,  0.7245,
     1               0.5703,  0.4228,  0.1259,  0.0448/
      data phi1aJp /
     1             460.5000,460.5000,461.9000,461.3288,460.4794,459.9103,
     1             460.5506,461.7000,459.8409,451.6690,443.1147,
     1             427.7425,399.7592,373.9212,340.0498,336.1073,
     1             391.7776,435.5000,454.1437,455.7000,454.4288,
     1             453.4794,453.4000,454.3506,454.6000/
      data phi1bJp /
     1               3.0000,  3.0000,  3.0000,  3.0000,  3.0000,  3.0000,
     1               2.9950,  2.9400,  2.8420,  2.6520,  2.4780,
     1               2.1550,  1.6980,  1.4360,  1.2060,  1.1400,
     1               1.3700,  1.6000,  2.0880,  2.4220,  2.8240,
     1               2.9900,  3.0000,  3.0000,  3.0000/
      data phi5Jp  /
     1               0.4770,  0.4770,  0.4730,  0.4680,  0.4620,  0.4580,
     1               0.4510,  0.4480,  0.4470,  0.4450,  0.4450,
     1               0.4440,  0.4450,  0.4470,  0.4560,  0.4700,
     1               0.5210,  0.5910,  0.7570,  0.9240,  1.1570,
     1               1.2600,  1.2400,  0.8540,  0.4160/
      data phi6Jp  /
     1              800.0000,800.0000,800.0000,800.0000,800.0000,800.0000,
     1              800.0000,800.0000,800.0000,800.0000,800.0000,
     1              800.0000,800.0000,800.0000,800.0000,800.0000,
     1              800.0000,800.0000,800.0000,800.0000,800.0000,
     1              800.0000,800.0000,800.0000,800.0000/
      data phi1Tw  /
     1               0.2000,  0.2000,  0.2000,  0.2000,  0.2000,  0.2000,
     1               0.2000,  0.2000,  0.2000,  0.2000,  0.2000,
     1               0.2000,  0.2000,  0.2000,  0.2000,  0.2000,
     1               0.2000,  0.2000,  0.2140,  0.3285,  0.6632,
     1               0.8428,  0.7903,  0.4874,  0.2660/
      data tau1    /
     1               0.4200,  0.4200,  0.4230,  0.4271,  0.4309,  0.4341,
     1               0.4404,  0.4450,  0.4479,  0.4514,  0.4533,
     1               0.4558,  0.4590,  0.4615,  0.4652,  0.4679,
     1               0.4724,  0.4753,  0.4788,  0.4811,  0.4838,
     1               0.4856,  0.4868,  0.4887,  0.4899/
      data tau2    /
     1               0.3300,  0.3300,  0.3289,  0.3273,  0.3259,  0.3247,
     1               0.3223,  0.3206,  0.3195,  0.3182,  0.3175,
     1               0.3166,  0.3154,  0.3144,  0.3130,  0.3120,
     1               0.3103,  0.3093,  0.3079,  0.3071,  0.3061,
     1               0.3054,  0.3050,  0.3042,  0.3038/
      data sigma1  /
     1               0.4912,  0.4912,  0.4904,  0.4988,  0.5049,  0.5096,
     1               0.5179,  0.5236,  0.5221,  0.5202,  0.5191,
     1               0.5177,  0.5159,  0.5143,  0.5119,  0.5100,
     1               0.4973,  0.4882,  0.4755,  0.4681,  0.4617,
     1               0.4571,  0.4535,  0.4471,  0.4426/
      data sigma2  /
     1               0.3762,  0.3762,  0.3762,  0.3849,  0.3910,  0.3957,
     1               0.4043,  0.4104,  0.4109,  0.4116,  0.4119,
     1               0.4124,  0.4130,  0.4135,  0.4144,  0.4150,
     1               0.4256,  0.4331,  0.4436,  0.4511,  0.4617,
     1               0.4571,  0.4535,  0.4471,  0.4426/
      data sigma3  /
     1               0.8000,  0.8000,  0.8000,  0.8000,  0.8000,  0.8000,
     1               0.8000,  0.8000,  0.8000,  0.8000,  0.8000,
     1               0.8000,  0.7999,  0.7997,  0.7988,  0.7966,
     1               0.7792,  0.7504,  0.7136,  0.7035,  0.7006,
     1               0.7001,  0.7000,  0.7000,  0.7000/


C Find the requested spectral period and corresponding coefficients
      nPer = 25
C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
         period1  = period(1)
         c1T      = c1(1)
         c1aT     = c1a(1)
         c1bT     = c1b(1)
         c1cT     = c1c(1)
         c1dT     = c1d(1)
         c3T      = c3(1)
         cHMT     = CHM(1)
         cnT      = cn(1)
         cmT      = cm(1)
         c5T      = c5(1)
         c6T      = c6(1)
         c7T      = c7(1)
         c7bT      = c7b(1)
         c8bT      = c8b(1)
         c9T      = c9(1)
         c9aT      = c9a(1)
         c9bT      = c9b(1)
         c11T      = c11(1)
         c11bT      = c11b(1)
         gamma1T  = gamma1(1)
         gamma2T  = gamma2(1)
         gmT      = gm(1)
         phi1T    = phi1(1)
         phi2T    = phi2(1)
         phi3T    = phi3(1)
         phi4T    = phi4(1)
         phi5T    = phi5(1)
         phi6T    = phi6(1)
         tau1T    = tau1(1)
         tau2T    = tau2(1)
         sigma1T = sigma1(1)
         sigma2T = sigma2(1)
         sigma2JapT = sigma2Jap(1)
         sigma3T = sigma3(1)
         gscaleJapItT = gscaleJapIt(1)
         gscaleWenT = gscaleWen(1)

         phi1aT = phi1a(1)
         phi1bT = phi1b(1)
         phi1JPT = phi1JP(1)
         phi1aJPT = phi1aJP(1)
         phi1bJPT = phi1bJP(1)
         phi5JPT = phi5JP(1)
         phi6JPT = phi6JP(1)
         phi1TWT = phi1TW(1)

         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Chiou and Youngs (NGA West2-2013) Vertical'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),c1(count1),c1(count2),
     +                   specT,c1T,iflag)
            call interp (period(count1),period(count2),c1a(count1),c1a(count2),
     +                   specT,c1aT,iflag)
            call interp (period(count1),period(count2),c1b(count1),c1b(count2),
     +                   specT,c1bT,iflag)
            call interp (period(count1),period(count2),c1c(count1),c1c(count2),
     +                   specT,c1cT,iflag)
            call interp (period(count1),period(count2),c1d(count1),c1d(count2),
     +                   specT,c1dT,iflag)
            call interp (period(count1),period(count2),cn(count1),cn(count2),
     +                   specT,cnT,iflag)
            call interp (period(count1),period(count2),cm(count1),cm(count2),
     +                   specT,cmT,iflag)
            call interp (period(count1),period(count2),cHM(count1),cHM(count2),
     +                   specT,cHMT,iflag)
            call interp (period(count1),period(count2),c3(count1),c3(count2),
     +                   specT,c3T,iflag)
            call interp (period(count1),period(count2),c5(count1),c5(count2),
     +                   specT,c5T,iflag)
            call interp (period(count1),period(count2),c6(count1),c6(count2),
     +                   specT,c6T,iflag)
            call interp (period(count1),period(count2),c7(count1),c7(count2),
     +                   specT,c7T,iflag)
            call interp (period(count1),period(count2),c7b(count1),c7b(count2),
     +                   specT,c7bT,iflag)
            call interp (period(count1),period(count2),c8b(count1),c8b(count2),
     +                   specT,c8bT,iflag)
            call interp (period(count1),period(count2),c9(count1),c9(count2),
     +                   specT,c9T,iflag)
            call interp (period(count1),period(count2),c9a(count1),c9a(count2),
     +                   specT,c9aT,iflag)
            call interp (period(count1),period(count2),c9b(count1),c9b(count2),
     +                   specT,c9bT,iflag)
            call interp (period(count1),period(count2),c11(count1),c11(count2),
     +                   specT,c11T,iflag)
            call interp (period(count1),period(count2),c11b(count1),c11b(count2),
     +                   specT,c11bT,iflag)
            call interp (period(count1),period(count2),gamma1(count1),gamma1(count2),
     +                   specT,gamma1T,iflag)
            call interp (period(count1),period(count2),gamma2(count1),gamma2(count2),
     +                   specT,gamma2T,iflag)
            call interp (period(count1),period(count2),gm(count1),gm(count2),
     +                   specT,gmT,iflag)
            call interp (period(count1),period(count2),phi1(count1),phi1(count2),
     +                   specT,phi1T,iflag)
            call interp (period(count1),period(count2),phi2(count1),phi2(count2),
     +                   specT,phi2T,iflag)
            call interp (period(count1),period(count2),phi3(count1),phi3(count2),
     +                   specT,phi3T,iflag)
            call interp (period(count1),period(count2),phi4(count1),phi4(count2),
     +                   specT,phi4T,iflag)
            call interp (period(count1),period(count2),phi5(count1),phi5(count2),
     +                   specT,phi5T,iflag)
            call interp (period(count1),period(count2),phi6(count1),phi6(count2),
     +                   specT,phi6T,iflag)
            call interp (period(count1),period(count2),tau1(count1),tau1(count2),
     +                   specT,tau1T,iflag)
            call interp (period(count1),period(count2),tau2(count1),tau2(count2),
     +                   specT,tau2T,iflag)
            call interp (period(count1),period(count2),sigma1(count1),sigma1(count2),
     +                   specT,sigma1T,iflag)
            call interp (period(count1),period(count2),sigma2(count1),sigma2(count2),
     +                   specT,sigma2T,iflag)
            call interp (period(count1),period(count2),sigma2Jap(count1),sigma2Jap(count2),
     +                   specT,sigma2JapT,iflag)
            call interp (period(count1),period(count2),sigma3(count1),sigma3(count2),
     +                   specT,sigma3T,iflag)
            call interp (period(count1),period(count2),gscaleJapIt(count1),gscaleJapIt(count2),
     +                   specT,gscaleJapItT,iflag)
            call interp (period(count1),period(count2),gscaleWen(count1),gscaleWen(count2),
     +                   specT,gscaleWenT,iflag)

            call interp (period(count1),period(count2),phi1a(count1),phi1a(count2),
     +                   specT,phi1aT,iflag)
            call interp (period(count1),period(count2),phi1b(count1),phi1b(count2),
     +                   specT,phi1bT,iflag)
            call interp (period(count1),period(count2),phi1JP(count1),phi1JP(count2),
     +                   specT,phi1JPT,iflag)
            call interp (period(count1),period(count2),phi1aJP(count1),phi1aJP(count2),
     +                   specT,phi1aJPT,iflag)
            call interp (period(count1),period(count2),phi1bJP(count1),phi1bJP(count2),
     +                   specT,phi1bJPT,iflag)
            call interp (period(count1),period(count2),phi5JP(count1),phi5JP(count2),
     +                   specT,phi5JPT,iflag)
            call interp (period(count1),period(count2),phi6JP(count1),phi6JP(count2),
     +                   specT,phi6JPT,iflag)
            call interp (period(count1),period(count2),phi1TW(count1),phi1TW(count2),
     +                   specT,phi1TWT,iflag)

 1011 period1 = specT

c     Set the fault mechanism term.
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C      -1       Normal                   -120 < Rake < -60.0
C     1, 0.5    Reverse and Rev/Obl        30 < Rake < 150.0
C     0,-0.5    Strike-Slip and NMl/Obl        Otherwise
         if (ftype .eq. -1) then
            F_RV = 0.0
            F_NM = 1.0
         elseif (ftype .ge. 0.5) then
            F_RV = 1.0
            F_NM = 0.0
         else
            F_RV = 0.0
            F_NM = 0.0
         endif

C HW factors......
c     For now, convert hwflag to an equivalent srcSiteA
c      if ( hwflag .eq. 1 ) then
c        srcSiteA = 90.
c      else
c        srcSiteA = 0.
c      endif
C No longer needed since Rx is computed and passed.
C     Compute Rx value given source to site azimuth
c      if (srcsiteA .eq. 90.0) then
c         Rx = Rrup/sin(abs(delta)*3.14159/180.0) - DTor/tan(abs(delta)*3.14159/180.0)
c      elseif (srcsiteA .gt. 0.0) then
c         Rx = Rbjf*tan(srcSiteA*3.14159/180.0)
c      elseif (srcsiteA .le. 0.0) then
c         Rx = 0.0
c      endif

C     Constant terms
        c2 = 1.06
        c4 = -2.1
        c4a = -0.5
        cRB = 50.0
        c8 = 0.2154
        c8a = 0.0

        pi = atan(1.0)*4.0
        d2r = pi/180.0

        cc = c5T* cosh(c6T * max((M-cHMT),0.0))
        gamma = gamma1T + gamma2T/cosh(max((M-gmT),0.0))
C     Apply Regional scaling factor.
C     Regionflag = 0 Global
C     Regionflag = 1 Japan and Italy
C        Also set sigma2 equal to Japan specific value
C     Regionflag = 2 Wenchuan (note only for M7.9)
        if (regionflag .eq. 1 ) then
           gamma = gamma * gscaleJapItT
           sigma2T = sigma2JapT
        elseif (regionflag .eq. 2) then
           gamma = gamma * gscaleWenT
        endif

        cosDELTA = cos(abs(DELTA)*d2r)

c Magnitude scaling
        r1 = c1T + c2 * (M-6.0) +
     1       (c2-c3T)/cnT *
     1             alog(1.0 + exp(cnT*(cMT-M)))

c Near-field magnitude and distance scaling
        r2 = c4 * alog(Rrup + cc)

c Distance scaling at large distance
        r3 = (c4a-c4)/2.0 *
     1            alog( Rrup*Rrup+cRB*cRB ) +
     1       Rrup * gamma

c Center Z_TOR on the Z_TOR-M relation in Chiou and Youngs (2013)
        if (F_RV.EQ.1) then
          if (M .le. 5.849) then
              mZ_TOR = 2.704*2.704
          else
              mZ_TOR = max(2.704-1.226*(M-5.849), 0.0)
              mZ_TOR = mZ_TOR * mZ_TOR
          endif
        else
          if (M .le. 4.970) then
              mZ_TOR = 2.673*2.673
          else
              mZ_TOR = max(2.673-1.136*(M-4.970), 0.0)
              mZ_TOR = mZ_TOR * mZ_TOR
          endif
        endif
c        if (Z_TOR .EQ. -999) Z_TOR = mZ_TOR
        deltaZ_TOR = Dtor - mZ_TOR

c Scaling with other source variables (F_RV, F_NM, deltaZ_TOR, and Dip)
        coshM = cosh(2*max(M-4.5,0.0))
        cosDELTA = cos(DELTA*d2r)
        r4 = (c1aT+c1cT/coshM) * F_RV +
     1       (c1bT+c1dT/coshM) * F_NM +
     1       (c7T +c7bT/coshM) * deltaZ_TOR +
     1       (c11T+c11bT/coshM)* cosDELTA**2

C New Dip dependence for NGA West2 Model
c        if (m .lt. 6.0) then
c           r4 = r4 + c11T*min(delta-70.0,0.0)
c        endif

c HW effect
        if (HWFlag .eq. 0) then
           hw = 0.0
        else
         hw = c9T * (cosDELTA) * (c9aT+(1-c9aT)
     1        *tanh(Rx/c9bT)) *
     1          (1.0 - sqrt(Rbjf**2+DTor**2)/(Rrup + 1))
        endif

C     Current version of the code sets cDPP=0 (i.e., no directivity)
c Directivity effect
c        cDPP = 0.0
c        fd = c8T * exp(-c8aT * (M-c8bT)**2) *
c     1       max(0.0, 1.0-max(0.0,Rrup-40.0)/30.0) *
c     1       min(max(0.0,M-5.5)/0.8, 1.0) * cDPP
        fd= 0.0
c Predicted median Sa on reference condition (Vs=1130 m/sec)
        psa_ref = r1+r2+r3+r4+hw+fd

c Linear soil amplification
c        a = phi1T * min(alog(Vs/1130.0), 0.0)
C     Vertical Linear Amp Function
         a = phi1T / (1 + (vs/phi1aT)**phi1bT)

c Nonlinear soil amplification
        b = phi2T *
     1      (exp(phi3T*(min(Vs,1130.0)-360.0)) - exp(phi3T*(1130.0-360.0)))
        c = phi4T

C Deviation from ln(Vs30) scaling: bedrock depth (Z1) effect.
        deltaZ1 = depthvs10*1000.0 -
c     1  exp(-7.15/4.0 * log((VS**4.0 + 570.94**4.0)/(1360.0**4.0 + 570.94**4.0)))
     1  exp(-7.15/4.0 * alog((VS**4.0 + 571.0**4.0)/(1360.0**4.0 + 571.0**4.0)))

        rkdepth = phi5T * ( 1.0 - exp(-deltaZ1/phi6T ) )

c Sa on soil condition
c        psa = psa_ref + (a + b * alog((exp(psa_ref)+c)/c)) + rkdepth
        psa = psa_ref + a + rkdepth


C Compute the sigma term

c        NL0 = b * exp(psa_ref)/(exp(psa_ref)+c)

        tau = tau1T +
     1            (tau2T-tau1T)/1.5*(min(max(M,5.0),6.5)-5.0)
C     Current code set for Measured Vs30 values (i.e., Vs30class=1)
      if (vs30_class .eq. 0) then
         F_measured = 0.0
         F_Inferred = 1.0
      elseif (vs30_class .eq. 1) then
         F_measured = 1.0
         F_Inferred = 0.0
      endif

        sigma_NL0 = (sigma1T +
     1              ( (sigma2T-sigma1T)/1.5*(min(max(M,5.0),6.5)-5.0))) *
     1         sqrt(0.7*F_Measured+F_Inferred*sigma3T+1.0)

        sigma = sqrt((tau)**2.0+sigma_NL0**2.0)

      phi = sigma_NL0

C     Convert ground motion to units of gals.
      lnY = psa + 6.89
      period2 = period1

      return
      end

c ------------------------------------------------------------------
C *** Gulerce, Kamai, Abrahamson, and Silva (NGA-West2 2013) Vertical ****
C     Reference:
C     Notes:
C        Applicable Range (see Abstract):
C           3 <= M <= 8.5
C           Rrup <= 300 km
C        Regional attenuation included based on Regionflag
C             0 = Global
C             1 = Taiwan
C             2 = China
C             3 = Japan
C         Mainshock and Aftershocks included based on MSASFlag
C             0 = Mainshocks
C             1 = Aftershocks
C         Sigma dependent on estimated or measured Vs30m based on
C             Vs30_Class
C             0 = Estimated Vs30m
C             1 = Measured Vs30m
c ------------------------------------------------------------------
      subroutine GKAS_NGAWest2_2013_Vert ( mag, dip, fType, fltWidth, rRup, Rjb,
     1                     vs30, hwflag, lnY, sigma, specT, period2, ztor,
     2                     iflag, vs30_class, z10, Rx, Ry0, regionflag, msasflag, phi, tau )

C     Last Updated: 6/03/14

      real mag, dip, fType, rRup, rjb, Rx, Ry0, vs30, SA1180,
     1      Z10,  ZTOR, fltWidth, lnSa, sigma, lnY
      real Fn, Frv, specT, period2, CRjb
      integer hwflag, iflag, vs30_class, regionflag, msasflag

c     Vs30 class is to distinguish between the sigma if the Vs30 is measured
c     vs the VS30 being estimated from surface geology.
c         Vs30_class = 0 for estimated
c         Vs30_class = 1 for measured

C     Current version is not programmed for Aftershock cases.
C       For implementation of Aftershock a new distance metric, CRjb
C       will need to be computed and passed along to this subroutine.

      CRjb = 999.9

c     For now, convert ftype to an equivalent rake
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C      -1       Normal                   -120 < Rake < -60.0
C     1, 0.5    Reverse and Rev/Obl        30 < Rake < 150.0
C     0,-0.5    Strike-Slip and NMl/Obl        Otherwise
C
      if ( fType .eq. 1.0 ) then
        Frv = 1.0
        Fn = 0.0
      elseif ( fType .eq. 0.5 ) then
        Frv = 1.0
        Fn = 0.0
      elseif ( fType .eq. -1.0 ) then
        Frv = 0.0
        Fn = 1.0
      elseif ( fType .eq. -0.5 ) then
        Frv = 0.0
        Fn = 1.0
      else
        Frv = 0.0
        Fn = 0.0
      endif

c     Compute SA1180
      vs30_rock = 1180.
      z10_rock = 0.005
      SA_rock = 0.

      call GKAS2013_v11_model_Vert ( mag, dip, fltWidth, ZTOR, Frv, Fn, rRup, rjb, rx, Ry0,
     1                     vs30_rock, SA_rock, Z10_rock, hwflag, vs30_class,
     2                     specT, lnSa, phi, tau, iflag, regionflag, msasflag, CRjb )
      Sa1180 = exp(lnSa)

c     Compute Sa at spectral period for given Vs30

      call GKAS2013_v11_model_Vert ( mag, dip, fltWidth, ZTOR, Frv, Fn, rRup, rjb, rx, Ry0,
     1                     vs30, SA1180, Z10, hwflag, vs30_class,
     2                     specT, lnSa, phi, tau, iflag, regionflag, msasflag, CRjb )

c     compute Sa (given the PGA rock value)
      sigma = sqrt( phi**2 + tau**2 )

      lnY = lnSa + 6.89

      period2 = specT

      return
      end

c ----------------------------------------------------------------------
      subroutine GKAS2013_v11_model_Vert ( mag, dip, FltWidth, ZTOR, Frv, Fn, rRup, rjb, Rx, Ry0,
     1                     vs30, Sa1180, Z1, hwflag, vs30_class,
     3                     specT, lnSa, phi, tau, iflag, regionflag, msasflag, CRjb)

c      implicit none
      integer MAXPER
      parameter (MAXPER=24)

      real Vlin(MAXPER), b(MAXPER), c4(MAXPER), M1(MAXPER), a1(MAXPER)
      real a2(MAXPER), a3(MAXPER), a6(MAXPER), a8(MAXPER), a10(MAXPER)
      real a11(MAXPER), a12(MAXPER), a13(MAXPER), a14(MAXPER), a15(MAXPER)
      real a17(MAXPER), a43(MAXPER), a44(MAXPER), a45(MAXPER), a46(MAXPER)
      real a25(MAXPER), a28(MAXPER), a29(MAXPER), a31(MAXPER), a36(MAXPER)
      real a37(MAXPER), a38(MAXPER), a39(MAXPER), a40(MAXPER), a41(MAXPER), a42(MAXPER)
      real s1est(MAXPER), s2est(MAXPER), s1msr(MAXPER), s2msr(MAXPER)
      real s3(MAXPER), s4(MAXPER), s5(MAXPER), s6(MAXPER), period(MAXPER)
      real c(MAXPER), a4(MAXPER)
      real a5(MAXPER), a5T, a7
      real VlinT, bT, c4T, M1T, a1T
      real a2T, a3T, a6T, a8T, a10T
      real a11T, a12T, a13T, a14T, a15T
      real a17T, a43T, a44T, a45T, a46T
      real a25T, a28T, a29T, a31T, a36T
      real a37T, a38T, a39T, a40T, a41T, a42T
      real s1estT, s2estT, s1msrT, s2msrT
      real s3T, s4T, s5T, s6T, c4_mag
      real phiA_est, phiA_msr
      real cT, a4T

      real M2, M3
      real lnSa, SA1180, rjb, rRup, Rx, Ry0, dip, mag, vs30
      real HW_taper1, HW_taper2, HW_taper3, HW_taper4, HW_taper5
      real damp_dSA1180, sigAmp, fltWidth, testv1
      real f1, f4, f5, f6, f7, f8, f9, f10, f11, fReg, f12, f13
      real Ry1, ZTOR, Frv, Fn, SpecT
      real phiA, phiB, tauA, tauB, phi, tau
      integer vs30_class, hwflag, iflag, nPer, regionflag, msasflag
      real n, z1, c2, e2, a21, a22, test, zhat
      real R, V1, Vs30Star, hw_a2, h1, h2, h3, R1, R2, CRjb
      integer count1, count2
      real y1, y2, x1, x2, y1z, y2z, x1z, x2z

      Data Period  /  0, -1, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25, 0.3, 0.4, 0.5,
     1                0.75, 1, 1.5, 2, 3, 4, 5, 6, 7.5, 10  /


      Data VLIN  /  660, 330, 660, 680, 770, 800, 800, 800, 740, 590, 495, 430, 360, 340, 330,
     1         330, 330, 330, 330, 330, 330, 330, 330, 330  /
      Data b  / 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  /

      Data c  /  2.4, 2400, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 2.4, 1.8, 1.8, 1.8, 1.8,
     1         1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8, 1.8  /
      Data c4  / 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8  /

      Data a1  /  1.8892, 5.0635, 1.8892, 2.1323, 2.4756, 2.9551, 2.9285, 2.7345, 2.4477, 2.221, 2.0704,
     1        1.9744, 1.8231, 1.7434, 1.6445, 1.5417, 1.1339, 0.9542, 0.6368, 0.3567, 0.1143, -0.1242,
     1       -0.5314, -1.2361  /
      Data a2  /  -1.322, -0.85, -1.322, -1.37, -1.418, -1.43, -1.355, -1.3, -1.24, -1.205, -1.175,
     1       -1.16, -1.13, -1.13, -1.13, -1.13, -1.085, -1.053, -1.008, -0.977, -0.952, -0.932,
     1       -0.9075, -0.875  /
      Data a3  /  0.385, 0.3524, 0.385, 0.385, 0.385, 0.385, 0.385, 0.385, 0.35, 0.326, 0.307,
     1        0.291, 0.267, 0.248, 0.213, 0.188, 0.154, 0.129, 0.095, 0.07, 0.07, 0.07, 0.07, 0.07  /
      Data a4  /  -0.106, -0.27, -0.106, -0.106, -0.106, -0.106, -0.106, -0.106, -0.106, -0.106,
     1       -0.106, -0.106, -0.106, -0.106, -0.106, -0.106, -0.106, -0.106, -0.106, -0.106, -0.106,
     1       -0.106, -0.106, -0.106 /
      Data a5  /  -0.801, -0.4414, -0.801, -0.801, -0.801, -0.801, -0.801, -0.801, -0.801,
     1       -0.801, -0.801, -0.801, -0.801, -0.801, -0.801, -0.801, -0.801, -0.801, -0.801,
     1       -0.801, -0.801, -0.801, -0.801, -0.801 /
      Data a6  /  1.75, 2.6, 1.75, 1.75, 1.75, 1.75, 1.75, 1.75, 1.937, 2.069, 2.172, 2.256, 2.388,
     1        2.491, 2.678, 2.81, 2.81, 2.81, 2.81, 2.81, 2.81, 2.81, 2.81, 2.81  /
      Data a8  /  0, -0.11, 0, 0, 0, 0, 0, 0, -0.0127, -0.0297, -0.0452, -0.0556, -0.0811, -0.1001,
     1       -0.1451, -0.1795, -0.236, -0.2897, -0.3629, -0.41, -0.44, -0.455, -0.4618, -0.4657  /
      Data M1  /  6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75,
     1        6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75, 6.75  /
      Data a10  /  -0.1627, -0.3, -0.1627, -0.1627, -0.1627, -0.1627, -0.1627, -0.1627, -0.1627,
     1       -0.1627, -0.1627, -0.1627, -0.1627, -0.1627, -0.1627, -0.1627, -0.1627, -0.1627,
     1       -0.1627, -0.1627, -0.1627, -0.1627, -0.1627, -0.1627  /
      Data a11  /  -0.22, 0, -0.22, -0.22, -0.22, -0.22, -0.22, -0.22, -0.1672, -0.1297, -0.1006,
     1       -0.0769, -0.0394, -0.0103, 0.0425, 0.08, 0.1328, 0.1703, 0.2231, 0.2606, 0.2897,
     1        0.3134, 0.3422, 0.38  /
      Data a12  /  -0.1, 0, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1,
     1       -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1  /
      Data a13  /  0.67, 0.35, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.62, 0.579, 0.515,
     1        0.465, 0.374, 0.31, 0.219, 0.155, 0.064, 0, 0, 0, 0, 0  /
      Data a14  / 0, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  /
      Data a15  /  1.05, 0.85, 1.05, 1.05, 1.05, 1.05, 1.05, 1.05, 1.05, 1.05, 1.05, 0.9734,
     1        0.8525, 0.7588, 0.5884, 0.4675, 0.2971, 0.1763, 0.0059, -0.115, -0.2088,
     1       -0.2854, -0.37815, -0.5  /
      Data a17  /  -0.0005, 0, -0.0005, -0.0005, -0.0009, -0.0022, -0.0026, -0.0021, -0.0012,
     1       -0.0002, -0.0002, -0.0002, -0.0002, -0.0002, -0.0002, -0.0002, -0.0002, -0.0002,
     1       -0.0002, -0.0002, -0.0002, -0.0002, -0.0002, -0.0002  /
      Data a25  /  -0.0022, 0, -0.0022, -0.0023, -0.0022, -0.003, -0.0055, -0.0063, -0.0056,
     1       -0.0052, -0.0041, -0.0033, -0.0019, -0.0011, -0.0008, -0.0008, -0.0008, -0.0008,
     1       -0.0008, -0.0008, -0.0008, -0.0008, -0.0008, -0.0008  /
      Data a28  /  -0.0007, 0, -0.0007, -0.0008, -0.0007, -0.0004, -0.0003, -0.0007, -0.0006,
     1       -0.0004, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  /
      Data a29  /  -0.0036, 0, -0.0036, -0.0037, -0.0036, -0.004, -0.0044, -0.0049, -0.0051,
     1       -0.0053, -0.0049, -0.0044, -0.0037, -0.0031, -0.0022, -0.0016, -0.0012, -0.0012,
     1       -0.0012, -0.0012, -0.0012, -0.0012, -0.0012, -0.0012  /
      Data a31  /  -0.033, 0, -0.033, -0.033, -0.033, -0.033, -0.033, -0.033, -0.033, -0.033,
     1       -0.033, -0.033, -0.033, -0.033, -0.033, -0.033, -0.033, -0.033, -0.033, -0.033,
     1       -0.033, -0.033, -0.033, -0.033  /
      Data a36  /  1.32, 0, 1.32, 1.32, 1.32, 1.32, 1.32, 1.32, 1.0737, 0.8989, 0.7633,
     1        0.6526, 0.4778, 0.3422, 0.0959, -0.0789, -0.3252, -0.5, -0.5, -0.5, -0.5,
     1       -0.5, -0.5, -0.5  /
      Data a37  / 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  /
      Data a38  / 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  /
      Data a39  / 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  /
      Data a40  / 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  /
      Data a41  / 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  /
      Data a42  / 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  /
      Data a43  / 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  /
      Data a44  / 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  /
      Data a45  / 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  /
      Data a46  / 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  /
C     Set Measure S1 and S2 values equal to estimated values.
      Data s1est  /  0.72, 0.5893, 0.72, 0.72, 0.72, 0.72, 0.72, 0.72, 0.72, 0.697848887, 0.680667149,
     1       0.666628647, 0.644477534, 0.627295796, 0.596075556, 0.573924444, 0.542704204, 0.520553091,
     1       0.489332851, 0.467181738, 0.45, 0.435961498, 0.419, 0.397  /
      Data s2est  /  0.57, 0.466, 0.57, 0.5910721, 0.603398488, 0.6189279, 0.631254288, 0.64, 0.6395,
     1       0.6395, 0.6395, 0.6395, 0.6395, 0.6395, 0.6395, 0.6395, 0.6395, 0.6395, 0.6395, 0.6395,
     1       0.6395, 0.6395, 0.6395, 0.6395  /
      Data s1msr  /  0.72, 0.5893, 0.72, 0.72, 0.72, 0.72, 0.72, 0.72, 0.72, 0.697848887, 0.680667149,
     1       0.666628647, 0.644477534, 0.627295796, 0.596075556, 0.573924444, 0.542704204, 0.520553091,
     1       0.489332851, 0.467181738, 0.45, 0.435961498, 0.419, 0.397  /
      Data s2msr  /  0.57, 0.466, 0.57, 0.5910721, 0.603398488, 0.6189279, 0.631254288, 0.64, 0.6395,
     1       0.6395, 0.6395, 0.6395, 0.6395, 0.6395, 0.6395, 0.6395, 0.6395, 0.6395, 0.6395, 0.6395,
     1       0.6395, 0.6395, 0.6395, 0.6395  /
      Data s3  /  0.49, 0.4949, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49,
     1       0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49  /
      Data s4  /  0.315, 0.2402, 0.315, 0.315, 0.315, 0.315, 0.315, 0.315, 0.315, 0.315, 0.315,
     1       0.315, 0.315, 0.315, 0.315, 0.315, 0.315, 0.315, 0.315, 0.315, 0.315, 0.315, 0.315, 0.315  /



C Find the requested spectral period and corresponding coefficients
      nPer = 24

C First check for the PGA, PGV, PGD cases
      if (specT .eq. 0.0) then
         period1 = period(1)
         a1T = a1(1)
         a2T = a2(1)
         a3T = a3(1)
         a4T = a4(1)
         a5T = a5(1)
         a6T = a6(1)
         a8T = a8(1)
         M1T = M1(1)
         cT = c(1)
         a10T = a10(1)
         a11T = a11(1)
         a12T = a12(1)
         a13T = a13(1)
         a14T = a14(1)
         a15T = a15(1)
         a17T = a17(1)
         a43T = a43(1)
         a44T = a44(1)
         a45T = a45(1)
         a46T = a46(1)
         a25T = a25(1)
         a28T = a28(1)
         a29T = a29(1)
         a31T = a31(1)
         a36T = a36(1)
         a37T = a37(1)
         a38T = a38(1)
         a39T = a39(1)
         a40T = a40(1)
         a41T = a41(1)
         a42T = a42(1)
         VlinT = Vlin(1)
         bT = b(1)
         c4T = c4(1)
         s1estT = s1est(1)
         s2estT = s2est(1)
         s1msrT = s1msr(1)
         s2msrT = s2msr(1)
         s3T = s3(1)
         s4T = s4(1)
         s5T = s5(1)
         s6T = s6(1)
         goto 1011
      elseif (specT .eq. -1.0) then
         period1 = period(2)
         a1T = a1(2)
         a2T = a2(2)
         a3T = a3(2)
         a4T = a4(2)
         a5T = a5(2)
         a6T = a6(2)
         a8T = a8(2)
         M1T = M1(2)
         cT = c(2)
         a10T = a10(2)
         a11T = a11(2)
         a12T = a12(2)
         a13T = a13(2)
         a14T = a14(2)
         a15T = a15(2)
         a17T = a17(2)
         a43T = a43(2)
         a44T = a44(2)
         a45T = a45(2)
         a46T = a46(2)
         a25T = a25(2)
         a28T = a28(2)
         a29T = a29(2)
         a31T = a31(2)
         a36T = a36(2)
         a37T = a37(2)
         a38T = a38(2)
         a39T = a39(2)
         a40T = a40(2)
         a41T = a41(2)
         a42T = a42(2)
         VlinT = Vlin(2)
         bT = b(2)
         c4T = c4(2)
         s1estT = s1est(2)
         s2estT = s2est(2)
         s1msrT = s1msr(2)
         s2msrT = s2msr(2)
         s3T = s3(2)
         s4T = s4(2)
         s5T = s5(2)
         s6T = s6(2)
         goto 1011
      endif
C   For other periods, loop over the spectral period range of the attenuation relationship.
      do i=3,nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Gulerce, Kamai, Abrahamson, and Silva (NGA West2-2013) Vertical'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),a1(count1),a1(count2),
     +                   specT,a1T,iflag)
            call interp (period(count1),period(count2),a2(count1),a2(count2),
     +                   specT,a2T,iflag)
            call interp (period(count1),period(count2),a3(count1),a3(count2),
     +                   specT,a3T,iflag)
            call interp (period(count1),period(count2),a4(count1),a4(count2),
     +                   specT,a4T,iflag)
            call interp (period(count1),period(count2),a5(count1),a5(count2),
     +                   specT,a5T,iflag)
            call interp (period(count1),period(count2),a6(count1),a6(count2),
     +                   specT,a6T,iflag)
            call interp (period(count1),period(count2),a8(count1),a8(count2),
     +                   specT,a8T,iflag)
            call interp (period(count1),period(count2),M1(count1),M1(count2),
     +                   specT,M1T,iflag)
            call interp (period(count1),period(count2),c(count1),c(count2),
     +                   specT,cT,iflag)
            call interp (period(count1),period(count2),a10(count1),a10(count2),
     +                   specT,a10T,iflag)
            call interp (period(count1),period(count2),a11(count1),a11(count2),
     +                   specT,a11T,iflag)
            call interp (period(count1),period(count2),a12(count1),a12(count2),
     +                   specT,a12T,iflag)
            call interp (period(count1),period(count2),a13(count1),a13(count2),
     +                   specT,a13T,iflag)
            call interp (period(count1),period(count2),a14(count1),a14(count2),
     +                   specT,a14T,iflag)
            call interp (period(count1),period(count2),a15(count1),a15(count2),
     +                   specT,a15T,iflag)
            call interp (period(count1),period(count2),a17(count1),a17(count2),
     +                   specT,a17T,iflag)
            call interp (period(count1),period(count2),a43(count1),a43(count2),
     +                   specT,a43T,iflag)
            call interp (period(count1),period(count2),a44(count1),a44(count2),
     +                   specT,a44T,iflag)
            call interp (period(count1),period(count2),a45(count1),a45(count2),
     +                   specT,a45T,iflag)
            call interp (period(count1),period(count2),a46(count1),a46(count2),
     +                   specT,a46T,iflag)
            call interp (period(count1),period(count2),a25(count1),a25(count2),
     +                   specT,a25T,iflag)
            call interp (period(count1),period(count2),a28(count1),a28(count2),
     +                   specT,a28T,iflag)
            call interp (period(count1),period(count2),a29(count1),a29(count2),
     +                   specT,a29T,iflag)
            call interp (period(count1),period(count2),a31(count1),a31(count2),
     +                   specT,a31T,iflag)
            call interp (period(count1),period(count2),a36(count1),a36(count2),
     +                   specT,a36T,iflag)
            call interp (period(count1),period(count2),a37(count1),a37(count2),
     +                   specT,a37T,iflag)
            call interp (period(count1),period(count2),a38(count1),a38(count2),
     +                   specT,a38T,iflag)
            call interp (period(count1),period(count2),a39(count1),a39(count2),
     +                   specT,a39T,iflag)
            call interp (period(count1),period(count2),a40(count1),a40(count2),
     +                   specT,a40T,iflag)
            call interp (period(count1),period(count2),a41(count1),a41(count2),
     +                   specT,a41T,iflag)
            call interp (period(count1),period(count2),a42(count1),a42(count2),
     +                   specT,a42T,iflag)
            call interp (period(count1),period(count2),Vlin(count1),Vlin(count2),
     +                   specT,VlinT,iflag)
            call interp (period(count1),period(count2),b(count1),b(count2),
     +                   specT,bT,iflag)
            call interp (period(count1),period(count2),c4(count1),c4(count2),
     +                   specT,c4T,iflag)
            call interp (period(count1),period(count2),s1est(count1),s1est(count2),
     +                   specT,s1estT,iflag)
            call interp (period(count1),period(count2),s2est(count1),s2est(count2),
     +                   specT,s2estT,iflag)
            call interp (period(count1),period(count2),s1msr(count1),s1msr(count2),
     +                   specT,s1msrT,iflag)
            call interp (period(count1),period(count2),s2msr(count1),s2msr(count2),
     +                   specT,s2msrT,iflag)
            call interp (period(count1),period(count2),s3(count1),s3(count2),
     +                   specT,s3T,iflag)
            call interp (period(count1),period(count2),s4(count1),s4(count2),
     +                   specT,s4T,iflag)
            call interp (period(count1),period(count2),s5(count1),s5(count2),
     +                   specT,s5T,iflag)
            call interp (period(count1),period(count2),s6(count1),s6(count2),
     +                   specT,s6T,iflag)

 1011 period1 = specT

C     Constant values
      n = 1.5
      M2 = 5.0
      a7 = 0.0

C     Set C term
c      if (period1 .eq. -1.0) then
c         c = 2400.0
c      else
c         c = 2.4
c      endif

C     Magnitude dependent taper for C4 (eq. 4.4)
c      if (mag .ge. 5.0) then
c         c4_mag = c4T
c      elseif (mag .ge. 4.0) then
c         c4_mag = c4T - (c4T-1.0) * (5.0-mag)
c      else
c         c4_mag = 1.0
c      endif
C     Set C4 for vertical model
      c4_mag = c4T
c     Set distance (eq 4.3)
      R = sqrt(rRup**2 + c4_mag**2)

C     Base Model (eq 4.2)
      if ( mag .lt. M2 ) then
        f1 = a1T + a6T*(Mag-M2) + a7*(Mag-M2)**2 + a4T*(M2-M1T) + a8T*(8.5-M2)**2 +
     1                (a2T + a3T*(M2-M1T)) * alog(R) + a17T*R
      elseif ( mag .lt. M1T ) then
        f1 = a1T + a4T*(Mag-M1T) + a8T*(8.5-Mag)**2 + (a2T + a3T*(Mag-M1T)) * alog(R) + a17T*Rrup
      else
        f1 = a1T + a5T*(Mag-M1T) + a8T*(8.5-Mag)**2 + (a2T + a3T*(Mag-M1T)) * alog(R) + a17T*Rrup
      endif

c     style of faulting (eq 4.5 and 4.6)
      if ( mag .lt. 4. ) then
        f7 = 0
        f8 = 0
      elseif ( mag .le. 5. ) then
        f7 = Frv * a11T * (mag-4.)
        f8 = Fn * a12T * (mag-4.)
      else
        f7 = Frv * a11T
        f8 = Fn * a12T
      endif

c     ZTOR (eq 14) - vertical is set at 12 km
      if (ZTOR .le. 12.) then
        f6 = a15T * ZTOR/12.0
      else
        f6 = a15T
      endif

c     Set VS30_star (eq 4.8 and 4.9)
      if ( specT .ge. 3.0 ) then
        V1 = 800.
      elseif ( specT .gt. 0.5 ) then
        V1 = exp( -0.35 * alog(specT/0.5)  + alog(1500.) )
      else
        V1=1500.
      endif
      if ( vs30 .lt. v1 ) then
         vs30Star = vs30
      else
	vs30Star = v1
      endif

c     Compute site amplification (Eq. 4.7)
      if (vs30 .lt. vLinT) then
        f5 = a10T*alog(vs30Star/vLinT) - bT*alog(cT+Sa1180)
     1              + bT*alog(Sa1180+cT*((vs30Star/vLinT)**(n)) )
      else
     	f5 = (a10T + bT*n) * alog(vs30Star/vLinT)
      endif

c     Set Regional z1 reference (eq 4.18)
      if (regionflag .ne. 3) then
         z1_ref = exp ( -7.67/4. * alog( (Vs30**4 + 610.**4)/(1360.**4+610.**4) ) ) / 1000.
      else
         z1_ref = exp ( -5.23/2. * alog( (Vs30**4 + 412.**2)/(1360.**2+412.**2) ) ) / 1000.
      endif

C     Soil Depth Model (eq 4.17)
C     Updated 8/1/13
      if ( vs30 .le. 150.0 ) then
         y1z = a43T
         y2z = a43T
         x1z = 50.0
         x2z = 150.0
      elseif ( vs30 .le. 250.0 ) then
         y1z = a43T
         y2z = a44T
         x1z = 150.0
         x2z = 250.0
      elseif ( vs30 .le. 400.0 ) then
         y1z = a44T
         y2z = a45T
         x1z = 250.0
         x2z = 400.0
      elseif ( vs30 .le. 700.0 ) then
         y1z = a45T
         y2z = a46T
         x1z = 400.0
         x2z = 700.0
      else
         y1z = a46T
         y2z = a46T
         x1z = 700.0
         x2z = 1000.0
      endif
C     Calculation f10 term and set it equal to zero for Vs=1180m/s (i.e., reference condition)
      if (vs30 .eq. 1180.0) then
          f10 = 0.0
      else
         f10 = ( y1z + (Vs30-x1z)*(y2z-y1z)/(x2z-x1z))*alog( (z1 + 0.01) / (z1_ref+0.01) )
      endif

c     Compute HW taper1 (eq 4.11)
      if ( dip .lt. 30. ) then
        HW_taper1 = 60./ 45.
      else
        HW_taper1 = (90.-dip)/45.
      endif

c     Compute HW taper2 (eq. 4.12)
      hw_a2 = 0.2
      if( mag .gt. 6.5 ) then
        HW_taper2 = 1. + hw_a2 * (mag-6.5)
      elseif ( mag .gt. 5.5 ) then
        HW_taper2 = 1. + HW_a2 * (mag-6.5) - (1.0 - HW_a2)*(mag-6.5)**2
      else
        HW_taper2 = 0.
      endif

c     Compute HW taper 3 (eq. 4.13)
C	  April 11, correction by ronnie for HW_taper3 when Rx.gt.R2
      h1 = 0.25
      h2 = 1.5
      h3 = -0.75
      R1 = fltWidth * cos(dip*3.1415926/180.)
      R2 = 3.*R1
      if ( Rx .le. R1 ) then
        HW_taper3 = h1 + h2*(Rx/R1) + h3*(Rx/R1)**2
      elseif ( Rx . lt. R2 ) then
        HW_taper3 = 1. - (Rx-R1)/(R2-R1)
      else
        HW_taper3 = 0.
      endif

c     Compute HW taper 4 (eq 4.14)
      if ( ZTOR .lt. 10. ) then
        HW_taper4 = 1. - (ZTOR**2) / 100.
      else
        HW_taper4 = 0.
      endif

c     Compute HW taper 5 (eq. 13)  **** Ry0 version, not used here ***
c      Ry1 = Rx * tan(20.*3.1415926/180.)
c      if ( Ry0 .lt. Ry1 ) then
c        HW_taper5 = 1.
c      elseif ( Ry0-Ry1 .lt. 5. ) then
c        HW_taper5 = 1. - (Ry0-Ry1) / 5.
c      else
c        HW_taper5 = 0.
c      endif

c     Compute HW taper 5 (eq. 4.15b)  **** No Ry0 version ***
      if (Rjb .eq. 0. ) then
        HW_taper5 = 1.
      elseif ( Rjb .lt. 30. ) then
        HW_taper5 = 1 - Rjb/30.
      else
        HW_taper5 = 0.
      endif

c     Hanging wall Model (eq 4.10)
      if ( HWFlag .eq. 1 ) then
        f4 = a13T * HW_taper1 * HW_taper2 * HW_taper3 * HW_taper4 * HW_taper5
      else
        f4 = 0.
      endif

C     Add aftershock factor (eq 4.21)
      if (msasflag .eq. 1) then
         if (CRjb .gt. 15.0) then
             f11 = 0.0
         elseif (CRjb .le. 5.0) then
             f11 = a14T
         else
             f11 = a14T * ( 1.0 - (CRjb - 5.0) /10.0)
         endif
      elseif (msasflag .eq. 0) then
         f11 = 0.0
      endif

C     Now apply the regional attenuation differences (eq 4.22)
C     Global No Change
      if (regionflag .eq. 0) then
         freg = 0.0
C     Taiwan
      elseif (regionflag .eq. 1) then
         f12 = a31T * alog(Vs30star/VlinT)
         freg = f12 + a25T*Rrup
C     China
      elseif (regionflag .eq. 2) then
         freg = a28T*Rrup
C     Japan
      elseif (regionflag .eq. 3) then
         if (vs30 .lt. 150.0) then
             y1 = a36T
             y2 = a36T
             x1 = 50.0
             x2 = 150.0
         elseif (vs30 .lt. 250.0) then
             y1 = a36T
             y2 = a37T
             x1 = 150.0
             x2 = 250.0
         elseif (vs30 .lt. 350.0) then
             y1 = a37T
             y2 = a38T
             x1 = 250.0
             x2 = 350.0
         elseif (vs30 .lt. 450.0) then
             y1 = a38T
             y2 = a39T
             x1 = 350.0
             x2 = 450.0
         elseif (vs30 .lt. 600.0) then
             y1 = a39T
             y2 = a40T
             x1 = 450.0
             x2 = 600.0
         elseif (vs30 .lt. 850.0) then
             y1 = a40T
             y2 = a41T
             x1 = 600.0
             x2 = 850.0
         elseif (vs30 .lt. 1150.0) then
             y1 = a41T
             y2 = a42T
             x1 = 850.0
             x2 = 1150.0
         else
             y1 = a42T
             y2 = a42T
             x1 = 1150.0
             x2 = 3000.0
         endif
         f13 = y1 + (y2-y1)/(x2-x1) * (vs30-x1)
         freg = f13 + a29T*Rrup
      endif

C     Set the Sigma Values
      if (regionflag .ne. 3)  then
c     Compute within-event term, phiA, at the surface for linear site response (eq 7.1)
        if (mag .lt. 4.0) then
           phiA_est = s1estT
        elseif (mag .le. 6.0) then
           phiA_est = s1estT + ((s2estT-s1estT)/2.0)*(mag-4.0)
        else
           phiA_est = s2estT
        endif

c     Compute within-event term, phiA, for known Vs30
        if (mag .lt. 4.0) then
           phiA_msr = s1msrT
        elseif (mag .le. 6.0) then
           phiA_msr = s1msrT + ((s2msrT-s1msrT)/2.0)*(mag-4.0)
        else
           phiA_msr = s2msrT
        endif

C     choose phiA by Vs30 class
        if (vs30_class .eq. 0 ) then
	     phiA = phiA_est
        elseif (vs30_class .eq. 1) then
	     phiA = phiA_msr
        else
	     return
        endif

C     Set Sigma values for Japan Region
      else

C calculate phi_A for Japan (eq. 7.3)
        if (Rrup .lt. 30) then
           phiA = s5T
        elseif (Rrup .le. 80) then
           phiA = s5T + (s6T-s5T)/50*(Rrup-30)
        else
           phiA = s6T
        endif
      endif

c     Compute between-event term, tau (eq. 7.2)
      if (mag .lt. 5.0) then
         tauA = s3T
      elseif (mag .le. 7.0) then
         tauA = s3T + ((s4T-s3T)/2.0)*(mag-5.0)
      else
         tauA = s4T
      endif
      tauB = tauA

c     Compute phiB, within-event term with site amp variablity removed (eq. 7.7)
      sigAmp = 0.4
      phiB = sqrt( phiA**2 - sigAmp**2)

c     Compute parital derivative of alog(soil amp) w.r.t. alog(Sa1180) (eq. 7.10)
      if ( vs30 .ge. vLinT) then
        dAmp_dSa1180 = 0.
      else
        dAmp_dSa1180 = bT*Sa1180 * ( -1. / (Sa1180+cT)
     1              + 1./ (Sa1180 + cT*(vs30/vLinT)**(n)) )
      endif

C     Compute phi, with non-linear effects (eq. 7.8)
      phi = sqrt( phiB**2 * (1. + dAmp_dSa1180)**2 + sigAmp**2 )

C     Compute tau, with non-linear effects (eq. 7.9)
      tau = tauB * (1. + dAmp_dSa1180)

c     Compute median ground motion (eq. 1)
      f9 = 0.0
      lnSa = f1 + f4 + f5 + f6 + f7 + f8 + f9 + f10 + f11 + freg

      return
      end



C     Main subroutine for Single Station Sigma (Phi) models
      subroutine SSSPhiModel (ssscalc1, specT, mag, Rrup, phiSSS)

      real specT, mag, Rrup, phiSSS
      integer ssscalc1, modelflag, zoneflag


C     Select the Single Station Sigma model based on the SSSCalc1 value.
      if (ssscalc1 .eq. 1 ) then
         call PhiSS_PRP_1Mean ( specT, PhiSSS )
      elseif (ssscalc1 .eq. 2) then
         call PhiSS_PRP_1MeanMinus ( specT, PhiSSS )
      elseif (ssscalc1 .eq. 3) then
         call PhiSS_PRP_1MeanPlus ( specT, PhiSSS )
      elseif (ssscalc1 .eq. 4) then
         callPhiSS_PRP_2Mean ( specT, Rrup, PhiSSS )
      elseif (ssscalc1 .eq. 5) then
         call PhiSS_PRP_3Mean ( specT, Rrup, Mag, PhiSSS )

C     Preliminary DCPP Models
C     California Constant - Base
      elseif (ssscalc1 .eq. 10) then
         call DCPP_CAconst ( specT, Rrup, Mag, PhiSSS )
C     California Constant - Lower
      elseif (ssscalc1 .eq. 11) then
         call DCPP_CAconst ( specT, Rrup, Mag, PhiSSS )
         phiSSS = phiSSS - 0.05
C     California Constant - Upper
      elseif (ssscalc1 .eq. 12) then
         call DCPP_CAconst ( specT, Rrup, Mag, PhiSSS )
         phiSSS = phiSSS + 0.05

C     Global Constant - Base
      elseif (ssscalc1 .eq. 13) then
         call DCPP_GBconst ( specT, Rrup, Mag, PhiSSS )
C     Global Constant - Lower
      elseif (ssscalc1 .eq. 14) then
         call DCPP_GBconst ( specT, Rrup, Mag, PhiSSS )
         phiSSS = phiSSS - 0.05
C     Global Constant - Upper
      elseif (ssscalc1 .eq. 15) then
         call DCPP_GBconst ( specT, Rrup, Mag, PhiSSS )
         phiSSS = phiSSS + 0.05

C     CA Mag Dep - Base
      elseif (ssscalc1 .eq. 16) then
         call DCPP_CAMag ( specT, Rrup, Mag, PhiSSS )
C     CA Mag Dep - Lower
      elseif (ssscalc1 .eq. 17) then
         call DCPP_CAMag ( specT, Rrup, Mag, PhiSSS )
         phiSSS = phiSSS - 0.05
C     CA Mag Dep - Upper
      elseif (ssscalc1 .eq. 18) then
         call DCPP_CAMag ( specT, Rrup, Mag, PhiSSS )
         phiSSS = phiSSS + 0.05



C     Preliminary PVNGS Models - Local Host source
C     Local Global Constant - Base
      elseif (ssscalc1 .eq. 20) then
         call PVNGS_LGBconst ( specT, Rrup, Mag, PhiSSS )
C     Local Global Constant - Lower
      elseif (ssscalc1 .eq. 21) then
         call PVNGS_LGBconst ( specT, Rrup, Mag, PhiSSS )
         phiSSS = phiSSS - 0.05
C     Local Global Constant - Upper
      elseif (ssscalc1 .eq. 22) then
         call PVNGS_LGBconst ( specT, Rrup, Mag, PhiSSS )
         phiSSS = phiSSS + 0.05

C     Preliminary PVNGS Models - Distant California Sources
C     Distant Global Constant - Base
      elseif (ssscalc1 .eq. 23) then
         call PVNGS_DGBconst ( specT, Rrup, Mag, PhiSSS )
C     Distant Global Constant - Lower
      elseif (ssscalc1 .eq. 24) then
         call PVNGS_DGBconst ( specT, Rrup, Mag, PhiSSS )
         phiSSS = phiSSS - 0.05
C     Distant Global Constant - Upper
      elseif (ssscalc1 .eq. 25) then
         call PVNGS_DGBconst ( specT, Rrup, Mag, PhiSSS )
         phiSSS = phiSSS + 0.05

C     Preliminary PVNGS Models - North Arizona Path Sources
C     Distant Global Constant - Base
      elseif (ssscalc1 .eq. 26) then
         call PVNGS_NAZconst ( specT, Rrup, Mag, PhiSSS)
C     Distant Global Constant - Lower
      elseif (ssscalc1 .eq. 27) then
         call PVNGS_NAZconst ( specT, Rrup, Mag, PhiSSS )
         phiSSS = phiSSS - 0.05
C     Distant Global Constant - Upper
      elseif (ssscalc1 .eq. 28) then
         call PVNGS_NAZconst ( specT, Rrup, Mag, PhiSSS )
         phiSSS = phiSSS + 0.05

C     Preliminary PVNGS Models - South Arizona Path Sources
C     Distant Global Constant - Base
      elseif (ssscalc1 .eq. 29) then
         call PVNGS_SAZconst ( specT, Rrup, Mag, PhiSSS )
C     Distant Global Constant - Lower
      elseif (ssscalc1 .eq. 30) then
         call PVNGS_SAZconst ( specT, Rrup, Mag, PhiSSS )
         phiSSS = phiSSS - 0.05
C     Distant Global Constant - Upper
      elseif (ssscalc1 .eq. 31) then
         call PVNGS_SAZconst ( specT, Rrup, Mag, PhiSSS )
         phiSSS = phiSSS + 0.05

C     Updated Single Station Sigma PhiSS Models (July, 2014)
C     DCPP Models
C     California Dataset Constant
C     Central Model
      elseif (ssscalc1 .eq. 40) then
         modelflag = 0
         call DCPP_CAconst_2014 ( specT, modelflag, PhiSSS )
C     Low Model
      elseif (ssscalc1 .eq. 41) then
         modelflag = 1
         call DCPP_CAconst_2014 ( specT, modelflag, PhiSSS )
C     High Model
      elseif (ssscalc1 .eq. 42) then
         modelflag = 2
         call DCPP_CAconst_2014 ( specT, modelflag, PhiSSS )

C     Global Dataset Constant
C     Central Model
      elseif (ssscalc1 .eq. 43) then
         modelflag = 0
         call DCPP_GBconst_2014 ( specT, modelflag, PhiSSS )
C     Low Model
      elseif (ssscalc1 .eq. 44) then
         modelflag = 1
         call DCPP_GBconst_2014 ( specT, modelflag, PhiSSS )
C     High Model
      elseif (ssscalc1 .eq. 45) then
         modelflag = 2
         call DCPP_GBconst_2014 ( specT, modelflag, PhiSSS )

C     California Dataset Magnitude dependent
C     Central Model
      elseif (ssscalc1 .eq. 46) then
         modelflag = 0
         call DCPP_CAMag_2014 ( specT, mag, modelflag, PhiSSS )
C     Low Model
      elseif (ssscalc1 .eq. 47) then
         modelflag = 1
         call DCPP_CAMag_2014 ( specT, mag, modelflag, PhiSSS )
C     High Model
      elseif (ssscalc1 .eq. 48) then
         modelflag = 2
         call DCPP_CAMag_2014 ( specT, mag, modelflag, PhiSSS )

C     PVNGS Models
C     PhiSP-R, Arizona, Zone1: Central
      elseif (ssscalc1 .eq. 50) then
         modelflag = 0
         zoneflag = 1
         call PVNGS_SPRAZ_2014 ( specT, modelflag, zoneflag, PhiSSS )
C     PhiSP-R, Arizona, Zone1: Low
      elseif (ssscalc1 .eq. 51) then
         modelflag = 1
         zoneflag = 1
         call PVNGS_SPRAZ_2014 ( specT, modelflag, zoneflag, PhiSSS )
C     PhiSP-R, Arizona, Zone1: High
      elseif (ssscalc1 .eq. 52) then
         modelflag = 2
         zoneflag = 1
         call PVNGS_SPRAZ_2014 ( specT, modelflag, zoneflag, PhiSSS )
C     PhiSP-R, Arizona, Zone2/3: Central
      elseif (ssscalc1 .eq. 53) then
         modelflag = 0
         zoneflag = 2
         call PVNGS_SPRAZ_2014 ( specT, modelflag, zoneflag, PhiSSS )
C     PhiSP-R, Arizona, Zone2/3: Low
      elseif (ssscalc1 .eq. 54) then
         modelflag = 1
         zoneflag = 2
         call PVNGS_SPRAZ_2014 ( specT, modelflag, zoneflag, PhiSSS )
C     PhiSP-R, Arizona, Zone2/3: High
      elseif (ssscalc1 .eq. 55) then
         modelflag = 2
         zoneflag = 2
         call PVNGS_SPRAZ_2014 ( specT, modelflag, zoneflag, PhiSSS )

C     PhiSS, Global, Zone1,2,3: Central
      elseif (ssscalc1 .eq. 59) then
         modelflag = 0
         call PVNGS_GB123_2014 ( specT, modelflag, PhiSSS )
C     PhiSS, Global, Zone1,2,3: Low
      elseif (ssscalc1 .eq. 60) then
         modelflag = 1
         call PVNGS_GB123_2014 ( specT, modelflag, PhiSSS )
C     PhiSS, Global, Zone1,2,3: High
      elseif (ssscalc1 .eq. 61) then
         modelflag = 2
         call PVNGS_GB123_2014 ( specT, modelflag, PhiSSS )

C     PhiSS, Global, Outside Zone1,2,3: Central
      elseif (ssscalc1 .eq. 62) then
         modelflag = 0
         call PVNGS_PSSGB_2014 ( specT, modelflag, PhiSSS )
C     PhiSS, Global, Outside Zone1,2,3: Low
      elseif (ssscalc1 .eq. 63) then
         modelflag = 1
         call PVNGS_PSSGB_2014 ( specT, modelflag, PhiSSS )
C     PhiSS, Global, Outside Zone1,2,3: High
      elseif (ssscalc1 .eq. 64) then
         modelflag = 2
         call PVNGS_PSSGB_2014 ( specT, modelflag, PhiSSS )

C     PhiSS, European, Outside Zone1,2,3: Central
      elseif (ssscalc1 .eq. 65) then
         modelflag = 0
         call PVNGS_PSSEuro_2014 ( specT, modelflag, PhiSSS )
C     PhiSS, European, Outside Zone1,2,3: Low
      elseif (ssscalc1 .eq. 66) then
         modelflag = 1
         call PVNGS_PSSEuro_2014 ( specT, modelflag, PhiSSS )
C     PhiSS, European, Outside Zone1,2,3: High
      elseif (ssscalc1 .eq. 67) then
         modelflag = 2
         call PVNGS_PSSEuro_2014 ( specT, modelflag, PhiSSS )



      else
C         write (*,*) 'Invalid Single Station Sigma Model.'
C         write (*,*) 'SSSCalc1 = ', ssscalc1
C         write (*,*) 'Check input file.'
         return
      endif

      return
      end

C--------------------------------------------------------------------------------------

c     SIGMA.f
c     File added by Linda on July 26, 2011
c     To add different single-station sigma models

      subroutine PhiSS_PRP_1Mean ( specT, PhiSS )

c     This subroutine evaluates the PEGASOS constant PhiSS model (mean values)
c     By Linda
c     July 26, 2011

      implicit none
      integer MAXPER
      parameter (MAXPER=7)
      integer nPer, count1, count2, i, iflag, i1
      real specT, period(MAXPER), PhiSS1(MAXPER), PhiSS, PhiSS1T,
     &  period1

      data period  / 0.01, 0.1, 0.2, 0.3, 0.5, 1.0, 3.0 /
      data PhiSS1 / 0.46, 0.45, 0.48, 0.48, 0.46, 0.45, 0.41 /


C     First check for the PGA
      if (specT .le. 0.0) then
        if ( specT .eq. 0.0 ) i1=1
        period1 = period(i1)
        PhiSS1T = PhiSS1(i1)
        goto 5
      endif

      nPer = 7
C     For other periods, loop over the spectral period range of the PhiSS Model.
      do i = 1, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'Pegasos Constant PhiSS Model'
C      write (*,*) 'PhiSS Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), PhiSS1(count1), PhiSS1(count2),
     &    specT, PhiSS1T, iflag )

5     period1 = specT
      PhiSS = PhiSS1T

      return
      end subroutine PhiSS_PRP_1Mean
C--------------------------------------------------------------------------------------

      subroutine PhiSS_PRP_1MeanMinus ( specT, PhiSS )

c     This subroutine evaluates the PEGASOS constant PhiSS model (mean PhiSS minus
c     1.6* stdDev values)
c     By Linda
c     July 26, 2011

      implicit none
      integer MAXPER
      parameter (MAXPER=7)
      integer nPer, count1, count2, i, iflag, i1
      real specT, period(MAXPER), PhiSS1(MAXPER), PhiSS, PhiSS1T,
     &  period1, std_PhiSS1(MAXPER), std_PhiSS1T

      data period  / 0.01, 0.1, 0.2, 0.3, 0.5, 1.0, 3.0 /
      data PhiSS1 / 0.46, 0.45, 0.48, 0.48, 0.46, 0.45, 0.41 /
      data std_PhiSS1 / 0.08, 0.08, 0.11, 0.09, 0.08, 0.07, 0.07 /


C     First check for the PGA
      if (specT .le. 0.0) then
        if ( specT .eq. 0.0 ) i1=1
        period1 = period(i1)
        PhiSS1T = PhiSS1(i1)
        std_PhiSS1T = std_PhiSS1(i1)
        goto 5
      endif

      nPer = 7
C     For other periods, loop over the spectral period range of the PhiSS Model.
      do i = 1, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'Pegasos Constant PhiSS Model'
C      write (*,*) 'PhiSS Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), PhiSS1(count1), PhiSS1(count2),
     &    specT, PhiSS1T, iflag )
      call interp ( period(count1), period(count2), std_PhiSS1(count1), std_PhiSS1(count2),
     &    specT, std_PhiSS1T, iflag )

5     period1 = specT
      PhiSS = PhiSS1T - 1.6*std_PhiSS1T

      return
      end subroutine PhiSS_PRP_1MeanMinus

C--------------------------------------------------------------------------------------

      subroutine PhiSS_PRP_1MeanPlus ( specT, PhiSS )

c     This subroutine evaluates the PEGASOS constant PhiSS model (mean PhiSS plus
c     1.6* stdDev values)
c     By Linda
c     July 26, 2011

      implicit none
      integer MAXPER
      parameter (MAXPER=7)
      integer nPer, count1, count2, i, iflag, i1
      real specT, period(MAXPER), PhiSS1(MAXPER), PhiSS, PhiSS1T,
     &  period1, std_PhiSS1(MAXPER), std_PhiSS1T

      data period  / 0.01, 0.1, 0.2, 0.3, 0.5, 1.0, 3.0 /
      data PhiSS1 / 0.46, 0.45, 0.48, 0.48, 0.46, 0.45, 0.41 /
      data std_PhiSS1 / 0.08, 0.08, 0.11, 0.09, 0.08, 0.07, 0.07 /


C     First check for the PGA
      if (specT .le. 0.0) then
        if ( specT .eq. 0.0 ) i1=1
        period1 = period(i1)
        PhiSS1T = PhiSS1(i1)
        std_PhiSS1T = std_PhiSS1(i1)
        goto 5
      endif

      nPer = 7
C     For other periods, loop over the spectral period range of the PhiSS Model.
      do i = 1, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'Pegasos Constant PhiSS Model'
C      write (*,*) 'PhiSS Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), PhiSS1(count1), PhiSS1(count2),
     &    specT, PhiSS1T, iflag )
      call interp ( period(count1), period(count2), std_PhiSS1(count1), std_PhiSS1(count2),
     &    specT, std_PhiSS1T, iflag )

5     period1 = specT
      PhiSS = PhiSS1T + 1.6*std_PhiSS1T

      return
      end subroutine PhiSS_PRP_1MeanPlus
C--------------------------------------------------------------------------------------

      subroutine PhiSS_PRP_2Mean ( specT, Rrup, PhiSS )

c     This subroutine evaluates the PEGASOS distance-dependent
c     PhiSS model (mean values)
c     By Linda
c     July 26, 2011

      implicit none
      integer MAXPER
      parameter (MAXPER=7)
      integer nPer, count1, count2, i, iflag, i1
      real specT, period(MAXPER), PhiSS1(MAXPER), PhiSS, PhiSS1T,
     &  period1, PhiSS2(MAXPER), Rc1(MAXPER), Rc2(MAXPER), PhiSS2T,
     &  Rc1T, Rc2T, Rrup

      data period  / 0.01, 0.1, 0.2, 0.3, 0.5, 1.0, 3.0 /
      data PhiSS1 / 0.56, 0.55, 0.62, 0.62, 0.58, 0.54, 0.53 /
      data PhiSS2 / 0.45, 0.44, 0.47, 0.47, 0.45, 0.44, 0.40 /
      data Rc1 / 16, 16, 16, 16, 16, 16, 16 /
      data Rc2 / 32, 32, 32, 32, 32, 32, 36 /


C     First check for the PGA
      if (specT .le. 0.0) then
        if ( specT .eq. 0.0 ) i1=1
        period1 = period(i1)
        PhiSS1T = PhiSS1(i1)
        PhiSS2T = PhiSS2(i1)
        Rc1T = Rc1(i1)
        Rc2T = Rc2(i1)
        goto 5
      endif

      nPer = 7
C     For other periods, loop over the spectral period range of the PhiSS Model.
      do i = 1, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'Pegasos Constant PhiSS Model'
C      write (*,*) 'PhiSS Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), PhiSS1(count1), PhiSS1(count2),
     &    specT, PhiSS1T, iflag )
      call interp ( period(count1), period(count2), PhiSS2(count1), PhiSS2(count2),
     &    specT, PhiSS2T, iflag )
      call interp ( period(count1), period(count2), Rc1(count1), Rc1(count2),
     &    specT, Rc1T, iflag )
      call interp ( period(count1), period(count2), Rc2(count1), Rc2(count2),
     &    specT, Rc2T, iflag )

5     period1 = specT
      if ( Rrup < Rc1T ) then
        PhiSS = PhiSS1T
      elseif ( Rrup <= Rc2T ) then
        PhiSS = PhiSS1T + (PhiSS2T-PhiSS1T) * (Rrup-Rc1T) / (Rc2T-Rc1T)
      else
        PhiSS = PhiSS2T
      endif

      return
      end subroutine PhiSS_PRP_2Mean
C--------------------------------------------------------------------------------------

      subroutine PhiSS_PRP_3Mean ( specT, Rrup, Mag, PhiSS )

c     This subroutine evaluates the PEGASOS distance- and magnitude-dependent
c     PhiSS model (mean values)
c     By Linda
c     July 26, 2011

      implicit none
      integer MAXPER
      parameter (MAXPER=7)
      integer nPer, count1, count2, i, iflag, i1
      real specT, period(MAXPER), PhiSS11(MAXPER), PhiSS, PhiSS11T,
     &  period1, PhiSS21(MAXPER), Rc11(MAXPER), Rc21(MAXPER), PhiSS21T,
     &  Rc11T, Rc21T, Rrup, C2(MAXPER), C2T, Mc1(MAXPER), Mc2(MAXPER),
     &  Mc1T, Mc2T, C1T, mag

      data period  / 0.01, 0.1, 0.2, 0.3, 0.5, 1.0, 3.0 /
      data PhiSS11 / 0.58, 0.54, 0.60, 0.63, 0.59, 0.54, 0.44 /
      data PhiSS21 / 0.47, 0.44, 0.49, 0.50, 0.48, 0.45, 0.37 /
      data Rc11 / 16, 16, 16, 16, 16, 16, 16 /
      data Rc21 / 36, 36, 36, 36, 36, 36, 36 /
      data C2 / 0.34, 0.43, 0.37, 0.36, 0.36, 0.37, 0.37 /
      data Mc1 / 5.2, 5.2, 5.2, 5.2, 5.2, 5.3, 5.5 /
      data Mc2 / 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0 /


C     First check for the PGA
      if (specT .le. 0.0) then
        if ( specT .eq. 0.0 ) i1=1
        period1 = period(i1)
        PhiSS11T = PhiSS11(i1)
        PhiSS21T = PhiSS21(i1)
        Rc11T = Rc11(i1)
        Rc21T = Rc21(i1)
        C2T = C2(i1)
        Mc1T = Mc1(i1)
        Mc2T = Mc2(i1)
        goto 5
      endif

      nPer = 7
C     For other periods, loop over the spectral period range of the PhiSS Model.
      do i = 1, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'Pegasos Constant PhiSS Model'
C      write (*,*) 'PhiSS Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), PhiSS11(count1), PhiSS11(count2),
     &    specT, PhiSS11T, iflag )
      call interp ( period(count1), period(count2), PhiSS21(count1), PhiSS21(count2),
     &    specT, PhiSS21T, iflag )
      call interp ( period(count1), period(count2), Rc11(count1), Rc11(count2),
     &    specT, Rc11T, iflag )
      call interp ( period(count1), period(count2), Rc21(count1), Rc21(count2),
     &    specT, Rc21T, iflag )
      call interp ( period(count1), period(count2), c2(count1), c2(count2),
     &    specT, c2T, iflag )
      call interp ( period(count1), period(count2), Mc1(count1), Mc1(count2),
     &    specT, Mc1T, iflag )
      call interp ( period(count1), period(count2), Mc2(count1), Mc2(count2),
     &    specT, Mc2T, iflag )

5     period1 = specT
      if ( Rrup < Rc11T ) then
        C1T = PhiSS11T
      elseif ( Rrup <= Rc21T ) then
        C1T = PhiSS11T + (PhiSS21T-PhiSS11T) * (Rrup-Rc11T) / (Rc21T-Rc11T)
      else
        C1T = PhiSS21T
      endif

      if ( Mag < Mc1T ) then
        PhiSS = C1T
      elseif ( Mag <= Mc2T ) then
        PhiSS = C1T + (C2T-C1T) * (Mag-Mc1T) / (Mc2T-Mc1T)
      else
        PhiSS = C2T
      endif

      return
      end subroutine PhiSS_PRP_3Mean


C--------------------------------------------------------------------------------------
C     Preliminary PhiSS Model - DCPP California Constant
C     Models from Linda Al-Atik (3/2014)

      subroutine DCPP_CAConst ( specT, Rrup, Mag, PhiSS )

      implicit none
      integer MAXPER
      parameter (MAXPER=5)
      integer nPer, count1, count2, i, iflag, i1
      real specT, period(MAXPER), PhiSS1(MAXPER), PhiSS, PhiSS1T,
     &  period1, Rrup, Mag

      data period  / 0.01, 0.1, 0.5, 1.0, 3.0 /
      data PhiSS1 / 0.3621, 0.3657, 0.4260, 0.4326, 0.4242 /


C     First check for the PGA
      if (specT .le. 0.0) then
        if ( specT .eq. 0.0 ) i1=1
        period1 = period(i1)
        PhiSS1T = PhiSS1(i1)
        goto 5
      endif

      nPer = 5
C     For other periods, loop over the spectral period range of the PhiSS Model.
      do i = 1, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'DCPP California Constant PhiSS Model'
C      write (*,*) 'PhiSS Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), PhiSS1(count1), PhiSS1(count2),
     &    specT, PhiSS1T, iflag )

5     period1 = specT
      PhiSS = PhiSS1T

      return
      end

C--------------------------------------------------------------------------------------
C     Preliminary PhiSS Model - DCPP Global Constant
C     Models from Linda Al-Atik (3/2014)

      subroutine DCPP_GBConst ( specT, Rrup, Mag, PhiSS )

      implicit none
      integer MAXPER
      parameter (MAXPER=5)
      integer nPer, count1, count2, i, iflag, i1
      real specT, period(MAXPER), PhiSS1(MAXPER), PhiSS, PhiSS1T,
     &  period1, Rrup, Mag

      data period  / 0.01, 0.1, 0.5, 1.0, 3.0 /
      data PhiSS1 / 0.3889, 0.4164, 0.4344, 0.4593, 0.4671 /


C     First check for the PGA
      if (specT .le. 0.0) then
        if ( specT .eq. 0.0 ) i1=1
        period1 = period(i1)
        PhiSS1T = PhiSS1(i1)
        goto 5
      endif

      nPer = 5
C     For other periods, loop over the spectral period range of the PhiSS Model.
      do i = 1, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'DCPP Global Constant PhiSS Model'
C      write (*,*) 'PhiSS Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), PhiSS1(count1), PhiSS1(count2),
     &    specT, PhiSS1T, iflag )

5     period1 = specT
      PhiSS = PhiSS1T

      return
      end

C--------------------------------------------------------------------------------------
C     Preliminary PhiSS Model - DCPP California magnitude Dependent
C     Models from Linda Al-Atik (3/2014)

      subroutine DCPP_CAMag ( specT, Rrup, Mag, PhiSS )

      implicit none
      integer MAXPER
      parameter (MAXPER=5)
      integer nPer, count1, count2, i, iflag, i1
      real specT, period(MAXPER), PhiSS1(MAXPER), PhiSS, a(MAXPER), b(MAXPER), c(MAXPER),
     &  period1, Rrup, Mag, aT, bT, cT

      data period  / 0.01, 0.1, 0.5, 1.0, 3.0 /
      data a / -0.06297, -0.06954, -0.03137, -0.03816, -0.1146 /
      data b / 0.7598, 0.7998, 0.6138, 0.66, 1.153 /
      data c / 0.31901, 0.31302, 0.39421, 0.39288, 0.3508 /


C     First check for the PGA
      if (specT .le. 0.0) then
        if ( specT .eq. 0.0 ) i1=1
        period1 = period(i1)
        aT = a(i1)
        bT = b(i1)
        cT = c(i1)
        goto 5
      endif

      nPer = 5
C     For other periods, loop over the spectral period range of the PhiSS Model.
      do i = 1, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'DCPP California Magnitude PhiSS Model'
C      write (*,*) 'PhiSS Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), a(count1), a(count2),
     &    specT, aT, iflag )
      call interp ( period(count1), period(count2), b(count1), b(count2),
     &    specT, bT, iflag )
      call interp ( period(count1), period(count2), c(count1), c(count2),
     &    specT, cT, iflag )

5     period1 = specT

C     Compute magnitude dependent PhiSS
      if (mag .lt. 7.0) then
         phiSS = aT*mag + bT
      else
         phiSS = cT
      endif

      return
      end


C--------------------------------------------------------------------------------------
C     Preliminary PhiSS Model - PVNGS Local Normal Global Constant
C     Models from Linda Al-Atik (3/2014)

      subroutine PVNGS_LGBConst ( specT, Rrup, Mag, PhiSS )

      implicit none
      integer MAXPER
      parameter (MAXPER=5)
      integer nPer, count1, count2, i, iflag, i1
      real specT, period(MAXPER), PhiSS1(MAXPER), PhiSS, PhiSS1T,
     &  period1, Rrup, Mag

      data period  / 0.01, 0.1, 0.5, 1.0, 3.0 /
      data PhiSS1 / 0.4066, 0.4378, 0.4137, 0.4381, 0.4442 /


C     First check for the PGA
      if (specT .le. 0.0) then
        if ( specT .eq. 0.0 ) i1=1
        period1 = period(i1)
        PhiSS1T = PhiSS1(i1)
        goto 5
      endif

      nPer = 5
C     For other periods, loop over the spectral period range of the PhiSS Model.
      do i = 1, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'PVNGS Local Source Global Constant PhiSS Model'
C      write (*,*) 'PhiSS Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), PhiSS1(count1), PhiSS1(count2),
     &    specT, PhiSS1T, iflag )

5     period1 = specT
      PhiSS = PhiSS1T

      return
      end


C--------------------------------------------------------------------------------------
C     Preliminary PhiSS Model - PVNGS Local Normal Global Constant
C     Models from Linda Al-Atik (3/2014)

      subroutine PVNGS_DGBConst ( specT, Rrup, Mag, PhiSS )

      implicit none
      integer MAXPER
      parameter (MAXPER=5)
      integer nPer, count1, count2, i, iflag, i1
      real specT, period(MAXPER), PhiSS1(MAXPER), PhiSS, PhiSS1T,
     &  period1, Rrup, Mag

      data period  / 0.01, 0.1, 0.5, 1.0, 3.0 /
      data PhiSS1 / 0.4975, 0.5069, 0.5248, 0.4579, 0.4871 /


C     First check for the PGA
      if (specT .le. 0.0) then
        if ( specT .eq. 0.0 ) i1=1
        period1 = period(i1)
        PhiSS1T = PhiSS1(i1)
        goto 5
      endif

      nPer = 5
C     For other periods, loop over the spectral period range of the PhiSS Model.
      do i = 1, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'PVNGS Distant Source Global Constant PhiSS Model'
C      write (*,*) 'PhiSS Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), PhiSS1(count1), PhiSS1(count2),
     &    specT, PhiSS1T, iflag )

5     period1 = specT
      PhiSS = PhiSS1T

      return
      end


C--------------------------------------------------------------------------------------
C     Preliminary PhiSP Model - PVNGS Region-North
C     Models from Linda Al-Atik (3/2014)

      subroutine PVNGS_NAZConst ( specT, Rrup, Mag, PhiSS )

      implicit none
      integer MAXPER
      parameter (MAXPER=3)
      integer nPer, count1, count2, i, iflag, i1
      real specT, period(MAXPER), PhiSS1(MAXPER), PhiSS, PhiSS1T,
     &  period1, Rrup, Mag

      data period  / 0.5, 1.0, 3.0 /
      data PhiSS1 / 0.4704, 0.5221, 0.6250 /


C     First check for the PGA
      if (specT .le. 0.0) then
        if ( specT .eq. 0.0 ) i1=1
        period1 = period(i1)
        PhiSS1T = PhiSS1(i1)
        goto 5
      endif

      nPer = 5
C     For other periods, loop over the spectral period range of the PhiSS Model.
      do i = 1, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'PVNGS Single Path North Constant PhiSP Model'
C      write (*,*) 'PhiSS Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), PhiSS1(count1), PhiSS1(count2),
     &    specT, PhiSS1T, iflag )

5     period1 = specT
      PhiSS = PhiSS1T

      return
      end

C--------------------------------------------------------------------------------------
C     Preliminary PhiSP Model - PVNGS Region-South
C     Models from Linda Al-Atik (3/2014)

      subroutine PVNGS_SAZConst ( specT, Rrup, Mag, PhiSS )

      implicit none
      integer MAXPER
      parameter (MAXPER=3)
      integer nPer, count1, count2, i, iflag, i1
      real specT, period(MAXPER), PhiSS1(MAXPER), PhiSS, PhiSS1T,
     &  period1, Rrup, Mag

      data period  / 0.5, 1.0, 3.0 /
      data PhiSS1 / 0.3517, 0.4712, 0.4736 /


C     First check for the PGA
      if (specT .le. 0.0) then
        if ( specT .eq. 0.0 ) i1=1
        period1 = period(i1)
        PhiSS1T = PhiSS1(i1)
        goto 5
      endif

      nPer = 5
C     For other periods, loop over the spectral period range of the PhiSS Model.
      do i = 1, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'PVNGS Single Path South Constant PhiSP Model'
C      write (*,*) 'PhiSS Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), PhiSS1(count1), PhiSS1(count2),
     &    specT, PhiSS1T, iflag )

5     period1 = specT
      PhiSS = PhiSS1T

      return
      end





C--------------------------------------------------------------------------------------
C     PhiSS Model - DCPP California Constant
C     July 2014
C     Modelflag: 0 = Central, 1 = Lower, 2 = Upper

      subroutine DCPP_CAConst_2014 ( specT, modelflag, PhiSS )

      implicit none
      integer MAXPER
      parameter (MAXPER=22)
      integer nPer, count1, count2, i, iflag, i1, modelflag
      real specT, period(MAXPER), PhiSSC(MAXPER), PhiSSH(MAXPER), PhiSSL(MAXPER)
      real PhiSS, PhiSSCT, phiSSHT, PhiSSLT, period1

      data Period  /  0, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25, 0.3, 0.4,
     1          0.5, 0.75, 1, 1.5, 2, 3, 4, 5, 7.5, 10  /
      data PhissC  /  0.358, 0.358, 0.358, 0.365, 0.373, 0.379, 0.384, 0.39, 0.395,
     1          0.397, 0.401, 0.404, 0.407, 0.412, 0.415, 0.418, 0.421, 0.423, 0.425,
     1          0.426, 0.428, 0.43  /
      data PhiSSH  /  0.427, 0.427, 0.427, 0.436, 0.445, 0.452, 0.458, 0.466, 0.472,
     1          0.475, 0.479, 0.482, 0.486, 0.492, 0.495, 0.499, 0.503, 0.505, 0.506,
     1          0.509, 0.51, 0.513  /
      data PhiSSL  /  0.287, 0.287, 0.287, 0.292, 0.299, 0.303, 0.307, 0.312, 0.316,
     1          0.318, 0.321, 0.323, 0.326, 0.33, 0.332, 0.335, 0.337, 0.339, 0.34,
     1          0.341, 0.342, 0.344  /

C     First check for the PGA
      if (specT .le. 0.0) then
        if ( specT .eq. 0.0 ) i1=1
        period1 = period(i1)
        PhiSSCT = PhiSSC(i1)
        PhiSSHT = PhiSSH(i1)
        PhiSSLT = PhiSSL(i1)
        goto 5
      endif

      nPer = 22
C     For other periods, loop over the spectral period range of the PhiSS Model.
      do i = 2, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'DCPP California Constant PhiSS Model - July 2014'
C      write (*,*) 'PhiSS Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), PhiSSC(count1), PhiSSC(count2),
     &    specT, PhiSSCT, iflag )
      call interp ( period(count1), period(count2), PhiSSH(count1), PhiSSH(count2),
     &    specT, PhiSSHT, iflag )
      call interp ( period(count1), period(count2), PhiSSL(count1), PhiSSL(count2),
     &    specT, PhiSSLT, iflag )

5     period1 = specT
      if (modelflag .eq. 0) then
         PhiSS = PhiSSCT
      elseif (modelflag .eq. 1) then
         PhiSS = PhiSSLT
      elseif (modelflag .eq. 2) then
         PhiSS = PhiSSHT
      endif

      return
      end

C--------------------------------------------------------------------------------------
C     PhiSS Model - DCPP Global Constant
C     July 2014
C     Modelflag: 0 = Central, 1 = Lower, 2 = Upper

      subroutine DCPP_GBConst_2014 ( specT, modelflag, PhiSS )

      implicit none
      integer MAXPER
      parameter (MAXPER=22)
      integer nPer, count1, count2, i, iflag, i1, modelflag
      real specT, period(MAXPER), PhiSSC(MAXPER), PhiSSH(MAXPER), PhiSSL(MAXPER)
      real PhiSS, PhiSSCT, PhiSSHT, PhiSSLT, period1

      data Period  /  0.01, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25, 0.3,
     1       0.4, 0.5, 0.75, 1, 1.5, 2, 3, 4, 5, 7.5, 10  /
      data PhissC  /  0.417, 0.417, 0.417, 0.419, 0.422, 0.425, 0.427, 0.429, 0.431,
     1       0.432, 0.433, 0.435, 0.436, 0.438, 0.439, 0.44, 0.441, 0.442, 0.443,
     1       0.443, 0.444, 0.445  /
      data PhiSSH  /  0.498, 0.498, 0.498, 0.5, 0.504, 0.507, 0.51, 0.512, 0.514,
     1       0.515, 0.517, 0.519, 0.52, 0.523, 0.524, 0.525, 0.526, 0.528, 0.528,
     1       0.529, 0.53, 0.531  /
      data PhiSSL  /  0.334, 0.334, 0.334, 0.335, 0.338, 0.34, 0.342, 0.343, 0.345,
     1       0.346, 0.347, 0.348, 0.349, 0.351, 0.351, 0.352, 0.353, 0.354, 0.354,
     1       0.355, 0.355, 0.356  /

C     First check for the PGA
      if (specT .le. 0.0) then
        if ( specT .eq. 0.0 ) i1=1
        period1 = period(i1)
        PhiSSCT = PhiSSC(i1)
        PhiSSHT = PhiSSH(i1)
        PhiSSLT = PhiSSL(i1)
        goto 5
      endif

      nPer = 22
C     For other periods, loop over the spectral period range of the PhiSS Model.
      do i = 2, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'DCPP Global Constant PhiSS Model - July 2014'
C      write (*,*) 'PhiSS Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), PhiSSC(count1), PhiSSC(count2),
     &    specT, PhiSSCT, iflag )
      call interp ( period(count1), period(count2), PhiSSH(count1), PhiSSH(count2),
     &    specT, PhiSSHT, iflag )
      call interp ( period(count1), period(count2), PhiSSL(count1), PhiSSL(count2),
     &    specT, PhiSSLT, iflag )

5     period1 = specT
      if (modelflag .eq. 0) then
         PhiSS = PhiSSCT
      elseif (modelflag .eq. 1) then
         PhiSS = PhiSSLT
      elseif (modelflag .eq. 2) then
         PhiSS = PhiSSHT
      endif

      return
      end


C--------------------------------------------------------------------------------------
C     PhiSS Model - DCPP California Magnitude Dependent
C     July 2014
C     Modelflag: 0 = Central, 1 = Lower, 2 = Upper

      subroutine DCPP_CAMag_2014 ( specT, mag, modelflag, PhiSS )

      implicit none
      integer MAXPER
      parameter (MAXPER=22)
      integer nPer, count1, count2, i, iflag, i1, modelflag
      real specT, period(MAXPER), PhiSS,
     &  period1, aC(MAXPER), aH(MAXPER), aL(MAXPER), bC(MAXPER), bH(MAXPER), bL(MAXPER),
     &  aCT, aHT, aLT, bCT, bHT, bLT, mag, aT, bT

      data period  /  0, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25, 0.3, 0.4,
     1      0.5, 0.75, 1, 1.5, 2, 3, 4, 5, 7.5, 10  /
      data aC  /  0.485, 0.485, 0.485, 0.485, 0.485, 0.485, 0.485, 0.485, 0.485, 0.485,
     1      0.485, 0.485, 0.485, 0.485, 0.485, 0.485, 0.485, 0.485, 0.485, 0.485, 0.485, 0.485  /
      data bC  /  0.309, 0.309, 0.309, 0.318, 0.328, 0.336, 0.343, 0.351, 0.357, 0.361, 0.365,
     1      0.37, 0.374, 0.38, 0.383, 0.388, 0.391, 0.395, 0.395, 0.396, 0.391, 0.385  /
      data aH  /  0.579, 0.579, 0.579, 0.579, 0.579, 0.579, 0.579, 0.579, 0.579, 0.579, 0.579,
     1      0.579, 0.579, 0.579, 0.579, 0.579, 0.579, 0.579, 0.579, 0.579, 0.579, 0.579  /
      data bH  /  0.369, 0.369, 0.369, 0.38, 0.391, 0.401, 0.409, 0.419, 0.426, 0.43, 0.435, 0.442,
     1      0.446, 0.453, 0.458, 0.464, 0.467, 0.472, 0.472, 0.473, 0.467, 0.46  /
      data aL  /  0.388, 0.388, 0.388, 0.388, 0.388, 0.388, 0.388, 0.388, 0.388, 0.388, 0.388,
     1      0.388, 0.388, 0.388, 0.388, 0.388, 0.388, 0.388, 0.388, 0.388, 0.388, 0.388  /
      data bL  /  0.247, 0.247, 0.247, 0.255, 0.262, 0.269, 0.274, 0.281, 0.286, 0.289, 0.292, 0.296,
     1      0.299, 0.304, 0.307, 0.311, 0.313, 0.316, 0.317, 0.317, 0.313, 0.308  /

C     First check for the PGA
      if (specT .le. 0.0) then
        if ( specT .eq. 0.0 ) i1=1
        period1 = period(i1)
        aCT = aC(1)
        bCT = bC(1)
        aHT = aH(1)
        bHT = bH(1)
        aLT = aL(1)
        bLT = bL(1)
        goto 5
      endif

      nPer = 22
C     For other periods, loop over the spectral period range of the PhiSS Model.
      do i = 2, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'DCPP California Mag Dependent PhiSS Model - July 2014'
C      write (*,*) 'PhiSS Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), aC(count1), aC(count2),
     &    specT, aCT, iflag )
      call interp ( period(count1), period(count2), bC(count1), bC(count2),
     &    specT, bCT, iflag )

      call interp ( period(count1), period(count2), aH(count1), aH(count2),
     &    specT, aHT, iflag )
      call interp ( period(count1), period(count2), bH(count1), bH(count2),
     &    specT, bHT, iflag )

      call interp ( period(count1), period(count2), aL(count1), aL(count2),
     &    specT, aLT, iflag )
      call interp ( period(count1), period(count2), bL(count1), bL(count2),
     &    specT, bLT, iflag )

5     period1 = specT

C     Set coefficients based on selected model.
      if (modelflag .eq. 0) then
          aT = aCT
          bT = bCT
      elseif (modelflag .eq. 1) then
          aT = aLT
          bT = bLT
      elseif (modelflag .eq. 2) then
          aT = aHT
          bT = bHT
      endif

      if (mag .lt. 7.0) then
         PhiSS = aT + ((Mag-5.0)/2.0)*(bT-aT)
      else
         phiSS = bT
      endif

      return
      end


C--------------------------------------------------------------------------------------
C     PhiSS Model - PVNGS Outside Zones 1,2,3: European Data
C     July 2014
C     Modelflag: 0 = Central, 1 = Lower, 2 = Upper

      subroutine PVNGS_PSSEuro_2014 ( specT, modelflag, PhiSS )

      implicit none
      integer MAXPER
      parameter (MAXPER=22)
      integer nPer, count1, count2, i, iflag, i1, modelflag, zoneflag
      real specT, period(MAXPER), PhiSSC(MAXPER), PhiSSH(MAXPER), PhiSSL(MAXPER),
     1     PhiSS, PhiSSCT, PhiSSHT, PhiSSLT, period1

      data period  /  0, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25, 0.3, 0.4,
     1         0.5, 0.75, 1, 1.5, 2, 3, 4, 5, 7.5, 10  /
      data PhiSSC  /  0.46, 0.46, 0.46, 0.464, 0.468, 0.471, 0.474, 0.477, 0.48, 0.481, 0.483,
     1         0.485, 0.487, 0.489, 0.491, 0.493, 0.494, 0.496, 0.496, 0.497, 0.498, 0.499  /
      data PhiSSH  /  0.549, 0.549, 0.549, 0.554, 0.559, 0.562, 0.566, 0.569, 0.573, 0.575, 0.577,
     1         0.579, 0.581, 0.584, 0.586, 0.588, 0.59, 0.592, 0.593, 0.593, 0.594, 0.596  /
      data PhiSSL  /  0.368, 0.368, 0.368, 0.371, 0.375, 0.377, 0.379, 0.382, 0.384, 0.385, 0.387,
     1         0.388, 0.39, 0.391, 0.393, 0.395, 0.395, 0.397, 0.397, 0.398, 0.398, 0.399  /

C     First check for the PGA
      if (specT .le. 0.0) then
        if ( specT .eq. 0.0 ) i1=1
        period1 = period(i1)
        PhiSSCT = PhiSSC(i1)
        PhiSSHT = PhiSSH(i1)
        PhiSSLT = PhiSSL(i1)
        goto 5
      endif

      nPer = 22
C     For other periods, loop over the spectral period range of the PhiSS Model.
      do i = 2, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'PVNGS PhiSS European, Outside Zones 1,2,3 Model - July 2014'
C      write (*,*) 'Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), PhiSSC(count1), PhiSSC(count2),
     &    specT, PhiSSCT, iflag )
      call interp ( period(count1), period(count2), PhiSSH(count1), PhiSSH(count2),
     &    specT, PhiSSHT, iflag )
      call interp ( period(count1), period(count2), PhiSSL(count1), PhiSSL(count2),
     &    specT, PhiSSLT, iflag )

5     period1 = specT

      if (modelflag .eq. 0) then
         PhiSS = PhiSSCT
      elseif (modelflag .eq. 1) then
         PhiSS = PhiSSLT
      elseif (modelflag .eq. 2) then
         PhiSS = PhiSSHT
      endif

      return
      end

C--------------------------------------------------------------------------------------
C     PhiSS Model - PVNGS Outside Zones 1,2,3: Global Data
C     July 2014
C     Modelflag: 0 = Central, 1 = Lower, 2 = Upper

      subroutine PVNGS_PSSGB_2014 ( specT, modelflag, PhiSS )

      implicit none
      integer MAXPER
      parameter (MAXPER=22)
      integer nPer, count1, count2, i, iflag, i1, modelflag, zoneflag
      real specT, period(MAXPER), PhiSSC(MAXPER), PhiSSH(MAXPER), PhiSSL(MAXPER), PhiSS,
     1     PhiSSCT, PhiSSHT, PhiSSLT, period1

      data period  /  0, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25, 0.3, 0.4,
     1          0.5, 0.75, 1, 1.5, 2, 3, 4, 5, 7.5, 10  /
      data PhiSSC  /  0.437, 0.437, 0.437, 0.437, 0.437, 0.437, 0.437, 0.437, 0.437, 0.437,
     1          0.437, 0.437, 0.437, 0.437, 0.437, 0.437, 0.437, 0.437, 0.437, 0.437, 0.437, 0.437  /
      data PhiSSH  /  0.522, 0.522, 0.522, 0.522, 0.522, 0.522, 0.522, 0.522, 0.522, 0.522,
     1          0.522, 0.522, 0.522, 0.522, 0.522, 0.522, 0.522, 0.522, 0.522, 0.522, 0.522, 0.522  /
      data PhiSSL  /  0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35,
     1          0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35  /

C     First check for the PGA
      if (specT .le. 0.0) then
        if ( specT .eq. 0.0 ) i1=1
        period1 = period(i1)
        PhiSSCT = PhiSSC(i1)
        PhiSSHT = PhiSSH(i1)
        PhiSSLT = PhiSSL(i1)
        goto 5
      endif

      nPer = 22
C     For other periods, loop over the spectral period range of the PhiSS Model.
      do i = 2, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'PVNGS PhiSS Global, Outside Zones 1,2,3 Model - July 2014'
C      write (*,*) 'Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), PhiSSC(count1), PhiSSC(count2),
     &    specT, PhiSSCT, iflag )
      call interp ( period(count1), period(count2), PhiSSH(count1), PhiSSH(count2),
     &    specT, PhiSSHT, iflag )
      call interp ( period(count1), period(count2), PhiSSL(count1), PhiSSL(count2),
     &    specT, PhiSSLT, iflag )

5     period1 = specT

      if (modelflag .eq. 0) then
         PhiSS = PhiSSCT
      elseif (modelflag .eq. 1) then
         PhiSS = PhiSSLT
      elseif (modelflag .eq. 2) then
         PhiSS = PhiSSHT
      endif

      return
      end

C--------------------------------------------------------------------------------------
C     PhiSPR Model - PVNGS Zones 1,2,3: Arizona Data
C     July 2014
C     Modelflag: 0 = Central, 1 = Lower, 2 = Upper
C     Zoneflag = 1, 2 (which applies for 3 also)

      subroutine PVNGS_SPRAZ_2014 ( specT, modelflag, zoneflag, PhiSS )

      implicit none
      integer MAXPER
      parameter (MAXPER=22)
      integer nPer, count1, count2, i, iflag, i1, modelflag, zoneflag
      real specT, period(MAXPER), PhiSSC(MAXPER), PhiSSH(MAXPER), PhiSSL(MAXPER),
     1     PhiSS, PhiSSCT, PhiSSHT, PhiSSLT, period1

      data period  /  0, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25, 0.3, 0.4, 0.5, 0.75,
     1        1, 1.5, 2, 3, 4, 5, 7.5, 10  /
c      data PhiSSC  /  0.32, 0.32, 0.32, 0.32, 0.32, 0.32, 0.327, 0.335, 0.34, 0.344, 0.348,
c     1        0.354, 0.358, 0.366, 0.371, 0.378, 0.382, 0.388, 0.391, 0.395, 0.398, 0.402  /
c      data PhiSSH  /  0.417, 0.417, 0.417, 0.417, 0.417, 0.417, 0.426, 0.436, 0.443, 0.448, 0.454,
c     1        0.461, 0.467, 0.476, 0.483, 0.492, 0.498, 0.505, 0.509, 0.514, 0.518, 0.524  /
c      data PhiSSL  /  0.219, 0.219, 0.219, 0.219, 0.219, 0.219, 0.223, 0.229, 0.233, 0.235, 0.238, 0.242,
c     1        0.245, 0.25, 0.253, 0.258, 0.261, 0.265, 0.267, 0.27, 0.272, 0.275  /
C Updated 8/26/14
      data PhiSSC /  0.304, 0.304, 0.304, 0.304, 0.304, 0.304, 0.304, 0.304, 0.304, 0.304, 0.304,
     1               0.304, 0.304, 0.339, 0.364, 0.399, 0.423, 0.423, 0.423, 0.423, 0.423, 0.423 /
      data PhiSSH /  0.388, 0.388, 0.388, 0.388, 0.388, 0.388, 0.388, 0.388, 0.388, 0.388, 0.388,
     1               0.388, 0.388, 0.432, 0.464, 0.508, 0.54, 0.54, 0.54, 0.54, 0.54, 0.54 /
      data PhiSSL /  0.217, 0.217, 0.217, 0.217, 0.217, 0.217, 0.217, 0.217, 0.217, 0.217, 0.217,
     1               0.217, 0.217, 0.242, 0.26, 0.284, 0.302, 0.302, 0.302, 0.302, 0.302, 0.302 /

C     First check for the PGA
      if (specT .le. 0.0) then
        if ( specT .eq. 0.0 ) i1=1
        period1 = period(i1)
        PhiSSCT = PhiSSC(i1)
        PhiSSHT = PhiSSH(i1)
        PhiSSLT = PhiSSL(i1)
        goto 5
      endif

      nPer = 22
C     For other periods, loop over the spectral period range of the PhiSS Model.
      do i = 2, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'PVNGS PhiSP-R, Zones 1,2,3 Model - July 2014'
C      write (*,*) 'Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), PhiSSC(count1), PhiSSC(count2),
     &    specT, PhiSSCT, iflag )
      call interp ( period(count1), period(count2), PhiSSH(count1), PhiSSH(count2),
     &    specT, PhiSSHT, iflag )
      call interp ( period(count1), period(count2), PhiSSL(count1), PhiSSL(count2),
     &    specT, PhiSSLT, iflag )

5     period1 = specT

      if (modelflag .eq. 0) then
         PhiSS = PhiSSCT
      elseif (modelflag .eq. 1) then
         PhiSS = PhiSSLT
      elseif (modelflag .eq. 2) then
         PhiSS = PhiSSHT
      endif

      return
      end

C--------------------------------------------------------------------------------------
C     PhiSS Model - PVNGS Zones 1,2,3: Global Data
C     July 2014
C     Modelflag: 0 = Central, 1 = Lower, 2 = Upper

      subroutine PVNGS_GB123_2014 ( specT, modelflag, PhiSS )

      implicit none
      integer MAXPER
      parameter (MAXPER=22)
      integer nPer, count1, count2, i, iflag, i1, modelflag, zoneflag
      real specT, period(MAXPER), PhiSSC(MAXPER), PhiSSH(MAXPER), PhiSSL(MAXPER),
     1     PhiSS, PhiSSCT, PhiSSHT, PhiSSLT, period1

      data period  /  0, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25, 0.3, 0.4, 0.5,
     1         0.75, 1, 1.5, 2, 3, 4, 5, 7.5, 10  /
      data PhissC  /  0.517, 0.517, 0.517, 0.517, 0.517, 0.517, 0.517, 0.515, 0.508, 0.498,
     1         0.49, 0.476, 0.466, 0.452, 0.443, 0.431, 0.417, 0.399, 0.517, 0.517, 0.517, 0.517 /
      data PhissH  /  0.617, 0.617, 0.617, 0.617, 0.617, 0.617, 0.617, 0.615, 0.606, 0.594, 0.585,
     1         0.568, 0.556, 0.54, 0.529, 0.514, 0.498, 0.476, 0.617, 0.617, 0.617, 0.617  /
      data PhissL  /  0.414, 0.414, 0.414, 0.414, 0.414, 0.414, 0.414, 0.412, 0.407, 0.399, 0.392,
     1         0.381, 0.373, 0.362, 0.355, 0.345, 0.334, 0.319, 0.414, 0.414, 0.414, 0.414  /

C     First check for the PGA
      if (specT .le. 0.0) then
        if ( specT .eq. 0.0 ) i1=1
        period1 = period(i1)
        PhiSSCT = PhiSSC(i1)
        PhiSSHT = PhiSSH(i1)
        PhiSSLT = PhiSSL(i1)
        goto 5
      endif

      nPer = 22
C     For other periods, loop over the spectral period range of the PhiSS Model.
      do i = 2, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'PVNGS PhiSS Global, Zones 1,2,3 Model - July 2014'
C      write (*,*) 'Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), PhiSSC(count1), PhiSSC(count2),
     &    specT, PhiSSCT, iflag )
      call interp ( period(count1), period(count2), PhiSSH(count1), PhiSSH(count2),
     &    specT, PhiSSHT, iflag )
      call interp ( period(count1), period(count2), PhiSSL(count1), PhiSSL(count2),
     &    specT, PhiSSLT, iflag )

5     period1 = specT

      if (modelflag .eq. 0) then
         PhiSS = PhiSSCT
      elseif (modelflag .eq. 1) then
         PhiSS = PhiSSLT
      elseif (modelflag .eq. 2) then
         PhiSS = PhiSSHT
      endif

      return
      end

C--------------------------------------------------------------------------------------
C     SWUS Total Sigma Model - DCPP Central
C     Scalc = 13001

      subroutine SWUS_Sigma_DCPP_Cen ( mag, specT, sigma, iflag )

      implicit none
      integer MAXPER
      parameter (MAXPER=22)
      integer nPer, count1, count2, i, iflag
      real specT, period(MAXPER), sig1(MAXPER), sig2(MAXPER)
      real sig1T, sig2T, period1, sigma, mag

      data Period  /  0, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25, 0.3, 0.4,
     1          0.5, 0.75, 1, 1.5, 2, 3, 4, 5, 7.5, 10  /
      data sig1 / 0.557, 0.557, 0.559, 0.560, 0.562, 0.564, 0.566, 0.568, 0.569, 0.571,
     1            0.572, 0.573, 0.574, 0.575, 0.576, 0.578, 0.578, 0.579, 0.580, 0.581,
     1            0.581, 0.582  /
      data sig2 / 0.491, 0.491, 0.494, 0.496, 0.500, 0.505, 0.508, 0.512, 0.515, 0.517,
     1            0.519, 0.522, 0.524, 0.527, 0.529, 0.532, 0.533, 0.535, 0.536, 0.537,
     1            0.537, 0.538  /

C     First check for the PGA
      if (specT .eq. 0.0) then
        period1 = period(1)
        sig1T = sig1(1)
        sig2T = sig2(1)
        goto 5
      endif

      nPer = 22
C     For other periods, loop over the spectral period range of the Sigma Model.
      do i = 2, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'SWUS Total Sigma Model: DCPP Central'
C      write (*,*) 'Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), sig1(count1), sig1(count2),
     &    specT, sig1T, iflag )
      call interp ( period(count1), period(count2), sig2(count1), sig2(count2),
     &    specT, sig2T, iflag )

5     period1 = specT

C     Now compute the magnitude-dependent total sigma value.
      if (mag .ge. 7.0) then
         sigma = sig2T
      else
         sigma = sig1T + ((mag-5.0)/2.0)*(sig2T-sig1T)
      endif

      return
      end

C--------------------------------------------------------------------------------------
C     SWUS Total Sigma Model - DCPP Low
C     Scalc = 13002

      subroutine SWUS_Sigma_DCPP_Low ( mag, specT, sigma, iflag )

      implicit none
      integer MAXPER
      parameter (MAXPER=22)
      integer nPer, count1, count2, i, iflag
      real specT, period(MAXPER), sig1(MAXPER), sig2(MAXPER)
      real sig1T, sig2T, period1, sigma, mag

      data Period  /  0, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25, 0.3, 0.4,
     1          0.5, 0.75, 1, 1.5, 2, 3, 4, 5, 7.5, 10  /
      data sig1 / 0.428, 0.428, 0.431, 0.432, 0.436, 0.440, 0.443, 0.446, 0.449, 0.450,
     1            0.452, 0.454, 0.455, 0.457, 0.459, 0.461, 0.462, 0.463, 0.464, 0.464,
     1            0.465, 0.466 /
      data sig2 / 0.389, 0.389, 0.393, 0.395, 0.401, 0.406, 0.410, 0.416, 0.419, 0.422,
     1            0.424, 0.427, 0.429, 0.432, 0.435, 0.437, 0.439, 0.441, 0.442, 0.442,
     1            0.443, 0.443 /

C     First check for the PGA
      if (specT .eq. 0.0) then
        period1 = period(1)
        sig1T = sig1(1)
        sig2T = sig2(1)
        goto 5
      endif

      nPer = 22
C     For other periods, loop over the spectral period range of the Sigma Model.
      do i = 2, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'SWUS Total Sigma Model: DCPP Low'
C      write (*,*) 'Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), sig1(count1), sig1(count2),
     &    specT, sig1T, iflag )
      call interp ( period(count1), period(count2), sig2(count1), sig2(count2),
     &    specT, sig2T, iflag )

5     period1 = specT

C     Now compute the magnitude-dependent total sigma value.
      if (mag .ge. 7.0) then
         sigma = sig2T
      else
         sigma = sig1T + ((mag-5.0)/2.0)*(sig2T-sig1T)
      endif

      return
      end


C--------------------------------------------------------------------------------------
C     SWUS Total Sigma Model - DCPP High
C     Scalc = 13003

      subroutine SWUS_Sigma_DCPP_High ( mag, specT, sigma, iflag )

      implicit none
      integer MAXPER
      parameter (MAXPER=22)
      integer nPer, count1, count2, i, iflag
      real specT, period(MAXPER), sig1(MAXPER), sig2(MAXPER)
      real sig1T, sig2T, period1, sigma, mag

      data Period  /  0, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25, 0.3, 0.4,
     1          0.5, 0.75, 1, 1.5, 2, 3, 4, 5, 7.5, 10  /
      data sig1 / 0.694, 0.694, 0.695, 0.695, 0.696, 0.697, 0.697, 0.698, 0.699, 0.700,
     1            0.700, 0.701, 0.701, 0.702, 0.703, 0.703, 0.704, 0.705, 0.705, 0.705,
     1            0.706, 0.706 /
      data sig2 / 0.600, 0.600, 0.602, 0.604, 0.607, 0.61, 0.613, 0.616, 0.618, 0.620,
     1            0.622, 0.624, 0.625, 0.628, 0.63, 0.632, 0.633, 0.635, 0.636, 0.637,
     1            0.638, 0.638 /

C     First check for the PGA
      if (specT .eq. 0.0) then
        period1 = period(1)
        sig1T = sig1(1)
        sig2T = sig2(1)
        goto 5
      endif

      nPer = 22
C     For other periods, loop over the spectral period range of the Sigma Model.
      do i = 2, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'SWUS Total Sigma Model: DCPP High'
C      write (*,*) 'Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), sig1(count1), sig1(count2),
     &    specT, sig1T, iflag )
      call interp ( period(count1), period(count2), sig2(count1), sig2(count2),
     &    specT, sig2T, iflag )

5     period1 = specT

C     Now compute the magnitude-dependent total sigma value.
      if (mag .ge. 7.0) then
         sigma = sig2T
      else
         sigma = sig1T + ((mag-5.0)/2.0)*(sig2T-sig1T)
      endif

      return
      end

C--------------------------------------------------------------------------------------
C     SWUS Total Sigma Model - PVNGS Arizona Sources Central
C     Scalc = 13004

      subroutine SWUS_Sigma_PVNGS_AZ_Cen ( mag, specT, sigma, iflag )

      implicit none
      integer MAXPER
      parameter (MAXPER=22)
      integer nPer, count1, count2, i, iflag
      real specT, period(MAXPER), sig1(MAXPER), sig2(MAXPER)
      real sig1T, sig2T, period1, sigma, mag

      data Period  /  0, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25, 0.3, 0.4,
     1          0.5, 0.75, 1, 1.5, 2, 3, 4, 5, 7.5, 10  /
      data sig1 / 0.573, 0.573, 0.574, 0.574, 0.575, 0.576, 0.576, 0.577, 0.577, 0.578,
     1            0.578, 0.578, 0.579, 0.579, 0.579, 0.580, 0.580, 0.580, 0.580, 0.580,
     1            0.581, 0.581 /
      data sig2 / 0.553, 0.553, 0.553, 0.553, 0.554, 0.555, 0.555, 0.556, 0.556, 0.557,
     1            0.557, 0.557, 0.558, 0.558, 0.558, 0.559, 0.559, 0.559, 0.559, 0.559,
     1            0.560, 0.560 /

C     First check for the PGA
      if (specT .eq. 0.0) then
        period1 = period(1)
        sig1T = sig1(1)
        sig2T = sig2(1)
        goto 5
      endif

      nPer = 22
C     For other periods, loop over the spectral period range of the Sigma Model.
      do i = 2, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'SWUS Total Sigma Model: PVNGS Arizona Sources Central'
C      write (*,*) 'Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), sig1(count1), sig1(count2),
     &    specT, sig1T, iflag )
      call interp ( period(count1), period(count2), sig2(count1), sig2(count2),
     &    specT, sig2T, iflag )

5     period1 = specT

C     Now compute the magnitude-dependent total sigma value.
      if (mag .ge. 7.0) then
         sigma = sig2T
      else
         sigma = sig1T + ((mag-5.0)/2.0)*(sig2T-sig1T)
      endif

      return
      end

C--------------------------------------------------------------------------------------
C     SWUS Total Sigma Model - PVNGS Arizona Sources Low
C     Scalc = 13005

      subroutine SWUS_Sigma_PVNGS_AZ_Low ( mag, specT, sigma, iflag )

      implicit none
      integer MAXPER
      parameter (MAXPER=22)
      integer nPer, count1, count2, i, iflag
      real specT, period(MAXPER), sig1(MAXPER), sig2(MAXPER)
      real sig1T, sig2T, period1, sigma, mag

      data Period  /  0, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25, 0.3, 0.4,
     1          0.5, 0.75, 1, 1.5, 2, 3, 4, 5, 7.5, 10  /
      data sig1 / 0.461, 0.461, 0.461, 0.461, 0.462, 0.462, 0.463, 0.463, 0.463, 0.463,
     1            0.463, 0.464, 0.464, 0.464, 0.464, 0.464, 0.464, 0.464, 0.464, 0.464,
     1            0.464, 0.464 /
      data sig2 / 0.459, 0.459, 0.459, 0.460, 0.460, 0.460, 0.461, 0.461, 0.461, 0.461,
     1            0.461, 0.461, 0.461, 0.462, 0.462, 0.462, 0.462, 0.462, 0.462, 0.462,
     1            0.462, 0.462 /

C     First check for the PGA
      if (specT .eq. 0.0) then
        period1 = period(1)
        sig1T = sig1(1)
        sig2T = sig2(1)
        goto 5
      endif

      nPer = 22
C     For other periods, loop over the spectral period range of the Sigma Model.
      do i = 2, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'SWUS Total Sigma Model: PVNGS Arizona Sources Low'
C      write (*,*) 'Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), sig1(count1), sig1(count2),
     &    specT, sig1T, iflag )
      call interp ( period(count1), period(count2), sig2(count1), sig2(count2),
     &    specT, sig2T, iflag )

5     period1 = specT

C     Now compute the magnitude-dependent total sigma value.
      if (mag .ge. 7.0) then
         sigma = sig2T
      else
         sigma = sig1T + ((mag-5.0)/2.0)*(sig2T-sig1T)
      endif

      return
      end

C--------------------------------------------------------------------------------------
C     SWUS Total Sigma Model - PVNGS Arizona Sources High
C     Scalc = 13006

      subroutine SWUS_Sigma_PVNGS_AZ_High ( mag, specT, sigma, iflag )

      implicit none
      integer MAXPER
      parameter (MAXPER=22)
      integer nPer, count1, count2, i, iflag
      real specT, period(MAXPER), sig1(MAXPER), sig2(MAXPER)
      real sig1T, sig2T, period1, sigma, mag

      data Period  /  0, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25, 0.3, 0.4,
     1          0.5, 0.75, 1, 1.5, 2, 3, 4, 5, 7.5, 10  /
      data sig1 / 0.694, 0.694, 0.695, 0.695, 0.696, 0.697, 0.698, 0.699, 0.700, 0.701,
     1            0.701, 0.702, 0.702, 0.703, 0.704, 0.705, 0.705, 0.706, 0.706, 0.707,
     1            0.707, 0.707 /
      data sig2 / 0.652, 0.652, 0.653, 0.653, 0.655, 0.656, 0.657, 0.658, 0.659, 0.660,
     1            0.661, 0.662, 0.662, 0.664, 0.664, 0.665, 0.666, 0.667, 0.667, 0.667,
     1            0.668, 0.668 /

C     First check for the PGA
      if (specT .eq. 0.0) then
        period1 = period(1)
        sig1T = sig1(1)
        sig2T = sig2(1)
        goto 5
      endif

      nPer = 22
C     For other periods, loop over the spectral period range of the Sigma Model.
      do i = 2, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'SWUS Total Sigma Model: PVNGS Arizona Sources High'
C      write (*,*) 'Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), sig1(count1), sig1(count2),
     &    specT, sig1T, iflag )
      call interp ( period(count1), period(count2), sig2(count1), sig2(count2),
     &    specT, sig2T, iflag )

5     period1 = specT

C     Now compute the magnitude-dependent total sigma value.
      if (mag .ge. 7.0) then
         sigma = sig2T
      else
         sigma = sig1T + ((mag-5.0)/2.0)*(sig2T-sig1T)
      endif

      return
      end


C--------------------------------------------------------------------------------------
C     SWUS Total Sigma Model - PVNGS California Sources with Path Central
C     Scalc = 13007

      subroutine SWUS_Sigma_PVNGS_CAPath_Cen ( mag, specT, sigma, iflag )

      implicit none
      integer MAXPER
      parameter (MAXPER=22)
      integer nPer, count1, count2, i, iflag
      real specT, period(MAXPER), sig1(MAXPER)
      real sig1T, period1, sigma, mag

      data Period  /  0, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25, 0.3, 0.4,
     1          0.5, 0.75, 1, 1.5, 2, 3, 4, 5, 7.5, 10  /
      data sig1 / 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449,
     1            0.449, 0.449, 0.449, 0.473, 0.491, 0.517, 0.535, 0.535, 0.535, 0.535,
     1            0.535, 0.535 /

C     First check for the PGA
      if (specT .eq. 0.0) then
        period1 = period(1)
        sig1T = sig1(1)
        goto 5
      endif

      nPer = 22
C     For other periods, loop over the spectral period range of the Sigma Model.
      do i = 2, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'SWUS Total Sigma Model: PVNGS California Sources with Path Central'
C      write (*,*) 'Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), sig1(count1), sig1(count2),
     &    specT, sig1T, iflag )

5     period1 = specT

      sigma = sig1T

      return
      end

C--------------------------------------------------------------------------------------
C     SWUS Total Sigma Model - PVNGS California Sources with Path Low
C     Scalc = 13008

      subroutine SWUS_Sigma_PVNGS_CAPath_Low ( mag, specT, sigma, iflag )

      implicit none
      integer MAXPER
      parameter (MAXPER=22)
      integer nPer, count1, count2, i, iflag
      real specT, period(MAXPER), sig1(MAXPER)
      real sig1T, period1, sigma, mag

      data Period  /  0, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25, 0.3, 0.4,
     1          0.5, 0.75, 1, 1.5, 2, 3, 4, 5, 7.5, 10  /
      data sig1 / 0.354, 0.354, 0.354, 0.354, 0.354, 0.354, 0.354, 0.354, 0.354, 0.354,
     1            0.354, 0.354, 0.354, 0.375, 0.390, 0.410, 0.425, 0.425, 0.425, 0.425,
     1            0.425, 0.425 /

C     First check for the PGA
      if (specT .eq. 0.0) then
        period1 = period(1)
        sig1T = sig1(1)
        goto 5
      endif

      nPer = 22
C     For other periods, loop over the spectral period range of the Sigma Model.
      do i = 2, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'SWUS Total Sigma Model: PVNGS California Sources with Path Low'
C      write (*,*) 'Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), sig1(count1), sig1(count2),
     &    specT, sig1T, iflag )

5     period1 = specT

      sigma = sig1T

      return
      end


C--------------------------------------------------------------------------------------
C     SWUS Total Sigma Model - PVNGS California Sources with Path High
C     Scalc = 13009

      subroutine SWUS_Sigma_PVNGS_CAPath_High ( mag, specT, sigma, iflag )

      implicit none
      integer MAXPER
      parameter (MAXPER=22)
      integer nPer, count1, count2, i, iflag
      real specT, period(MAXPER), sig1(MAXPER)
      real sig1T, period1, sigma, mag

      data Period  /  0, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25, 0.3, 0.4,
     1          0.5, 0.75, 1, 1.5, 2, 3, 4, 5, 7.5, 10  /
      data sig1 / 0.552, 0.552, 0.552, 0.552, 0.552, 0.552, 0.552, 0.552, 0.552, 0.552,
     1            0.552, 0.552, 0.552, 0.579, 0.600, 0.631, 0.655, 0.655, 0.655, 0.655,
     1            0.655, 0.655 /

C     First check for the PGA
      if (specT .eq. 0.0) then
        period1 = period(1)
        sig1T = sig1(1)
        goto 5
      endif

      nPer = 22
C     For other periods, loop over the spectral period range of the Sigma Model.
      do i = 2, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'SWUS Total Sigma Model: PVNGS California Sources with Path High'
C      write (*,*) 'Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), sig1(count1), sig1(count2),
     &    specT, sig1T, iflag )

5     period1 = specT

      sigma = sig1T

      return
      end

C--------------------------------------------------------------------------------------
C     SWUS Total Sigma Model - PVNGS California Sources no Path Central
C     Scalc = 13010

      subroutine SWUS_Sigma_PVNGS_CAnoPath_Cen ( mag, specT, sigma, iflag )

      implicit none
      integer MAXPER
      parameter (MAXPER=22)
      integer nPer, count1, count2, i, iflag
      real specT, period(MAXPER), sig1(MAXPER)
      real sig1T, period1, sigma, mag

      data Period  /  0, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25, 0.3, 0.4,
     1          0.5, 0.75, 1, 1.5, 2, 3, 4, 5, 7.5, 10  /
      data sig1 / 0.613, 0.613, 0.613, 0.613, 0.613, 0.613, 0.613, 0.613, 0.612, 0.609,
     1            0.606, 0.598, 0.591, 0.579, 0.571, 0.561, 0.553, 0.544, 0.537, 0.532,
     1            0.525, 0.519 /

C     First check for the PGA
      if (specT .eq. 0.0) then
        period1 = period(1)
        sig1T = sig1(1)
        goto 5
      endif

      nPer = 22
C     For other periods, loop over the spectral period range of the Sigma Model.
      do i = 2, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'SWUS Total Sigma Model: PVNGS California Sources no Path Central'
C      write (*,*) 'Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), sig1(count1), sig1(count2),
     &    specT, sig1T, iflag )

5     period1 = specT

      sigma = sig1T

      return
      end

C--------------------------------------------------------------------------------------
C     SWUS Total Sigma Model - PVNGS California Sources no Path Low
C     Scalc = 13011

      subroutine SWUS_Sigma_PVNGS_CAnoPath_Low ( mag, specT, sigma, iflag )

      implicit none
      integer MAXPER
      parameter (MAXPER=22)
      integer nPer, count1, count2, i, iflag
      real specT, period(MAXPER), sig1(MAXPER)
      real sig1T, period1, sigma, mag

      data Period  /  0, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25, 0.3, 0.4,
     1          0.5, 0.75, 1, 1.5, 2, 3, 4, 5, 7.5, 10  /
      data sig1 / 0.512, 0.512, 0.512, 0.512, 0.512, 0.512, 0.512, 0.512, 0.511, 0.508,
     1            0.506, 0.499, 0.493, 0.483, 0.476, 0.467, 0.460, 0.452, 0.446, 0.442,
     1            0.435, 0.430 /

C     First check for the PGA
      if (specT .eq. 0.0) then
        period1 = period(1)
        sig1T = sig1(1)
        goto 5
      endif

      nPer = 22
C     For other periods, loop over the spectral period range of the Sigma Model.
      do i = 2, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'SWUS Total Sigma Model: PVNGS California Sources no Path Low'
C      write (*,*) 'Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), sig1(count1), sig1(count2),
     &    specT, sig1T, iflag )

5     period1 = specT

      sigma = sig1T

      return
      end

C--------------------------------------------------------------------------------------
C     SWUS Total Sigma Model - PVNGS California Sources no Path High
C     Scalc = 13012

      subroutine SWUS_Sigma_PVNGS_CAnoPath_High ( mag, specT, sigma, iflag )

      implicit none
      integer MAXPER
      parameter (MAXPER=22)
      integer nPer, count1, count2, i, iflag
      real specT, period(MAXPER), sig1(MAXPER)
      real sig1T, period1, sigma, mag

      data Period  /  0, 0.01, 0.02, 0.03, 0.05, 0.075, 0.1, 0.15, 0.2, 0.25, 0.3, 0.4,
     1          0.5, 0.75, 1, 1.5, 2, 3, 4, 5, 7.5, 10  /
      data sig1 / 0.720, 0.720, 0.720, 0.720, 0.720, 0.720, 0.720, 0.720, 0.718, 0.715,
     1            0.712, 0.702, 0.694, 0.681, 0.672, 0.660, 0.652, 0.641, 0.634, 0.629,
     1            0.620, 0.614 /

C     First check for the PGA
      if (specT .eq. 0.0) then
        period1 = period(1)
        sig1T = sig1(1)
        goto 5
      endif

      nPer = 22
C     For other periods, loop over the spectral period range of the Sigma Model.
      do i = 2, nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C     Selected spectral period is outside range defined by the model.
C      write (*,*)
C      write (*,*) 'SWUS Total Sigma Model: PVNGS California Sources no Path High'
C      write (*,*) 'Model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C     Interpolate the coefficients for the requested spectral period.
1020  call interp ( period(count1), period(count2), sig1(count1), sig1(count2),
     &    specT, sig1T, iflag )

5     period1 = specT

      sigma = sig1T

      return
      end

c ---------------------------------------------------------------------
C     *** Kale, O., Akkar, S., Ansari, A., & Hamzehloo, H. (2015). ***
c ---------------------------------------------------------------------

      subroutine KAAH_2015 ( mag, Rbjf, specT,
     1                     period2, lnY, sigma, iflag, vs, ftype, pgaref, region )

      parameter (MAXPER=20)
      REAL Period(MAXPER), a1(MAXPER), a2(MAXPER)
      real b1(MAXPER), b2(MAXPER), b3(MAXPER), b4(MAXPER), b5(MAXPER)
      Real b6(MAXPER), b7(MAXPER), b8(MAXPER), b9(MAXPER), b10(MAXPER)
	    real sd1(MAXPER), sd2(MAXPER), sb1(MAXPER), sb2(MAXPER)
      REAL da1(MAXPER), da2(MAXPER), dsd1(MAXPER), dsd2(MAXPER)
      real db1(MAXPER), db2(MAXPER), db3(MAXPER), db4(MAXPER), db5(MAXPER)
      Real db6(MAXPER), db7(MAXPER), db8(MAXPER), db9(MAXPER), db10(MAXPER)
      real specT, a1T, a2T, b1T, b2T, b3T, b4T, b5T, b6T, b7T, b8T, b9T, b10T
	    real sd1T, sd2T, sb1T, sb2T
      real a1p, a2p, b1p, b2p, b3p, b4p, b5p, b6p, b7p, b8p, b9p, b10p
	    real sd1p, sd2p, sb1p, sb2p
	    real a1a, a2a, b1a, b2a, b3a, b4a, b5a, b6a, b7a, b8a, b9a, b10a
	    real sd1a, sd2a, sb1a, sb2a
      real a1b, a2b, b1b, b2b, b3b, b4b, b5b, b6b, b7b, b8b, b9b, b10b
	    real sd1b, sd2b, sb1b, sb2b
      real mag, Rbjf, Vs, Ftype, Fn, Fr pgaref
      real c1, vref, vcon, LnY
      real c, n, term1
      INTEGER iFlag, count1, count2, region

      Data Period / 0.0, -1, 0.01, 0.02, 0.03, 0.04, 0.05, 0.075, 0.1, 0.15,
     1              0.2, 0.3, 0.4, 0.5, 0.75, 1, 1.5, 2, 3, 4 /
      Data b1   / 1.74221, 5.58266, 1.75746, 1.78825, 1.87916, 2.00393,
     1            2.16076, 2.52625, 2.72364, 2.91835, 2.85623, 2.44252,
     2            1.97772, 1.5641, 0.84856, 0.41833, -0.10161, -0.45413,
     3            -0.95276, -1.29675 /
      Data b2   / 0.193, 0.193, 0.193, 0.193, 0.193, 0.193, 0.193, 0.193,
     1            0.193, 0.193, 0.193, 0.193, 0.193, 0.193, 0.193, 0.193,
     2            0.193, 0.193, 0.193, 0.193 /
      Data b3   / -0.07049, -0.13822, -0.06981, -0.07058, -0.06976, -0.06732,
     1            -0.06226, -0.05082, -0.05217, -0.06397, -0.07494, -0.09387,
     2            -0.10977, -0.12342, -0.15056, -0.17099, -0.19999, -0.21978,
     3            -0.2453, -0.26119 /
      Data b4   / -1.18164, -0.94043, -1.18362, -1.18653, -1.19699, -1.21315,
     1            -1.24101, -1.3039, -1.32996, -1.31888, -1.27072, -1.16008,
     2            -1.05535, -0.97014, -0.83799, -0.77438, -0.72272, -0.70389,
     3            -0.69065, -0.6862 /
      Data b5   / 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17,
     1            0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17, 0.17 /
      Data b6   / 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 /
      Data b7   / -0.354, -0.354, -0.354, -0.354, -0.354, -0.354, -0.354,
     1            -0.354, -0.354, -0.354, -0.354, -0.354, -0.354, -0.354,
     2            -0.354, -0.354, -0.354, -0.354, -0.354, -0.354 /
      Data b8   / -0.01329, -0.17037, -0.01349, -0.01189, -0.00748, 0.00788,
     1            0.03907, 0.08131, 0.1, 0.06727, 0.0162, -0.03697, -0.06582,
     2            -0.08511, -0.11756, -0.14267, -0.14621, -0.14621, -0.14621,
     3            -0.14621 /
      Data b9   / -0.09158, -0.08609, -0.09158, -0.09158, -0.09158, -0.09158,
     1            -0.09158, -0.09158, -0.09158, -0.09158, -0.09158, -0.09158,
     2            -0.09158, -0.01297, 0, 0, 0, 0, 0, 0 /
      Data b10  / -0.00156, -0.00052, -0.00156, -0.0016, -0.0017, -0.00182,
     1            -0.00197, -0.00235, -0.00267, -0.00296, -0.00275, -0.00204,
     2            -0.00161, -0.00127, -0.00066, -0.00022, 0, 0, 0, 0 /
      Data a1   / 0.57, 0.56, 0.574, 0.577, 0.581, 0.584, 0.588, 0.597, 0.606,
     1            0.624, 0.642, 0.678, 0.7, 0.673, 0.62, 0.62, 0.62, 0.62,
     2            0.62, 0.62 /
      Data a2   / 0.45, 0.46, 0.453, 0.455, 0.458, 0.46, 0.463, 0.469, 0.475,
     1            0.488, 0.5, 0.525, 0.55, 0.55, 0.55, 0.55, 0.55, 0.55, 0.55,
     2            0.55 /
      Data sd1  / 1.0521, 1.0449, 1.0444, 1.0424, 1.0459, 1.0557, 1.0609,
     1            1.0692, 1.0429, 1.0063, 0.9781, 0.9407, 0.943, 0.9519,
     2            1.0489, 1.0534, 1.0988, 1.1594, 1.1596, 1.0373 /
      Data sd2  / 0.7203, 0.6452, 0.715, 0.7137, 0.7113, 0.7155, 0.7166,
     1            0.7677, 0.7735, 0.7442, 0.7213, 0.6547, 0.6413, 0.6496,
     2            0.6582, 0.6342, 0.6173, 0.5724, 0.6251, 0.5409 /
      Data sb1  / -0.41997, -0.72057, -0.41729, -0.39998, -0.34799, -0.27572,
     1            -0.21231, -0.13909, -0.26492, -0.48496, -0.64239, -0.82052,
     2            -0.90568, -0.95097, -1.00027, -1.01881, -0.96317, -0.91305,
     3            -0.84242, -0.79231 /
      Data sb2  / -0.28846, -0.19688, -0.28685, -0.28241, -0.26842, -0.24759,
     1            -0.22385, -0.17798, -0.28832, -0.39525, -0.44574, -0.45287,
     2            -0.41105, -0.37956, -0.32233, -0.28172, -0.22449, -0.18388,
     3            -0.12665, -0.08605 /
      Data db1  / -0.21234, 0.20834, -0.22738, -0.241, -0.25702, -0.2526,
     1            -0.24029, -0.13086, -0.02321, -0.23382, -0.33645, -0.30222,
     2            -0.16785, 0.01469, 0.40612, 0.58724, 0.75311, 0.83361,
     3            0.90733, 0.82641 /
      Data db2  / -0.146, -0.146, -0.146, -0.146, -0.146, -0.146, -0.146,
     1            -0.146, -0.146, -0.146, -0.146, -0.146, -0.146, -0.146,
     2            -0.146, -0.146, -0.146, -0.146, -0.146, -0.146 /
      Data db3  / -0.03826, -0.05505, -0.03877, -0.03674, -0.0337, -0.0285,
     1            -0.02834, -0.03978, -0.03843, -0.03475, -0.03634, -0.03939,
     2            -0.04263, -0.04586, -0.05345, -0.06008, -0.07073, -0.07873,
     3            -0.08977, -0.09696 /
      Data db4  / 0.1721, 0.0489, 0.1741, 0.1759, 0.1691, 0.1603, 0.1614,
     1            0.1655, 0.1596, 0.2061, 0.2205, 0.1969, 0.1435, 0.0897,
     2            -0.0031, -0.0498, -0.0875, -0.1008, -0.1097, -0.1125 /
      Data db5  / -0.12, -0.12, -0.12, -0.12, -0.12, -0.12, -0.12, -0.12,
     1            -0.12, -0.12, -0.12, -0.12, -0.12, -0.12, -0.12, -0.12,
     2            -0.12, -0.12, -0.12, -0.12 /
      Data db6  / 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 /
      Data db7  / 0.396, 0.396, 0.396, 0.396, 0.396, 0.396, 0.396, 0.396,
     1            0.396, 0.396, 0.396, 0.396, 0.396, 0.396, 0.396, 0.396,
     2            0.396, 0.396, 0.396, 0.396 /
      Data db8  / -0.11697, 0.17037, -0.11677, -0.11837, -0.12278, -0.13814,
     1            -0.16933, -0.21157, -0.23026, -0.19753, -0.14646, 0.03697,
     2            0.06582, 0.08511, 0.11756, 0.14267, 0.14621, 0.14621,
     3            0.14621, 0.14621 /
      Data db9  / 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.00185, 0.09158, 0.01297,
     1            0, 0, 0, 0, 0, 0 /
      Data db10 / 0.00156, 0.00052, 0.00156, 0.0016, 0.0017, 0.00182, 0.00197,
     1            0.00235, 0.00267, 0.00296, 0.00275, 0.00204, 0.00161, 0.00127,
     2            0.00066, 0.00022, 0, 0, 0, 0 /
      Data da1  / 0.12, 0.14, 0.116, 0.113, 0.109, 0.106, 0.122, 0.143, 0.154,
     1            0.136, 0.118, 0.082, 0.06, 0.087, 0.14, 0.16, 0.16, 0.16,
     2            0.16, 0.16 /
      Data da2  / 0.05, -0.02, 0.047, 0.045, 0.042, 0.04, 0.037, 0.031, 0.025,
     1            -0.018, -0.05, -0.075, -0.1, -0.1, -0.088, -0.025, 0.05,
     2            0.05, 0.05, 0.05 /
      Data dsd1 / -0.0808, -0.0597, -0.0723, -0.0701, -0.0705, -0.0597, -0.07,
     1            -0.0994, -0.0486, 0.0394, 0.1081, 0.0759, 0.0563, 0.0209,
     2            -0.0161, -0.0793, -0.1337, -0.2183, -0.2262, -0.2279 /
      Data dsd2 / -0.325, -0.3013, -0.3231, -0.318, -0.3143, -0.3064, -0.277,
     1            -0.3045, -0.3358, -0.2839, -0.305, -0.2651, -0.2308, -0.1724,
     2            -0.2379, -0.2569, -0.2358, -0.1482, -0.1356, -0.0862 /


C     Set parameters
      vref = 750.0
      c1 = 6.75
      c = 2.5
      n = 3.2
      vcon = 1000.0

C    Region=0 for Turkey
C    Region=1 for Iran
	    if (Region .eq. 0) then
          da1  =  da1  *0
          da2  =  da2  *0
          db1  =  db1  *0
          db2  =  db2  *0
          db3  =  db3  *0
          db4  =  db4  *0
          db5  =  db5  *0
          db6  =  db6  *0
          db7  =  db7  *0
          db8  =  db8  *0
          db9  =  db9  *0
          db10 =  db10 *0
          dsd1 =  dsd1 *0
          dsd2 =  dsd2 *0
		  dc1 = 0
		  else
		  dc1 =  0.25
      endif

c     Set Parameters to compute PGA rock
      a1p  = a1(1)  +  da1(1)
      a2p  = a2(1)  +  da2(1)
      b1p  = b1(1)  +  db1(1)
      b2p  = b2(1)  +  db2(1)
      b3p  = b3(1)  +  db3(1)
      b4p  = b4(1)  +  db4(1)
      b5p  = b5(1)  +  db5(1)
      b6p  = b6(1)  +  db6(1)
      b7p  = b7(1)  +  db7(1)
      b8p  = b8(1)  +  db8(1)
      b9p  = b9(1)  +  db9(1)
      b10p = b10(1) +  db10(1)
      sb1p = sb1(1)
      sb2p = sb2(1)
      sd1p = sd1(1) +  dsd1(1)
      sd2p = sd2(1) +  dsd2(1)

C First check for the PGA case (i.e., specT=0.0)
      nPer = 20
      if (specT .eq. 0.0) then
         period1 = period(1)
         a1T = a1(1)   +  da1(1)
         a2T = a2(1)   +  da2(1)
         b1T = b1(1)   +  db1(1)
         b2T = b2(1)   +  db2(1)
         b3T = b3(1)   +  db3(1)
         b4T = b4(1)   +  db4(1)
         b5T = b5(1)   +  db5(1)
         b6T = b6(1)   +  db6(1)
         b7T = b7(1)   +  db7(1)
         b8T = b8(1)   +  db8(1)
         b9T = b9(1)   +  db9(1)
         b10T = b10(1) +  db10(1)
         sb1T = sb1(1)
         sb2T = sb2(1)
         sd1T = sd1(1) +  dsd1(1)
         sd2T = sd2(1) +  dsd2(1)
         goto 1011
C Check for the PGV case (i.e., specT=-1.0)
      elseif (specT .eq. -1.0) then
         period1 = period(2)
         a1T = a1(2)   +  da1(2)
         a2T = a2(2)   +  da2(2)
         b1T = b1(2)   +  db1(2)
         b2T = b2(2)   +  db2(2)
         b3T = b3(2)   +  db3(2)
         b4T = b4(2)   +  db4(2)
         b5T = b5(2)   +  db5(2)
         b6T = b6(2)   +  db6(2)
         b7T = b7(2)   +  db7(2)
         b8T = b8(2)   +  db8(2)
         b9T = b9(2)   +  db9(2)
         b10T = b10(2) +  db10(2)
         sb1T = sb1(2)
         sb2T = sb2(2)
         sd1T = sd1(2) +  dsd1(2)
         sd2T = sd2(2) +  dsd2(2)
         goto 1011
      elseif (specT .gt. 0.0) then
C Now loop over the spectral period range of the attenuation relationship.
         do i=3,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1020
            endif
         enddo
      endif

C Selected spectral period is outside range defined by attenuaton model.
C      write (*,*)
C      write (*,*) 'Kale, et al. (2015) Horizontal'
C      write (*,*) 'attenuation model is not defined for a '
C      write (*,*) ' spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.

 1020 a1a  = a1(count1) + da1(count1)
      a2a  = a2(count1) + da2(count1)
      b1a  = b1(count1) + db1(count1)
      b2a  = b2(count1) + db2(count1)
      b3a  = b3(count1) + db3(count1)
      b4a  = b4(count1) + db4(count1)
      b5a  = b5(count1) + db5(count1)
      b6a  = b6(count1) + db6(count1)
      b7a  = b7(count1) + db7(count1)
      b8a  = b8(count1) + db8(count1)
      b9a  = b9(count1) + db9(count1)
      b10a = b10(count1)+ db10(count1)
      sd1a = sd1(count1)+ dsd1(count1)
      sd2a = sd2(count1)+ dsd2(count1)

      a1b  = a1(count2) + da1(count2)
      a2b  = a2(count2) + da2(count2)
      b1b  = b1(count2) + db1(count2)
      b2b  = b2(count2) + db2(count2)
      b3b  = b3(count2) + db3(count2)
      b4b  = b4(count2) + db4(count2)
      b5b  = b5(count2) + db5(count2)
      b6b  = b6(count2) + db6(count2)
      b7b  = b7(count2) + db7(count2)
      b8b  = b8(count2) + db8(count2)
      b9b  = b9(count2) + db9(count2)
      b10b = b10(count2)+ db10(count2)
      sd1b = sd1(count2)+ dsd1(count2)
      sd2b = sd2(count2)+ dsd2(count2)

            call interp (period(count1),period(count2),a1a,a1b,
     +                   specT,a1T,iflag)
            call interp (period(count1),period(count2),a2a,a2b,
     +                   specT,a2T,iflag)
            call interp (period(count1),period(count2),b1a,b1b,
     +                   specT,b1T,iflag)
            call interp (period(count1),period(count2),b2a,b2b,
     +                   specT,b2T,iflag)
            call interp (period(count1),period(count2),b3a,b3b,
     +                   specT,b3T,iflag)
            call interp (period(count1),period(count2),b4a,b4b,
     +                   specT,b4T,iflag)
            call interp (period(count1),period(count2),b5a,b5b,
     +                   specT,b5T,iflag)
            call interp (period(count1),period(count2),b6a,b6b,
     +                   specT,b6T,iflag)
            call interp (period(count1),period(count2),b7a,b7b,
     +                   specT,b7T,iflag)
            call interp (period(count1),period(count2),b8a,b8b,
     +                   specT,b8T,iflag)
            call interp (period(count1),period(count2),b9a,b9b,
     +                   specT,b9T,iflag)
            call interp (period(count1),period(count2),b10a,b10b,
     +                   specT,b10T,iflag)
            call interp (period(count1),period(count2),sd1a,sd1b,
     +                   specT,sd1T,iflag)
            call interp (period(count1),period(count2),sd2a,sd2b,
     +                   specT,sd2T,iflag)
            call interp (period(count1),period(count2),sb1(count1),sb1(count2),
     +                   specT,sb1T,iflag)
            call interp (period(count1),period(count2),sb2(count1),sb2(count2),
     +                   specT,sb2T,iflag)

 1011 period1 = specT

C.....Set the mechanism terms based on ftype............
C     Set mechanism term and corresponding Frv and Fnm values.
C     fType     Mechanism                      Rake
C     ------------------------------------------------------
C      -1       Normal                    -120 < Rake <  -60
C     -0.5      Normal/Oblique            -150 < Rake < -120
C                                          -60 < Rake <  -30
C       0       Strike-Slip               -180 < Rake < -150
C                                          -30 < Rake <   30
C                                          150 < Rake <  180
C      0.5      Reverse/Oblique             30 < Rake <   60
C                                          120 < Rake <  150
C       1       Reverse                     60 < Rake <  120
      if (ftype .eq. -1.0) then
         Fr = 0.0
         Fn = 1.0
      elseif (ftype .eq. -0.5) then
         Fr = 0.0
         Fn = 1.0
      elseif (ftype .eq. 0.0) then
         Fr = 0.0
         Fn = 0.0
      elseif (ftype .eq. 0.5) then
         Fr = 1.0
         Fn = 0.0
      elseif (ftype .eq. 1.0) then
         Fr = 1.0
         Fn = 0.0
      endif

C.....First compute the Reference Rock PGA value.........
      if (mag .le. c1+dc1) then
         fmag = b1p + b2p*(mag-(c1+dc1)) + b3p*(8.5-mag)**2.0
      else
         fmag = b1p + b7p*(mag-(c1+dc1)) + b3p*(8.5-mag)**2.0
      endif

         fdis = ( b4p + b5p*(mag-(c1+dc1)) ) * alog(sqrt(Rbjf*Rbjf+b6p*b6p))

         fsof = b8p*Fn + b9p*Fr

      if (Rbjf .le. 80) then
         faat = 0
      else
         faat = b10p *(Rbjf-80)
      endif

      term1 = fmag + fdis + fsof + faat
      pgaref = exp(term1)

C.....magnitude term........
      if (mag .le. c1+dc1) then
         fmag = b1T + b2T*(mag-(c1+dc1)) + b3T*(8.5-mag)**2.0
      else
         fmag = b1T + b7T*(mag-(c1+dc1)) + b3T*(8.5-mag)**2.0
      endif

C.....distance term........
         fdis = ( b4T + b5T*(mag-(c1+dc1)) ) * alog(sqrt(Rbjf*Rbjf+b6T*b6T))

C.....Style of fault term........
         fsof = b8T*Fn + b9T*Fr

C.....anelastic attenuation term........
      if (Rbjf .le. 80) then
         faat = 0
      else
         faat = b10T *(Rbjf-80)
      endif

C.....Site Response Term.........
      if (vs .lt. vref) then
        fsite = sb1T*alog(vs/vref) +
     1          sb2T*alog((pgaref+c*(vs/vref)**n)/((pgaref+c)*(vs/vref)**n))
      else
        fsite = sb1T*alog(min(vs,vcon)/vref)
      endif



      lnY = fmag + fdis + fsof + faat + fsite


C     Convert ground motion to units of gals.
      lnY = lnY + 6.89

      period2 = period1

C.....magnitude-dependent sigma.....

      if (mag .lt. 6.0) then
         w = a1T
       elseif(mag .lt. 6.5 .and. mag .ge. 6.0) then
         w = a1T + (a2T - a1T)*((mag - 6.0)/0.5)
       else
         w = a2T
      endif

      phi = w * sd1T
      tau = w * sd2T

      sigma = sqrt (tau**2 + phi**2)

      return
      END

c -------------------------------------------------------------------
C **** Zhao et al. 2016 (BSSA, Vol 106, No.4) *************
c -------------------------------------------------------------------

      subroutine Zhaoetal2016_int ( m, dist, ftype, lnY, sigma, sclass, specT,
     1                   attenName, period1, iflag, sourcetype, depth, phiT, tauT )

c     This  subroutine calculates the spectral acceleration from the
c     Zhao et al. (2016) attenuation model which is defined for subduction
c     interface events. Four separate site classes are also modeled.

      parameter (MAXPER=37)
      real ftype, dist, m, lnY, sigma, specT, sourcetype, sclass, cm, cmax, r
      real period(MAXPER), Amax1(MAXPER), SRC1(MAXPER), Amax2(MAXPER)
      real SRC2(MAXPER), Amax3(MAXPER), SRC3(MAXPER), Amax4(MAXPER), SRC4(MAXPER)
      real AmSCI(MAXPER), fsr1(MAXPER), fsr2(MAXPER), fsr3(MAXPER), fsr4(MAXPER)
      real c1(MAXPER), c2(MAXPER), gamma(MAXPER)
      real CintS(MAXPER), CintD(MAXPER), dint(MAXPER), bint(MAXPER), gint(MAXPER)
      real gintLS(MAXPER), gintLD(MAXPER), eintS(MAXPER), gammaS(MAXPER)
      real S2(MAXPER), S3(MAXPER), S4(MAXPER), S5(MAXPER), S6(MAXPER), S7(MAXPER)
      real phiS1(MAXPER), tauS1(MAXPER), sigma1(MAXPER), phiS2(MAXPER), tauS2(MAXPER)
      real sigma2(MAXPER), phiS3(MAXPER), tauS3(MAXPER), sigma3(MAXPER), phiS4(MAXPER)
      real tauS4(MAXPER), sigma4(MAXPER), phi(MAXPER), tau(MAXPER)
      character*80 attenName
      integer nper, count1, count2, iflag, xinto
      real Amax1T, SRC1T, Amax2T, SRC2T, Amax3T, SRC3T, Amax4T, SRC4T
      real AmSCIT, fsr1T, fsr2T, fsr3T, fsr4T
      real c1T, c2T
      real CintST, CintDT, dintT, bintT, gintT, gintLST, gintLDT, eintST
      real gammaT, gammaST, S2T, S3T, S4T, S5T, S6T, S7T
      real phiS1T, tauS1T, sigma1T, phiS2T, tauS2T
      real sigma2T, phiS3T, tauS3T, sigma3T, phiS4T
      real tauS4T, sigma4T, phiT, tauT
      real mech, rockterm, ANmax, Amax, Sr, Src, fsr, Sreff, Sreffc, Snc, Sf, Smr
      real fm, gmterm, gmLterm, eterm, logAn, Imf

      data period / 0, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09,
     1              0.1, 0.12, 0.14, 0.15, 0.16, 0.18, 0.2, 0.25, 0.3, 0.35,
     1              0.4, 0.45, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.25, 1.5, 2, 2.5,
     1              3, 3.5, 4, 4.5, 5 /

      data Amax1 / 1.916, 1.919, 1.922, 1.925, 1.921, 1.959, 2.013, 2.049, 2.046,
     1             2.066, 2.1, 2.143, 2.122, 2.092, 2.053, 1.923, 1.793, 1.793,
     1             1.793, 1.793, 1.793, 1.793, 1.793, 1.793, 1.793, 1.793, 1.793,
     1             1.793, 1.793, 1.793, 1.793, 1.793, 1.793, 1.793, 1.793, 1.793, 1.793/
      data  SRC1 /8.42900,8.09039,6.99211,6.34965,
     &   4.88339,5.04257,6.27132,7.66694,9.03436,11.25066,14.81739,
     &  14.81739,14.81739,14.81739,14.81739,14.81739,14.81739,14.81739,
     &  14.81739,14.81739,14.81739,14.81739,14.81739,14.81739,14.81739,
     &  14.81739,14.81739,14.81739,14.81739,14.81739,14.81739,14.81739,
     &  14.81739,14.81739,14.81739,14.81739,14.81739/
      data Amax2 / 2.033, 2.027, 2.003, 1.989, 2.012, 2.017, 2.064, 2.103, 2.195,
     1             2.219, 2.263, 2.329, 2.188, 2.214, 2.245, 2.324, 2.405, 2.554,
     1             2.586, 2.718, 2.718, 2.718, 2.718, 2.718, 2.718, 2.718, 2.718,
     1             2.718, 2.718, 2.718, 2.718, 2.718, 2.718, 2.718, 2.718, 2.718,
     1             2.718/
      data  SRC2 /1.91368,1.88256,1.77861,1.71781,
     &  2.05234,2.38713,2.83399,3.29447,3.99091,4.46576,5.04561,5.89960,
     &  5.05353,5.20490,5.38694,5.87165,6.57391,8.50000,10.67030,
     & 10.67030,10.67030,10.67030,10.67030,10.67030,10.67030,10.67030,
     & 10.67030,10.67030,10.67030,10.67030,10.67030,10.67030,10.67030,
     & 10.67030,10.67030,10.67030,10.67030/
      data Amax3 / 1.905, 1.908, 1.894, 1.886, 1.833, 1.854, 1.893, 1.924, 1.974,
     1             2.032, 2.052, 2.066, 2.107, 2.14, 2.156, 2.132, 2.05, 1.925,
     1             2.006, 2.179, 2.288, 2.402, 2.522, 2.648, 2.78, 2.919, 3.065,
     1             3.217, 3.378, 3.547, 3.724, 3.909, 4.104, 4.309, 4.524, 4.75,
     1             4.987/
      data  SRC3 /1.11714,1.11444,1.12437,1.13017,
     &  1.15080,1.23971,1.34819,1.45181,1.58315,1.73292,1.84134,2.03029,
     %  2.28133,2.44413,2.58017,2.74161,2.82587,2.71893,2.41759,2.30375,
     &  2.23625,2.21678,2.24338,2.80535,6.65839,30.0,30.0,30.0,30.0,
     &  30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0/
      data Amax4 / 1.498, 1.498, 1.474, 1.46, 1.374, 1.363, 1.384, 1.425, 1.481,
     1             1.525, 1.549, 1.603, 1.67, 1.706, 1.734, 1.773, 1.816, 1.843,
     1             1.871, 1.878, 1.911, 1.899, 1.927, 1.987, 2.025, 2.043, 2.022,
     1             1.97, 1.843, 1.729, 1.583, 1.504, 1.439, 1.391, 1.362, 1.34, 1.729/
      data  SRC4 /0.83644,0.83644,0.83000,0.82624,
     &  0.76758,0.78632,0.83775,0.92616,1.02228,1.11802,1.16578,1.28551,
     &  1.39808,1.44327,1.47177,1.54694,1.64401,1.79013,1.82345,1.79037,
     &  1.76844,1.67539,1.62539,1.52453,1.39724,1.32029,1.26637,1.22680,
     &  1.22065,1.31805,2.12485,14.38181,14.38181,14.38181,14.38181,
     &  14.38181,14.38181/
      data fsr1  /1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,
     &        1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
     &        0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0/
      data fsr2  /1.0,1.0,1.0,1.0,0.843,0.663,0.841,
     &     1.029,1.235,1.144,1.092,0.945,0.624,0.577,0.545,0.527,0.546,
     &     0.596,0.623,0.701,0.708,0.737,0.748,0.728,0.634,0.0,0.0,0.0,
     &     0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0/
      data fsr3   /1.165,0.944,1.012,1.1,0.959,0.889,
     &     0.946,1.006,1.065,1.093,1.077,1.036,0.895,0.860,0.822,0.743,
     &     0.663,0.487,0.447,0.473,0.487,0.511,0.536,0.540,0.477,0.0,
     &     0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0/
      data fsr4   /1.0,1.0,1.0,1.0,0.557,0.543,0.574,
     &     0.648,0.721,0.809,1.015,0.972,0.967,0.963,0.953,0.967,1.005,
     &     1.045,1.035,1.008,1.007,0.981,0.990,1.016,1.022,1.023,0.997,
     &     0.948,0.802,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0/
      data c1     /-5.30119,-5.28844,-5.27568,-5.26822,
     &       -5.26293,-5.25882,-5.25547,-5.25263,-5.25017,-5.24801,
     &       -5.24607,-5.24271,-5.23988,-5.23861,-5.23742,-5.23525,
     &       -5.23331,-5.22921,-5.22585,-5.22302,-5.22056,-5.21839,
     &       -5.21645,-5.21310,-5.21026,-5.20781,-5.20564,-5.20370,
     &       -5.19959,-5.19624,-5.19095,-5.18684,-5.18349,-5.18065,
     &       -5.17819,-5.17602,-5.17409/
      data c2     /1.151,1.151,1.151,1.151,1.151,1.151,1.151,
     &        1.151,1.151,1.151,1.151,1.151,1.151,1.151,1.151,1.151,
     &        1.151,1.151,1.151,1.151,1.151,1.151,1.151,1.151,1.151,
     &        1.151,1.151,1.151,1.151,1.151,1.151,1.151,1.151,1.151,
     &        1.151,1.151,1.151/
      data cintD  /1.09973,1.09848,1.09227,1.10690,1.11578,
     &        1.10234,1.08611,1.07291,1.06383,1.05863,1.05673,1.06051,
     &        1.07135,1.07856,1.08664,1.10470,1.12443,1.17689,1.22970,
     &        1.28058,1.32873,1.37394,1.41630,1.49310,1.56069,1.62055,
     &        1.67390,1.72171,1.82188,1.90081,2.01482,2.08892,2.13574,
     &        2.16254,2.17393,2.17301,2.16199/
      data cintS  /1.31479,1.31739,1.31919,1.34096,1.38051,
     &        1.43246,1.46238,1.47120,1.46432,1.44695,1.42323,1.36833,
     &        1.31558,1.29277,1.27319,1.24828,1.23715,1.22387,1.22846,
     &        1.24219,1.26077,1.28190,1.30432,1.35019,1.39523,1.43824,
     &        1.47881,1.51685,1.60148,1.67280,1.78372,1.86241,1.91711,
     &        1.95322,1.97450,1.98361,1.98255/
      data dint   /0.553,0.553,0.553,0.553,0.553,0.553,0.553,
     &        0.553,0.553,0.553,0.553,0.553,0.553,0.553,0.553,0.553,
     &        0.553,0.553,0.553,0.553,0.553,0.553,0.553,0.553,0.560,
     &        0.580,0.602,0.622,0.667,0.705,0.768,0.820,0.863,0.902,
     &        0.935,0.966,0.994/
      data gammaS /-3.89528,-3.89528,-3.89528,-3.89528,
     &         -3.89528,-3.89528,-3.89528,-3.89528,-3.89461,-3.90179,
     &         -3.90765,-3.91644,-3.92273,-3.92526,-3.92753,-3.93130,
     &         -3.93446,-3.94068,-3.94547,-3.94943,-3.95273,-3.95558,
     &         -3.95795,-3.96181,-3.96483,-3.96729,-3.96962,-3.97202,
     &         -3.97949,-3.99048,-4.02652,-4.08299,-4.15939,-4.25418,
     &         -4.36584,-4.49267,-4.63313/
      data bint  /0.01999,0.01999,0.01999,0.02066,0.02308,
     &       0.02709,0.02972,0.03207,0.03196,0.02972,0.02789,0.02470,
     &       0.02117,0.01951,0.01793,0.01505,0.01255,0.00769,0.00438,
     &       0.00215,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
     &       0.0,0.0,0.0,0.0,0.0/
      data gint   /-2.05587,-2.06565,-2.10231,-2.19232,
     &  -2.24640,-2.29341,-2.31172,-2.31101,-2.28778,-2.24680,-2.20410,
     &  -2.12011,-2.04337,-2.01088,-1.98301,-1.94607,-1.92702,-1.89876,
     &  -1.89141,-1.89299,-1.89531,-1.90578,-1.91467,-1.92743,-1.93452,
     &  -1.93739,-1.93725,-1.93505,-1.92471,-1.91189,-1.88859,-1.87252,
     &  -1.86345,-1.85969,-1.85953,-1.86151,-1.86451/
      data gintLD /0.54541,0.54975,0.56172,0.57887,
     &        0.49333,0.49100,0.50848,0.52750,0.54595,0.56307,0.57615,
     &        0.59258,0.60983,0.61961,0.63085,0.66196,0.69978,0.78447,
     &        0.85939,0.92338,0.98011,1.02220,1.05874,1.11803,1.16302,
     &        1.19735,1.22362,1.24367,1.27245,1.28541,1.28830,1.27727,
     &        1.26049,1.24107,1.22026,1.19859,1.17629/
      data gintLS /1.13364,1.13365,1.13365,1.13364,0.98811,
     &        0.90444,0.88766,0.90491,0.94206,0.98652,1.03553,1.13529,
     &        1.23424,1.28134,1.32659,1.41134,1.48854,1.65209,1.78127,
     &        1.88438,1.96763,2.03554,2.09142,2.17640,2.23600,2.27831,
     &        2.30847,2.32985,2.35853,2.36653,2.35536,2.33106,2.30409,
     &        2.27794,2.25371,2.23161,2.21149/
      data eintS  /-0.00628,-0.00625,-0.00616,-0.00572,
     &  -0.00532,-0.00503,-0.00528,-0.00569,-0.00619,-0.00673,-0.00718,
     &  -0.00793,-0.00853,-0.00879,-0.00902,-0.00927,-0.00942,-0.00959,
     %  -0.00952,-0.00933,-0.00911,-0.00888,-0.00866,-0.00824,-0.00787,
     &  -0.00755,-0.00726,-0.00700,-0.00644,-0.00597,-0.00518,-0.00451,
     &  -0.00393,-0.00344,-0.00302,-0.00267,-0.00240/
      data gamma  /-4.49858,-4.45894,-4.25807,-3.91800,
     &  -3.11423,-2.76035,-2.64088,-2.65622,-2.75266,-2.89920,-3.07698,
     &  -3.48283,-3.91612,-4.13481,-4.35243,-4.78030,-5.19439,-6.15803,
     &  -7.02003,-7.79153,-8.49551,-9.11351,-9.68515,-10.68946,
     & -11.54596,-12.28722,-12.93630,-13.51000,-14.69034,-15.60298,
     & -16.90010,-17.73658,-18.27135,-18.59264,-18.75474,-18.79351,
     & -18.73393/
      data AmSCI  / 1.358, 1.247, 1.149, 1.097, 1.065, 1.037, 1.038, 1.05, 1.103,
     1              1.191, 1.278, 1.401, 1.525, 1.578, 1.626, 1.706, 1.768, 1.868,
     1              1.917, 1.939, 1.944, 1.944, 1.943, 1.927, 1.912, 1.893, 1.874,
     1              1.853, 1.799, 1.74, 1.619, 1.508, 1.416, 1.347, 1.303, 1.285, 1.267 /
      data S2    /0.31288,0.30850,0.29297,0.22869,0.16316,
     &  0.12129,0.12345,0.13970,0.16385,0.20501,0.24449,0.32284,0.40120,
     &  0.43622,0.46736,0.51201,0.53926,0.58602,0.60465,0.60640,0.60277,
     &  0.58043,0.55692,0.50969,0.46501,0.42440,0.38841,0.35703,0.29673,
     &  0.25785,0.22262,0.21840,0.21595,0.21595,0.21595,0.21595,0.21595/
      data S3     /-0.00431,-0.01115,-0.02166,-0.11291,
     & -0.18870,-0.22831,-0.21920,-0.19009,-0.15499,-0.11250,-0.07508,
     &  0.01500,0.09699,0.14588,0.18793,0.25154,0.30298,0.42692,0.51620,
     &  0.56951,0.62366,0.65814,0.68671,0.71220,0.71239,0.69938,0.67996,
     &  0.65828,0.61928,0.58288,0.52620,0.48720,0.45698,0.42809,0.39524,
     &  0.35488,0.30468/
      data S4     /0.22838,0.22305,0.20892,0.13314,0.06959,
     &  0.02845,0.00070,-0.00949,-0.00485,0.03047,0.06080,0.14231,
     &  0.22696,0.25758,0.30748,0.35974,0.40313,0.50765,0.57779,0.63821,
     &  0.70323,0.75082,0.79378,0.84953,0.87979,0.89539,0.90256,0.90528,
     &  0.91793,0.92130,0.91709,0.90551,0.88668,0.85880,0.82025,0.76990,
     &  0.70705/
      data S5     /0.31288,0.30850,0.29297,0.22869,0.16316,
     &  0.12129,0.12345,0.13970,0.16385,0.20501,0.24449,0.32284,0.40120,
     &  0.43622,0.46736,0.51201,0.53926,0.58602,0.60465,0.60640,0.60277,
     &  0.58043,0.55692,0.50969,0.46501,0.42440,0.38841,0.35703,0.29673,
     &  0.25785,0.22262,0.21840,0.21595,0.21595,0.21595,0.21595,0.21595/
      data S6     /-0.00431,-0.01115,-0.02166,-0.08291,
     & -0.18870,-0.22831,-0.21920,-0.19009,-0.15499,-0.11250,-0.07508,
     &  0.01500,0.09699,0.13588,0.17293,0.24154,0.30298,0.42692,0.51620,
     &  0.57951,0.63366,0.65814,0.68671,0.71220,0.71239,0.69938,0.67996,
     &  0.65828,0.61928,0.58288,0.52620,0.48720,0.45698,0.42809,0.39524,
     &  0.35488,0.30468/
      data S7     /0.22838,0.22305,0.20892,0.16314,0.05959,
     &  0.00845,0.00070,0.00551,0.01415,0.04047,0.07080,0.14031,0.20196,
     &  0.23258,0.26248,0.31974,0.37313,0.48765,0.57779,0.64821,0.71323,
     &  0.75082,0.79378,0.84953,0.87979,0.89539,0.90256,0.90528,0.91793,
     &  0.92130,0.91709,0.90551,0.88668,0.85880,0.82025,0.76990,0.70705/
      data phiS1    / 0.388, 0.388, 0.386, 0.383, 0.386, 0.386, 0.386, 0.389, 0.397,
     1              0.402, 0.406, 0.411, 0.413, 0.414, 0.416, 0.423, 0.426, 0.424,
     1              0.422, 0.413, 0.413, 0.419, 0.409, 0.395, 0.395, 0.392, 0.395,
     1              0.402, 0.408, 0.409, 0.415, 0.406, 0.397, 0.388, 0.39, 0.384,
     1              0.394 /
      data tauS1    / 0.419, 0.42, 0.425, 0.444, 0.474, 0.486, 0.5, 0.531, 0.553,
     1              0.559, 0.562, 0.564, 0.556, 0.552, 0.548, 0.534, 0.528, 0.493,
     1              0.471, 0.474, 0.449, 0.423, 0.415, 0.419, 0.429, 0.427, 0.433,
     1              0.453, 0.457, 0.464, 0.464, 0.441, 0.412, 0.394, 0.376, 0.363,
     1              0.346 /
      data sigma1   / 0.571, 0.571, 0.574, 0.586, 0.611, 0.62, 0.632, 0.658, 0.681,
     1              0.688, 0.693, 0.697, 0.692, 0.69, 0.688, 0.681, 0.679, 0.65,
     1              0.632, 0.629, 0.61, 0.595, 0.583, 0.576, 0.583, 0.58, 0.586,
     1              0.606, 0.613, 0.619, 0.623, 0.599, 0.572, 0.553, 0.541, 0.528,
     1              0.525 /
      data phiS2    / 0.421, 0.421, 0.42, 0.42, 0.42, 0.419, 0.419, 0.42, 0.424,
     1              0.425, 0.424, 0.424, 0.439, 0.44, 0.446, 0.454, 0.469, 0.468,
     1              0.473, 0.481, 0.47, 0.464, 0.457, 0.45, 0.442, 0.444, 0.434,
     1              0.428, 0.425, 0.441, 0.437, 0.438, 0.44, 0.435, 0.442, 0.441,
     1              0.461 /
      data tauS2    / 0.424, 0.424, 0.425, 0.422, 0.434, 0.44, 0.449, 0.466, 0.489,
     1              0.521, 0.54, 0.537, 0.56, 0.574, 0.573, 0.557, 0.532, 0.551,
     1              0.509, 0.485, 0.496, 0.495, 0.473, 0.45, 0.454, 0.448, 0.446,
     1              0.445, 0.457, 0.448, 0.458, 0.443, 0.441, 0.424, 0.409, 0.393,
     1              0.408 /
      data sigma2   / 0.597, 0.598, 0.598, 0.595, 0.604, 0.608, 0.614, 0.628, 0.647,
     1              0.672, 0.687, 0.684, 0.712, 0.724, 0.726, 0.719, 0.71, 0.723,
     1              0.695, 0.683, 0.683, 0.679, 0.658, 0.636, 0.634, 0.631, 0.622,
     1              0.617, 0.624, 0.628, 0.633, 0.623, 0.623, 0.608, 0.603, 0.591,
     1              0.615 /
      data phiS3    / 0.393, 0.393, 0.394, 0.397, 0.394, 0.399, 0.398, 0.412, 0.406,
     1              0.406, 0.403, 0.415, 0.407, 0.41, 0.404, 0.411, 0.414, 0.41,
     1              0.398, 0.4, 0.393, 0.389, 0.383, 0.385, 0.385, 0.393, 0.392,
     1              0.394, 0.402, 0.421, 0.412, 0.419, 0.399, 0.403, 0.398, 0.384,
     1              0.375 /
      data tauS3    / 0.376, 0.377, 0.376, 0.386, 0.393, 0.384, 0.379, 0.377, 0.374,
     1              0.381, 0.409, 0.48, 0.44, 0.427, 0.429, 0.436, 0.437, 0.398,
     1              0.421, 0.457, 0.463, 0.447, 0.435, 0.434, 0.448, 0.44, 0.445,
     1              0.422, 0.428, 0.434, 0.47, 0.446, 0.4, 0.353, 0.365, 0.349,
     1              0.293 /
      data sigma3   / 0.544, 0.545, 0.544, 0.553, 0.557, 0.554, 0.55, 0.558, 0.552,
     1              0.557, 0.574, 0.635, 0.599, 0.592, 0.589, 0.6, 0.602, 0.572,
     1              0.579, 0.607, 0.607, 0.593, 0.579, 0.58, 0.591, 0.59, 0.593,
     1              0.578, 0.587, 0.604, 0.625, 0.612, 0.565, 0.536, 0.54, 0.519,
     1              0.476 /
      data phiS4    / 0.458, 0.416, 0.415, 0.415, 0.421, 0.419, 0.42, 0.42, 0.419,
     1              0.419, 0.423, 0.426, 0.438, 0.43, 0.437, 0.455, 0.456, 0.452,
     1              0.439, 0.432, 0.423, 0.419, 0.42, 0.403, 0.412, 0.417, 0.407,
     1              0.406, 0.419, 0.415, 0.409, 0.421, 0.414, 0.407, 0.396, 0.38,
     1              0.371 /
      data tauS4    / 0.346, 0.348, 0.352, 0.355, 0.362, 0.375, 0.388, 0.41, 0.416,
     1              0.435, 0.469, 0.517, 0.507, 0.504, 0.496, 0.488, 0.481, 0.448,
     1              0.442, 0.442, 0.435, 0.418, 0.432, 0.442, 0.454, 0.468, 0.485,
     1              0.498, 0.507, 0.505, 0.524, 0.529, 0.524, 0.535, 0.542, 0.53,
     1              0.514 /
      data sigma4   / 0.574, 0.543, 0.544, 0.546, 0.555, 0.562, 0.571, 0.587, 0.591,
     1              0.604, 0.632, 0.67, 0.67, 0.663, 0.661, 0.667, 0.663, 0.637,
     1              0.623, 0.618, 0.607, 0.592, 0.603, 0.598, 0.613, 0.627, 0.633,
     1              0.642, 0.657, 0.653, 0.665, 0.676, 0.668, 0.672, 0.671, 0.652,
     1              0.633 /
      data phi /0.553,0.554,0.553,0.555,0.565,0.570,0.583,
     &    0.602,0.614,0.625,0.637,0.646,0.654,0.659,0.663,0.672,0.678,
     &    0.659,0.640,0.634,0.627,0.620,0.612,0.613,0.625,0.628,0.628,
     &    0.633,0.636,0.644,0.635,0.619,0.599,0.581,0.568,0.551,0.563/
      data tau /0.669,0.670,0.673,0.682,0.709,0.734,
     &    0.760,0.784,0.793,0.797,0.796,0.789,0.773,0.773,0.774,0.776,
     &    0.778,0.753,0.729,0.729,0.720,0.719,0.712,0.720,0.739,0.743,
     &    0.743,0.750,0.753,0.754,0.741,0.734,0.712,0.692,0.682,0.667,
     &    0.675/

c Set attenuation name
c     Sourcetype = 0 Crustal
c     Sourcetype = 1 Subduction - Interface
c     Sourcetype = 2 Subduction - Slab
c     Sourcetype = 3 Upper mantle
c     Sclass = 0 Hard Rock
c     Sclass = 1 SC I
c     Sclass = 2 SC II
c     Sclass = 3 SC III
c     Sclass = 4 SC IV


C Find the requested spectral period and corresponding coefficients
      nper = 37

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
       period1 = period(1)
       Amax1T =  Amax1(1)
       SRC1T =   SRC1(1)
       Amax2T =  Amax2(1)
       SRC2T =   SRC2(1)
       Amax3T =  Amax3(1)
       SRC3T =   SRC3(1)
       Amax4T =  Amax4(1)
       SRC4T =   SRC4(1)
       AmSCIT =  AmSCI(1)
       fsr1T = fsr1(1)
       fsr2T = fsr2(1)
       fsr3T = fsr3(1)
       fsr4T = fsr4(1)
       c1T =     c1(1)
       c2T =     c2(1)
       CintST =    CintS(1)
       CintDT =    CintD(1)
       dintT =    dint(1)
       bintT =    bint(1)
       gintT =    gint(1)
       gintLST =   gintLS(1)
       gintLDT =   gintLD(1)
       eintST =    eintS(1)
       gammaT =  gamma(1)
       gammaST =  gammaS(1)
       S2T =     S2(1)
       S3T =     S3(1)
       S4T =     S4(1)
       S5T =     S5(1)
       S6T =     S6(1)
       S7T =     S7(1)
       phiS1T =  phiS1(1)
       tauS1T =  tauS1(1)
       sigma1T = sigma1(1)
       phiS2T =  phiS2(1)
       tauS2T =  tauS2(1)
       sigma2T = sigma2(1)
       phiS3T =  phiS3(1)
       tauS3T =  tauS3(1)
       sigma3T = sigma3(1)
       phiS4T =  phiS4(1)
       tauS4T =  tauS4(1)
       sigma4T = sigma4(1)
       phiT =  phi(1)
       tauT =  tau(1)
       goto 1011
      elseif (specT .ne. 0.0) then

C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1010
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Zhao et al. (2016) Horizontal atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1010    call interp (period(count1),period(count2),Amax1(count1),Amax1(count2),
     +                specT,Amax1T,iflag)
         call interp (period(count1),period(count2),SRC1(count1),SRC1(count2),
     +                specT,SRC1T,iflag)
         call interp (period(count1),period(count2),Amax2(count1),Amax2(count2),
     +                specT,Amax2T,iflag)
         call interp (period(count1),period(count2),SRC2(count1),SRC2(count2),
     +                specT,SRC2T,iflag)
         call interp (period(count1),period(count2),Amax3(count1),Amax3(count2),
     +                specT,Amax3T,iflag)
         call interp (period(count1),period(count2),SRC3(count1),SRC3(count2),
     +                specT,SRC3T,iflag)
         call interp (period(count1),period(count2),Amax4(count1),Amax4(count2),
     +                specT,Amax4T,iflag)
         call interp (period(count1),period(count2),SRC4(count1),SRC4(count2),
     +                specT,SRC4T,iflag)
         call interp (period(count1),period(count2),AmSCI(count1),AmSCI(count2),
     +                specT,AmSCIT,iflag)
         call interp (period(count1),period(count2),fsr1(count1),fsr1(count2),
     +                specT,fsr1T,iflag)
         call interp (period(count1),period(count2),fsr2(count1),fsr2(count2),
     +                specT,fsr2T,iflag)
         call interp (period(count1),period(count2),fsr3(count1),fsr3(count2),
     +                specT,fsr3T,iflag)
         call interp (period(count1),period(count2),fsr4(count1),fsr4(count2),
     +                specT,fsr4T,iflag)
         call interp (period(count1),period(count2),c1(count1),c1(count2),
     +                specT,c1T,iflag)
         call interp (period(count1),period(count2),c2(count1),c2(count2),
     +                specT,c2T,iflag)
         call interp (period(count1),period(count2),CintS(count1),CintS(count2),
     +                specT,CintST,iflag)
         call interp (period(count1),period(count2),CintD(count1),CintD(count2),
     +                specT,CintDT,iflag)
         call interp (period(count1),period(count2),dint(count1),dint(count2),
     +                specT,dintT,iflag)
         call interp (period(count1),period(count2),bint(count1),bint(count2),
     +                specT,bintT,iflag)
         call interp (period(count1),period(count2),gint(count1),gint(count2),
     +                specT,gintT,iflag)
         call interp (period(count1),period(count2),gintLS(count1),gintLS(count2),
     +                specT,gintLST,iflag)
         call interp (period(count1),period(count2),gintLD(count1),gintLD(count2),
     +                specT,gintLDT,iflag)
         call interp (period(count1),period(count2),eintS(count1),eintS(count2),
     +                specT,eintST,iflag)
         call interp (period(count1),period(count2),gammaS(count1),gammaS(count2),
     +                specT,gammaST,iflag)
         call interp (period(count1),period(count2),gamma(count1),gamma(count2),
     +                specT,gammaT,iflag)
         call interp (period(count1),period(count2),S2(count1),S2(count2),
     +                specT,S2T,iflag)
         call interp (period(count1),period(count2),S3(count1),S3(count2),
     +                specT,S3T,iflag)
         call interp (period(count1),period(count2),S4(count1),S4(count2),
     +                specT,S4T,iflag)
         call interp (period(count1),period(count2),S5(count1),S5(count2),
     +                specT,S5T,iflag)
         call interp (period(count1),period(count2),S6(count1),S6(count2),
     +                specT,S6T,iflag)
         call interp (period(count1),period(count2),S7(count1),S7(count2),
     +                specT,S7T,iflag)
         call interp (period(count1),period(count2),phiS1(count1),phiS1(count2),
     +                specT,phiS1T,iflag)
         call interp (period(count1),period(count2),tauS1(count1),tauS1(count2),
     +                specT,tauS1T,iflag)
         call interp (period(count1),period(count2),sigma1(count1),sigma1(count2),
     +                specT,sigma1T,iflag)
         call interp (period(count1),period(count2),phiS2(count1),phiS2(count2),
     +                specT,phiS2T,iflag)
         call interp (period(count1),period(count2),tauS2(count1),tauS2(count2),
     +                specT,tauS2T,iflag)
         call interp (period(count1),period(count2),sigma2(count1),sigma2(count2),
     +                specT,sigma2T,iflag)
         call interp (period(count1),period(count2),phiS3(count1),phiS3(count2),
     +                specT,phiS3T,iflag)
         call interp (period(count1),period(count2),tauS3(count1),tauS3(count2),
     +                specT,tauS3T,iflag)
         call interp (period(count1),period(count2),sigma3(count1),sigma3(count2),
     +                specT,sigma3T,iflag)
         call interp (period(count1),period(count2),phiS4(count1),phiS4(count2),
     +                specT,phiS4T,iflag)
         call interp (period(count1),period(count2),tauS4(count1),tauS4(count2),
     +                specT,tauS4T,iflag)
         call interp (period(count1),period(count2),sigma4(count1),sigma4(count2),
     +                specT,sigma4T,iflag)
         call interp (period(count1),period(count2),tau(count1),tau(count2),
     +                specT,tauT,iflag)
         call interp (period(count1),period(count2),phi(count1),phi(count2),
     +                specT,phiT,iflag)

 1011 period1 = specT


C     Set mechanism term and source and near fault term.
      if (depth .le. 25 ) then

         if (m .le. 7.1) then
         	 fm = bintT*depth + gammaST + CintST*m
         else
         	 fm = bintT*depth + gammaST + CintST*7.1 + dintT*(m-7.1)
         endif

      else
         if (m .le. 7.1) then
         	 fm = bintT*depth + CintDT*m
         else
         	 fm = bintT*depth + CintDT*7.1 + dintT*(m-7.1)
         endif

      endif

C    Set distance for geometric spreading term r

      xinto=10
      Cmax = 7.1
      if (m .le. Cmax) then
       Cm = m
      else
       Cm = Cmax
      endif

      r = xinto + dist + exp(c1T + c2T*Cm)

C    Set geometric attenuation rate term
	    gmterm = gintT*alog(r)

C    Set large distance geometric attenuation rate term
      if (depth .le. 25 ) then

	      gmLterm = gintLST*alog(dist+200)

      else

	      gmLterm = gintLDT*alog(dist+200)

      endif

C    Set anelastic attenuation rate term
C    Ignore volcanic path term
      if (depth .le. 25  ) then
	      eterm = eintST*dist

      else
	      eterm = 0

      endif

C    Set Site class term

      if (depth .le. 25 ) then

         if (sclass .eq. 1) then
            Amax = Amax1T
            Src = Src1T
			      fsr = fsr1T
            Imf = 0.91
            ANmax = AmSCIT
         elseif (sclass .eq. 2) then
            Amax = Amax2T
            Src = Src2T
			      fsr = fsr2T
            Imf = 1.023
            ANmax = AmSCIT * exp(S2T)
         elseif (sclass .eq. 3) then
            Amax = Amax3T
            Src = Src3T
			      fsr = fsr3T
            Imf = 1.034
            ANmax = AmSCIT * exp(S3T)
         elseif (sclass .eq. 4) then
            Amax = Amax4T
            Src = Src4T
			      fsr = fsr4T
            Imf = 0.737
            ANmax = AmSCIT * exp(S4T)
         endif
      else
         if (sclass .eq. 1) then
            Amax = Amax1T
            Src = Src1T
			      fsr = fsr1T
            Imf = 0.91
            ANmax = AmSCIT
         elseif (sclass .eq. 2) then
            Amax = Amax2T
            Src = Src2T
			      fsr = fsr2T
            Imf = 1.023
            ANmax = AmSCIT * exp(S5T)
         elseif (sclass .eq. 3) then
            Amax = Amax3T
            Src = Src3T
			      fsr = fsr3T
            Imf = 1.034
            ANmax = AmSCIT * exp(S6T)
         elseif (sclass .eq. 4) then
            Amax = Amax4T
            Src = Src4T
			      fsr = fsr4T
            Imf = 0.737
            ANmax = AmSCIT * exp(S7T)
         endif

      endif

      rockterm = fm + gmterm + gmLterm + eterm + gammaT - alog(AmSCIT)
      Sr = exp(rockterm)

	    Sreff = Sr *Imf
	    Sreffc = Src *Imf
      Sf = ANmax/Amax

        if (ANmax .lt. 1.25) then
          ca=alog(Amax)/(alog(0.6)-alog(Sreffc**2 + 0.6))
          cb=-ca*alog(Sreffc**2+0.6)
          Snc=exp((ca*(2-1.0)*alog(0.6)*alog(10.0*0.6)-
     &        alog(10.0)*(cb+alog(Sf)))/(ca*(2*alog(10.0*0.6)-
     &        alog(0.6))))
        else
  	      Snc = (exp((alog(ANmax)*alog(Sreffc**2+0.6)-alog(Sf)* alog(0.6))/(alog(Amax)))-0.6)**(0.5)
        endif

	    Smr = Sreff * (Snc/Sreffc) * fsr

        if (Smr .ne. 0.0) then

	        logAn = alog(ANmax)-alog(Amax)*((alog(Smr**2+0.6)-alog(0.6))/(alog(Sreffc**2+0.6)-alog(0.6)))
        else
          logAn = alog(ANmax)
        end if


      if (sclass .eq. 0) then
         lnY =  rockterm
       else
	       lnY =  rockterm + logAn
      endif

C      write(*,*) "--------------------------------- "
C      write(*,*) "dist = ", dist
C      write(*,*) "sclass = ", sclass

C      write(*,*) "Sr = ", Sr
C      write(*,*) "Src = ", Src

C      write(*,*) "fm = ", fm
C      write(*,*) "gmterm = ", gmterm
C      write(*,*) "gmLterm = ", gmLterm
C      write(*,*) "eterm = ", eterm
C      write(*,*) "gammaT = ", gammaT
C      write(*,*) "logAn = ", logAn
C      write(*,*) "Y(g) = ", exp(lnY)

C     Convert ground motion to units of gals.
      lnY = lnY + 6.89

C      write(*,*) "Y(gal) = ", exp(lnY)

c     Set standard error
c      if (sclass .eq. 1) then
c         phi = phiS1T
c         sigma = sigma1T
c         tau = tauS1T
c      elseif (sclass .eq. 2) then
c         phi = phiS2T
c         sigma = sigma2T
c         tau = tauS2T
c      elseif (sclass .eq. 3) then
c          phi = phiS3T
c         sigma = sigma3T
c         tau = tauS3T
c      elseif (sclass .eq. 4) then
c         phi = phiS4T
c         sigma = sigma4T
c         tau = tauS4T
c      endif
       sigma = SQRT(phiT**2 + tauT**2)

      return
      end

c -------------------------------------------------------------------
C **** Zhao et al. 2016 (BSSA, Vol 106, No.4) *************
c -------------------------------------------------------------------

      subroutine Zhaoetal2016_slab ( m, dist, ftype, lnY, sigma, sclass, specT,
     1                   attenName, period1, iflag, sourcetype, depth, phiT, tauT )

c     This  subroutine calculates the spectral acceleration from the
c     Zhao et al. (2016) attenuation model which is defined for subduction
c     intraslab events. Four separate site classes are also modeled.

      parameter (MAXPER=37)
      real ftype, dist, m, lnY, sigma, specT, sourcetype, sclass, cm, cmax, r
      real period(MAXPER), Amax1(MAXPER), SRC1(MAXPER), Amax2(MAXPER)
      real SRC2(MAXPER), Amax3(MAXPER), SRC3(MAXPER), Amax4(MAXPER), SRC4(MAXPER)
      real AmSCI(MAXPER), fsr1(MAXPER), fsr2(MAXPER), fsr3(MAXPER), fsr4(MAXPER)
      real gamma(MAXPER), c1(MAXPER), cSL1(MAXPER), cSL2(MAXPER), dSL(MAXPER)
      real bSL(MAXPER), gSL(MAXPER), gSLL(MAXPER), eSL(MAXPER), eSLH(MAXPER)
      real S2(MAXPER), S3(MAXPER), S4(MAXPER)
      real phiS1(MAXPER), tauS1(MAXPER), sigma1(MAXPER), phiS2(MAXPER), tauS2(MAXPER)
      real sigma2(MAXPER), phiS3(MAXPER), tauS3(MAXPER), sigma3(MAXPER), phiS4(MAXPER)
      real tauS4(MAXPER), sigma4(MAXPER), phi(MAXPER), tau(MAXPER)
      character*80 attenName
      integer nper, count1, count2, iflag, xinto
      real Amax1T, SRC1T, Amax2T, SRC2T, Amax3T, SRC3T, Amax4T, SRC4T
      real AmSCIT, fsr1T, fsr2T, fsr3T, fsr4T
      real c1T, cSL1T, cSL2T, dSLT, bSLT, gSLT, gSLLT, eSLT, eSLHT
      real gammaT, S2T, S3T, S4T
      real phiS1T, tauS1T, sigma1T, phiS2T, tauS2T
      real sigma2T, phiS3T, tauS3T, sigma3T, phiS4T
      real tauS4T, sigma4T, phiT, tauT
      real mech, rockterm, ANmax, Amax, Sr, Src, fsr, Sreff, Sreffc, Snc, Sf, Smr
      real fm, gmterm, gmLterm, eterm, logAn, Imf, c2, qterm, qSLH

      data period / 0, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09,
     1              0.1, 0.12, 0.14, 0.15, 0.16, 0.18, 0.2, 0.25, 0.3, 0.35,
     1              0.4, 0.45, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.25, 1.5, 2, 2.5,
     1              3, 3.5, 4, 4.5, 5 /

      data Amax1 / 1.916, 1.919, 1.922, 1.925, 1.921, 1.959, 2.013, 2.049, 2.046,
     1             2.066, 2.1, 2.143, 2.122, 2.092, 2.053, 1.923, 1.793, 1.793,
     1             1.793, 1.793, 1.793, 1.793, 1.793, 1.793, 1.793, 1.793, 1.793,
     1             1.793, 1.793, 1.793, 1.793, 1.793, 1.793, 1.793, 1.793, 1.793, 1.793/
      data  SRC1 /8.42900,8.09039,6.99211,6.34965,
     &   4.88339,5.04257,6.27132,7.66694,9.03436,11.25066,14.81739,
     &  14.81739,14.81739,14.81739,14.81739,14.81739,14.81739,
     &  14.81739,14.81739,14.81739,14.81739,14.81739,14.81739,
     &  14.81739,14.81739,14.81739,14.81739,14.81739,14.81739,
     &  14.81739,14.81739,14.81739,14.81739,14.81739,14.81739,
     &  14.81739,14.81739/
      data Amax2 / 2.033, 2.027, 2.003, 1.989, 2.012, 2.017, 2.064, 2.103, 2.195,
     1             2.219, 2.263, 2.329, 2.188, 2.214, 2.245, 2.324, 2.405, 2.554,
     1             2.586, 2.718, 2.718, 2.718, 2.718, 2.718, 2.718, 2.718, 2.718,
     1             2.718, 2.718, 2.718, 2.718, 2.718, 2.718, 2.718, 2.718, 2.718,
     1             2.718/
      data  SRC2 /1.91368,1.88256,1.77861,1.71781,
     &   2.05234,2.38713,2.83399,3.29447,3.99091,4.46576,5.04561,
     &   5.89960,5.05353,5.20490,5.38694,5.87165,6.57391,8.50000,
     &  10.6703,10.6703,10.6703,10.6703,10.6703,10.6703,10.6703,
     &  10.6703,10.6703,10.6703,10.6703,10.6703,10.6703,10.6703,
     &  10.6703,10.6703,10.6703,10.6703,10.6703/
      data Amax3 / 1.905, 1.908, 1.894, 1.886, 1.833, 1.854, 1.893, 1.924, 1.974,
     1             2.032, 2.052, 2.066, 2.107, 2.14, 2.156, 2.132, 2.05, 1.925,
     1             2.006, 2.179, 2.288, 2.402, 2.522, 2.648, 2.78, 2.919, 3.065,
     1             3.217, 3.378, 3.547, 3.724, 3.909, 4.104, 4.309, 4.524, 4.75,
     1             4.987/
      data  SRC3 /1.11714,1.11444,1.12437,1.13017,
     &   1.15080,1.23971,1.34819,1.45181,1.58315,1.73292,1.84134,
     &   2.03029,2.28133,2.44413,2.58017,2.74161,2.82587,2.71893,
     &   2.41759,2.30375,2.23625,2.21678,2.24338,2.80535,6.65839,
     &  30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0/
      data Amax4 / 1.498, 1.498, 1.474, 1.46, 1.374, 1.363, 1.384, 1.425, 1.481,
     1             1.525, 1.549, 1.603, 1.67, 1.706, 1.734, 1.773, 1.816, 1.843,
     1             1.871, 1.878, 1.911, 1.899, 1.927, 1.987, 2.025, 2.043, 2.022,
     1             1.97, 1.843, 1.729, 1.583, 1.504, 1.439, 1.391, 1.362, 1.34, 1.729/
      data  SRC4 /0.83644,0.83644,0.83000,0.82624,
     &   0.76758,0.78632,0.83775,0.92616,1.02228,1.11802,1.16578,
     &   1.28551,1.39808,1.44327,1.47177,1.54694,1.64401,1.79013,
     &   1.82345,1.79037,1.76844,1.67539,1.62539,1.52453,1.39724,
     &   1.32029,1.26637,1.22680,1.22065,1.31805,2.12485,14.38181,
     &   14.38181,14.38181,14.38181,14.38181,14.38181/
      data AmSCI / 1.381, 1.228, 1.087, 1.042, 1.035, 1.047, 1.071, 1.103, 1.141,
     1             1.184, 1.231, 1.334, 1.448, 1.51, 1.573, 1.707, 1.833, 1.954,
     1             2.034, 2.052, 2.025, 1.999, 1.975, 1.931, 1.891, 1.855, 1.822,
     1             1.791, 1.724, 1.667, 1.574, 1.5, 1.439, 1.387, 1.341, 1.301, 1.265 /
      data fsr1  /1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,
     &   1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
     &   0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0/
      data fsr2  /1.0,1.0,1.0,1.0,1.006,0.851,0.803,
     &   0.918,1.062,1.106,1.071,0.9515,0.672,0.631,0.6,0.571,0.565,
     &   0.601,0.579,0.679,0.655,0.615,0.55,0.0,0.0,0.0,0.0,0.0,0.0,
     &   0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0/
      data fsr3  /1.0,1.0,1.0,1.0,1.0,1.0,1.044,0.975,
     &   0.964,0.98,0.97,1.022,0.889,0.861,0.831,0.748,0.65,0.479,0.449,
     &   0.482,0.499,0.515,0.53,0.53,0.499,0.369,0.3,0.2,0.0,0.0,0.0,
     &   0.0,0.0,0.0,0.0,0.0,0.0/
      data fsr4  /1.0,1.0,1.05,0.58,0.482,0.472,0.506,
     &   0.587,0.683,0.782,0.823,1.029,0.991,0.983,0.973,0.979,1.006,
     &   1.027,1.021,1.003,1.01,0.985,0.99,1.006,1.0,1.0,0.96,0.904,
     &   0.738,0.535,0.358,0.0,0.0,0.0,0.0,0.0,0.0/
      data c1    /-5.30119,-5.28844,-5.27568,-5.26822,
     &   -5.26293,-5.25882,-5.25547,-5.25263,-5.25017,-5.24801,-5.24607,
     &   -5.24271,-5.23988,-5.23861,-5.23742,-5.23525,-5.23331,-5.22921,
     &   -5.22585,-5.22302,-5.22056,-5.21839,-5.21645,-5.21310,-5.21026,
     &   -5.20781,-5.20564,-5.20370,-5.19959,-5.19624,-5.19095,-5.18684,
     &   -5.18349,-5.18065,-5.17819,-5.17602,-5.17409/
      data cSL1  /1.44758,1.45400,1.46625,1.49246,1.50129,
     &    1.51051,1.51380,1.51111,1.50406,1.49423,1.48300,1.45559,
     &    1.44277,1.43314,1.43253,1.43710,1.44781,1.48260,1.51881,
     &    1.55291,1.58443,1.61360,1.64075,1.69020,1.73450,1.77474,
     &    1.81162,1.84561,1.92015,1.98274,2.08214,2.15841,2.22046,
     &    2.27406,2.32307,2.37009,2.37009/
      data cSL2  /0.37625,0.38099,0.39101,0.41976,0.45746,
     &    0.48601,0.50311,0.50704,0.50004,0.48071,0.45759,0.41355,
     &    0.37828,0.36308,0.34919,0.32464,0.30358,0.26174,0.23036,
     &    0.20580,0.18597,0.16960,0.15585,0.13405,0.11757,0.10476,
     &    0.09458,0.08636,0.07173,0.06258,0.05327,0.05036,0.04536,
     &    0.04536,0.04536,0.04536,0.04536/
      data dSL   /0.42646,0.42075,0.40055,0.36433,0.32072,
     &    0.30000,0.31147,0.32673,0.34289,0.35921,0.37000,0.40606,
     &    0.43450,0.45000,0.46055,0.48439,0.509,0.555,0.593,0.625,
     &    0.652,0.675,0.695,0.729,0.756,0.778,0.796,0.812,0.841,
     &    0.861,0.884,0.9,0.9,0.9,0.9,0.9,0.9/
      data bSL   /0.01826,0.01826,0.01826,0.01826,0.01826,
     &    0.01826,0.01826,0.01826,0.01826,0.01826,0.01826,0.01826,
     &    0.01826,0.01826,0.01826,0.01826,0.01826,0.01826,0.01826,
     &    0.01826,0.01826,0.01826,0.01826,0.01826,0.01826,0.01826,
     &    0.01826,0.01826,0.01808,0.01786,0.01718,0.01628,0.01549,
     &    0.01489,0.01458,0.01459,0.01459/
      data gSL   /-1.98471,-1.96360,-1.91839,-1.89271,
     &  -1.87260,-1.85351,-1.83395,-1.81345,-1.79189,-1.76931,-1.74581,
     &  -1.73746,-1.74463,-1.74972,-1.76259,-1.78989,-1.82110,-1.90412,
     &  -1.98439,-2.05756,-2.12282,-2.18047,-2.23118,-2.31475,-2.37885,
     &  -2.42769,-2.46450,-2.49170,-2.52758,-2.53359,-2.49565,-2.42623,
     &  -2.34726,-2.27002,-2.19947,-2.12528,-2.02646/
      data gSLL  /1.12071,1.03278,0.94715,0.93420,0.97168,
     &    1.01492,1.06854,1.13401,1.20364,1.25808,1.30112,1.39137,
     &    1.47084,1.50784,1.54326,1.60985,1.67146,1.80738,1.92242,
     &    2.02102,2.10642,2.18097,2.24651,2.35602,2.44331,2.51391,
     &    2.57166,2.61931,2.70638,2.76244,2.82205,2.84475,2.84988,
     &    2.84667,2.83992,2.82802,2.82521/
      data eSL   /-0.00340,-0.00331,-0.00345,-0.00391,
     &  -0.00454,-0.00510,-0.00552,-0.00588,-0.00615,-0.00635,-0.00652,
     &  -0.00660,-0.00652,-0.00647,-0.00636,-0.00614,-0.00590,-0.00526,
     &  -0.00468,-0.00415,-0.00369,-0.00327,-0.00290,-0.00227,-0.00178,
     &  -0.00139,-0.00109,-0.00086,-0.00052,-0.00043,-0.00070,-0.00127,
     &  -0.00198,-0.00271,-0.00341,-0.00421,-0.00500/
      data eSLH  /-0.00050,-0.00050,-0.00050,-0.00050,
     &  -0.00050,-0.00050,-0.00050,-0.00049,-0.00048,-0.00048,-0.00048,
     &  -0.00049,-0.00051,-0.00052,-0.00053,-0.00056,-0.00059,-0.00067,
     &  -0.00075,-0.00083,-0.00091,-0.00099,-0.00107,-0.00124,-0.00139,
     &  -0.00154,-0.00166,-0.00178,-0.00199,-0.00213,-0.00225,-0.00219,
     &  -0.00207,-0.00193,-0.00180,-0.00170,-0.00158/
      data gamma /-9.87956,-9.51269,-9.26626,-9.33150,
     &  -9.50798,-9.72858,-9.96628,-10.22583,-10.55111,-10.80721,
     & -11.02190,-11.36530,-11.73039,-11.88013,-12.05637,-12.42044,
     & -12.78542,-13.63537,-14.38086,-15.03511,-15.61599,-16.13830,
     & -16.61324,-17.45298,-18.18095,-18.82499,-19.40313,-19.92766,
     & -21.05818,-21.99633,-23.48839,-24.64741,-25.59713,-26.40997,
     & -27.13181,-27.79299,-28.31346/
      data S2    /0.23200,0.22886,0.21825,0.18737,
     &   0.12332,0.07207,0.02701,-0.00621,0.01565,0.05089,0.09560,
     &   0.20037,0.30372,0.34284,0.37400,0.42700,0.46297,0.50856,
     &   0.50776,0.49710,0.48065,0.46159,0.44224,0.40537,0.37342,
     &   0.34623,0.32364,0.30479,0.27026,0.24831,0.22529,0.21540,
     &   0.21154,0.20976,0.20875,0.20774,0.20672/
      data S3   /0.14371,0.13978,0.12600,0.06164,
     &  -0.01705,-0.06331,-0.10103,-0.14684,-0.14479,-0.12666,-0.09319,
     &  -0.00878,0.08926,0.13602,0.17751,0.25309,0.32005,0.45304,
     &   0.54875,0.61713,0.66634,0.70111,0.72558,0.75294,0.76245,
     &   0.76119,0.75384,0.74279,0.70833,0.67256,0.61067,0.56403,
     &   0.52612,0.49766,0.47685,0.46223,0.45267/
      data S4    /0.14704,0.13284,0.14431,0.06600,
     &  -0.01714,-0.07312,-0.11955,-0.16006,-0.12434,-0.07293,-0.01458,
     &   0.08252,0.17151,0.20932,0.24117,0.29896,0.34591,0.44231,
     &   0.51782,0.57596,0.62239,0.65976,0.69066,0.73796,0.77226,
     &   0.79736,0.81616,0.83009,0.85036,0.85732,0.84991,0.82757,
     &   0.79911,0.76782,0.73594,0.70407,0.67220/
      data phiS1 /  0.398,0.397,0.395,0.389,0.387,0.387,
     &   0.397,0.403,0.413,0.422,0.429,0.440,0.441,0.450,0.452,0.454,
     &   0.462,0.474,0.472,0.468,0.457,0.450,0.445,0.448,0.440,0.441,
     &   0.435,0.427,0.413,0.416,0.409,0.398,0.390,0.386,0.377,0.360,
     &   0.361/
      data tauS1  /0.511,0.517,0.518,0.537,0.572,0.586,
     &   0.613,0.633,0.643,0.631,0.626,0.614,0.613,0.602,0.599,0.599,
     &   0.590,0.555,0.532,0.505,0.479,0.461,0.451,0.436,0.430,0.427,
     &   0.431,0.440,0.440,0.449,0.441,0.425,0.396,0.386,0.373,0.364,
     &   0.359/
      data sigma1  / 0.648, 0.651, 0.652, 0.663, 0.691, 0.702, 0.73, 0.75, 0.765,
     1             0.759, 0.759, 0.755, 0.755, 0.752, 0.75, 0.752, 0.749, 0.73,
     1             0.711, 0.688, 0.663, 0.644, 0.633, 0.625, 0.615, 0.614, 0.612,
     1             0.613, 0.603, 0.612, 0.601, 0.582, 0.556, 0.545, 0.53, 0.512, 0.509 /
      data phiS2   /0.417,0.417,0.417,0.418,0.420,0.422,
     &   0.416,0.412,0.412,0.412,0.418,0.429,0.435,0.440,0.444,0.447,
     &   0.450,0.470,0.475,0.478,0.484,0.477,0.470,0.460,0.460,0.460,
     &   0.456,0.448,0.442,0.448,0.437,0.429,0.423,0.410,0.410,0.412,
     &   0.447/
      data tauS2   /0.449,0.450,0.449,0.449,0.456,0.479,
     &   0.507,0.532,0.555,0.568,0.566,0.570,0.597,0.599,0.597,0.601,
     &   0.596,0.601,0.557,0.518,0.488,0.479,0.471,0.467,0.464,0.456,
     &   0.466,0.466,0.476,0.473,0.462,0.427,0.407,0.401,0.386,0.373,
     &   0.322/
      data sigma2  / 0.613, 0.614, 0.613, 0.614, 0.62, 0.639, 0.656, 0.673, 0.692,
     1             0.702, 0.704, 0.713, 0.739, 0.743, 0.744, 0.749, 0.747, 0.763,
     1             0.732, 0.705, 0.687, 0.676, 0.665, 0.655, 0.653, 0.647, 0.652,
     1             0.647, 0.649, 0.651, 0.636, 0.606, 0.587, 0.574, 0.564, 0.556, 0.551 /
      data phiS3   /0.409,0.409,0.408,0.409,0.413,0.409,
     &   0.401,0.394,0.389,0.391,0.394,0.428,0.433,0.420,0.424,0.446,
     &   0.441,0.459,0.437,0.444,0.453,0.477,0.472,0.459,0.461,0.457,
     &   0.449,0.442,0.428,0.418,0.406,0.387,0.369,0.376,0.362,0.368,
     &   0.381/
      data tauS3   /0.431,0.431,0.431,0.430,0.428,0.429,
     &   0.449,0.456,0.455,0.475,0.507,0.548,0.507,0.490,0.494,0.500,
     &   0.491,0.450,0.499,0.532,0.546,0.529,0.495,0.470,0.473,0.457,
     &   0.439,0.442,0.432,0.461,0.472,0.484,0.447,0.434,0.406,0.383,
     &   0.316/
      data sigma3  / 0.594, 0.594, 0.594, 0.593, 0.595, 0.592, 0.602, 0.603, 0.599,
     1             0.615, 0.642, 0.695, 0.667, 0.645, 0.651, 0.67, 0.66, 0.643,
     1             0.663, 0.692, 0.709, 0.713, 0.684, 0.657, 0.66, 0.646, 0.628,
     1             0.625, 0.608, 0.622, 0.623, 0.62, 0.58, 0.574, 0.544, 0.531, 0.495 /
      data phiS4   /0.415,0.415,0.416,0.417,0.420,0.422,
     &   0.423,0.420,0.423,0.427,0.426,0.445,0.442,0.440,0.437,0.436,
     &   0.432,0.432,0.432,0.432,0.416,0.408,0.409,0.407,0.403,0.407,
     &   0.408,0.408,0.412,0.418,0.413,0.414,0.412,0.402,0.394,0.385,
     &   0.380/
      data tauS4  /0.422,0.418,0.425,0.422,0.431,0.439,
     &   0.445,0.473,0.491,0.518,0.559,0.576,0.561,0.555,0.552,0.553,
     &   0.562,0.507,0.489,0.463,0.466,0.461,0.467,0.434,0.430,0.454,
     &   0.456,0.462,0.444,0.443,0.439,0.427,0.431,0.413,0.391,0.366,
     &   0.324/
      data sigma4  / 0.592, 0.589, 0.594, 0.593, 0.602, 0.609, 0.614, 0.633, 0.648,
     1             0.671, 0.703, 0.728, 0.714, 0.708, 0.704, 0.705, 0.709, 0.666,
     1             0.653, 0.633, 0.624, 0.616, 0.62, 0.594, 0.589, 0.61, 0.612,
     1             0.616, 0.606, 0.609, 0.603, 0.595, 0.596, 0.576, 0.555, 0.532, 0.499 /

      Data phi /0.587,0.587,0.587,0.588,0.600,0.607,0.623,
     &   0.638,0.651,0.663,0.674,0.690,0.692,0.696,0.697,0.704,0.713,
     &   0.711,0.683,0.665,0.657,0.647,0.640,0.633,0.633,0.636,0.636,
     %   0.637,0.635,0.645,0.633,0.608,0.582,0.562,0.540,0.525,0.522/
      Data tau /0.457,0.459,0.465,0.480,0.520,
     &   0.555,0.584,0.598,0.598,0.585,0.567,0.534,0.504,0.486,0.465,
     &   0.430,0.406,0.385,0.365,0.373,0.383,0.391,0.403,0.412,0.432,
     &   0.436,0.437,0.436,0.444,0.448,0.424,0.413,0.407,0.394,0.381,
     &   0.365,0.378/
c Set attenuation name
c     Sourcetype = 0 Crustal
c     Sourcetype = 1 Subduction - Interface
c     Sourcetype = 2 Subduction - Slab
c     Sourcetype = 3 Upper mantle
c     Sclass = 0 Hard Rock
c     Sclass = 1 SC I
c     Sclass = 2 SC II
c     Sclass = 3 SC III
c     Sclass = 4 SC IV


C Find the requested spectral period and corresponding coefficients
      nper = 37

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
       period1 = period(1)
       Amax1T =  Amax1(1)
       SRC1T =   SRC1(1)
       Amax2T =  Amax2(1)
       SRC2T =   SRC2(1)
       Amax3T =  Amax3(1)
       SRC3T =   SRC3(1)
       Amax4T =  Amax4(1)
       SRC4T =   SRC4(1)
       AmSCIT =  AmSCI(1)
       fsr1T = fsr1(1)
       fsr2T = fsr2(1)
       fsr3T = fsr3(1)
       fsr4T = fsr4(1)
       c1T   =  c1(1)
       cSL1T =  cSL1(1)
       cSL2T =  cSL2(1)
       dSLT  =  dSL(1)
       bSLT  =  bSL(1)
       gSLT  =  gSL(1)
       gSLLT =  gSLL(1)
       eSLT  =  eSL(1)
       eSLHT =  eSLH(1)
       gammaT =  gamma(1)
       S2T =     S2(1)
       S3T =     S3(1)
       S4T =     S4(1)
       phiS1T =  phiS1(1)
       tauS1T =  tauS1(1)
       sigma1T = sigma1(1)
       phiS2T =  phiS2(1)
       tauS2T =  tauS2(1)
       sigma2T = sigma2(1)
       phiS3T =  phiS3(1)
       tauS3T =  tauS3(1)
       sigma3T = sigma3(1)
       phiS4T =  phiS4(1)
       tauS4T =  tauS4(1)
       sigma4T = sigma4(1)
       phiT =  phi(1)
       tauT =  tau(1)
       goto 1011
      elseif (specT .ne. 0.0) then

C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1010
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Zhao et al. (2016) Horizontal atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1010    call interp (period(count1),period(count2),Amax1(count1),Amax1(count2),
     +                specT,Amax1T,iflag)
         call interp (period(count1),period(count2),SRC1(count1),SRC1(count2),
     +                specT,SRC1T,iflag)
         call interp (period(count1),period(count2),Amax2(count1),Amax2(count2),
     +                specT,Amax2T,iflag)
         call interp (period(count1),period(count2),SRC2(count1),SRC2(count2),
     +                specT,SRC2T,iflag)
         call interp (period(count1),period(count2),Amax3(count1),Amax3(count2),
     +                specT,Amax3T,iflag)
         call interp (period(count1),period(count2),SRC3(count1),SRC3(count2),
     +                specT,SRC3T,iflag)
         call interp (period(count1),period(count2),Amax4(count1),Amax4(count2),
     +                specT,Amax4T,iflag)
         call interp (period(count1),period(count2),SRC4(count1),SRC4(count2),
     +                specT,SRC4T,iflag)
         call interp (period(count1),period(count2),AmSCI(count1),AmSCI(count2),
     +                specT,AmSCIT,iflag)
         call interp (period(count1),period(count2),fsr1(count1),fsr1(count2),
     +                specT,fsr1T,iflag)
         call interp (period(count1),period(count2),fsr2(count1),fsr2(count2),
     +                specT,fsr2T,iflag)
         call interp (period(count1),period(count2),fsr3(count1),fsr3(count2),
     +                specT,fsr3T,iflag)
         call interp (period(count1),period(count2),fsr4(count1),fsr4(count2),
     +                specT,fsr4T,iflag)
         call interp (period(count1),period(count2),c1(count1),c1(count2),
     +                specT,c1T,iflag)
         call interp (period(count1),period(count2),cSL1(count1),cSL1(count2),
     +                specT,cSL1T,iflag)
         call interp (period(count1),period(count2),cSL2(count1),cSL2(count2),
     +                specT,cSL2T,iflag)
         call interp (period(count1),period(count2),dSL(count1),dSL(count2),
     +                specT,dSLT,iflag)
         call interp (period(count1),period(count2),bSL(count1),bSL(count2),
     +                specT,bSLT,iflag)
         call interp (period(count1),period(count2),gSL(count1),gSL(count2),
     +                specT,gSLT,iflag)
         call interp (period(count1),period(count2),gSLL(count1),gSLL(count2),
     +                specT,gSLLT,iflag)
         call interp (period(count1),period(count2),eSL(count1),eSL(count2),
     +                specT,eSLT,iflag)
         call interp (period(count1),period(count2),eSLH(count1),eSLH(count2),
     +                specT,eSLHT,iflag)
         call interp (period(count1),period(count2),gamma(count1),gamma(count2),
     +                specT,gammaT,iflag)
         call interp (period(count1),period(count2),S2(count1),S2(count2),
     +                specT,S2T,iflag)
         call interp (period(count1),period(count2),S3(count1),S3(count2),
     +                specT,S3T,iflag)
         call interp (period(count1),period(count2),S4(count1),S4(count2),
     +                specT,S4T,iflag)
         call interp (period(count1),period(count2),phiS1(count1),phiS1(count2),
     +                specT,phiS1T,iflag)
         call interp (period(count1),period(count2),tauS1(count1),tauS1(count2),
     +                specT,tauS1T,iflag)
         call interp (period(count1),period(count2),sigma1(count1),sigma1(count2),
     +                specT,sigma1T,iflag)
         call interp (period(count1),period(count2),phiS2(count1),phiS2(count2),
     +                specT,phiS2T,iflag)
         call interp (period(count1),period(count2),tauS2(count1),tauS2(count2),
     +                specT,tauS2T,iflag)
         call interp (period(count1),period(count2),sigma2(count1),sigma2(count2),
     +                specT,sigma2T,iflag)
         call interp (period(count1),period(count2),phiS3(count1),phiS3(count2),
     +                specT,phiS3T,iflag)
         call interp (period(count1),period(count2),tauS3(count1),tauS3(count2),
     +                specT,tauS3T,iflag)
         call interp (period(count1),period(count2),sigma3(count1),sigma3(count2),
     +                specT,sigma3T,iflag)
         call interp (period(count1),period(count2),phiS4(count1),phiS4(count2),
     +                specT,phiS4T,iflag)
         call interp (period(count1),period(count2),tauS4(count1),tauS4(count2),
     +                specT,tauS4T,iflag)
         call interp (period(count1),period(count2),sigma4(count1),sigma4(count2),
     +                specT,sigma4T,iflag)
         call interp (period(count1),period(count2),tau(count1),tau(count2),
     +                specT,tauT,iflag)
         call interp (period(count1),period(count2),phi(count1),phi(count2),
     +                specT,phiT,iflag)

 1011 period1 = specT

      if (depth .gt. 150.0) then
          depth = 150.0
      endif


C     Set mechanism term and source and near fault term.

         if (m .le. 7.1) then
         	 fm = bSLT*depth + cSL1T*m + cSL2T*(m-6.3)**2
         else
         	 fm = bSLT*depth + cSL1T*7.1 + cSL2T*(7.1-6.3)**2 + dSLT*(m-7.1)
         endif

C    Set distance for geometric spreading term r

      Cmax = 7.1
      c2 = 1.151
      if (m .le. Cmax) then
       Cm = m
      else
       Cm = Cmax
      endif

      r = dist + exp(c1T + c2*Cm)

C    Set geometric attenuation rate term
	    gmterm = gSLT*alog(r)

C    Set large distance geometric attenuation rate term

	    gmLterm = gSLLT*alog(dist+200)


C    Set anelastic attenuation rate term
C    Ignore volcanic path term
      if (depth .lt. 50  ) then

	      qSLH = eSLHT*0

      else
	      qSLH = eSLHT*(0.02*depth -1)

      endif

      qterm = qSLH * dist

      eterm = eSLT * dist


C    Set Site class term

         if (sclass .eq. 1) then
            Amax = Amax1T
            Src = Src1T
			      fsr = fsr1T
            Imf = 0.91
            ANmax = AmSCIT
         elseif (sclass .eq. 2) then
            Amax = Amax2T
            Src = Src2T
			      fsr = fsr2T
            Imf = 1.023
            ANmax = AmSCIT * exp(S2T)
         elseif (sclass .eq. 3) then
            Amax = Amax3T
            Src = Src3T
			      fsr = fsr3T
            Imf = 1.034
            ANmax = AmSCIT * exp(S3T)
         elseif (sclass .eq. 4) then
            Amax = Amax4T
            Src = Src4T
			      fsr = fsr4T
            Imf = 0.737
            ANmax = AmSCIT * exp(S4T)
         endif

      rockterm = fm + gmterm + gmLterm + eterm + gammaT - alog(AmSCIT)
      Sr = exp(rockterm)

	    Sreff = Sr *Imf
	    Sreffc = Src *Imf
      Sf = ANmax/Amax
        if (ANmax .lt. 1.25) then
          ca=alog(Amax)/(alog(0.6)-alog(Sreffc**2 + 0.6))
          cb=-ca*alog(Sreffc**2+0.6)
          Snc=exp((ca*(2-1.0)*alog(0.6)*alog(10.0*0.6)-
     &        alog(10.0)*(cb+alog(Sf)))/(ca*(2*alog(10.0*0.6)-
     &        alog(0.6))))
        else
  	      Snc = (exp((alog(ANmax)*alog(Sreffc**2+0.6)-alog(Sf)* alog(0.6))/(alog(Amax)))-0.6)**(0.5)
        endif

	    Smr = Sreff * (Snc/Sreffc) * fsr

        if (Smr .ne. 0.0) then

	        logAn = alog(ANmax)-alog(Amax)*((alog(Smr**2+0.6)-alog(0.6))/(alog(Sreffc**2+0.6)-alog(0.6)))
        else
          logAn = alog(ANmax)
        end if

      if (sclass .eq. 0) then
         lnY =  rockterm
       else
	       lnY =  rockterm + logAn
      endif

C      write(*,*) "--------------------------------- "
C      write(*,*) "dist = ", dist
C      write(*,*) "sclass = ", sclass

C      write(*,*) "Sr = ", Sr
C      write(*,*) "Src = ", Src

C      write(*,*) "fm = ", fm
C      write(*,*) "gmterm = ", gmterm
C      write(*,*) "gmLterm = ", gmLterm
C      write(*,*) "qterm = ", qterm
C      write(*,*) "eterm = ", eterm
C      write(*,*) "gammaT = ", gammaT
C      write(*,*) "logAn = ", logAn
C      write(*,*) "Y(g) = ", exp(lnY)

C     Convert ground motion to units of gals.
      lnY = lnY + 6.89

C      write(*,*) "Y(gal) = ", exp(lnY)

c     Set standard error
c      if (sclass .eq. 1) then
c         phi = phiS1T
c         sigma = sigma1T
c         tau = tauS1T
c      elseif (sclass .eq. 2) then
c         phi = phiS2T
c         sigma = sigma2T
c         tau = tauS2T
c      elseif (sclass .eq. 3) then
c          phi = phiS3T
c         sigma = sigma3T
c         tau = tauS3T
c      elseif (sclass .eq. 4) then
c         phi = phiS4T
c         sigma = sigma4T
c         tau = tauS4T
c      endif
       sigma = SQRT(phiT**2 + tauT**2)

      return
      end

c -------------------------------------------------------------------
C **** Zhao et al. 2016 (BSSA, Vol 106, No.4) *************
c -------------------------------------------------------------------

      subroutine Zhaoetal2016_cru ( m, dist, ftype, lnY, sigma, sclass, specT,
     1                   attenName, period1, iflag, sourcetype, depth, phiT, tauT )

c     This  subroutine calculates the spectral acceleration from the
c     Zhao et al. (2016) attenuation model which is defined for crustal
c     and upper mantle events. Four separate site classes are also modeled.

      parameter (MAXPER=37)
      real ftype, dist, m, lnY, sigma, specT, sourcetype, sclass, cm, cmax, r
      real period(MAXPER), Amax1(MAXPER), SRC1(MAXPER), Amax2(MAXPER)
      real SRC2(MAXPER), Amax3(MAXPER), SRC3(MAXPER), Amax4(MAXPER), SRC4(MAXPER)
      real AmSCI(MAXPER), fsrCR1(MAXPER), fsrCR2(MAXPER), fsrCR3(MAXPER)
      real fsrCR4(MAXPER), fsrUM1(MAXPER), fsrUM2(MAXPER), fsrUM3(MAXPER)
      real fsrUM4(MAXPER), c1(MAXPER), c2(MAXPER), ccr(MAXPER), dcr(MAXPER)
      real FCRN(MAXPER), FumRV(MAXPER), FumNS(MAXPER), bcr(MAXPER), gcr(MAXPER)
      real gUM(MAXPER), gcrN(MAXPER), gcrL(MAXPER), ecr(MAXPER), eum(MAXPER)
      real ecrv(MAXPER), gamma(MAXPER), S2(MAXPER), S3(MAXPER), S4(MAXPER)
      real phiS1(MAXPER), tauS1(MAXPER), sigma1(MAXPER), phiS2(MAXPER), tauS2(MAXPER)
      real sigma2(MAXPER), phiS3(MAXPER), tauS3(MAXPER), sigma3(MAXPER), phiS4(MAXPER)
      real tauS4(MAXPER), sigma4(MAXPER), phi(MAXPER), tau(MAXPER)
      character*80 attenName
      integer nper, count1, count2, iflag, xcro
      real Amax1T, SRC1T, Amax2T, SRC2T, Amax3T, SRC3T, Amax4T, SRC4T
      real AmSCIT, fsrCR1T, fsrCR2T, fsrCR3T
      real fsrCR4T, fsrUM1T, fsrUM2T, fsrUM3T
      real fsrUM4T, c1T, c2T, ccrT, dcrT
      real FCRNT, FumRVT, FumNST, bcrT, gcrT
      real gUMT, gcrNT, gcrLT, ecrT, eumT
      real ecrvT, gammaT, S2T, S3T, S4T
      real phiS1T, tauS1T, sigma1T, phiS2T, tauS2T
      real sigma2T, phiS3T, tauS3T, sigma3T, phiS4T
      real tauS4T, sigma4T, phiT, tauT
      real mech, rockterm, ANmax, Amax, Sr, Src, fsr, Sreff, Sreffc, Snc, Sf, Smr
      real fm, gmterm, gmLterm, gN, eterm, logAn, Imf

      data period / 0, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09,
     1              0.1, 0.12, 0.14, 0.15, 0.16, 0.18, 0.2, 0.25, 0.3, 0.35,
     1              0.4, 0.45, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.25, 1.5, 2, 2.5,
     1              3, 3.5, 4, 4.5, 5 /

      data Amax1 / 1.916, 1.919, 1.922, 1.925, 1.921, 1.959, 2.013, 2.049, 2.046,
     1             2.066, 2.1, 2.143, 2.122, 2.092, 2.053, 1.923, 1.793, 1.793,
     1             1.793, 1.793, 1.793, 1.793, 1.793, 1.793, 1.793, 1.793, 1.793,
     1             1.793, 1.793, 1.793, 1.793, 1.793, 1.793, 1.793, 1.793, 1.793, 1.793/
      data  SRC1 / 8.429, 8.09, 6.992, 6.35, 4.883, 5.043, 6.271, 7.667, 9.034,
     1             11.251, 14.817, 14.817, 14.817, 14.817, 14.817, 14.817, 14.817,
     1             14.817, 14.817, 14.817, 14.817, 14.817, 14.817, 14.817, 14.817,
     1             14.817, 14.817, 14.817, 14.817, 14.817, 14.817, 14.817, 14.817,
     1             14.817, 14.817, 14.817, 14.817/
      data Amax2 / 2.033, 2.027, 2.003, 1.989, 2.012, 2.017, 2.064, 2.103, 2.195,
     1             2.219, 2.263, 2.329, 2.188, 2.214, 2.245, 2.324, 2.405, 2.554,
     1             2.586, 2.718, 2.718, 2.718, 2.718, 2.718, 2.718, 2.718, 2.718,
     1             2.718, 2.718, 2.718, 2.718, 2.718, 2.718, 2.718, 2.718, 2.718,
     1             2.718/
      data  SRC2 /1.91368,1.88256,1.77861,1.71781,
     &      2.05234,2.38713,2.83399,3.29447,3.99091,4.46576,5.04561,
     &      5.89960,5.05353,5.20490,5.38694,5.87165,6.57391,8.50000,
     &     10.67030,10.67030,10.67030,10.67030,10.67030,10.67030,
     &     10.67030,10.67030,10.67030,10.67030,10.67030,10.67030,
     &     10.67030,10.67030,10.67030,10.67030,10.67030,10.67030,
     &     10.67030/
      data Amax3 / 1.905, 1.908, 1.894, 1.886, 1.833, 1.854, 1.893, 1.924, 1.974,
     1             2.032, 2.052, 2.066, 2.107, 2.14, 2.156, 2.132, 2.05, 1.925,
     1             2.006, 2.179, 2.288, 2.402, 2.522, 2.648, 2.78, 2.919, 3.065,
     1             3.217, 3.378, 3.547, 3.724, 3.909, 4.104, 4.309, 4.524, 4.75,
     1             4.987/
      data  SRC3 /1.11714,1.11444,1.12437,1.13017,
     &     1.15080,1.23971,1.34819,1.45181,1.58315,1.73292,1.84134,
     &     2.03029,2.28133,2.44413,2.58017,2.74161,2.82587,2.71893,
     &     2.41759,2.30375,2.23625,2.21678,2.24338,2.80535,6.65839,
     &     30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,30.0,
     &     30.0/
      data Amax4 / 1.498, 1.498, 1.474, 1.46, 1.374, 1.363, 1.384, 1.425, 1.481,
     1             1.525, 1.549, 1.603, 1.67, 1.706, 1.734, 1.773, 1.816, 1.843,
     1             1.871, 1.878, 1.911, 1.899, 1.927, 1.987, 2.025, 2.043, 2.022,
     1             1.97, 1.843, 1.729, 1.583, 1.504, 1.439, 1.391, 1.362, 1.34, 1.729/
      data  SRC4 /0.83644,0.83644,0.83000,0.82624,
     &     0.76758,0.78632,0.83775,0.92616,1.02228,1.11802,1.16578,
     &     1.28551,1.39808,1.44327,1.47177,1.54694,1.64401,1.79013,
     &     1.82345,1.79037,1.76844,1.67539,1.62539,1.52453,1.39724,
     &     1.32029,1.26637,1.22680,1.22065,1.31805,2.12485,14.38181,
     &     14.38181,14.38181,14.38181,14.38181,14.38181/
      data AmSCI / 1.381, 1.228, 1.087, 1.042, 1.035, 1.047, 1.071, 1.103, 1.141,
     1             1.184, 1.231, 1.334, 1.448, 1.51, 1.573, 1.707, 1.833, 1.954,
     1             2.034, 2.052, 2.025, 1.999, 1.975, 1.931, 1.891, 1.855, 1.822,
     1             1.791, 1.724, 1.667, 1.574, 1.5, 1.439, 1.387, 1.341, 1.301, 1.265/
      data fsrCR1 /1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,
     &     1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
     &     0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0/
      data fsrCR2/1.0,1.2,1.3,1.253,1.064,1.120,
     &     1.207,1.238,1.360,1.355,1.341,1.195,0.835,0.781,0.738,0.684,
     &     0.654,0.683,0.691,0.800,0.876,0.966,1.034,1.206,1.314,1.357,
     &     1.357,1.357,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0/
      data fsrCR3/1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,
     &     1.0,1.080,1.093,0.948,0.908,0.862,0.745,0.623,0.436,0.400,
     &     0.433,0.460,0.496,0.529,0.578,0.578,0.578,0.578,0.000,0.0,
     &     0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0/
      data fsrCR4 /1.0,1.0,0.949,0.550,0.477,0.492,
     &     0.531,0.613,0.693,0.780,0.816,0.998,0.954,0.942,0.927,0.927,
     &     0.949,0.970,0.961,0.948,0.965,0.958,0.984,1.055,1.114,1.175,
     &     1.216,1.230,1.192,0.942,0.0,0.0,0.0,0.0,0.0,0.0,0.0/
      data fsrUM1 /1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,
     &      1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
     &      0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0/
      data fsrUM2 /1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,
     &      1.0,1.0,1.0,0.767,0.708,0.657,0.568,0.509,0.433,0.337,0.337,
     &      0.337,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
     &      0.0,0.0,0.0/
      data fsrUM3 /1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.83,
     &      0.706,0.8,0.759,0.715,0.686,0.644,0.549,0.434,0.292,0.275,
     &      0.295,0.293,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
     &      0.0,0.0,0.0,0.0/
      data fsrUM4 /1.0,1.0,1.15,0.8,0.613,0.542,0.534,
     &      0.583,0.643,0.674,0.694,0.763,0.684,0.645,0.61,0.532,0.468,
     &      0.291,0.275,0.295,0.293,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
     &      0.0,0.0,0.0,0.0,0.0,0.0,0.0/
      data c1    /-3.224,-3.357,-3.552,-3.640,-3.758,-3.826,
     &        -3.890,-3.965,-4.055,-4.153,-4.255,-4.466,-4.677,-4.781,
     &        -4.883,-5.085,-5.233,-5.229,-5.226,-5.223,-5.221,-5.218,
     &        -5.216,-5.213,-5.210,-5.208,-5.206,-5.204,-5.200,-5.196,
     &        -5.191,-5.187,-5.183,-5.181,-5.178,-5.176,-5.174/
      data c2     /0.900,0.909,0.927,0.937,0.944,0.948,0.956,
     &         0.967,0.980,0.995,1.009,1.040,1.070,1.085,1.100,1.129,
     &         1.151,1.151,1.151,1.151,1.151,1.151,1.151,1.151,1.151,
     &         1.151,1.151,1.151,1.151,1.151,1.151,1.151,1.151,1.151,
     &         1.151,1.151,1.151/
      data ccr    /1.07312,1.0785,1.07254,1.05736,1.03568,
     &    1.00578,0.98413,0.98059,0.98634,0.99121,1.00033,1.03440,
     &    1.08388,1.10602,1.12674,1.16455,1.19837,1.27000,1.32852,
     &    1.37801,1.42087,1.45868,1.49250,1.55102,1.60051,1.64337,
     &    1.68118,1.71500,1.78663,1.84515,1.93750,2.00913,2.06765,
     &    2.12357,2.13734,2.13734,2.13734/
      data dcr    /0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,
     &    0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.19,0.178,0.162,
     &    0.148,0.136,0.125,0.101,0.083,0.053,0.02967,0.01078,0.0,0.0,
     &    0.0,0.0/
      data FcrN   /0.31282,0.31568,0.31854,0.32022,0.32141,
     &    0.32185,0.32471,0.32860,0.32984,0.33637,0.34096,0.34562,
     &    0.34596,0.34500,0.34347,0.33911,0.33355,0.31694,0.29912,
     &    0.28167,0.26521,0.24997,0.23598,0.21157,0.19133,0.17456,
     &    0.16062,0.14900,0.12761,0.11382,0.09918,0.09329,0.09106,
     &    0.09003,0.08897,0.08722,0.08444/
      data FumRV  /-0.20236,-0.21425,-0.22125,-0.22306,
     &   -0.22334,-0.22297,-0.22229,-0.22145,-0.22053,-0.21956,-0.21858,
     &   -0.21661,-0.21469,-0.21374,-0.21282,-0.21102,-0.20929,-0.20526,
     &   -0.20159,-0.19822,-0.19511,-0.19221,-0.18950,-0.18454,-0.18008,
     &   -0.17602,-0.17229,-0.16883,-0.16113,-0.15447,-0.14326,-0.13399,
     &   -0.12604,-0.11905,-0.11280,-0.10713,-0.10194/
      data FumNS  /0.25194,0.25847,0.26070,0.26025,0.25891,
     &    0.25756,0.25606,0.25456,0.25301,0.25560,0.24023,0.24775,
     &    0.24524,0.24410,0.24309,0.24098,0.23890,0.23447,0.23046,
     &    0.22674,0.22355,0.22041,0.21760,0.21250,0.20807,0.20398,
     &    0.20025,0.19671,0.18911,0.18269,0.17171,0.16289,0.15528,
     &    0.14853,0.14260,0.13724,0.13245/
      data bcr    /0.00907,0.00907,0.00907,0.00907,0.00907,
     &    0.00907,0.00907,0.00907,0.00907,0.00907,0.00907,0.00958,
     &    0.01055,0.01122,0.01170,0.01233,0.01346,0.01617,0.01831,
     &    0.01980,0.02078,0.02138,0.02168,0.02161,0.02094,0.01987,
     &    0.01854,0.01704,0.01292,0.00863,0.00042,-0.00687,-0.01315,
     &   -0.01849,-0.02298,-0.02672,-0.02980/
      data gcr    /-1.26034,-1.26949,-1.28775,-1.29619,-1.25147,
     &   -1.14724,-1.09126,-1.04676,-1.01364,-0.99232,-0.98315,-0.97311,
     &   -0.98324,-0.99261,-1.00423,-1.03299,-1.06493,-1.15136,-1.23723,
     &   -1.31736,-1.38989,-1.45461,-1.51219,-1.60834,-1.68374,-1.74306,
     &   -1.78967,-1.82603,-1.88672,-1.91705,-1.93178,-1.91787,-1.89632,
     &   -1.87695,-1.86168,-1.85415,-1.85292/
      data gUM    /-1.09985,-1.10720,-1.11766,-1.11392,-1.07971,
     &   -0.98606,-0.93901,-0.90036,-0.87064,-0.85080,-0.84175,-0.82925,
     &   -0.83484,-0.84153,-0.85033,-0.87328,-0.89945,-0.97276,-1.04809,
     &   -1.12034,-1.18735,-1.24859,-1.30439,-1.40097,-1.48074,-1.54711,
     &   -1.60263,-1.64914,-1.73810,-1.79802,-1.86912,-1.90393,-1.92241,
     &   -1.93474,-1.94360,-1.95343,-1.96352/
      data gcrN   /-0.49919,-0.48684,-0.44645,-0.42175,
     &   -0.37622,-0.43576,-0.46789,-0.50260,-0.53802,-0.57301,-0.60839,
     &   -0.67012,-0.72524,-0.74977,-0.77240,-0.81285,-0.84625,-0.90575,
     &   -0.93933,-0.95403,-0.95484,-0.94513,-0.92771,-0.87661,-0.81164,
     &   -0.73894,-0.66214,-0.58347,-0.40237,-0.24053,-0.03590,0.08743,
     &    0.17408,0.24501,0.31173,0.37949,0.45204/
      data gcrL   /1.26564,1.24149,1.19894,1.18654,1.14213,
     &  1.14137,1.15749,1.18679,1.22338,1.26404,1.30526,1.39284,1.47770,
     &  1.51881,1.55884,1.63476,1.70605,1.86247,1.99162,2.09823,2.18630,
     &  2.25934,2.31973,2.41072,2.47179,2.51100,2.53418,2.54538,2.54707,
     &  2.52581,2.49751,2.47889,2.46474,2.45267,2.44271,2.43391,2.42673/
      data ecr    /-0.00794,-0.00772,-0.00756,-0.00788,-0.00863,
     &     -0.00988,-0.01075,-0.01130,-0.01164,-0.01182,-0.01184,
     &     -0.01174,-0.01142,-0.01123,-0.01101,-0.01054,-0.01007,
     &     -0.00890,-0.00784,-0.00691,-0.00610,-0.00541,-0.00482,
     &     -0.00387,-0.00315,-0.00261,-0.00220,-0.00189,-0.00139,
     &     -0.00116,-0.00109,-0.00125,-0.00144,-0.00159,-0.00171,
     &     -0.00176,-0.00177/
      data eum    /-0.010830,-0.010580,-0.010505,-0.011005,
     &     -0.011488,-0.012292,-0.012739,-0.013080,-0.013313,-0.013455,
     &     -0.013479,-0.013488,-0.013335,-0.013231,-0.013115,-0.012840,
     &     -0.012558,-0.011817,-0.011100,-0.010436,-0.009831,-0.009285,
     &     -0.008788,-0.007922,-0.007193,-0.006568,-0.006025,-0.005551,
     &     -0.004580,-0.003842,-0.002838,-0.002226,-0.001844,-0.001604,
     &     -0.001488,-0.001452,-0.001499/
      data ecrv   /-0.00628,-0.00629,-0.00634,-0.00647,
     &     -0.00681,-0.00710,-0.00724,-0.00734,-0.00741,-0.00746,
     &     -0.00749,-0.00751,-0.00748,-0.00746,-0.00743,-0.00735,
     &     -0.00725,-0.00696,-0.00661,-0.00624,-0.00586,-0.00548,
     &     -0.00511,-0.00439,-0.00374,-0.00315,-0.00261,-0.00214,
     &     -0.00119,-0.00054,0.0,0.0,0.0,0.0,0.0,0.0,0.0/
      data gamma  /-9.08724,-9.05206,-8.85775,-8.62794,
     &  -8.39822,-8.15307,-8.00327,-8.04783,-8.19691,-8.35079,-8.5243,
     &  -9.05478,-9.67640,-9.96595,-10.24160,-10.75200,-11.22492,
     &  -12.26275,-13.14181,-13.90254,-14.57355,-15.17384,-15.71567,
     &  -16.66219,-17.46728,-18.16453,-18.77798,-19.32562,-20.46705,
     &  -21.38822,-22.81170,-23.90512,-24.79448,-25.58872,-26.04635,
     &  -26.37008,-26.67797/
      data S2     /0.28877,0.29991,0.29778,0.22535,0.15865,
     &  0.08257,0.05542,0.04177,0.06040,0.09304,0.15210,0.26161,0.35467,
     &  0.39410,0.42523,0.47642,0.51169,0.55177,0.55325,0.53555,0.50855,
     &  0.47913,0.45094,0.39849,0.35254,0.31707,0.28896,0.26685,0.22889,
     &  0.20778,0.18675,0.17749,0.16807,0.15988,0.15433,0.15116,0.15275/
      data S3     /0.12210,0.10321,0.11109,0.08972,0.04037,
     &  -0.05934,-0.10956,-0.13262,-0.13537,-0.12513,-0.07090,0.00261,
     &   0.11202,0.15670,0.19678,0.27414,0.33785,0.47868,0.57391,
     &   0.63824,0.67945,0.70517,0.72065,0.72820,0.71582,0.69660,
     &   0.67366,0.64985,0.59394,0.55120,0.50247,0.48879,0.48245,
     &   0.47612,0.46978,0.46344,0.45711/
      data S4     /0.20813,0.21925,0.21713,0.15948,0.07029,
     &   -0.03529,-0.09017,-0.09583,-0.07321,-0.03629,0.01110,0.10298,
     &    0.21434,0.25574,0.29811,0.36360,0.42568,0.55643,0.65844,
     &    0.73536,0.79334,0.83853,0.87505,0.92621,0.95627,0.97619,
     &    0.98819,0.99485,0.99639,0.98814,0.96004,0.92903,0.89351,
     &    0.85603,0.81676,0.77379,0.72802/
      data phiS1  /0.4153,0.4142,0.4123,0.4089,0.4072,
     &      0.4059,0.4066,0.4171,0.4255,0.4315,0.4371,0.4515,0.4559,
     &      0.4594,0.4647,0.4721,0.4722,0.4780,0.4906,0.4918,0.4951,
     &      0.4927,0.4890,0.4792,0.4665,0.4600,0.4541,0.4475,0.4404,
     &      0.4284,0.4148,0.4003,0.4033,0.4026,0.3804,0.3736,0.3831/
      data tauS1  /0.3581,0.3581,0.3581,0.3625,0.3832,
     &      0.4052,0.4341,0.4517,0.4745,0.4884,0.4932,0.4927,0.4906,
     &      0.4815,0.4725,0.4640,0.4708,0.4650,0.4595,0.4432,0.4296,
     &      0.4310,0.4323,0.4402,0.4390,0.4491,0.4579,0.4663,0.4644,
     &      0.4546,0.4190,0.4084,0.4052,0.3861,0.3756,0.3595,0.3594/
      data sigma1 /0.548, 0.548, 0.546, 0.547, 0.559, 0.574, 0.595, 0.615, 0.637,
     1             0.652, 0.659, 0.668, 0.67, 0.666, 0.663, 0.662, 0.667, 0.667,
     1             0.672, 0.662, 0.656, 0.655, 0.653, 0.651, 0.641, 0.643, 0.645,
     1             0.646, 0.64, 0.625, 0.59, 0.572, 0.572, 0.558, 0.535, 0.519, 0.525 /
      data phiS2  /0.4363,0.4356,0.4344,0.4307,0.4275,
     &      0.4294,0.4304,0.4329,0.4361,0.4417,0.4478,0.4476,0.4553,
     &      0.4547,0.4607,0.4697,0.4800,0.4882,0.4991,0.5043,0.5074,
     &      0.5074,0.5149,0.5177,0.5044,0.4954,0.4834,0.4720,0.4595,
     &      0.4499,0.4374,0.4343,0.4328,0.4214,0.4264,0.4290,0.4378/
      data tauS2  /0.3620,0.3627,0.3646,0.3580,0.3666,
     &      0.3760,0.3911,0.4057,0.4247,0.4445,0.4485,0.4641,0.4758,
     &      0.4817,0.4820,0.4830,0.4932,0.5436,0.5246,0.4872,0.4722,
     &      0.4651,0.4493,0.4472,0.4515,0.4504,0.4559,0.4593,0.4606,
     &      0.4688,0.4530,0.4310,0.4152,0.3953,0.3681,0.3589,0.3298/
      data sigma2 /0.567, 0.567, 0.567, 0.56, 0.563, 0.571, 0.582, 0.593, 0.609,
     1             0.627, 0.634, 0.645, 0.659, 0.662, 0.667, 0.674, 0.688, 0.731,
     1             0.724, 0.701, 0.693, 0.688, 0.683, 0.684, 0.677, 0.67, 0.665,
     1             0.659, 0.651, 0.65, 0.63, 0.612, 0.6, 0.578, 0.563, 0.559, 0.548 /
      data phiS3  /0.4235,0.4230,0.4226,0.4207,0.4208,
     &      0.4168,0.4156,0.4215,0.4220,0.4161,0.4241,0.4332,0.4347,
     &      0.4380,0.4419,0.4514,0.4493,0.4626,0.4833,0.4783,0.4720,
     &      0.4944,0.4949,0.4848,0.4816,0.4751,0.4554,0.4415,0.4380,
     &      0.4219,0.4172,0.3955,0.3995,0.4131,0.4060,0.3921,0.3779/
      data tauS3  /0.3486,0.3482,0.3483,0.3544,0.3544,
     &      0.3508,0.3453,0.3605,0.3821,0.3958,0.4229,0.4768,0.4592,
     &      0.4519,0.4617,0.4660,0.4452,0.4192,0.4356,0.4689,0.4821,
     &      0.4638,0.4327,0.4577,0.4712,0.4622,0.4781,0.4743,0.4495,
     &      0.4633,0.4718,0.4530,0.4030,0.3803,0.3228,0.3069,0.3076/
      data sigma3 /0.549, 0.548, 0.548, 0.55, 0.55, 0.545, 0.54, 0.555, 0.569,
     1             0.574, 0.599, 0.644, 0.632, 0.629, 0.639, 0.649, 0.633, 0.624,
     1             0.651, 0.67, 0.675, 0.678, 0.657, 0.667, 0.674, 0.663, 0.66,
     1             0.648, 0.628, 0.627, 0.63, 0.601, 0.567, 0.562, 0.519, 0.498, 0.487 /
      data phiS4  /0.4426,0.4419,0.4418,0.4415,0.4435,
     &      0.4446,0.4415,0.4407,0.4351,0.4374,0.4402,0.4594,0.4697,
     &      0.4707,0.4744,0.4784,0.4825,0.4843,0.4930,0.4914,0.4783,
     &      0.4787,0.4764,0.4854,0.4707,0.4837,0.4729,0.4709,0.4627,
     &      0.4564,0.4323,0.4128,0.4170,0.4265,0.4259,0.4256,0.4195/
      data tauS4  /0.2778,0.2804,0.2823,0.2857,0.2881,
     &      0.2945,0.3082,0.3378,0.3557,0.3784,0.4182,0.4216,0.3869,
     &      0.3867,0.3788,0.3903,0.4010,0.3942,0.3725,0.3421,0.3466,
     &      0.3594,0.3998,0.4454,0.4982,0.5183,0.5358,0.5240,0.4932,
     &      0.4942,0.5195,0.5059,0.4886,0.4928,0.4510,0.4386,0.3774/
      data sigma4 /0.523, 0.523, 0.524, 0.526, 0.529, 0.533, 0.538, 0.555, 0.562,
     1             0.578, 0.607, 0.624, 0.609, 0.609, 0.607, 0.617, 0.627, 0.624,
     1             0.618, 0.599, 0.591, 0.599, 0.622, 0.659, 0.685, 0.709, 0.715,
     1             0.705, 0.676, 0.673, 0.676, 0.653, 0.642, 0.652, 0.62, 0.611, 0.564 /
      data phi /0.556,0.556,0.555,0.553,0.558,0.564,0.577,
     &     0.599,0.616,0.629,0.641,0.657,0.663,0.666,0.671,0.680,0.692,
     &     0.694,0.688,0.675,0.667,0.665,0.664,0.669,0.670,0.674,0.673,
     &     0.670,0.660,0.656,0.631,0.605,0.591,0.578,0.556,0.542,0.538/
      data tau /0.391,0.390,0.396,0.408,0.438,0.460,
     &     0.481,0.488,0.481,0.477,0.460,0.437,0.414,0.402,0.384,0.380,
     &     0.359,0.340,0.344,0.353,0.363,0.359,0.361,0.362,0.370,0.378,
     &     0.386,0.390,0.399,0.397,0.381,0.376,0.363,0.363,0.376,0.377,
     &     0.395/
c Set attenuation name
c     Sourcetype = 0 Crustal
c     Sourcetype = 1 Subduction - Interface
c     Sourcetype = 2 Subduction - Slab
c     Sourcetype = 3 Upper mantle
c     Sclass = 0 Hard Rock
c     Sclass = 1 SC I
c     Sclass = 2 SC II
c     Sclass = 3 SC III
c     Sclass = 4 SC IV



C Find the requested spectral period and corresponding coefficients
      nper = 37

C First check for the PGA case (i.e., specT=0.0)
      if (specT .eq. 0.0) then
       period1 = period(1)
       Amax1T =  Amax1(1)
       SRC1T =   SRC1(1)
       Amax2T =  Amax2(1)
       SRC2T =   SRC2(1)
       Amax3T =  Amax3(1)
       SRC3T =   SRC3(1)
       Amax4T =  Amax4(1)
       SRC4T =   SRC4(1)
       AmSCIT =  AmSCI(1)
       fsrCR1T = fsrCR1(1)
       fsrCR2T = fsrCR2(1)
       fsrCR3T = fsrCR3(1)
       fsrCR4T = fsrCR4(1)
       fsrUM1T = fsrUM1(1)
       fsrUM2T = fsrUM2(1)
       fsrUM3T = fsrUM3(1)
       fsrUM4T = fsrUM4(1)
       c1T =     c1(1)
       c2T =     c2(1)
       ccrT =    ccr(1)
       dcrT =    dcr(1)
       FcrNT =   FcrN(1)
       FumRVT =  FumRV(1)
       FumNST =  FumNS(1)
       bcrT =    bcr(1)
       gcrT =    gcr(1)
       gUMT =    gUM(1)
       gcrNT =   gcrN(1)
       gcrLT =   gcrL(1)
       ecrT =    ecr(1)
       eumT =    eum(1)
       ecrvT =   ecrv(1)
       gammaT =  gamma(1)
       S2T =     S2(1)
       S3T =     S3(1)
       S4T =     S4(1)
       phiS1T =  phiS1(1)
       tauS1T =  tauS1(1)
       sigma1T = sigma1(1)
       phiS2T =  phiS2(1)
       tauS2T =  tauS2(1)
       sigma2T = sigma2(1)
       phiS3T =  phiS3(1)
       tauS3T =  tauS3(1)
       sigma3T = sigma3(1)
       phiS4T =  phiS4(1)
       tauS4T =  tauS4(1)
       sigma4T = sigma4(1)
       phiT =  phi(1)
       tauT =  tau(1)
       goto 1011
      elseif (specT .ne. 0.0) then

C Now loop over the spectral period range of the attenuation relationship.
         do i=2,nper-1
            if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
               count1 = i
               count2 = i+1
               goto 1010
            endif
         enddo
      endif

C      write (*,*)
C      write (*,*) 'Zhao et al. (2016) Horizontal atttenuation model'
C      write (*,*) 'is not defined for a spectral period of: '
C      write (*,*)') ' Period = ',specT
C      write (*,*) 'This spectral period is outside the defined'
C      write (*,*) 'period range in the code or beyond the range'
C      write (*,*) 'of spectral periods for interpolation.'
C      write (*,*) 'Please check the input file.'
C      write (*,*)
      return

C Interpolate the coefficients for the requested spectral period.
 1010    call interp (period(count1),period(count2),Amax1(count1),Amax1(count2),
     +                specT,Amax1T,iflag)
         call interp (period(count1),period(count2),SRC1(count1),SRC1(count2),
     +                specT,SRC1T,iflag)
         call interp (period(count1),period(count2),Amax2(count1),Amax2(count2),
     +                specT,Amax2T,iflag)
         call interp (period(count1),period(count2),SRC2(count1),SRC2(count2),
     +                specT,SRC2T,iflag)
         call interp (period(count1),period(count2),Amax3(count1),Amax3(count2),
     +                specT,Amax3T,iflag)
         call interp (period(count1),period(count2),SRC3(count1),SRC3(count2),
     +                specT,SRC3T,iflag)
         call interp (period(count1),period(count2),Amax4(count1),Amax4(count2),
     +                specT,Amax4T,iflag)
         call interp (period(count1),period(count2),SRC4(count1),SRC4(count2),
     +                specT,SRC4T,iflag)
         call interp (period(count1),period(count2),AmSCI(count1),AmSCI(count2),
     +                specT,AmSCIT,iflag)
         call interp (period(count1),period(count2),fsrCR1(count1),fsrCR1(count2),
     +                specT,fsrCR1T,iflag)
         call interp (period(count1),period(count2),fsrCR2(count1),fsrCR2(count2),
     +                specT,fsrCR2T,iflag)
         call interp (period(count1),period(count2),fsrCR3(count1),fsrCR3(count2),
     +                specT,fsrCR3T,iflag)
         call interp (period(count1),period(count2),fsrCR4(count1),fsrCR4(count2),
     +                specT,fsrCR4T,iflag)
         call interp (period(count1),period(count2),fsrUM1(count1),fsrUM1(count2),
     +                specT,fsrUM1T,iflag)
         call interp (period(count1),period(count2),fsrUM2(count1),fsrUM2(count2),
     +                specT,fsrUM2T,iflag)
         call interp (period(count1),period(count2),fsrUM3(count1),fsrUM3(count2),
     +                specT,fsrUM3T,iflag)
         call interp (period(count1),period(count2),fsrUM4(count1),fsrUM4(count2),
     +                specT,fsrUM4T,iflag)
         call interp (period(count1),period(count2),c1(count1),c1(count2),
     +                specT,c1T,iflag)
         call interp (period(count1),period(count2),c2(count1),c2(count2),
     +                specT,c2T,iflag)
         call interp (period(count1),period(count2),ccr(count1),ccr(count2),
     +                specT,ccrT,iflag)
         call interp (period(count1),period(count2),dcr(count1),dcr(count2),
     +                specT,dcrT,iflag)
         call interp (period(count1),period(count2),FCRN(count1),FCRN(count2),
     +                specT,FcrNT,iflag)
         call interp (period(count1),period(count2),FumRV(count1),FumRV(count2),
     +                specT,FumRVT,iflag)
         call interp (period(count1),period(count2),FumNS(count1),FumNS(count2),
     +                specT,FumNST,iflag)
         call interp (period(count1),period(count2),bcr(count1),bcr(count2),
     +                specT,bcrT,iflag)
         call interp (period(count1),period(count2),gcr(count1),gcr(count2),
     +                specT,gcrT,iflag)
         call interp (period(count1),period(count2),gUM(count1),gUM(count2),
     +                specT,gUMT,iflag)
         call interp (period(count1),period(count2),gcrN(count1),gcrN(count2),
     +                specT,gcrNT,iflag)
         call interp (period(count1),period(count2),gcrL(count1),gcrL(count2),
     +                specT,gcrLT,iflag)
         call interp (period(count1),period(count2),ecr(count1),ecr(count2),
     +                specT,ecrT,iflag)
         call interp (period(count1),period(count2),eum(count1),eum(count2),
     +                specT,eumT,iflag)
         call interp (period(count1),period(count2),ecrv(count1),ecrv(count2),
     +                specT,ecrvT,iflag)
         call interp (period(count1),period(count2),gamma(count1),gamma(count2),
     +                specT,gammaT,iflag)
         call interp (period(count1),period(count2),S2(count1),S2(count2),
     +                specT,S2T,iflag)
         call interp (period(count1),period(count2),S3(count1),S3(count2),
     +                specT,S3T,iflag)
         call interp (period(count1),period(count2),S4(count1),S4(count2),
     +                specT,S4T,iflag)
         call interp (period(count1),period(count2),phiS1(count1),phiS1(count2),
     +                specT,phiS1T,iflag)
         call interp (period(count1),period(count2),tauS1(count1),tauS1(count2),
     +                specT,tauS1T,iflag)
         call interp (period(count1),period(count2),sigma1(count1),sigma1(count2),
     +                specT,sigma1T,iflag)
         call interp (period(count1),period(count2),phiS2(count1),phiS2(count2),
     +                specT,phiS2T,iflag)
         call interp (period(count1),period(count2),tauS2(count1),tauS2(count2),
     +                specT,tauS2T,iflag)
         call interp (period(count1),period(count2),sigma2(count1),sigma2(count2),
     +                specT,sigma2T,iflag)
         call interp (period(count1),period(count2),phiS3(count1),phiS3(count2),
     +                specT,phiS3T,iflag)
         call interp (period(count1),period(count2),tauS3(count1),tauS3(count2),
     +                specT,tauS3T,iflag)
         call interp (period(count1),period(count2),sigma3(count1),sigma3(count2),
     +                specT,sigma3T,iflag)
         call interp (period(count1),period(count2),phiS4(count1),phiS4(count2),
     +                specT,phiS4T,iflag)
         call interp (period(count1),period(count2),tauS4(count1),tauS4(count2),
     +                specT,tauS4T,iflag)
         call interp (period(count1),period(count2),sigma4(count1),sigma4(count2),
     +                specT,sigma4T,iflag)
         call interp (period(count1),period(count2),tau(count1),tau(count2),
     +                specT,tauT,iflag)
         call interp (period(count1),period(count2),phi(count1),phi(count2),
     +                specT,phiT,iflag)

 1011 period1 = specT


C     Set mechanism term and source and near fault term.

      xcro=2

      if (sourcetype .eq. 0 ) then
         if (ftype .lt. 0) then
            mech = FcrNT
         else
            mech = 0.0
         endif
         if (m .le. 7.1) then
         	 fm = bcrT*depth + mech + CcrT*m
         else
         	 fm = bcrT*depth + mech + ccrT*7.1 + dcrT*(m-7.1)
         endif

         if (dist .le. 30) then
         	 gN = gcrNT*alog(xcro+dist + exp(c1T + 6.5*c2T))
         else
         	 gN = gcrNT*alog(xcro+30 + exp(c1T + 6.5*c2T))
         endif

      elseif (sourcetype .eq. 3) then
      	 if (ftype .gt. 0) then
      	 	 mech = FumRVT
      	 	else
      	 	 mech = FumNST
      	 endif

         if (m .le. 7.1) then
         	 fm = mech + ccrT*m
         else
         	 fm = mech + ccrT*7.1 + dcrT*(m-7.1)
         endif
      endif

C    Set distance for geometric spreading term r

      Cmax = 7.1
      if (m .le. Cmax) then
       Cm = m
      else
       Cm = Cmax
      endif

      r = xcro + dist + exp(c1T + c2T*Cm)
C	    write(*,*) "r0 = ", r

C    Set geometric attenuation rate term
      if (sourcetype .eq. 0 ) then
	    gmterm = gcrT*alog(r)

      elseif (sourcetype .eq. 3) then
	    gmterm = gumT*alog(r)

      endif

C    Set large distance geometric attenuation rate term

	    gmLterm = gcrLT*alog(dist+200)

C    Set anelastic attenuation rate term
C    Ignore volcanic path term
      if (sourcetype .eq. 0 ) then
	    eterm = ecrT*dist

      elseif (sourcetype .eq. 3) then
	    eterm = eumT*dist

      endif

C    Set Site class term

      if (sourcetype .eq. 0 ) then

         if (sclass .eq. 1) then
            Amax = Amax1T
            Src = Src1T
			      fsr = fsrCR1T
            Imf = 0.91
            ANmax = AmSCIT
         elseif (sclass .eq. 2) then
            Amax = Amax2T
            Src = Src2T
			      fsr = fsrCR2T
            Imf = 1.023
            ANmax = AmSCIT * exp(S2T)
         elseif (sclass .eq. 3) then
            Amax = Amax3T
            Src = Src3T
			      fsr = fsrCR3T
            Imf = 1.034
            ANmax = AmSCIT * exp(S3T)
         elseif (sclass .eq. 4) then
            Amax = Amax4T
            Src = Src4T
			      fsr = fsrCR4T
            Imf = 0.737
            ANmax = AmSCIT * exp(S4T)
         endif

      elseif ( sourcetype .eq. 3 ) then

         if (sclass .eq. 1) then
            Amax = Amax1T
            Src = Src1T
			      fsr = fsrUM1T
            Imf = 0.91
            ANmax = AmSCIT
         elseif (sclass .eq. 2) then
            Amax = Amax2T
            Src = Src2T
			      fsr = fsrUM2T
            Imf = 1.023
            ANmax = AmSCIT * exp(S2T)
         elseif (sclass .eq. 3) then
            Amax = Amax3T
            Src = Src3T
			      fsr = fsrUM3T
            Imf = 1.034
            ANmax = AmSCIT * exp(S3T)
         elseif (sclass .eq. 4) then
            Amax = Amax4T
            Src = Src4T
			      fsr = fsrUM4T
            Imf = 0.737
            ANmax = AmSCIT * exp(S4T)
         endif
	    endif

      rockterm = fm + gmterm + gmLterm + gN + eterm + gammaT - alog(AmSCIT)
      Sr = exp(rockterm)

	    Sreff = Sr *Imf
	    Sreffc = Src *Imf
      Sf = ANmax/Amax

        if (ANmax .lt. 1.25) then
          ca=alog(Amax)/(alog(0.6)-alog(Sreffc**2 + 0.6))
          cb=-ca*alog(Sreffc**2+0.6)
          Snc=exp((ca*(2-1.0)*alog(0.6)*alog(10.0*0.6)-
     &        alog(10.0)*(cb+alog(Sf)))/(ca*(2*alog(10.0*0.6)-
     &        alog(0.6))))
        else
  	      Snc = (exp((alog(ANmax)*alog(Sreffc**2+0.6)-alog(Sf)* alog(0.6))/(alog(Amax)))-0.6)**(0.5)
        endif

        Smr = Sreff * (Snc/Sreffc) * fsr

        if (Smr .ne. 0.0) then

	        logAn = alog(ANmax)-alog(Amax)*((alog(Smr**2+0.6)-alog(0.6))/(alog(Sreffc**2+0.6)-alog(0.6)))
        else
          logAn = alog(ANmax)
        endif

      if (sclass .eq. 0) then
         lnY =  rockterm
       else
	       lnY =  rockterm + logAn
      endif

C      write(*,*) "--------------------------------- "
C      write(*,*) "dist = ", dist
C      write(*,*) "sclass = ", sclass

C      write(*,*) "Sr = ", Sr
C      write(*,*) "Src = ", Src

C      write(*,*) "fm = ", fm
C      write(*,*) "gmterm = ", gmterm
C      write(*,*) "gmLterm = ", gmLterm
C      write(*,*) "gN = ", gN
C      write(*,*) "eterm = ", eterm
C      write(*,*) "gammaT = ", gammaT
C      write(*,*) "logAn = ", logAn
C      write(*,*) "Y(g) = ", exp(lnY)

C     Convert ground motion to units of gals.
      lnY = lnY + 6.89

C      write(*,*) "Y(gal) = ", exp(lnY)

c     Set standard error
c      if (sclass .eq. 1) then
c         phi = phiS1T
c         sigma = sigma1T
c         tau = tauS1T
c      elseif (sclass .eq. 2) then
c         phi = phiS2T
c         sigma = sigma2T
c         tau = tauS2T
c      elseif (sclass .eq. 3) then
c          phi = phiS3T
c         sigma = sigma3T
c         tau = tauS3T
c      elseif (sclass .eq. 4) then
c         phi = phiS4T
c         sigma = sigma4T
c         tau = tauS4T
c      endif
       sigma = SQRT(phiT**2 + tauT**2)

      return
      end

c ----------------------------------------------------------------------

      subroutine Arroyo2010 ( mag, rRup, lnSa, specT, iflag, period1, phi1, tau1, sigma)

      implicit none

      integer MAXPER, nPer, i1, i
      parameter (MAXPER=57)
      real a1(MAXPER), a2(MAXPER), a3(MAXPER), a4(MAXPER)
      real period(MAXPER), sig(MAXPER), tau(MAXPER), phi(MAXPER)
      real lnSa, rRup, sigma, mag
      real a1T, a2T, a3T, a4T
      real sigT, tauT, phiT, tau1, phi1, a4r,a4Rr0
      real period1, E1a, E1b, r0square
      integer count1, count2, iflag
      real specT

      data period / 0, 0.04, 0.045, 0.05, 0.055, 0.06, 0.065, 0.07, 0.075, 0.08, 0.085,
     1           0.09, 0.095, 0.1, 0.12, 0.14, 0.16, 0.18, 0.2, 0.22, 0.24, 0.26, 0.28,
     1           0.3, 0.32, 0.34, 0.36, 0.38, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75,
     1           0.8, 0.85, 0.9, 0.95, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2,
     1           2.5, 3, 3.5, 4, 4.5, 5 /
      data a1 / 2.4862, 3.8123, 4.044, 4.1429, 4.3092, 4.377, 4.5185, 4.4591, 4.5939, 4.4832, 4.5062,
     1          4.4648, 4.394, 4.3391, 4.0505, 3.5599, 3.1311, 2.7012, 2.5485, 2.2699, 1.913, 1.7181,
     1          1.4039, 1.108, 1.0652, 0.8319, 0.4965, 0.3173, 0.2735, 0.099, -0.0379, -0.3512, -0.6897,
     1          -0.6673, -0.7154, -0.7015, -0.8581, -0.9712, -1.097, -1.2346, -1.26, -1.7687, -2.1339,
     1          -2.4122, -2.5442, -2.8509, -3.0887, -3.4884, -3.7195, -4.0141, -4.1908, -5.1104, -5.5926,
     1          -6.1202, -6.5318, -6.9744, -7.1389 /
      data a2 / 0.9392, 0.8636, 0.8489, 0.858, 0.8424, 0.8458, 0.8273, 0.8394, 0.8313, 0.8541, 0.8481,
     1          0.8536, 0.858, 0.862, 0.8933, 0.9379, 0.9736, 1.003, 0.9988, 1.0125, 1.045, 1.0418,
     1          1.0782, 1.1038, 1.0868, 1.1088, 1.1408, 1.1388, 1.1533, 1.1662, 1.2206, 1.2445, 1.2522,
     1          1.2995, 1.3263, 1.2994, 1.3205, 1.3375, 1.3532, 1.3687, 1.3652, 1.4146, 1.4417, 1.4577,
     1          1.4618, 1.492, 1.5157, 1.575, 1.5966, 1.6162, 1.6314, 1.7269, 1.7515, 1.8077, 1.8353,
     1          1.8685, 1.8721 /
      data a3 / 0.5061, 0.5578, 0.5645, 0.5725, 0.5765, 0.5798, 0.5796, 0.5762, 0.5804, 0.5792, 0.5771,
     1          0.5742, 0.5712, 0.5666, 0.5546, 0.535, 0.5175, 0.4985, 0.485, 0.471, 0.4591, 0.445, 0.4391,
     1          0.4287, 0.4208, 0.4142, 0.4044, 0.393, 0.4067, 0.4127, 0.4523, 0.4493, 0.4421, 0.4785,
     1          0.5068, 0.5056, 0.5103, 0.5201, 0.5278, 0.5345, 0.5426, 0.5342, 0.5263, 0.5201, 0.5242,
     1          0.522, 0.5215, 0.5261, 0.5255, 0.5187, 0.5199, 0.5277, 0.5298, 0.5402, 0.5394, 0.5328, 0.5376 /
      data a4 / 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015,
     1          0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015,
     1          0.015, 0.015, 0.0134, 0.0117, 0.0084, 0.0076, 0.0067, 0.0051, 0.0034, 0.0029, 0.0023, 0.0018,
     1          0.0012, 0.0007, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001,
     1          0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001 /
      data sig / 0.75, 0.8228, 0.8429, 0.8512, 0.8583, 0.8591, 0.8452, 0.8423, 0.8473, 0.8421, 0.8344, 0.8304,
     1          0.8294, 0.8254, 0.796, 0.7828, 0.7845, 0.7717, 0.7551, 0.7431, 0.7369, 0.7264, 0.7209, 0.7198,
     1          0.7206, 0.7264, 0.7255, 0.7292, 0.7272, 0.7216, 0.7189, 0.7095, 0.7084, 0.7065, 0.707, 0.7092,
     1          0.6974, 0.6906, 0.6923, 0.6863, 0.6798, 0.6701, 0.6697, 0.6801, 0.6763, 0.6765, 0.6674, 0.648,
     1          0.6327, 0.6231, 0.6078, 0.6001, 0.6029, 0.6137, 0.6201, 0.6419, 0.6701 /
      data tau / 0.4654, 0.5179, 0.5246, 0.5199, 0.5253, 0.5563, 0.527, 0.5241, 0.5205, 0.5148, 0.5115, 0.5273,
     1          0.5309, 0.5116, 0.4768, 0.465, 0.4523, 0.4427, 0.4428, 0.4229, 0.4223, 0.4356, 0.4191, 0.4281,
     1          0.4384, 0.425, 0.4348, 0.4419, 0.4574, 0.4249, 0.4265, 0.4215, 0.4304, 0.4096, 0.3999, 0.4113,
     1          0.3923, 0.4047, 0.398, 0.3921, 0.3842, 0.3871, 0.3931, 0.3939, 0.4146, 0.4159, 0.4187, 0.4164,
     1          0.3985, 0.4062, 0.3828, 0.3936, 0.4148, 0.4273, 0.4393, 0.4577, 0.5011 /
      data phi / 0.5882, 0.6394, 0.6597, 0.674, 0.6788, 0.6547, 0.6607, 0.6594, 0.6685, 0.6664, 0.6593, 0.6415,
     1          0.6373, 0.6477, 0.6374, 0.6298, 0.6409, 0.6321, 0.6116, 0.6109, 0.6039, 0.5814, 0.5865, 0.5787,
     1          0.5719, 0.5891, 0.5808, 0.58, 0.5653, 0.5833, 0.5788, 0.5707, 0.5627, 0.5756, 0.583, 0.5778,
     1          0.5766, 0.5596, 0.5665, 0.5632, 0.5608, 0.5471, 0.5422, 0.5544, 0.5343, 0.5335, 0.5197, 0.4965,
     1          0.4914, 0.4726, 0.4721, 0.453, 0.4375, 0.4405, 0.4376, 0.45, 0.4449 /


C Find the requested spectral period and corresponding coefficients
      nPer = 57

C First check for the PGA case
      if (specT .eq. 0.0) then
         i1=1
         period1 = period(i1)
         a1T = a1(i1)
         a2T = a2(i1)
         a3T = a3(i1)
         a4T = a4(i1)
         sigT = sig(i1)
         phiT = phi(i1)
         tauT = tau(i1)
         goto 1011
      endif

C   For other periods, loop over the spectral period range of the attenuation relationship.
      do i=2,nper-1
         if (specT .ge. period(i) .and. specT .le. period(i+1) ) then
            count1 = i
            count2 = i+1
            goto 1020
         endif
      enddo

C Selected spectral period is outside range defined by attenuaton model.
c     write statement removed for R package compliance
c     write statement removed for R package compliance
c     write statement removed for R package compliance
c     write statement removed for R package compliance
c     write statement removed for R package compliance
c     write statement removed for R package compliance
c     write statement removed for R package compliance
c     write statement removed for R package compliance
c     write statement removed for R package compliance
c     write statement removed for R package compliance
      return

C Interpolate the coefficients for the requested spectral period.
 1020       call interp (period(count1),period(count2),a1(count1),a1(count2),
     +                   specT,a1T,iflag)
            call interp (period(count1),period(count2),a2(count1),a2(count2),
     +                   specT,a2T,iflag)
            call interp (period(count1),period(count2),a3(count1),a3(count2),
     +                   specT,a3T,iflag)
            call interp (period(count1),period(count2),a4(count1),a4(count2),
     +                   specT,a4T,iflag)
            call interp (period(count1),period(count2),sig(count1),sig(count2),
     +                   specT,sigT,iflag)
            call interp (period(count1),period(count2),phi(count1),phi(count2),
     +                   specT,phiT,iflag)
            call interp (period(count1),period(count2),tau(count1),tau(count2),
     +                   specT,tauT,iflag)

 1011 period1 = specT


	  r0square = 1.4447*0.00001*exp(2.3026*mag)

	  a4R = a4T*rRup
	  a4Rr0 = a4T*sqrt(rRup**2+r0square)

	  call fEnx(a4R,E1a,1)
	  call fEnx(a4Rr0,E1b,1)

	  lnSa = a1T + a2T*mag + a3T*alog((E1a-E1b)/r0square)

c	  write(*,*) "r0square = ", r0square
c	  write(*,*) "a4R = ", a4R
c 	  write(*,*) "a4Rr0 = ", a4Rr0
c	  write(*,*) "E1a = ", E1a
c	  write(*,*) "E1b = ", E1b
c	  write(*,*) "lnYSa = ", lnSa
c	  write(*,*) "Sa = ", exp(lnSa)
c	  write(*,*) "Sa = ", exp(lnSa)/980

C     Set sigma values to return
      sigma = sigT
      tau1 = tauT
	  phi1 = phiT

      return
      end

      subroutine fEnx( x, Enx, n)

      Integer MaxIt, i, ii, nm1 As
      real expint, Eps, FpMin, Euler, Enx
      real a, b, c, d, del, Fact, H, psi

c      'PARAMETER (MAXIT=100,EPS=1.e-7,FPMIN=1.e-30,EULER=.5772156649)
       MaxIt = 100
       Eps = 0.0000001
       FpMin = 1E-30
       Euler = 0.5772156649

       nm1 = n - 1

      If (n .le. 0 .or. x .le. 0 ) Then

c     write statement removed for R package compliance
		  goto 99

		  elseif ( x .eq. 0 .And. n .eq.0 ) then
c     write statement removed for R package compliance
		  goto 99

		    elseif ( x .eq. 0 .And.  n .eq. 1) then
c     write statement removed for R package compliance
		    goto 99

      End If

      If ( n .eq. 0) Then
          expint = Exp(-x) / x
      Else

          If (x .eq. 0) Then
              expint = 1.0/ nm1
          Else

              If (x .ge. 1) Then
                  b = x + n
                  c = 1.0 / FpMin
                  d = 1.0 / b
                  H = d

                  Do i = 1 , MaxIt
                      a = -i * (nm1 + i)
                      b = b + 2.0
                      d = 1.0 / (a * d + b)
                      c = b + a / c
                      del = c * d
                      H = H * del

                      If (Abs(del - 1.0) <= Eps) Then
                          expint = H * Exp(-x)
                          Enx = expint
                          goto 99
                      End If
                   enddo

c     write statement removed for R package compliance
                  goto 99

              Else

                  If (nm1 .ne. 0) Then
                      expint = 1.0 / nm1
                  Else
                      expint = -Log(x) - Euler
                  End If

                  Fact = 1.0

                  Do i = 1, MaxIt
                      Fact = -Fact * x / i

                      If (i .ne. nm1) Then
                          del = -Fact / (i - nm1)
                      Else
                          psi = -Euler

                          DO ii = 1, nm1
                              psi = psi + 1.0 / ii
                          enddo

                          del = Fact * (-Log(x) + psi)
                      End If

                      expint = expint + del

                      If (Abs(del) .le. Abs(expint) * Eps) Then
                          Enx = expint
                          goto 99
                      End If
                  enddo

c     write statement removed for R package compliance
                  goto 99

              End If

          End If

      End If



      Enx = expint


99    continue
      return
      End


